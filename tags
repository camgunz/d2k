!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADDWALL	src/gl_main.c	1969;"	d	file:
ADD_ACTIVE	src/PCRELIB/pcre_dfa_exec.c	237;"	d	file:
ADD_ACTIVE_DATA	src/PCRELIB/pcre_dfa_exec.c	248;"	d	file:
ADD_NEW	src/PCRELIB/pcre_dfa_exec.c	260;"	d	file:
ADD_NEW_DATA	src/PCRELIB/pcre_dfa_exec.c	271;"	d	file:
ADJUST	src/r_segs.c	606;"	d	file:
ADJUST	src/r_segs.c	612;"	d	file:
ADVHUD_X	src/m_menu.c	2616;"	d	file:
AF_INET	src/i_network.h	35;"	d
ALIVE	src/p_mobj.h	221;"	d
AMMAP_H__	src/am_map.h	25;"	d
AMSTR_FOLLOWOFF	src/d_englsh.h	322;"	d
AMSTR_FOLLOWON	src/d_englsh.h	321;"	d
AMSTR_GRIDOFF	src/d_englsh.h	325;"	d
AMSTR_GRIDON	src/d_englsh.h	324;"	d
AMSTR_MARKEDSPOT	src/d_englsh.h	327;"	d
AMSTR_MARKSCLEARED	src/d_englsh.h	328;"	d
AMSTR_OVERLAYOFF	src/d_englsh.h	334;"	d
AMSTR_OVERLAYON	src/d_englsh.h	333;"	d
AMSTR_ROTATEOFF	src/d_englsh.h	331;"	d
AMSTR_ROTATEON	src/d_englsh.h	330;"	d
AMSTR_TEXTUREDOFF	src/d_englsh.h	337;"	d
AMSTR_TEXTUREDON	src/d_englsh.h	336;"	d
AM_DoorColor	src/am_map.c	/^static int AM_DoorColor(int type)$/;"	f	file:
AM_DrawNiceThings	src/am_map.c	/^static void AM_DrawNiceThings(void)$/;"	f	file:
AM_Drawer	src/am_map.c	/^void AM_Drawer (void)$/;"	f
AM_GetMobjPosition	src/am_map.c	/^INLINE static void AM_GetMobjPosition(mobj_t *mo, mpoint_t *p, angle_t *angle)$/;"	f	file:
AM_LevelInit	src/am_map.c	/^static void AM_LevelInit(void)$/;"	f	file:
AM_MSGENTERED	src/am_map.h	52;"	d
AM_MSGEXITED	src/am_map.h	53;"	d
AM_MSGHEADER	src/am_map.h	51;"	d
AM_ProcessNiceThing	src/am_map.c	/^static void AM_ProcessNiceThing(mobj_t* mobj, angle_t angle, fixed_t x, fixed_t y)$/;"	f	file:
AM_Responder	src/am_map.c	/^dboolean AM_Responder(event_t *ev) {$/;"	f
AM_SetFPointFloatValue	src/am_map.c	/^static void AM_SetFPointFloatValue(fpoint_t *p)$/;"	f	file:
AM_SetMPointFloatValue	src/am_map.c	/^static void AM_SetMPointFloatValue(mpoint_t *p)$/;"	f	file:
AM_SetPosition	src/am_map.c	/^void AM_SetPosition(void)$/;"	f
AM_SetResolution	src/am_map.c	/^void AM_SetResolution(void)$/;"	f
AM_SetScale	src/am_map.c	/^void AM_SetScale(void)$/;"	f
AM_Start	src/am_map.c	/^void AM_Start(void)$/;"	f
AM_Stop	src/am_map.c	/^void AM_Stop (void)$/;"	f
AM_Ticker	src/am_map.c	/^void AM_Ticker (void)$/;"	f
AM_activateNewScale	src/am_map.c	/^static void AM_activateNewScale(void)$/;"	f	file:
AM_addMark	src/am_map.c	/^static void AM_addMark(void)$/;"	f	file:
AM_changeWindowLoc	src/am_map.c	/^static void AM_changeWindowLoc(void)$/;"	f	file:
AM_changeWindowScale	src/am_map.c	/^static void AM_changeWindowScale(void)$/;"	f	file:
AM_clearMarks	src/am_map.c	/^void AM_clearMarks(void)$/;"	f
AM_clipMline	src/am_map.c	/^static dboolean AM_clipMline$/;"	f	file:
AM_doFollowPlayer	src/am_map.c	/^static void AM_doFollowPlayer(void)$/;"	f	file:
AM_drawCrosshair	src/am_map.c	/^static void AM_drawCrosshair(int color)$/;"	f	file:
AM_drawGrid	src/am_map.c	/^static void AM_drawGrid(int color)$/;"	f	file:
AM_drawLineCharacter	src/am_map.c	/^static void AM_drawLineCharacter$/;"	f	file:
AM_drawMarks	src/am_map.c	/^static void AM_drawMarks(void)$/;"	f	file:
AM_drawMline	src/am_map.c	/^static void AM_drawMline$/;"	f	file:
AM_drawPlayers	src/am_map.c	/^static void AM_drawPlayers(void)$/;"	f	file:
AM_drawSubsectors	src/am_map.c	/^void AM_drawSubsectors(void)$/;"	f
AM_drawThings	src/am_map.c	/^static void AM_drawThings(void)$/;"	f	file:
AM_drawWalls	src/am_map.c	/^static void AM_drawWalls(void)$/;"	f	file:
AM_findMinMaxBoundaries	src/am_map.c	/^static void AM_findMinMaxBoundaries(void)$/;"	f	file:
AM_initVariables	src/am_map.c	/^static void AM_initVariables(void)$/;"	f	file:
AM_loadPics	src/am_map.c	/^static void AM_loadPics(void)$/;"	f	file:
AM_maxOutWindowScale	src/am_map.c	/^static void AM_maxOutWindowScale(void)$/;"	f	file:
AM_minOutWindowScale	src/am_map.c	/^static void AM_minOutWindowScale(void)$/;"	f	file:
AM_restoreScaleAndLoc	src/am_map.c	/^static void AM_restoreScaleAndLoc(void)$/;"	f	file:
AM_rotate	src/am_map.c	/^static void AM_rotate(fixed_t* x,  fixed_t* y, angle_t a)$/;"	f	file:
AM_rotatePoint	src/am_map.c	/^void AM_rotatePoint(mpoint_t *p)$/;"	f
AM_saveScaleAndLoc	src/am_map.c	/^static void AM_saveScaleAndLoc(void)$/;"	f	file:
AM_setFrameVariables	src/am_map.c	/^static void AM_setFrameVariables(void)$/;"	f	file:
AM_setMarkParams	src/am_map.c	/^void AM_setMarkParams(int num)$/;"	f
AM_unloadPics	src/am_map.c	/^static void AM_unloadPics(void)$/;"	f	file:
ANCHOR_BOTH	src/PCRELIB/pcrecpp.h	/^    ANCHOR_BOTH         \/\/ Anchor at start and end$/;"	e	enum:pcrecpp::RE::Anchor
ANCHOR_START	src/PCRELIB/pcrecpp.h	/^    ANCHOR_START,       \/\/ Anchor at start only$/;"	e	enum:pcrecpp::RE::Anchor
ANG1	src/tables.h	40;"	d
ANG180	src/tables.h	38;"	d
ANG270	src/tables.h	39;"	d
ANG45	src/tables.h	36;"	d
ANG5	src/p_user.c	369;"	d	file:
ANG90	src/tables.h	37;"	d
ANGLETOFINESHIFT	src/tables.h	33;"	d
ANGLETOSKYSHIFT	src/r_sky.h	37;"	d
ANGLE_MAX	src/tables.h	41;"	d
ANIM_ALWAYS	src/wi_stuff.c	/^  ANIM_ALWAYS,   \/\/ determined by patch entry$/;"	e	enum:__anon346	file:
ANIM_LEVEL	src/wi_stuff.c	/^  ANIM_LEVEL     \/\/ continuous$/;"	e	enum:__anon346	file:
ANIM_RANDOM	src/wi_stuff.c	/^  ANIM_RANDOM,   \/\/ occasional$/;"	e	enum:__anon346	file:
APART	src/gl_sky.c	429;"	d	file:
ARRAY16_MARKER	src/cmp.c	/^  ARRAY16_MARKER         = 0xDC,$/;"	e	enum:__anon5	file:
ARRAY32_MARKER	src/cmp.c	/^  ARRAY32_MARKER         = 0xDD,$/;"	e	enum:__anon5	file:
ARRAY_LENGTH_TOO_LONG_ERROR	src/cmp.c	/^  ARRAY_LENGTH_TOO_LONG_ERROR,$/;"	e	enum:__anon7	file:
ASCII_COMMENT	src/sc_man.c	49;"	d	file:
ASCII_QUOTE	src/sc_man.c	50;"	d	file:
ATTACK	src/MUSIC/dbopl.h	/^        ATTACK,$/;"	e	enum:__anon202
AUTH_LEVEL_ADMINISTRATOR	src/n_net.h	/^  AUTH_LEVEL_ADMINISTRATOR,$/;"	e	enum:__anon203
AUTH_LEVEL_MAX	src/n_net.h	/^  AUTH_LEVEL_MAX$/;"	e	enum:__anon203
AUTH_LEVEL_MODERATOR	src/n_net.h	/^  AUTH_LEVEL_MODERATOR,$/;"	e	enum:__anon203
AUTH_LEVEL_NONE	src/n_net.h	/^  AUTH_LEVEL_NONE,$/;"	e	enum:__anon203
AUTH_LEVEL_PLAYER	src/n_net.h	/^  AUTH_LEVEL_PLAYER,$/;"	e	enum:__anon203
AUTH_LEVEL_SPECTATOR	src/n_net.h	/^  AUTH_LEVEL_SPECTATOR,$/;"	e	enum:__anon203
AU_NEXT	src/m_menu.c	2692;"	d	file:
AU_PREV	src/m_menu.c	2691;"	d	file:
AU_X	src/m_menu.c	2689;"	d	file:
AU_Y	src/m_menu.c	2690;"	d	file:
A_BFGSpray	src/p_pspr.c	/^void A_BFGSpray(mobj_t *mo)$/;"	f
A_BFGsound	src/p_pspr.c	/^void A_BFGsound(player_t *player, pspdef_t *psp)$/;"	f
A_BabyMetal	src/p_enemy.c	/^void A_BabyMetal(mobj_t *mo)$/;"	f
A_BetaSkullAttack	src/p_enemy.c	/^void A_BetaSkullAttack(mobj_t *actor)$/;"	f
A_BossDeath	src/p_enemy.c	/^void A_BossDeath(mobj_t *mo)$/;"	f
A_BrainAwake	src/p_enemy.c	/^void A_BrainAwake(mobj_t *mo)$/;"	f
A_BrainDie	src/p_enemy.c	/^void A_BrainDie(mobj_t *mo)$/;"	f
A_BrainExplode	src/p_enemy.c	/^void A_BrainExplode(mobj_t *mo)$/;"	f
A_BrainPain	src/p_enemy.c	/^void A_BrainPain(mobj_t *mo)$/;"	f
A_BrainScream	src/p_enemy.c	/^void A_BrainScream(mobj_t *mo)$/;"	f
A_BrainSpit	src/p_enemy.c	/^void A_BrainSpit(mobj_t *mo)$/;"	f
A_BruisAttack	src/p_enemy.c	/^void A_BruisAttack(mobj_t *actor)$/;"	f
A_BspiAttack	src/p_enemy.c	/^void A_BspiAttack(mobj_t *actor)$/;"	f
A_CPosAttack	src/p_enemy.c	/^void A_CPosAttack(mobj_t *actor)$/;"	f
A_CPosRefire	src/p_enemy.c	/^void A_CPosRefire(mobj_t *actor)$/;"	f
A_Chase	src/p_enemy.c	/^void A_Chase(mobj_t *actor) {$/;"	f
A_CheckReload	src/p_pspr.c	/^void A_CheckReload(player_t *player, pspdef_t *psp)$/;"	f
A_CloseShotgun2	src/p_enemy.c	/^void A_CloseShotgun2(player_t *player, pspdef_t *psp)$/;"	f
A_CyberAttack	src/p_enemy.c	/^void A_CyberAttack(mobj_t *actor)$/;"	f
A_Detonate	src/p_enemy.c	/^void A_Detonate(mobj_t *mo)$/;"	f
A_Die	src/p_enemy.c	/^void A_Die(mobj_t *actor)$/;"	f
A_Explode	src/p_enemy.c	/^void A_Explode(mobj_t *thingy)$/;"	f
A_Face	src/p_enemy.c	/^void A_Face(mobj_t *mo)$/;"	f
A_FaceTarget	src/p_enemy.c	/^void A_FaceTarget(mobj_t *actor)$/;"	f
A_Fall	src/p_enemy.c	/^void A_Fall(mobj_t *actor)$/;"	f
A_FatAttack1	src/p_enemy.c	/^void A_FatAttack1(mobj_t *actor)$/;"	f
A_FatAttack2	src/p_enemy.c	/^void A_FatAttack2(mobj_t *actor)$/;"	f
A_FatAttack3	src/p_enemy.c	/^void A_FatAttack3(mobj_t *actor)$/;"	f
A_FatRaise	src/p_enemy.c	/^void A_FatRaise(mobj_t *actor)$/;"	f
A_Fire	src/p_enemy.c	/^void A_Fire(mobj_t *actor)$/;"	f
A_FireBFG	src/p_pspr.c	/^void A_FireBFG(player_t *player, pspdef_t *psp)$/;"	f
A_FireCGun	src/p_pspr.c	/^void A_FireCGun(player_t *player, pspdef_t *psp)$/;"	f
A_FireCrackle	src/p_enemy.c	/^void A_FireCrackle(mobj_t* actor)$/;"	f
A_FireMissile	src/p_pspr.c	/^void A_FireMissile(player_t *player, pspdef_t *psp)$/;"	f
A_FireOldBFG	src/p_pspr.c	/^void A_FireOldBFG(player_t *player, pspdef_t *psp)$/;"	f
A_FirePistol	src/p_pspr.c	/^void A_FirePistol(player_t *player, pspdef_t *psp)$/;"	f
A_FirePlasma	src/p_pspr.c	/^void A_FirePlasma(player_t *player, pspdef_t *psp)$/;"	f
A_FireShotgun	src/p_pspr.c	/^void A_FireShotgun(player_t *player, pspdef_t *psp)$/;"	f
A_FireShotgun2	src/p_pspr.c	/^void A_FireShotgun2(player_t *player, pspdef_t *psp)$/;"	f
A_FireSomething	src/p_pspr.c	/^static void A_FireSomething(player_t* player,int adder)$/;"	f	file:
A_GunFlash	src/p_pspr.c	/^void A_GunFlash(player_t *player, pspdef_t *psp)$/;"	f
A_HeadAttack	src/p_enemy.c	/^void A_HeadAttack(mobj_t *actor)$/;"	f
A_Hoof	src/p_enemy.c	/^void A_Hoof (mobj_t* mo)$/;"	f
A_KeenDie	src/p_enemy.c	/^void A_KeenDie(mobj_t *mo) {$/;"	f
A_Light0	src/p_pspr.c	/^void A_Light0(player_t *player, pspdef_t *psp)$/;"	f
A_Light1	src/p_pspr.c	/^void A_Light1 (player_t *player, pspdef_t *psp)$/;"	f
A_Light2	src/p_pspr.c	/^void A_Light2 (player_t *player, pspdef_t *psp)$/;"	f
A_LineEffect	src/p_enemy.c	/^void A_LineEffect(mobj_t *mo)$/;"	f
A_LoadShotgun2	src/p_enemy.c	/^void A_LoadShotgun2(player_t *player, pspdef_t *psp)$/;"	f
A_Look	src/p_enemy.c	/^void A_Look(mobj_t *actor) {$/;"	f
A_Lower	src/p_pspr.c	/^void A_Lower(player_t *player, pspdef_t *psp)$/;"	f
A_Metal	src/p_enemy.c	/^void A_Metal(mobj_t *mo)$/;"	f
A_Mushroom	src/p_enemy.c	/^void A_Mushroom(mobj_t *actor)$/;"	f
A_OpenShotgun2	src/p_enemy.c	/^void A_OpenShotgun2(player_t *player, pspdef_t *psp)$/;"	f
A_Pain	src/p_enemy.c	/^void A_Pain(mobj_t *actor)$/;"	f
A_PainAttack	src/p_enemy.c	/^void A_PainAttack(mobj_t *actor)$/;"	f
A_PainDie	src/p_enemy.c	/^void A_PainDie(mobj_t *actor)$/;"	f
A_PainShootSkull	src/p_enemy.c	/^static void A_PainShootSkull(mobj_t *actor, angle_t angle)$/;"	f	file:
A_PlaySound	src/p_enemy.c	/^void A_PlaySound(mobj_t *mo)$/;"	f
A_PlayerScream	src/p_enemy.c	/^void A_PlayerScream(mobj_t *mo)$/;"	f
A_PosAttack	src/p_enemy.c	/^void A_PosAttack(mobj_t *actor)$/;"	f
A_Punch	src/p_pspr.c	/^void A_Punch(player_t *player, pspdef_t *psp)$/;"	f
A_Raise	src/p_pspr.c	/^void A_Raise(player_t *player, pspdef_t *psp)$/;"	f
A_RandomJump	src/p_enemy.c	/^void A_RandomJump(mobj_t *mo)$/;"	f
A_ReFire	src/p_pspr.c	/^void A_ReFire(player_t *player, pspdef_t *psp)$/;"	f
A_SPosAttack	src/p_enemy.c	/^void A_SPosAttack(mobj_t* actor)$/;"	f
A_SargAttack	src/p_enemy.c	/^void A_SargAttack(mobj_t *actor)$/;"	f
A_Saw	src/p_pspr.c	/^void A_Saw(player_t *player, pspdef_t *psp)$/;"	f
A_Scratch	src/p_enemy.c	/^void A_Scratch(mobj_t *mo)$/;"	f
A_Scream	src/p_enemy.c	/^void A_Scream(mobj_t *actor)$/;"	f
A_SkelFist	src/p_enemy.c	/^void A_SkelFist(mobj_t *actor)$/;"	f
A_SkelMissile	src/p_enemy.c	/^void A_SkelMissile(mobj_t *actor)$/;"	f
A_SkelWhoosh	src/p_enemy.c	/^void A_SkelWhoosh(mobj_t *actor)$/;"	f
A_SkullAttack	src/p_enemy.c	/^void A_SkullAttack(mobj_t *actor)$/;"	f
A_SkullPop	src/p_enemy.c	/^void A_SkullPop(mobj_t *actor)$/;"	f
A_Spawn	src/p_enemy.c	/^void A_Spawn(mobj_t *mo)$/;"	f
A_SpawnFly	src/p_enemy.c	/^void A_SpawnFly(mobj_t *mo) {$/;"	f
A_SpawnSound	src/p_enemy.c	/^void A_SpawnSound(mobj_t *mo)$/;"	f
A_SpidRefire	src/p_enemy.c	/^void A_SpidRefire(mobj_t* actor)$/;"	f
A_StartFire	src/p_enemy.c	/^void A_StartFire(mobj_t *actor)$/;"	f
A_Stop	src/p_enemy.c	/^void A_Stop(mobj_t *actor)$/;"	f
A_Tracer	src/p_enemy.c	/^void A_Tracer(mobj_t *actor)$/;"	f
A_TroopAttack	src/p_enemy.c	/^void A_TroopAttack(mobj_t *actor)$/;"	f
A_Turn	src/p_enemy.c	/^void A_Turn(mobj_t *mo)$/;"	f
A_VileAttack	src/p_enemy.c	/^void A_VileAttack(mobj_t *actor)$/;"	f
A_VileChase	src/p_enemy.c	/^void A_VileChase(mobj_t* actor)$/;"	f
A_VileStart	src/p_enemy.c	/^void A_VileStart(mobj_t *actor)$/;"	f
A_VileTarget	src/p_enemy.c	/^void A_VileTarget(mobj_t *actor)$/;"	f
A_WeaponReady	src/p_pspr.c	/^void A_WeaponReady(player_t *player, pspdef_t *psp) {$/;"	f
A_XScream	src/p_enemy.c	/^void A_XScream(mobj_t *actor)$/;"	f
AbbreviateName	src/e6y.c	/^void AbbreviateName(char* lpszCanon, int cchMax, int bAtLeastName)$/;"	f
AccelerateMouse	src/e6y.c	/^int AccelerateMouse(int val)$/;"	f
ActivateMouse	src/SDL/i_video.c	/^static void ActivateMouse(void)$/;"	f	file:
AddBlockLine	src/p_setup.c	/^static void AddBlockLine$/;"	f	file:
AddCharacter	src/TEXTSCREEN/txt_inputbox.c	/^static void AddCharacter(txt_inputbox_t *inputbox, int key)$/;"	f	file:
AddCharacter	src/TEXTSCREEN/txt_spinctrl.c	/^static void AddCharacter(txt_spincontrol_t *spincontrol, int key)$/;"	f	file:
AddIWAD	src/d_main.c	/^void AddIWAD(const char *iwad) {$/;"	f
AddNumberButton	src/TEXTSCREEN/examples/calculator.c	/^void AddNumberButton(txt_table_t *table, int value)$/;"	f
AddOperatorButton	src/TEXTSCREEN/examples/calculator.c	/^void AddOperatorButton(txt_table_t *table, char *label, operator_t op)$/;"	f
AddString	src/r_demo.c	/^int AddString(char **str, const char *val)$/;"	f
AddToSplitBySector	src/gl_vertex.c	/^static void AddToSplitBySector(vertexsplit_info_t *vi, splitsbysector_t *splitsbysector)$/;"	f	file:
AddToVertex	src/gl_vertex.c	/^static void AddToVertex(const sector_t *sec, int **list, unsigned int *size)$/;"	f	file:
Add_Friction	src/p_spec.c	/^static void Add_Friction(int friction, int movefactor, int affectee)$/;"	f	file:
Add_Pusher	src/p_spec.c	/^static void Add_Pusher(int type, int x_mag, int y_mag, mobj_t* source, int affectee)$/;"	f	file:
Add_Scroller	src/p_spec.c	/^static void Add_Scroller(int type, fixed_t dx, fixed_t dy,$/;"	f	file:
Add_WallScroller	src/p_spec.c	/^static void Add_WallScroller(fixed_t dx, fixed_t dy, const line_t *l,$/;"	f	file:
AfxGetFileName	src/e6y.c	/^unsigned int AfxGetFileName(const char* lpszPathName, char* lpszTitle, unsigned int nMax)$/;"	f
AllKeys	src/p_spec.h	/^  AllKeys,$/;"	e	enum:__anon248
AllocateMIDIChannel	src/mus2mid.c	/^static int AllocateMIDIChannel(void)$/;"	f	file:
AlreadyGot	src/sc_man.c	/^static dboolean AlreadyGot = false;$/;"	v	file:
AltName	src/e6y.h	/^	char AltName[14];$/;"	m	struct:__anon66
Anchor	src/PCRELIB/pcrecpp.h	/^  enum Anchor {$/;"	g	class:pcrecpp::RE
AnyKey	src/p_spec.h	/^  AnyKey,$/;"	e	enum:__anon248
ApplyFunc	src/hu_tracers.h	/^  TRACERFUNC ApplyFunc;$/;"	m	struct:traceslist_s
ApplyFunc	src/hu_tracers.h	/^  TRACERFUNC ApplyFunc;$/;"	m	struct:traceslistinit_s
ApplyWindowResize	src/SDL/i_video.c	/^static void ApplyWindowResize(SDL_Event *resize_event) {$/;"	f	file:
AttackSamplesTable	src/MUSIC/dbopl.c	/^static const Bit8u AttackSamplesTable[13] = {$/;"	v	file:
Attribs	src/e6y.h	/^	unsigned int Attribs;$/;"	m	struct:__anon66
AutoMapDef	src/m_menu.c	/^menu_t AutoMapDef =$/;"	v
AutomapState	src/st_stuff.h	/^  AutomapState,$/;"	e	enum:__anon324
BACKCHAR	src/PCRELIB/pcre_internal.h	295;"	d
BACKCHAR	src/PCRELIB/pcre_internal.h	390;"	d
BACKUPTICS	src/d_ipxgate.c	38;"	d	file:
BACKUPTICS	src/d_server.c	189;"	d	file:
BACKUPTICS	src/doomstat.h	292;"	d
BADARG	src/d_server.c	100;"	d	file:
BADCH	src/d_server.c	99;"	d	file:
BASETHRESHOLD	src/p_inter.h	38;"	d
BASEYCENTER	src/r_things.c	38;"	d	file:
BASE_WIDTH	src/doomdef.h	86;"	d
BCard	src/p_spec.h	/^  BCard,$/;"	e	enum:__anon248
BETWEEN	src/doomtype.h	49;"	d
BFGCELLS	src/p_pspr.c	48;"	d	file:
BFGDELAY	src/info.c	1138;"	d	file:
BG	src/st_lib.h	34;"	d
BIN16_MARKER	src/cmp.c	/^  BIN16_MARKER           = 0xC5,$/;"	e	enum:__anon5	file:
BIN32_MARKER	src/cmp.c	/^  BIN32_MARKER           = 0xC6,$/;"	e	enum:__anon5	file:
BIN8_MARKER	src/cmp.c	/^  BIN8_MARKER            = 0xC4,$/;"	e	enum:__anon5	file:
BIN_DATA_LENGTH_TOO_LONG_ERROR	src/cmp.c	/^  BIN_DATA_LENGTH_TOO_LONG_ERROR,$/;"	e	enum:__anon7	file:
BLINK_PERIOD	src/TEXTSCREEN/txt_sdl.c	57;"	d	file:
BLKSIZE	src/m_delta.c	37;"	d	file:
BLOCK_TEMPLATE	src/MUSIC/dbopl.c	126;"	d	file:
BONUSADD	src/p_inter.c	49;"	d	file:
BOOL	src/PCRELIB/pcre_internal.h	/^typedef int BOOL;$/;"	t
BOOL	src/PCRELIB/pcregrep.c	/^typedef int BOOL;$/;"	t	file:
BOXBOTTOM	src/m_bbox.h	/^  BOXBOTTOM,$/;"	e	enum:__anon144
BOXLEFT	src/m_bbox.h	/^  BOXLEFT,$/;"	e	enum:__anon144
BOXRIGHT	src/m_bbox.h	/^  BOXRIGHT$/;"	e	enum:__anon144
BOXTOP	src/m_bbox.h	/^  BOXTOP,$/;"	e	enum:__anon144
BPART	src/gl_sky.c	432;"	d	file:
BRASTACK_SIZE	src/PCRELIB/pcre_compile.c	91;"	d	file:
BSkull	src/p_spec.h	/^  BSkull,$/;"	e	enum:__anon248
BTS_LOADGAME	src/d_event.h	/^  BTS_LOADGAME    = 0, \/\/ Loads a game$/;"	e	enum:__anon16
BTS_PAUSE	src/d_event.h	/^  BTS_PAUSE       = 1,$/;"	e	enum:__anon16
BTS_RESTARTLEVEL	src/d_event.h	/^  BTS_RESTARTLEVEL= 3, \/\/ Restarts the current level$/;"	e	enum:__anon16
BTS_SAVEGAME	src/d_event.h	/^  BTS_SAVEGAME    = 2,$/;"	e	enum:__anon16
BTS_SAVEMASK	src/d_event.h	/^  BTS_SAVEMASK    = (4+8+16),$/;"	e	enum:__anon16
BTS_SAVESHIFT	src/d_event.h	/^  BTS_SAVESHIFT   = 2,$/;"	e	enum:__anon16
BT_ATTACK	src/d_event.h	/^  BT_ATTACK       = 1,$/;"	e	enum:__anon16
BT_CHANGE	src/d_event.h	/^  BT_CHANGE       = 4,$/;"	e	enum:__anon16
BT_SPECIAL	src/d_event.h	/^  BT_SPECIAL      = 128,$/;"	e	enum:__anon16
BT_SPECIALMASK	src/d_event.h	/^  BT_SPECIALMASK  = 3,$/;"	e	enum:__anon16
BT_USE	src/d_event.h	/^  BT_USE          = 2,$/;"	e	enum:__anon16
BT_WEAPONMASK	src/d_event.h	/^  BT_WEAPONMASK   = (8+16+32+64), \/\/ extended to pick up SSG        \/\/ phares$/;"	e	enum:__anon16
BT_WEAPONMASK_OLD	src/d_event.h	/^  BT_WEAPONMASK_OLD   = (8+16+32),\/\/e6y$/;"	e	enum:__anon16
BT_WEAPONSHIFT	src/d_event.h	/^  BT_WEAPONSHIFT  = 3,$/;"	e	enum:__anon16
BUTTONTIME	src/p_spec.h	60;"	d
BYTEBOOL__	src/doomtype.h	28;"	d
Backspace	src/TEXTSCREEN/txt_inputbox.c	/^static void Backspace(txt_inputbox_t *inputbox)$/;"	f	file:
Backspace	src/TEXTSCREEN/txt_spinctrl.c	/^static void Backspace(txt_spincontrol_t *spincontrol)$/;"	f	file:
Bit16s	src/MUSIC/dbopl.h	/^typedef int16_t         Bit16s;$/;"	t
Bit16u	src/MUSIC/dbopl.h	/^typedef uint16_t        Bit16u;$/;"	t
Bit32s	src/MUSIC/dbopl.h	/^typedef int32_t         Bit32s;$/;"	t
Bit32u	src/MUSIC/dbopl.h	/^typedef uint32_t        Bit32u;$/;"	t
Bit8s	src/MUSIC/dbopl.h	/^typedef int8_t          Bit8s;$/;"	t
Bit8u	src/MUSIC/dbopl.h	/^typedef uint8_t         Bit8u;$/;"	t
Bits	src/MUSIC/dbopl.h	/^typedef intptr_t        Bits;$/;"	t
Bitu	src/MUSIC/dbopl.h	/^typedef uintptr_t       Bitu;$/;"	t
BorderNeedRefresh	src/m_menu.c	/^dboolean BorderNeedRefresh;$/;"	v
BoxSkybox	src/gl_sky.c	/^box_skybox_t *BoxSkybox = NULL;$/;"	v
BoxSkyboxCount	src/gl_sky.c	/^int BoxSkyboxCount = 0;$/;"	v
BoxSkybox_default	src/gl_sky.c	/^box_skybox_t *BoxSkybox_default;$/;"	v
BroadcastPacket	src/d_server.c	/^void BroadcastPacket(packet_header_t *packet, size_t len)$/;"	f
BuildGUI	src/TEXTSCREEN/examples/calculator.c	/^void BuildGUI()$/;"	f
C1TEXT	src/d_englsh.h	442;"	d
C2TEXT	src/d_englsh.h	458;"	d
C3TEXT	src/d_englsh.h	480;"	d
C4TEXT	src/d_englsh.h	494;"	d
C5TEXT	src/d_englsh.h	513;"	d
C6TEXT	src/d_englsh.h	523;"	d
CACHE_ALIGN	src/z_zone.c	41;"	d	file:
CALCMATRIX	src/gl_clipper.c	355;"	d	file:
CALC_TEX_VALUES_BOTTOM	src/gl_main.c	1580;"	d	file:
CALC_TEX_VALUES_BOTTOM	src/gl_main.c	1968;"	d	file:
CALC_TEX_VALUES_MIDDLE1S	src/gl_main.c	1569;"	d	file:
CALC_TEX_VALUES_MIDDLE1S	src/gl_main.c	1967;"	d	file:
CALC_TEX_VALUES_TOP	src/gl_main.c	1558;"	d	file:
CALC_TEX_VALUES_TOP	src/gl_main.c	1966;"	d	file:
CALC_Y_VALUES	src/gl_main.c	1541;"	d	file:
CALC_Y_VALUES	src/gl_main.c	1962;"	d	file:
CALLBACK	src/gl_preprocess.c	27;"	d	file:
CALLBACK	src/gl_texture.c	27;"	d	file:
CARRYFACTOR	src/p_spec.c	2904;"	d	file:
CASELESS	src/PCRELIB/pcrecpp.h	/^static inline RE_Options CASELESS() {$/;"	f	namespace:pcrecpp
CC_ARACH	src/d_englsh.h	689;"	d
CC_ARCH	src/d_englsh.h	693;"	d
CC_BARON	src/d_englsh.h	688;"	d
CC_CACO	src/d_englsh.h	686;"	d
CC_CYBER	src/d_englsh.h	695;"	d
CC_DEMON	src/d_englsh.h	684;"	d
CC_HEAVY	src/d_englsh.h	682;"	d
CC_HELL	src/d_englsh.h	687;"	d
CC_HERO	src/d_englsh.h	696;"	d
CC_IMP	src/d_englsh.h	683;"	d
CC_LOST	src/d_englsh.h	685;"	d
CC_MANCU	src/d_englsh.h	692;"	d
CC_PAIN	src/d_englsh.h	690;"	d
CC_REVEN	src/d_englsh.h	691;"	d
CC_SHOTGUN	src/d_englsh.h	681;"	d
CC_SPIDER	src/d_englsh.h	694;"	d
CC_ZOMBIE	src/d_englsh.h	680;"	d
CChgTxt	src/p_spec.h	/^  CChgTxt,$/;"	e	enum:__anon244
CChgTyp	src/p_spec.h	/^  CChgTyp,$/;"	e	enum:__anon244
CChgZero	src/p_spec.h	/^  CChgZero,$/;"	e	enum:__anon244
CDoor	src/p_spec.h	/^  CDoor,$/;"	e	enum:__anon247
CEILSPEED	src/p_spec.h	40;"	d
CEILWAIT	src/p_spec.h	41;"	d
CENTERY	src/v_video.h	95;"	d
CFG_BUFFERMAX	src/m_misc.c	1262;"	d	file:
CF_FLY	src/d_player.h	/^  CF_FLY              = 16,$/;"	e	enum:__anon59
CF_GODMODE	src/d_player.h	/^  CF_GODMODE          = 2,$/;"	e	enum:__anon59
CF_NOCLIP	src/d_player.h	/^  CF_NOCLIP           = 1,$/;"	e	enum:__anon59
CF_NOMOMENTUM	src/d_player.h	/^  CF_NOMOMENTUM       = 4,$/;"	e	enum:__anon59
CF_NOTARGET	src/d_player.h	/^  CF_NOTARGET         = 8,$/;"	e	enum:__anon59
CHAT_STRING_BFR_SIZE	src/m_menu.c	1741;"	d	file:
CHEAT	src/m_cheat.h	27;"	d
CHEAT_ARGS_MAX	src/m_cheat.h	31;"	d
CHECK	src/PCRELIB/pcre_stringpiece_unittest.cc	13;"	d	file:
CHECK	src/PCRELIB/pcrecpp_unittest.cc	53;"	d	file:
CHECKHEAP	src/MAC/config.h	48;"	d
CHECK_BEST	src/gl_hires.c	1015;"	d	file:
CHECK_CONNECTION	src/n_proto.c	151;"	d	file:
CHECK_DECIMAL	src/PCRELIB/pcrecpp_unittest.cc	176;"	d	file:
CHECK_DECIMAL	src/PCRELIB/pcrecpp_unittest.cc	198;"	d	file:
CHECK_EQ	src/PCRELIB/pcre_scanner_unittest.cc	41;"	d	file:
CHECK_EQ	src/PCRELIB/pcrecpp_unittest.cc	61;"	d	file:
CHECK_HEX	src/PCRELIB/pcrecpp_unittest.cc	124;"	d	file:
CHECK_HEX	src/PCRELIB/pcrecpp_unittest.cc	146;"	d	file:
CHECK_OCTAL	src/PCRELIB/pcrecpp_unittest.cc	150;"	d	file:
CHECK_OCTAL	src/PCRELIB/pcrecpp_unittest.cc	172;"	d	file:
CHECK_VALID_PLAYER	src/n_proto.c	143;"	d	file:
CHECK_WEAPON_CODEPOINTER	src/p_pspr.c	53;"	d	file:
CHECK_WEAPON_CODEPOINTER	src/p_pspr.c	59;"	d	file:
CHIP_SIZE	src/m_menu.c	1731;"	d	file:
CHKPIX	src/e6y.c	1366;"	d	file:
CHUNK_SIZE	src/z_zone.c	44;"	d	file:
CLIENT	src/n_net.h	35;"	d
CLIENT_ONLY	src/n_proto.c	80;"	d	file:
CLOCKS_PER_SEC	src/PCRELIB/pcretest.c	123;"	d	file:
CLOCKS_PER_SEC	src/PCRELIB/pcretest.c	125;"	d	file:
CL_GetCommandSync	src/n_proto.c	/^bool CL_GetCommandSync(int playernum, int *sync_index, GQueue **sync_commands,$/;"	f
CL_GetCurrentCommandIndex	src/n_main.c	/^int CL_GetCurrentCommandIndex(void) {$/;"	f
CL_GetNextCommandIndex	src/n_main.c	/^int CL_GetNextCommandIndex(void) {$/;"	f
CL_GetServerPeer	src/n_peer.c	/^netpeer_t* CL_GetServerPeer(void) {$/;"	f
CL_LoadingState	src/n_main.c	/^bool CL_LoadingState(void) {$/;"	f
CL_MarkServerOutdated	src/n_main.c	/^void CL_MarkServerOutdated(void) {$/;"	f
CL_RePredicting	src/n_main.c	/^bool CL_RePredicting(void) {$/;"	f
CL_ReceivedSetup	src/n_main.c	/^bool CL_ReceivedSetup(void) {$/;"	f
CL_SendAuthRequest	src/n_proto.c	/^void CL_SendAuthRequest(const char *password) {$/;"	f
CL_SendAutoaimChange	src/n_proto.c	/^void CL_SendAutoaimChange(dboolean new_autoaim_enabled) {$/;"	f
CL_SendBobbingChange	src/n_proto.c	/^void CL_SendBobbingChange(double new_bobbing_amount) {$/;"	f
CL_SendColorChange	src/n_proto.c	/^void CL_SendColorChange(byte new_red, byte new_green, byte new_blue) {$/;"	f
CL_SendColorIndexChange	src/n_proto.c	/^void CL_SendColorIndexChange(int new_color) {$/;"	f
CL_SendMessage	src/n_proto.c	/^void CL_SendMessage(const char *message) {$/;"	f
CL_SendMessageToCurrentTeam	src/n_proto.c	/^void CL_SendMessageToCurrentTeam(const char *message) {$/;"	f
CL_SendMessageToPlayer	src/n_proto.c	/^void CL_SendMessageToPlayer(short recipient, const char *message) {$/;"	f
CL_SendMessageToServer	src/n_proto.c	/^void CL_SendMessageToServer(const char *message) {$/;"	f
CL_SendMessageToTeam	src/n_proto.c	/^void CL_SendMessageToTeam(byte team, const char *message) {$/;"	f
CL_SendNameChange	src/n_proto.c	/^void CL_SendNameChange(const char *new_name) {$/;"	f
CL_SendPWOChange	src/n_proto.c	/^void CL_SendPWOChange(void) {$/;"	f
CL_SendRCONCommand	src/n_proto.c	/^void CL_SendRCONCommand(const char *command) {$/;"	f
CL_SendSkinChange	src/n_proto.c	/^void CL_SendSkinChange(void) {$/;"	f
CL_SendTeamChange	src/n_proto.c	/^void CL_SendTeamChange(byte new_team) {$/;"	f
CL_SendVoteRequest	src/n_proto.c	/^void CL_SendVoteRequest(const char *command) {$/;"	f
CL_SendWSOPChange	src/n_proto.c	/^void CL_SendWSOPChange(byte new_wsop_flags) {$/;"	f
CL_SendWeaponSpeedChange	src/n_proto.c	/^void CL_SendWeaponSpeedChange(byte new_weapon_speed) {$/;"	f
CL_SetAuthorizationLevel	src/n_main.c	/^void CL_SetAuthorizationLevel(auth_level_e level) {$/;"	f
CL_SetReceivedSetup	src/n_main.c	/^void CL_SetReceivedSetup(bool new_received_setup) {$/;"	f
CL_SetupCommandState	src/n_main.c	/^void CL_SetupCommandState(int playernum, netticcmd_t *ncmd) {$/;"	f
CL_ShutdownCommandState	src/n_main.c	/^void CL_ShutdownCommandState(void) {$/;"	f
CL_SoundAllowed	src/n_main.c	/^bool CL_SoundAllowed(void) {$/;"	f
CL_Synchronizing	src/n_main.c	/^bool CL_Synchronizing(void) {$/;"	f
CMDCLIENT	src/n_net.h	37;"	d
CMDSERVER	src/n_net.h	38;"	d
CMDSYNC	src/n_net.h	33;"	d
CMD_GET	src/d_net.h	/^    CMD_GET     = 2$/;"	e	enum:__anon22
CMD_SEND	src/d_net.h	/^    CMD_SEND    = 1,$/;"	e	enum:__anon22
CMP_H__	src/cmp.h	25;"	d
CMP_N	src/PCRELIB/pcre_stringpiece_unittest.cc	136;"	d	file:
CMP_N	src/PCRELIB/pcre_stringpiece_unittest.cc	73;"	d	file:
CMP_TYPE_ARRAY16	src/cmp.h	/^  CMP_TYPE_ARRAY16,         \/* 30 *\/$/;"	e	enum:__anon8
CMP_TYPE_ARRAY32	src/cmp.h	/^  CMP_TYPE_ARRAY32,         \/* 31 *\/$/;"	e	enum:__anon8
CMP_TYPE_BIN16	src/cmp.h	/^  CMP_TYPE_BIN16,           \/*  7 *\/$/;"	e	enum:__anon8
CMP_TYPE_BIN32	src/cmp.h	/^  CMP_TYPE_BIN32,           \/*  8 *\/$/;"	e	enum:__anon8
CMP_TYPE_BIN8	src/cmp.h	/^  CMP_TYPE_BIN8,            \/*  6 *\/$/;"	e	enum:__anon8
CMP_TYPE_BOOLEAN	src/cmp.h	/^  CMP_TYPE_BOOLEAN,         \/*  5 *\/$/;"	e	enum:__anon8
CMP_TYPE_DOUBLE	src/cmp.h	/^  CMP_TYPE_DOUBLE,          \/* 13 *\/$/;"	e	enum:__anon8
CMP_TYPE_EXT16	src/cmp.h	/^  CMP_TYPE_EXT16,           \/* 10 *\/$/;"	e	enum:__anon8
CMP_TYPE_EXT32	src/cmp.h	/^  CMP_TYPE_EXT32,           \/* 11 *\/$/;"	e	enum:__anon8
CMP_TYPE_EXT8	src/cmp.h	/^  CMP_TYPE_EXT8,            \/*  9 *\/$/;"	e	enum:__anon8
CMP_TYPE_FIXARRAY	src/cmp.h	/^  CMP_TYPE_FIXARRAY,        \/*  2 *\/$/;"	e	enum:__anon8
CMP_TYPE_FIXEXT1	src/cmp.h	/^  CMP_TYPE_FIXEXT1,         \/* 22 *\/$/;"	e	enum:__anon8
CMP_TYPE_FIXEXT16	src/cmp.h	/^  CMP_TYPE_FIXEXT16,        \/* 26 *\/$/;"	e	enum:__anon8
CMP_TYPE_FIXEXT2	src/cmp.h	/^  CMP_TYPE_FIXEXT2,         \/* 23 *\/$/;"	e	enum:__anon8
CMP_TYPE_FIXEXT4	src/cmp.h	/^  CMP_TYPE_FIXEXT4,         \/* 24 *\/$/;"	e	enum:__anon8
CMP_TYPE_FIXEXT8	src/cmp.h	/^  CMP_TYPE_FIXEXT8,         \/* 25 *\/$/;"	e	enum:__anon8
CMP_TYPE_FIXMAP	src/cmp.h	/^  CMP_TYPE_FIXMAP,          \/*  1 *\/$/;"	e	enum:__anon8
CMP_TYPE_FIXSTR	src/cmp.h	/^  CMP_TYPE_FIXSTR,          \/*  3 *\/$/;"	e	enum:__anon8
CMP_TYPE_FLOAT	src/cmp.h	/^  CMP_TYPE_FLOAT,           \/* 12 *\/$/;"	e	enum:__anon8
CMP_TYPE_MAP16	src/cmp.h	/^  CMP_TYPE_MAP16,           \/* 32 *\/$/;"	e	enum:__anon8
CMP_TYPE_MAP32	src/cmp.h	/^  CMP_TYPE_MAP32,           \/* 33 *\/$/;"	e	enum:__anon8
CMP_TYPE_NEGATIVE_FIXNUM	src/cmp.h	/^  CMP_TYPE_NEGATIVE_FIXNUM  \/* 34 *\/$/;"	e	enum:__anon8
CMP_TYPE_NIL	src/cmp.h	/^  CMP_TYPE_NIL,             \/*  4 *\/$/;"	e	enum:__anon8
CMP_TYPE_POSITIVE_FIXNUM	src/cmp.h	/^  CMP_TYPE_POSITIVE_FIXNUM, \/*  0 *\/$/;"	e	enum:__anon8
CMP_TYPE_SINT16	src/cmp.h	/^  CMP_TYPE_SINT16,          \/* 19 *\/$/;"	e	enum:__anon8
CMP_TYPE_SINT32	src/cmp.h	/^  CMP_TYPE_SINT32,          \/* 20 *\/$/;"	e	enum:__anon8
CMP_TYPE_SINT64	src/cmp.h	/^  CMP_TYPE_SINT64,          \/* 21 *\/$/;"	e	enum:__anon8
CMP_TYPE_SINT8	src/cmp.h	/^  CMP_TYPE_SINT8,           \/* 18 *\/$/;"	e	enum:__anon8
CMP_TYPE_STR16	src/cmp.h	/^  CMP_TYPE_STR16,           \/* 28 *\/$/;"	e	enum:__anon8
CMP_TYPE_STR32	src/cmp.h	/^  CMP_TYPE_STR32,           \/* 29 *\/$/;"	e	enum:__anon8
CMP_TYPE_STR8	src/cmp.h	/^  CMP_TYPE_STR8,            \/* 27 *\/$/;"	e	enum:__anon8
CMP_TYPE_UINT16	src/cmp.h	/^  CMP_TYPE_UINT16,          \/* 15 *\/$/;"	e	enum:__anon8
CMP_TYPE_UINT32	src/cmp.h	/^  CMP_TYPE_UINT32,          \/* 16 *\/$/;"	e	enum:__anon8
CMP_TYPE_UINT64	src/cmp.h	/^  CMP_TYPE_UINT64,          \/* 17 *\/$/;"	e	enum:__anon8
CMP_TYPE_UINT8	src/cmp.h	/^  CMP_TYPE_UINT8,           \/* 14 *\/$/;"	e	enum:__anon8
CMP_Y	src/PCRELIB/pcre_stringpiece_unittest.cc	135;"	d	file:
CMP_Y	src/PCRELIB/pcre_stringpiece_unittest.cc	69;"	d	file:
CNoChg	src/p_spec.h	/^  CNoChg,$/;"	e	enum:__anon244
CNumericModel	src/p_spec.h	/^  CNumericModel,$/;"	e	enum:__anon245
COLORPALXORIG	src/m_menu.c	1733;"	d	file:
COLORPALYORIG	src/m_menu.c	1734;"	d	file:
COL_FLEXADD	src/r_draw.c	/^   COL_FLEXADD$/;"	e	enum:__anon296	file:
COL_FLEXTRANS	src/r_draw.c	/^   COL_FLEXTRANS,$/;"	e	enum:__anon296	file:
COL_FUZZ	src/r_draw.c	/^   COL_FUZZ,$/;"	e	enum:__anon296	file:
COL_NONE	src/r_draw.c	/^   COL_NONE,$/;"	e	enum:__anon296	file:
COL_OPAQUE	src/r_draw.c	/^   COL_OPAQUE,$/;"	e	enum:__anon296	file:
COL_TRANS	src/r_draw.c	/^   COL_TRANS,$/;"	e	enum:__anon296	file:
COMMAND_CLIENT_ONLY	src/n_proto.c	139;"	d	file:
COMMAND_SERVER_ONLY	src/n_proto.c	135;"	d	file:
COMMAND_SYNC_ONLY	src/n_proto.c	51;"	d	file:
COMPERR_NUM	src/doomstat.h	/^  COMPERR_NUM$/;"	e	enum:__anon55
COMP_NUM	src/doomstat.h	/^  COMP_NUM,      \/* cph - should be last in sequence *\/$/;"	e	enum:__anon54
COMP_SPC	src/m_menu.c	3361;"	d	file:
COMP_TOTAL	src/doomstat.h	/^  COMP_TOTAL=32  \/\/ Some extra room for additional variables$/;"	e	enum:__anon54
CONNECT_TIMEOUT	src/n_net.h	29;"	d
CONSOLE_DEVICE	src/PCSOUND/pcsound_linux.c	47;"	d	file:
CONSOLE_MARGIN	src/hu_cons.c	51;"	d	file:
CONSOLE_MAXHEIGHT	src/hu_cons.c	45;"	d	file:
CONSOLE_MAXWIDTH	src/hu_cons.c	46;"	d	file:
CONSOLE_SCROLLBACK_AMOUNT	src/hu_cons.c	52;"	d	file:
CONSOLE_SCROLL_DOWN_RATE	src/hu_cons.c	49;"	d	file:
CONSOLE_SCROLL_DOWN_TIME	src/hu_cons.c	47;"	d	file:
CONSOLE_SCROLL_UP_RATE	src/hu_cons.c	50;"	d	file:
CONSOLE_SCROLL_UP_TIME	src/hu_cons.c	48;"	d	file:
CONSOLE_SHORTHAND_MARKER	src/c_main.c	49;"	d	file:
CONSTFUNC	src/doomtype.h	78;"	d
CONSTFUNC	src/doomtype.h	82;"	d
CORRECT_TABLE_ENDIAN	src/tables.c	93;"	d	file:
CPSProcessSerNum	src/MAC/SDLMain.h	/^typedef struct CPSProcessSerNum$/;"	s
CPSProcessSerNum	src/MAC/SDLMain.h	/^} CPSProcessSerNum;$/;"	t	typeref:struct:CPSProcessSerNum
CREF_RECURSE	src/PCRELIB/pcre_internal.h	738;"	d
CR_BLUE	src/v_video.h	/^  CR_BLUE,    \/\/7$/;"	e	enum:__anon341
CR_BLUE2	src/v_video.h	/^  CR_BLUE2,   \/\/10 \/\/ proff$/;"	e	enum:__anon341
CR_BRICK	src/v_video.h	/^  CR_BRICK,   \/\/0$/;"	e	enum:__anon341
CR_BROWN	src/v_video.h	/^  CR_BROWN,   \/\/4$/;"	e	enum:__anon341
CR_DEFAULT	src/v_video.h	121;"	d
CR_DISABLE	src/m_menu.c	1727;"	d	file:
CR_GOLD	src/v_video.h	/^  CR_GOLD,    \/\/5$/;"	e	enum:__anon341
CR_GRAY	src/v_video.h	/^  CR_GRAY,    \/\/2$/;"	e	enum:__anon341
CR_GREEN	src/v_video.h	/^  CR_GREEN,   \/\/3$/;"	e	enum:__anon341
CR_HILITE	src/m_menu.c	1723;"	d	file:
CR_ITEM	src/m_menu.c	1722;"	d	file:
CR_LIMIT	src/v_video.h	/^  CR_LIMIT    \/\/11 \/\/jff 2\/27\/98 added for range check$/;"	e	enum:__anon341
CR_ORANGE	src/v_video.h	/^  CR_ORANGE,  \/\/8$/;"	e	enum:__anon341
CR_RED	src/v_video.h	/^  CR_RED,     \/\/6$/;"	e	enum:__anon341
CR_S	src/m_menu.c	4216;"	d	file:
CR_SELECT	src/m_menu.c	1724;"	d	file:
CR_SET	src/m_menu.c	1721;"	d	file:
CR_SH	src/m_menu.c	4220;"	d	file:
CR_TAN	src/v_video.h	/^  CR_TAN,     \/\/1$/;"	e	enum:__anon341
CR_TITLE	src/m_menu.c	1720;"	d	file:
CR_X	src/m_menu.c	4217;"	d	file:
CR_X2	src/m_menu.c	4218;"	d	file:
CR_Y	src/m_menu.c	4219;"	d	file:
CR_YELLOW	src/v_video.h	/^  CR_YELLOW,  \/\/9$/;"	e	enum:__anon341
CS_X	src/m_menu.c	3682;"	d	file:
CS_Y	src/m_menu.c	3683;"	d	file:
CTriggerModel	src/p_spec.h	/^  CTriggerModel,$/;"	e	enum:__anon245
CXMTOF	src/am_map.c	129;"	d	file:
CXMTOF_F	src/am_map.c	133;"	d	file:
CYMTOF	src/am_map.c	130;"	d	file:
CYMTOF_F	src/am_map.c	134;"	d	file:
C_Active	src/c_main.c	/^bool C_Active(void) {$/;"	f
C_Banish	src/c_main.c	/^void C_Banish(void) {$/;"	f
C_DECL	src/doomtype.h	88;"	d
C_DECL	src/doomtype.h	90;"	d
C_Drawer	src/c_main.c	/^void C_Drawer(void) {$/;"	f
C_Echo	src/c_main.c	/^void C_Echo(const char *message) {$/;"	f
C_Init	src/c_main.c	/^void C_Init(void) {$/;"	f
C_MAIN_H__	src/c_main.h	25;"	d
C_MEcho	src/c_main.c	/^void C_MEcho(const char *message) {$/;"	f
C_MPrintf	src/c_main.c	/^void C_MPrintf(const char *fmt, ...) {$/;"	f
C_MVPrintf	src/c_main.c	/^void C_MVPrintf(const char *fmt, va_list args) {$/;"	f
C_MWrite	src/c_main.c	/^void C_MWrite(const char *message) {$/;"	f
C_NEXTPREV	src/m_menu.c	3362;"	d	file:
C_Printf	src/c_main.c	/^void C_Printf(const char *fmt, ...) {$/;"	f
C_Reset	src/c_main.c	/^void C_Reset(void) {$/;"	f
C_Responder	src/c_main.c	/^bool C_Responder(event_t *ev) {$/;"	f
C_ScrollDown	src/c_main.c	/^void C_ScrollDown(void) {$/;"	f
C_ScrollUp	src/c_main.c	/^void C_ScrollUp(void) {$/;"	f
C_SetFullScreen	src/c_main.c	/^void C_SetFullScreen(void) {$/;"	f
C_Summon	src/c_main.c	/^void C_Summon(void) {$/;"	f
C_Ticker	src/c_main.c	/^void C_Ticker(void) {$/;"	f
C_ToggleScroll	src/c_main.c	/^void C_ToggleScroll(void) {$/;"	f
C_VPrintf	src/c_main.c	/^void C_VPrintf(const char *fmt, va_list args) {$/;"	f
C_Write	src/c_main.c	/^void C_Write(const char *message) {$/;"	f
C_X	src/m_menu.c	3359;"	d	file:
C_Y	src/m_menu.c	3360;"	d	file:
CachePCSLump	src/i_pcsound.c	/^static dboolean CachePCSLump(int sound_id)$/;"	f	file:
CalcActionAreaSize	src/TEXTSCREEN/txt_window.c	/^static void CalcActionAreaSize(txt_window_t *window, $/;"	f	file:
CalcHitsCount	src/gl_texture.c	/^static void CalcHitsCount(const byte *hitlist, int size, int *hit, int*hitcount)$/;"	f	file:
CalcRowColSizes	src/TEXTSCREEN/txt_table.c	/^static void CalcRowColSizes(txt_table_t *table, $/;"	f	file:
CalcWindowPosition	src/TEXTSCREEN/txt_window.c	/^static void CalcWindowPosition(txt_window_t *window)$/;"	f	file:
CalculateGammaRamp	src/gl_gamma.c	/^static void CalculateGammaRamp (float gamma, Uint16 *ramp)$/;"	f	file:
CaptureScreenAsTexID	src/gl_wipe.c	/^GLuint CaptureScreenAsTexID(void)$/;"	f
Cby24	src/p_spec.h	/^  Cby24,$/;"	e	enum:__anon243
Cby32	src/p_spec.h	/^  Cby32,$/;"	e	enum:__anon243
CbyST	src/p_spec.h	/^  CbyST,$/;"	e	enum:__anon243
CdODoor	src/p_spec.h	/^  CdODoor,$/;"	e	enum:__anon247
CeilingChange	src/p_spec.h	114;"	d
CeilingChangeShift	src/p_spec.h	121;"	d
CeilingCrush	src/p_spec.h	113;"	d
CeilingCrushShift	src/p_spec.h	120;"	d
CeilingDirection	src/p_spec.h	116;"	d
CeilingDirectionShift	src/p_spec.h	123;"	d
CeilingModel	src/p_spec.h	117;"	d
CeilingModelShift	src/p_spec.h	124;"	d
CeilingSkyColor	src/gl_intern.h	/^  PalEntry_t CeilingSkyColor[2];$/;"	m	struct:SkyBoxParams_s
CeilingSpeed	src/p_spec.h	118;"	d
CeilingSpeedShift	src/p_spec.h	125;"	d
CeilingTarget	src/p_spec.h	115;"	d
CeilingTargetShift	src/p_spec.h	122;"	d
CenterMouse	src/SDL/i_video.c	/^static void CenterMouse(void)$/;"	f	file:
ChanOffsetTable	src/MUSIC/dbopl.c	/^static Bit16u ChanOffsetTable[32];$/;"	v	file:
Channel	src/MUSIC/dbopl.h	/^typedef struct _Channel Channel;$/;"	t	typeref:struct:_Channel
Channel__BlockTemplate	src/MUSIC/dbopl.c	/^Channel* Channel__BlockTemplate(Channel *self, Chip* chip,$/;"	f
Channel__Channel	src/MUSIC/dbopl.c	/^static void Channel__Channel(Channel *self) {$/;"	f	file:
Channel__GeneratePercussion	src/MUSIC/dbopl.c	/^static inline void Channel__GeneratePercussion(Channel *self, Chip* chip,$/;"	f	file:
Channel__Op	src/MUSIC/dbopl.c	/^static inline Operator* Channel__Op( Channel *self, Bitu index ) {$/;"	f	file:
Channel__ResetC0	src/MUSIC/dbopl.c	/^static void Channel__ResetC0(Channel *self, const Chip* chip ) {$/;"	f	file:
Channel__SetChanData	src/MUSIC/dbopl.c	/^static void Channel__SetChanData(Channel *self, const Chip* chip, Bit32u data ) {$/;"	f	file:
Channel__UpdateFrequency	src/MUSIC/dbopl.c	/^static void Channel__UpdateFrequency(Channel *self, const Chip* chip, Bit8u fourOp ) {$/;"	f	file:
Channel__WriteA0	src/MUSIC/dbopl.c	/^static void Channel__WriteA0(Channel *self, const Chip* chip, Bit8u val ) {$/;"	f	file:
Channel__WriteB0	src/MUSIC/dbopl.c	/^static void Channel__WriteB0(Channel *self, const Chip* chip, Bit8u val ) {$/;"	f	file:
Channel__WriteC0	src/MUSIC/dbopl.c	/^static void Channel__WriteC0(Channel *self, const Chip* chip, Bit8u val ) {$/;"	f	file:
ChatInputHandler	src/hu_chat.h	/^typedef void (*ChatInputHandler)(chat_widget_t *cw);$/;"	t
ChatStrDef	src/m_menu.c	/^menu_t ChatStrDef =                                         \/\/ phares 4\/10\/98$/;"	v
CheckAutoDemo	src/r_demo.c	/^int CheckAutoDemo(void) {$/;"	f
CheckChunkHeader	src/MUSIC/midifile.c	/^static dboolean CheckChunkHeader(chunk_header_t *chunk,$/;"	f	file:
CheckClip	src/r_bsp.c	/^static dboolean CheckClip(seg_t * seg, sector_t * frontsector, sector_t * backsector)$/;"	f	file:
CheckComparisonOperators	src/PCRELIB/pcre_stringpiece_unittest.cc	/^static void CheckComparisonOperators() {$/;"	f	file:
CheckDemoExDemo	src/r_demo.c	/^int CheckDemoExDemo(void) {$/;"	f
CheckForOverrun	src/g_game.c	/^static dboolean CheckForOverrun(const byte *start_p, const byte *current_p,$/;"	f	file:
CheckGivenDamageTracer	src/hu_tracers.c	/^void CheckGivenDamageTracer(mobj_t *mobj, int damage)$/;"	f
CheckIWAD	src/d_main.c	/^void CheckIWAD(const char *iwadname, GameMode_t *gmode, dboolean *hassec) {$/;"	f
CheckIfPatch	src/r_patch.c	/^static dboolean CheckIfPatch(int lump)$/;"	f	file:
CheckLinesCrossTracer	src/hu_tracers.c	/^void CheckLinesCrossTracer(line_t *line)$/;"	f
CheckOpen	src/sc_man.c	/^static void CheckOpen(void)$/;"	f	file:
CheckPitch	src/e6y.c	/^void CheckPitch(signed int *pitch)$/;"	f
CheckQueuedPackets	src/d_client.c	/^static void CheckQueuedPackets(void)$/;"	f	file:
CheckSTLComparator	src/PCRELIB/pcre_stringpiece_unittest.cc	/^static void CheckSTLComparator() {$/;"	f	file:
CheckThingsHealthTracer	src/hu_tracers.c	/^void CheckThingsHealthTracer(mobj_t *mobj)$/;"	f
CheckThingsPickupTracer	src/hu_tracers.c	/^void CheckThingsPickupTracer(mobj_t *mobj)$/;"	f
CheckValidSelection	src/TEXTSCREEN/txt_table.c	/^static void CheckValidSelection(txt_table_t *table)$/;"	f	file:
CheckWadBufIntegrity	src/r_demo.c	/^int CheckWadBufIntegrity(const char *buffer, size_t size)$/;"	f
CheckWadFileIntegrity	src/r_demo.c	/^int CheckWadFileIntegrity(const char *filename)$/;"	f
CheckZNodesOverflow	src/p_setup.c	/^static void CheckZNodesOverflow(int *size, int count)$/;"	f	file:
Check_Sides	src/p_map.c	/^dboolean Check_Sides(mobj_t* actor, int x, int y)$/;"	f
ChecksumPacket	src/SDL/i_network.c	/^static byte ChecksumPacket(const packet_header_t* buffer, size_t len) {$/;"	f	file:
ChecksumPacket	src/d_ipxgate.c	/^static byte ChecksumPacket(const packet_header_t* buffer, size_t len)$/;"	f	file:
Chip	src/MUSIC/dbopl.h	/^typedef struct _Chip Chip;$/;"	t	typeref:struct:_Chip
Chip__Chip	src/MUSIC/dbopl.c	/^void Chip__Chip(Chip *self) {$/;"	f
Chip__ForwardLFO	src/MUSIC/dbopl.c	/^static inline Bit32u Chip__ForwardLFO(Chip *self, Bit32u samples ) {$/;"	f	file:
Chip__ForwardNoise	src/MUSIC/dbopl.c	/^static inline Bit32u Chip__ForwardNoise(Chip *self) {$/;"	f	file:
Chip__GenerateBlock2	src/MUSIC/dbopl.c	/^void Chip__GenerateBlock2(Chip *self, Bitu total, Bit32s* output ) {$/;"	f
Chip__GenerateBlock3	src/MUSIC/dbopl.c	/^void Chip__GenerateBlock3(Chip *self, Bitu total, Bit32s* output  ) {$/;"	f
Chip__Setup	src/MUSIC/dbopl.c	/^void Chip__Setup(Chip *self, Bit32u rate ) {$/;"	f
Chip__WriteAddr	src/MUSIC/dbopl.c	/^Bit32u Chip__WriteAddr(Chip *self, Bit32u port, Bit8u val ) {$/;"	f
Chip__WriteBD	src/MUSIC/dbopl.c	/^static void Chip__WriteBD(Chip *self, Bit8u val ) {$/;"	f	file:
Chip__WriteReg	src/MUSIC/dbopl.c	/^void Chip__WriteReg(Chip *self, Bit32u reg, Bit8u val ) {$/;"	f
ChooseFont	src/TEXTSCREEN/txt_sdl.c	/^static void ChooseFont(void)$/;"	f	file:
ClearLinesCrossTracer	src/hu_tracers.c	/^void ClearLinesCrossTracer(void)$/;"	f
Col2RGB8	src/v_video.c	/^unsigned int Col2RGB8[65][256];$/;"	v
CompareChannelPriorities	src/MUSIC/oplplayer.c	/^static int CompareChannelPriorities(opl_channel_data_t *chan1,$/;"	f	file:
CompatDef	src/m_menu.c	/^menu_t CompatDef =                                           \/\/ killough 10\/98$/;"	v
Compile	src/PCRELIB/pcrecpp.cc	/^pcre* RE::Compile(Anchor anchor) {$/;"	f	class:pcrecpp::RE
ConHeight	src/lprintf.c	/^int ConWidth,ConHeight;$/;"	v
ConWidth	src/lprintf.c	/^int ConWidth,ConHeight;$/;"	v
ConWndProc	src/lprintf.c	/^static LRESULT CALLBACK ConWndProc(HWND hwnd, UINT iMsg, WPARAM wParam, LPARAM lParam)$/;"	f	file:
ConsoleInputHandler	src/hu_cons.h	/^typedef void (*ConsoleInputHandler)(console_widget_t *cons);$/;"	t
Consume	src/PCRELIB/pcre_scanner.cc	/^bool Scanner::Consume(const RE& re,$/;"	f	class:pcrecpp::Scanner
Consume	src/PCRELIB/pcrecpp.cc	/^bool RE::Consume(StringPiece* input,$/;"	f	class:pcrecpp::RE
ConsumeSkip	src/PCRELIB/pcre_scanner.cc	/^void Scanner::ConsumeSkip() {$/;"	f	class:pcrecpp::Scanner
ControllerEvent	src/MUSIC/oplplayer.c	/^static void ControllerEvent(opl_track_data_t *track, midi_event_t *event)$/;"	f	file:
CrossSubsectorFunc	src/p_map.h	/^typedef dboolean (*CrossSubsectorFunc)(int num);$/;"	t
CrusherMonster	src/p_spec.h	156;"	d
CrusherMonsterShift	src/p_spec.h	160;"	d
CrusherSilent	src/p_spec.h	155;"	d
CrusherSilentShift	src/p_spec.h	159;"	d
CrusherSpeed	src/p_spec.h	157;"	d
CrusherSpeedShift	src/p_spec.h	161;"	d
CtoF	src/p_spec.h	/^  CtoF,$/;"	e	enum:__anon243
CtoHnC	src/p_spec.h	/^  CtoHnC,$/;"	e	enum:__anon243
CtoHnF	src/p_spec.h	/^  CtoHnF,$/;"	e	enum:__anon243
CtoLnC	src/p_spec.h	/^  CtoLnC,$/;"	e	enum:__anon243
CtoNnC	src/p_spec.h	/^  CtoNnC,$/;"	e	enum:__anon243
DA	src/z_zone.h	129;"	d
DA	src/z_zone.h	132;"	d
DAC	src/z_zone.h	130;"	d
DAC	src/z_zone.h	133;"	d
DAMAGE_MASK	src/p_spec.h	71;"	d
DAMAGE_SHIFT	src/p_spec.h	72;"	d
DATA_READING_ERROR	src/cmp.c	/^  DATA_READING_ERROR,$/;"	e	enum:__anon7	file:
DATA_WRITING_ERROR	src/cmp.c	/^  DATA_WRITING_ERROR,$/;"	e	enum:__anon7	file:
DBITS	src/tables.h	48;"	d
DBOPL_InitTables	src/MUSIC/dbopl.c	/^void DBOPL_InitTables( void ) {$/;"	f
DBOPL_WAVE	src/MUSIC/dbopl.h	37;"	d
DB_FASTCALL	src/MUSIC/dbopl.h	56;"	d
DDRAW_H_DDCOLORKEY	src/gl_hires.c	/^} DDRAW_H_DDCOLORKEY;$/;"	t	typeref:struct:_DDRAW_H_DDCOLORKEY	file:
DDRAW_H_DDPIXELFORMAT	src/gl_hires.c	/^} DDRAW_H_DDPIXELFORMAT;$/;"	t	typeref:struct:_DDRAW_H_DDPIXELFORMAT	file:
DDRAW_H_DDSCAPS2	src/gl_hires.c	/^} DDRAW_H_DDSCAPS2;$/;"	t	typeref:struct:_DDRAW_H_DDSCAPS2	file:
DDRAW_H_DDSURFACEDESC2	src/gl_hires.c	/^} DDRAW_H_DDSURFACEDESC2;$/;"	t	typeref:struct:_DDRAW_H_DDSURFACEDESC2	file:
DDRAW_H_FOURCC_DXT1	src/gl_hires.c	177;"	d	file:
DDRAW_H_FOURCC_DXT2	src/gl_hires.c	178;"	d	file:
DDRAW_H_FOURCC_DXT3	src/gl_hires.c	179;"	d	file:
DDRAW_H_FOURCC_DXT4	src/gl_hires.c	180;"	d	file:
DDRAW_H_FOURCC_DXT5	src/gl_hires.c	181;"	d	file:
DDRAW_H_MAKEFOURCC	src/gl_hires.c	170;"	d	file:
DEBUG_NET	src/n_main.c	54;"	d	file:
DEBUG_SAVE	src/n_main.c	56;"	d	file:
DEBUG_SOUND	src/s_sound.c	46;"	d	file:
DEBUG_STATES	src/n_state.c	24;"	d	file:
DEBUG_SYNC	src/n_main.c	55;"	d	file:
DECAY	src/MUSIC/dbopl.h	/^        DECAY,$/;"	e	enum:__anon202
DECLARE_BLOCK_MEMORY_ALLOC_ZONE	src/z_bmalloc.h	35;"	d
DEE_READ	src/PCRELIB/pcregrep.c	/^enum { DEE_READ, DEE_SKIP };$/;"	e	enum:__anon215	file:
DEE_SKIP	src/PCRELIB/pcregrep.c	/^enum { DEE_READ, DEE_SKIP };$/;"	e	enum:__anon215	file:
DEE_action	src/PCRELIB/pcregrep.c	/^static int DEE_action = DEE_READ;$/;"	v	file:
DEE_option	src/PCRELIB/pcregrep.c	/^static char *DEE_option = NULL;$/;"	v	file:
DEFAULT_PORT	src/n_net.h	27;"	d
DEFAULT_SPECHIT_MAGIC	src/g_overflow.h	92;"	d
DEFINE_INTEGER_PARSERS	src/PCRELIB/pcrecpp.cc	798;"	d	file:
DEFINE_INTEGER_PARSERS	src/PCRELIB/pcrecpp.cc	821;"	d	file:
DEG2RAD	src/r_main.h	163;"	d
DEHFALSE	src/d_deh.c	49;"	d	file:
DEHFILE	src/d_deh.c	/^} DEHFILE;$/;"	t	typeref:struct:__anon9	file:
DEHTRUE	src/d_deh.c	48;"	d	file:
DEH_BLOCKMAX	src/d_deh.c	1028;"	d	file:
DEH_BUFFERMAX	src/d_deh.c	1026;"	d	file:
DEH_MAXKEYLEN	src/d_deh.c	1029;"	d	file:
DEH_MOBJFLAGMAX	src/d_deh.c	1106;"	d	file:
DEH_MOBJINFOMAX	src/d_deh.c	1030;"	d	file:
DEH_mobjinfo_bits	src/d_deh.c	/^dboolean DEH_mobjinfo_bits[NUMMOBJTYPES] = {0};$/;"	v
DELTACLIENT	src/n_net.h	39;"	d
DELTASERVER	src/n_net.h	40;"	d
DELTASYNC	src/n_net.h	34;"	d
DELTA_CLIENT_ONLY	src/n_proto.c	131;"	d	file:
DELTA_SERVER_ONLY	src/n_proto.c	127;"	d	file:
DELTA_SYNC_ONLY	src/n_proto.c	61;"	d	file:
DEMOEX_COMMENT_LUMPNAME	src/r_demo.c	220;"	d	file:
DEMOEX_MLOOK_LUMPNAME	src/r_demo.c	219;"	d	file:
DEMOEX_PARAMS_LUMPNAME	src/r_demo.c	218;"	d	file:
DEMOEX_PORTNAME_LUMPNAME	src/r_demo.c	217;"	d	file:
DEMOEX_SEPARATOR	src/r_demo.c	222;"	d	file:
DEMOEX_VERSION	src/r_demo.c	214;"	d	file:
DEMOEX_VERSION_LUMPNAME	src/r_demo.c	216;"	d	file:
DEMOMARKER	src/g_game.h	58;"	d
DEN_PLAYER5	src/doomdef.h	123;"	d
DEN_PLAYER6	src/doomdef.h	124;"	d
DEN_PLAYER7	src/doomdef.h	125;"	d
DEN_PLAYER8	src/doomdef.h	126;"	d
DEST_SCR	src/f_wipe.c	46;"	d	file:
DETAILHI	src/d_englsh.h	62;"	d
DETAILLO	src/d_englsh.h	63;"	d
DEVDATA	src/dstrings.h	50;"	d
DEVMAPS	src/dstrings.h	49;"	d
DFTABLES	src/PCRELIB/dftables.c	75;"	d	file:
DIR_SEPERATOR	src/SDL/SDL_win32_main.c	31;"	d	file:
DIR_SEPERATOR	src/SDL/SDL_win32_main.c	40;"	d	file:
DISABLE_DOUBLEBUFFER	src/MAC/config.h	95;"	d
DISCONNECT_TIMEOUT	src/n_net.h	30;"	d
DISTMAP	src/r_main.c	414;"	d	file:
DITHER_DIM	src/r_filter.h	27;"	d
DI_EAST	src/p_enemy.c	/^  DI_EAST,$/;"	e	enum:__anon220	file:
DI_NODIR	src/p_enemy.c	/^  DI_NODIR,$/;"	e	enum:__anon220	file:
DI_NORTH	src/p_enemy.c	/^  DI_NORTH,$/;"	e	enum:__anon220	file:
DI_NORTHEAST	src/p_enemy.c	/^  DI_NORTHEAST,$/;"	e	enum:__anon220	file:
DI_NORTHWEST	src/p_enemy.c	/^  DI_NORTHWEST,$/;"	e	enum:__anon220	file:
DI_SOUTH	src/p_enemy.c	/^  DI_SOUTH,$/;"	e	enum:__anon220	file:
DI_SOUTHEAST	src/p_enemy.c	/^  DI_SOUTHEAST,$/;"	e	enum:__anon220	file:
DI_SOUTHWEST	src/p_enemy.c	/^  DI_SOUTHWEST,$/;"	e	enum:__anon220	file:
DI_WEST	src/p_enemy.c	/^  DI_WEST,$/;"	e	enum:__anon220	file:
DMR	src/r_filter.c	29;"	d	file:
DM_KILLERSX	src/wi_stuff.c	99;"	d	file:
DM_KILLERSY	src/wi_stuff.c	100;"	d	file:
DM_MATRIXX	src/wi_stuff.c	92;"	d	file:
DM_MATRIXY	src/wi_stuff.c	93;"	d	file:
DM_SPACINGX	src/wi_stuff.c	95;"	d	file:
DM_TOTALSX	src/wi_stuff.c	97;"	d	file:
DM_VICTIMSX	src/wi_stuff.c	101;"	d	file:
DM_VICTIMSY	src/wi_stuff.c	102;"	d	file:
DOGS	src/MAC/config.h	71;"	d
DONUT_FLOORPIC_DEFAULT	src/g_overflow.c	452;"	d	file:
DOOMCOM_ID	src/d_net.h	43;"	d
DOOMDATA_H__	src/doomdata.h	25;"	d
DOOMDEF_H__	src/doomdef.h	25;"	d
DOOMTYPE_H__	src/doomtype.h	25;"	d
DOOM_ORDER_DYNAMIC	src/r_things.h	/^  DOOM_ORDER_DYNAMIC,$/;"	e	enum:__anon312
DOOM_ORDER_LAST	src/r_things.h	/^  DOOM_ORDER_LAST$/;"	e	enum:__anon312
DOOM_ORDER_NONE	src/r_things.h	/^  DOOM_ORDER_NONE,$/;"	e	enum:__anon312
DOOM_ORDER_STATIC	src/r_things.h	/^  DOOM_ORDER_STATIC,$/;"	e	enum:__anon312
DOOUTCODE	src/am_map.c	1021;"	d	file:
DOOUTCODE	src/am_map.c	1161;"	d	file:
DOSY	src/d_englsh.h	60;"	d
DOS_MEM_DUMP_SIZE	src/g_overflow.c	388;"	d	file:
DOTALL	src/PCRELIB/pcrecpp.h	/^static inline RE_Options DOTALL() {$/;"	f	namespace:pcrecpp
DOUBLE_MARKER	src/cmp.c	/^  DOUBLE_MARKER          = 0xCB,$/;"	e	enum:__anon5	file:
DPRINTF	src/PCRELIB/pcre_internal.h	83;"	d
DPRINTF	src/PCRELIB/pcre_internal.h	85;"	d
DRAW_COLUMN_ISPATCH	src/r_draw.h	/^  DRAW_COLUMN_ISPATCH = 0x00000001$/;"	e	enum:__anon297
DRIVER_BUFFER	src/MUSIC/portmidiplayer.c	94;"	d	file:
DRIVER_LATENCY	src/MUSIC/portmidiplayer.c	92;"	d	file:
DSTRINGS__	src/dstrings.h	25;"	d
DS_RANGES_COUNT	src/r_things.c	82;"	d	file:
DUMBPLAYER_H__	src/MUSIC/dumbplayer.h	25;"	d
D_AddDEH	src/d_main.c	/^void D_AddDEH(const char *filename, int lumpnum) {$/;"	f
D_AddFile	src/d_main.c	/^void D_AddFile(const char *path, wad_source_t source) {$/;"	f
D_AdvanceDemo	src/d_main.c	/^void D_AdvanceDemo (void)$/;"	f
D_BuildBEXTables	src/d_deh.c	/^void D_BuildBEXTables(void)$/;"	f
D_BuildNewTiccmds	src/d_client.c	/^void D_BuildNewTiccmds(void)$/;"	f
D_CDROM	src/d_englsh.h	29;"	d
D_CheckNetGame	src/d_client.c	/^void D_CheckNetGame(void)$/;"	f
D_ClearDEHFiles	src/d_main.c	/^void D_ClearDEHFiles(void) {$/;"	f
D_ClearIWAD	src/d_main.c	/^void D_ClearIWAD(void) {$/;"	f
D_ClearResourceFiles	src/d_main.c	/^void D_ClearResourceFiles(void) {$/;"	f
D_DEH_H__	src/d_deh.h	25;"	d
D_DEVSTR	src/d_englsh.h	28;"	d
D_Display	src/d_main.c	/^void D_Display(void) {$/;"	f
D_DoAdvanceDemo	src/d_main.c	/^void D_DoAdvanceDemo(void) {$/;"	f
D_DoomLoop	src/d_main.c	/^static void D_DoomLoop(void) {$/;"	f	file:
D_DoomMain	src/d_main.c	/^void D_DoomMain(void) {$/;"	f
D_DoomMainSetup	src/d_main.c	/^static void D_DoomMainSetup(void) {$/;"	f	file:
D_DrawTitle1	src/d_main.c	/^static void D_DrawTitle1(const char *name)$/;"	f	file:
D_DrawTitle2	src/d_main.c	/^static void D_DrawTitle2(const char *name)$/;"	f	file:
D_ENGLSH_H__	src/d_englsh.h	25;"	d
D_EVENT_H__	src/d_event.h	25;"	d
D_EnableLogChannel	src/d_log.c	/^void D_EnableLogChannel(log_channel_e channel, const char *filename) {$/;"	f
D_GetIWAD	src/d_main.c	/^const char* D_GetIWAD(void) {$/;"	f
D_GetIWADPath	src/d_main.c	/^const char* D_GetIWADPath(void) {$/;"	f
D_ITEMS_H__	src/d_items.h	25;"	d
D_InitLogging	src/d_log.c	/^void D_InitLogging(void) {$/;"	f
D_LOG_H__	src/d_log.h	25;"	d
D_Log	src/d_log.c	/^void D_Log(log_channel_e channel, const char *fmt, ...) {$/;"	f
D_MAIN_H__	src/d_main.h	25;"	d
D_NET_H__	src/d_net.h	25;"	d
D_NetSendMisc	src/d_client.c	/^void D_NetSendMisc(netmisctype_t type, size_t len, void* data)$/;"	f
D_PLAYER_H__	src/d_player.h	25;"	d
D_PageDrawer	src/d_main.c	/^static void D_PageDrawer(void)$/;"	f	file:
D_PageTicker	src/d_main.c	/^void D_PageTicker(void)$/;"	f
D_PostEvent	src/d_main.c	/^void D_PostEvent(event_t *ev) {$/;"	f
D_QuitNetGame	src/d_client.c	/^static void D_QuitNetGame (void)$/;"	f	file:
D_Random	src/m_random.c	/^int D_Random(void) {$/;"	f
D_RandomRange	src/m_random.c	/^int D_RandomRange(int begin, int end) {$/;"	f
D_Responder	src/d_main.c	/^bool D_Responder(event_t *ev) {$/;"	f
D_STATE_H__	src/doomstat.h	25;"	d
D_SetIWAD	src/d_main.c	/^void D_SetIWAD(const char *iwad) {$/;"	f
D_SetPageName	src/d_main.c	/^static void D_SetPageName(const char *name)$/;"	f	file:
D_StartTitle	src/d_main.c	/^void D_StartTitle (void) {$/;"	f
D_THINK_H__	src/d_think.h	25;"	d
D_TICCMD_H__	src/d_ticcmd.h	25;"	d
D_Wipe	src/d_main.c	/^static void D_Wipe(void) {$/;"	f	file:
D_abs	src/m_fixed.h	69;"	d
D_dehout	src/d_main.c	/^static const char* D_dehout(void) {$/;"	f	file:
D_destroyDEHFile	src/d_main.c	/^static void D_destroyDEHFile(gpointer data) {$/;"	f	file:
D_destroyWADFile	src/d_main.c	/^static void D_destroyWADFile(gpointer data) {$/;"	f	file:
DeactivateMouse	src/SDL/i_video.c	/^static void DeactivateMouse(void)$/;"	f	file:
DemoNameToWadData	src/r_demo.c	/^int DemoNameToWadData(const char * demoname, waddata_t *waddata, patterndata_t *patterndata)$/;"	f
DetailItem_Keywords	src/gl_detail.c	/^static const char *DetailItem_Keywords[TAG_DETAIL_MAX + 1] =$/;"	v	file:
DisableSkip	src/PCRELIB/pcre_scanner.cc	/^void Scanner::DisableSkip() {$/;"	f	class:pcrecpp::Scanner
DoCreateDialogTooltip	src/e6y_launcher.c	/^BOOL DoCreateDialogTooltip(void)$/;"	f
DoLooseFiles	src/d_main.c	/^static void DoLooseFiles(void)$/;"	f	file:
DoMatch	src/PCRELIB/pcrecpp.cc	/^bool RE::DoMatch(const StringPiece& text,$/;"	f	class:pcrecpp::RE
DoMatchImpl	src/PCRELIB/pcrecpp.cc	/^bool RE::DoMatchImpl(const StringPiece& text,$/;"	f	class:pcrecpp::RE
Done_ConsoleWin	src/lprintf.c	/^void Done_ConsoleWin(void)$/;"	f
DonutOverrun	src/g_overflow.c	/^int DonutOverrun(fixed_t *pfloorheight, short *pfloorpic)$/;"	f
DoorDelay	src/p_spec.h	165;"	d
DoorDelayShift	src/p_spec.h	170;"	d
DoorKind	src/p_spec.h	167;"	d
DoorKindShift	src/p_spec.h	172;"	d
DoorMonster	src/p_spec.h	166;"	d
DoorMonsterShift	src/p_spec.h	171;"	d
DoorSpeed	src/p_spec.h	168;"	d
DoorSpeedShift	src/p_spec.h	173;"	d
DrawActionArea	src/TEXTSCREEN/txt_window.c	/^static void DrawActionArea(txt_window_t *window)$/;"	f	file:
DrawDesktopBackground	src/TEXTSCREEN/txt_desktop.c	/^static void DrawDesktopBackground(const char *title)$/;"	f	file:
DropdownListWidth	src/TEXTSCREEN/txt_dropdown.c	/^static int DropdownListWidth(txt_dropdown_list_t *list)$/;"	f	file:
E1TEXT	src/d_englsh.h	363;"	d
E2TEXT	src/d_englsh.h	381;"	d
E3TEXT	src/d_englsh.h	401;"	d
E4TEXT	src/d_englsh.h	421;"	d
E6Y_H__	src/e6y.h	25;"	d
E6Y_LAUNCHER_H__	src/e6y_launcher.h	25;"	d
EBCDIC	src/PCRELIB/config.h	42;"	d
ELEVATORSPEED	src/p_spec.h	35;"	d
EMPTYSTRING	src/d_englsh.h	69;"	d
EMSG	src/d_server.c	101;"	d	file:
EMULATE	src/g_overflow.h	56;"	d
ENDGAME	src/d_englsh.h	57;"	d
ENV_BITS	src/MUSIC/dbopl.c	95;"	d	file:
ENV_BITS	src/MUSIC/dbopl.c	98;"	d	file:
ENV_EXTRA	src/MUSIC/dbopl.c	102;"	d	file:
ENV_LIMIT	src/MUSIC/dbopl.c	104;"	d	file:
ENV_MAX	src/MUSIC/dbopl.c	103;"	d	file:
ENV_MIN	src/MUSIC/dbopl.c	101;"	d	file:
ENV_SILENT	src/MUSIC/dbopl.c	105;"	d	file:
ERR0	src/PCRELIB/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anon211
ERR1	src/PCRELIB/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anon211
ERR10	src/PCRELIB/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anon211
ERR11	src/PCRELIB/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anon211
ERR12	src/PCRELIB/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anon211
ERR13	src/PCRELIB/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anon211
ERR14	src/PCRELIB/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anon211
ERR15	src/PCRELIB/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anon211
ERR16	src/PCRELIB/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anon211
ERR17	src/PCRELIB/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anon211
ERR18	src/PCRELIB/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anon211
ERR19	src/PCRELIB/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anon211
ERR2	src/PCRELIB/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anon211
ERR20	src/PCRELIB/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anon211
ERR21	src/PCRELIB/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anon211
ERR22	src/PCRELIB/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anon211
ERR23	src/PCRELIB/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anon211
ERR24	src/PCRELIB/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anon211
ERR25	src/PCRELIB/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anon211
ERR26	src/PCRELIB/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anon211
ERR27	src/PCRELIB/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anon211
ERR28	src/PCRELIB/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anon211
ERR29	src/PCRELIB/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anon211
ERR3	src/PCRELIB/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anon211
ERR30	src/PCRELIB/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anon211
ERR31	src/PCRELIB/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anon211
ERR32	src/PCRELIB/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anon211
ERR33	src/PCRELIB/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anon211
ERR34	src/PCRELIB/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anon211
ERR35	src/PCRELIB/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anon211
ERR36	src/PCRELIB/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anon211
ERR37	src/PCRELIB/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anon211
ERR38	src/PCRELIB/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anon211
ERR39	src/PCRELIB/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anon211
ERR4	src/PCRELIB/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anon211
ERR40	src/PCRELIB/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anon211
ERR41	src/PCRELIB/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anon211
ERR42	src/PCRELIB/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anon211
ERR43	src/PCRELIB/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anon211
ERR44	src/PCRELIB/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anon211
ERR45	src/PCRELIB/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anon211
ERR46	src/PCRELIB/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anon211
ERR47	src/PCRELIB/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anon211
ERR48	src/PCRELIB/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anon211
ERR49	src/PCRELIB/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anon211
ERR5	src/PCRELIB/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anon211
ERR50	src/PCRELIB/pcre_internal.h	/^       ERR50, ERR51 };$/;"	e	enum:__anon211
ERR51	src/PCRELIB/pcre_internal.h	/^       ERR50, ERR51 };$/;"	e	enum:__anon211
ERR6	src/PCRELIB/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anon211
ERR7	src/PCRELIB/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anon211
ERR8	src/PCRELIB/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anon211
ERR9	src/PCRELIB/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anon211
ERROR_MAX	src/cmp.c	/^  ERROR_MAX$/;"	e	enum:__anon7	file:
ERROR_NONE	src/cmp.c	/^  ERROR_NONE,$/;"	e	enum:__anon7	file:
ESC_A	src/PCRELIB/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s, ESC_W,$/;"	e	enum:__anon209
ESC_B	src/PCRELIB/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s, ESC_W,$/;"	e	enum:__anon209
ESC_C	src/PCRELIB/pcre_internal.h	/^       ESC_w, ESC_dum1, ESC_C, ESC_P, ESC_p, ESC_X, ESC_Z, ESC_z, ESC_E,$/;"	e	enum:__anon209
ESC_D	src/PCRELIB/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s, ESC_W,$/;"	e	enum:__anon209
ESC_E	src/PCRELIB/pcre_internal.h	/^       ESC_w, ESC_dum1, ESC_C, ESC_P, ESC_p, ESC_X, ESC_Z, ESC_z, ESC_E,$/;"	e	enum:__anon209
ESC_G	src/PCRELIB/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s, ESC_W,$/;"	e	enum:__anon209
ESC_P	src/PCRELIB/pcre_internal.h	/^       ESC_w, ESC_dum1, ESC_C, ESC_P, ESC_p, ESC_X, ESC_Z, ESC_z, ESC_E,$/;"	e	enum:__anon209
ESC_Q	src/PCRELIB/pcre_internal.h	/^       ESC_Q, ESC_REF };$/;"	e	enum:__anon209
ESC_REF	src/PCRELIB/pcre_internal.h	/^       ESC_Q, ESC_REF };$/;"	e	enum:__anon209
ESC_S	src/PCRELIB/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s, ESC_W,$/;"	e	enum:__anon209
ESC_W	src/PCRELIB/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s, ESC_W,$/;"	e	enum:__anon209
ESC_X	src/PCRELIB/pcre_internal.h	/^       ESC_w, ESC_dum1, ESC_C, ESC_P, ESC_p, ESC_X, ESC_Z, ESC_z, ESC_E,$/;"	e	enum:__anon209
ESC_Z	src/PCRELIB/pcre_internal.h	/^       ESC_w, ESC_dum1, ESC_C, ESC_P, ESC_p, ESC_X, ESC_Z, ESC_z, ESC_E,$/;"	e	enum:__anon209
ESC_b	src/PCRELIB/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s, ESC_W,$/;"	e	enum:__anon209
ESC_d	src/PCRELIB/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s, ESC_W,$/;"	e	enum:__anon209
ESC_dum1	src/PCRELIB/pcre_internal.h	/^       ESC_w, ESC_dum1, ESC_C, ESC_P, ESC_p, ESC_X, ESC_Z, ESC_z, ESC_E,$/;"	e	enum:__anon209
ESC_e	src/PCRELIB/pcre_internal.h	476;"	d
ESC_f	src/PCRELIB/pcre_internal.h	480;"	d
ESC_n	src/PCRELIB/pcre_internal.h	484;"	d
ESC_p	src/PCRELIB/pcre_internal.h	/^       ESC_w, ESC_dum1, ESC_C, ESC_P, ESC_p, ESC_X, ESC_Z, ESC_z, ESC_E,$/;"	e	enum:__anon209
ESC_r	src/PCRELIB/pcre_internal.h	488;"	d
ESC_s	src/PCRELIB/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s, ESC_W,$/;"	e	enum:__anon209
ESC_tee	src/PCRELIB/pcre_internal.h	495;"	d
ESC_w	src/PCRELIB/pcre_internal.h	/^       ESC_w, ESC_dum1, ESC_C, ESC_P, ESC_p, ESC_X, ESC_Z, ESC_z, ESC_E,$/;"	e	enum:__anon209
ESC_z	src/PCRELIB/pcre_internal.h	/^       ESC_w, ESC_dum1, ESC_C, ESC_P, ESC_p, ESC_X, ESC_Z, ESC_z, ESC_E,$/;"	e	enum:__anon209
ETDT_ENABLE	src/e6y_launcher.c	47;"	d	file:
ETDT_ENABLETAB	src/e6y_launcher.c	49;"	d	file:
ETDT_USETABTEXTURE	src/e6y_launcher.c	48;"	d	file:
EV_BuildStairs	src/p_floor.c	/^int EV_BuildStairs$/;"	f
EV_CeilingCrushStop	src/p_ceilng.c	/^int EV_CeilingCrushStop(line_t* line)$/;"	f
EV_DoCeiling	src/p_ceilng.c	/^int EV_DoCeiling$/;"	f
EV_DoChange	src/p_floor.c	/^int EV_DoChange$/;"	f
EV_DoDonut	src/p_floor.c	/^int EV_DoDonut(line_t*  line)$/;"	f
EV_DoDoor	src/p_doors.c	/^int EV_DoDoor(line_t *line, vldoor_e type) {$/;"	f
EV_DoElevator	src/p_floor.c	/^int EV_DoElevator$/;"	f
EV_DoFloor	src/p_floor.c	/^int EV_DoFloor(line_t *line, floor_e floortype) {$/;"	f
EV_DoGenCeiling	src/p_genlin.c	/^int EV_DoGenCeiling$/;"	f
EV_DoGenCrusher	src/p_genlin.c	/^int EV_DoGenCrusher$/;"	f
EV_DoGenDoor	src/p_genlin.c	/^int EV_DoGenDoor$/;"	f
EV_DoGenFloor	src/p_genlin.c	/^int EV_DoGenFloor$/;"	f
EV_DoGenLift	src/p_genlin.c	/^int EV_DoGenLift$/;"	f
EV_DoGenLockedDoor	src/p_genlin.c	/^int EV_DoGenLockedDoor$/;"	f
EV_DoGenStairs	src/p_genlin.c	/^int EV_DoGenStairs$/;"	f
EV_DoLockedDoor	src/p_doors.c	/^int EV_DoLockedDoor(line_t *line, vldoor_e type, mobj_t *thing) {$/;"	f
EV_DoPlat	src/p_plats.c	/^int EV_DoPlat$/;"	f
EV_LightTurnOn	src/p_lights.c	/^int EV_LightTurnOn(line_t *line, int bright)$/;"	f
EV_LightTurnOnPartway	src/p_lights.c	/^int EV_LightTurnOnPartway(line_t *line, fixed_t level)$/;"	f
EV_SilentLineTeleport	src/p_telept.c	/^int EV_SilentLineTeleport(line_t *line, int side, mobj_t *thing,$/;"	f
EV_SilentTeleport	src/p_telept.c	/^int EV_SilentTeleport(line_t *line, int side, mobj_t *thing)$/;"	f
EV_StartLightStrobing	src/p_lights.c	/^int EV_StartLightStrobing(line_t* line)$/;"	f
EV_StopPlat	src/p_plats.c	/^int EV_StopPlat(line_t* line)$/;"	f
EV_Teleport	src/p_telept.c	/^int EV_Teleport(line_t *line, int side, mobj_t *thing)$/;"	f
EV_TurnTagLightsOff	src/p_lights.c	/^int EV_TurnTagLightsOff(line_t* line)$/;"	f
EV_VerticalDoor	src/p_doors.c	/^int EV_VerticalDoor(line_t *line, mobj_t *thing) {$/;"	f
EXEPTION_MAX	src/i_main.h	/^  EXEPTION_MAX$/;"	e	enum:__anon132
EXEPTION_NONE	src/i_main.h	/^  EXEPTION_NONE,$/;"	e	enum:__anon132
EXEPTION_glFramebufferTexture2DEXT	src/i_main.h	/^  EXEPTION_glFramebufferTexture2DEXT,$/;"	e	enum:__anon132
EXT16_MARKER	src/cmp.c	/^  EXT16_MARKER           = 0xC8,$/;"	e	enum:__anon5	file:
EXT32_MARKER	src/cmp.c	/^  EXT32_MARKER           = 0xC9,$/;"	e	enum:__anon5	file:
EXT8_MARKER	src/cmp.c	/^  EXT8_MARKER            = 0xC7,$/;"	e	enum:__anon5	file:
EXTENDED	src/PCRELIB/pcrecpp.h	/^static inline RE_Options EXTENDED() {$/;"	f	namespace:pcrecpp
EXTRACT_BASIC_MAX	src/PCRELIB/pcre_internal.h	661;"	d
EXT_TYPE_READING_ERROR	src/cmp.c	/^  EXT_TYPE_READING_ERROR,$/;"	e	enum:__anon7	file:
EXT_TYPE_WRITING_ERROR	src/cmp.c	/^  EXT_TYPE_WRITING_ERROR,$/;"	e	enum:__anon7	file:
E_X	src/m_menu.c	2878;"	d	file:
E_Y	src/m_menu.c	2879;"	d	file:
EnableSkip	src/PCRELIB/pcre_scanner.cc	/^void Scanner::EnableSkip() {$/;"	f	class:pcrecpp::Scanner
EnableThemeDialogTexturePROC	src/e6y_launcher.c	/^typedef HRESULT (WINAPI *EnableThemeDialogTexturePROC)(HWND, DWORD);$/;"	t	file:
EnemyDef	src/m_menu.c	/^menu_t EnemyDef =                                           \/\/ phares 4\/08\/98$/;"	v
EnforceLimits	src/TEXTSCREEN/txt_spinctrl.c	/^static void EnforceLimits(txt_spincontrol_t *spincontrol)$/;"	f	file:
EnumChildProc	src/e6y_launcher.c	/^BOOL CALLBACK EnumChildProc(HWND hwndCtrl, LPARAM lParam)$/;"	f
EnvelopeIncreaseTable	src/MUSIC/dbopl.c	/^static const Bit8u EnvelopeIncreaseTable[13] = {$/;"	v	file:
EnvelopeSelect	src/MUSIC/dbopl.c	/^static void EnvelopeSelect( Bit8u val, Bit8u *index, Bit8u *shift ) {$/;"	f	file:
EpiDef	src/m_menu.c	/^menu_t EpiDef =$/;"	v
EpisodeMenu	src/m_menu.c	/^menuitem_t EpisodeMenu[]=$/;"	v
ExeptionParam_t	src/i_main.h	/^} ExeptionParam_t;$/;"	t	typeref:struct:__anon133
ExeptionsList_t	src/i_main.h	/^} ExeptionsList_t;$/;"	t	typeref:enum:__anon132
ExeptionsParams	src/SDL/i_main.c	/^ExeptionParam_t ExeptionsParams[EXEPTION_MAX + 1] =$/;"	v
ExpTable	src/MUSIC/dbopl.c	/^static Bit16u ExpTable[ 256 ];$/;"	v	file:
Exp_InitMusic	src/SDL/i_emusic.c	/^void Exp_InitMusic(void) {$/;"	f
Exp_PauseSong	src/SDL/i_emusic.c	/^void Exp_PauseSong(int handle) {$/;"	f
Exp_PlaySong	src/SDL/i_emusic.c	/^void Exp_PlaySong(int handle, int looping) {$/;"	f
Exp_RegisterMusic	src/SDL/i_emusic.c	/^int Exp_RegisterMusic(const char *filename, musicinfo_t *song) {$/;"	f
Exp_RegisterSong	src/SDL/i_emusic.c	/^int Exp_RegisterSong(const void *data, size_t len) {$/;"	f
Exp_RegisterSongEx	src/SDL/i_emusic.c	/^int Exp_RegisterSongEx (const void *data, size_t len, int try_mus2mid) {$/;"	f
Exp_ResumeSong	src/SDL/i_emusic.c	/^void Exp_ResumeSong(int handle) {$/;"	f
Exp_SetMusicVolume	src/SDL/i_emusic.c	/^void Exp_SetMusicVolume(int volume) {$/;"	f
Exp_ShutdownMusic	src/SDL/i_emusic.c	/^void Exp_ShutdownMusic(void) {$/;"	f
Exp_StopSong	src/SDL/i_emusic.c	/^void Exp_StopSong(int handle) {$/;"	f
Exp_UnRegisterSong	src/SDL/i_emusic.c	/^void Exp_UnRegisterSong(int handle) {$/;"	f
Exp_UpdateMusic	src/SDL/i_emusic.c	/^void Exp_UpdateMusic(void *buff, unsigned nsamp) {$/;"	f
ExpandTics	src/d_ipxgate.c	/^int ExpandTics (int low, int maketic)$/;"	f
ExtHelpDef	src/m_menu.c	/^menu_t ExtHelpDef =$/;"	v
ExtHelpMenu	src/m_menu.c	/^menuitem_t ExtHelpMenu[] =$/;"	v
Extract	src/PCRELIB/pcrecpp.cc	/^bool RE::Extract(const StringPiece& rewrite,$/;"	f	class:pcrecpp::RE
F1	src/md5.c	162;"	d	file:
F2	src/md5.c	163;"	d	file:
F2LnC	src/p_spec.h	/^  F2LnC,$/;"	e	enum:__anon246
F2LnF	src/p_spec.h	/^  F2LnF,$/;"	e	enum:__anon246
F2NnF	src/p_spec.h	/^  F2NnF,$/;"	e	enum:__anon246
F3	src/md5.c	164;"	d	file:
F4	src/md5.c	165;"	d	file:
FALSE	src/MUSIC/dbopl.c	60;"	d	file:
FALSE	src/PCRELIB/pcre_internal.h	468;"	d
FALSE	src/PCRELIB/pcregrep.c	77;"	d	file:
FALSE_MARKER	src/cmp.c	/^  FALSE_MARKER           = 0xC2,$/;"	e	enum:__anon5	file:
FASTDARK	src/p_spec.h	66;"	d
FATSPREAD	src/p_enemy.c	1873;"	d	file:
FA_DIREC	src/e6y_launcher.c	52;"	d	file:
FB	src/am_map.c	107;"	d	file:
FB	src/wi_stuff.c	277;"	d	file:
FChgTxt	src/p_spec.h	/^  FChgTxt,$/;"	e	enum:__anon241
FChgTyp	src/p_spec.h	/^  FChgTyp,$/;"	e	enum:__anon241
FChgZero	src/p_spec.h	/^  FChgZero,$/;"	e	enum:__anon241
FF_FRAMEMASK	src/p_pspr.h	52;"	d
FF_FULLBRIGHT	src/p_pspr.h	51;"	d
FG	src/hu_lib.h	34;"	d
FG	src/st_lib.h	35;"	d
FIELDOFVIEW	src/r_main.c	67;"	d	file:
FILL_FLAT	src/v_video.c	231;"	d	file:
FILTER_GETV	src/r_filter.h	47;"	d
FILTER_UVBITS	src/r_filter.h	30;"	d
FILTER_UVDIM	src/r_filter.h	31;"	d
FINEANGLES	src/tables.h	29;"	d
FINEMASK	src/tables.h	30;"	d
FIX2DBL	src/gl_preprocess.c	73;"	d	file:
FIX2DBL	src/gl_preprocess.c	92;"	d	file:
FIXARRAY_MARKER	src/cmp.c	/^  FIXARRAY_MARKER        = 0x90,$/;"	e	enum:__anon5	file:
FIXARRAY_SIZE	src/cmp.c	/^  FIXARRAY_SIZE        = 0xF,$/;"	e	enum:__anon6	file:
FIXED_VALUE_WRITING_ERROR	src/cmp.c	/^  FIXED_VALUE_WRITING_ERROR,$/;"	e	enum:__anon7	file:
FIXEXT16_MARKER	src/cmp.c	/^  FIXEXT16_MARKER        = 0xD8,$/;"	e	enum:__anon5	file:
FIXEXT1_MARKER	src/cmp.c	/^  FIXEXT1_MARKER         = 0xD4,$/;"	e	enum:__anon5	file:
FIXEXT2_MARKER	src/cmp.c	/^  FIXEXT2_MARKER         = 0xD5,$/;"	e	enum:__anon5	file:
FIXEXT4_MARKER	src/cmp.c	/^  FIXEXT4_MARKER         = 0xD6,$/;"	e	enum:__anon5	file:
FIXEXT8_MARKER	src/cmp.c	/^  FIXEXT8_MARKER         = 0xD7,$/;"	e	enum:__anon5	file:
FIXMAP_MARKER	src/cmp.c	/^  FIXMAP_MARKER          = 0x80,$/;"	e	enum:__anon5	file:
FIXMAP_SIZE	src/cmp.c	/^  FIXMAP_SIZE          = 0xF,$/;"	e	enum:__anon6	file:
FIXSTR_MARKER	src/cmp.c	/^  FIXSTR_MARKER          = 0xA0,$/;"	e	enum:__anon5	file:
FIXSTR_SIZE	src/cmp.c	/^  FIXSTR_SIZE          = 0x1F$/;"	e	enum:__anon6	file:
FLOATSPEED	src/p_mobj.h	382;"	d
FLOAT_MARKER	src/cmp.c	/^  FLOAT_MARKER           = 0xCA,$/;"	e	enum:__anon5	file:
FLOORSPEED	src/p_spec.h	36;"	d
FLPLAYER_H__	src/MUSIC/flplayer.h	25;"	d
FN_DEFAULT	src/PCRELIB/pcregrep.c	/^enum { FN_NONE, FN_DEFAULT, FN_ONLY, FN_NOMATCH_ONLY, FN_FORCE };$/;"	e	enum:__anon213	file:
FN_FORCE	src/PCRELIB/pcregrep.c	/^enum { FN_NONE, FN_DEFAULT, FN_ONLY, FN_NOMATCH_ONLY, FN_FORCE };$/;"	e	enum:__anon213	file:
FN_NOMATCH_ONLY	src/PCRELIB/pcregrep.c	/^enum { FN_NONE, FN_DEFAULT, FN_ONLY, FN_NOMATCH_ONLY, FN_FORCE };$/;"	e	enum:__anon213	file:
FN_NONE	src/PCRELIB/pcregrep.c	/^enum { FN_NONE, FN_DEFAULT, FN_ONLY, FN_NOMATCH_ONLY, FN_FORCE };$/;"	e	enum:__anon213	file:
FN_ONLY	src/PCRELIB/pcregrep.c	/^enum { FN_NONE, FN_DEFAULT, FN_ONLY, FN_NOMATCH_ONLY, FN_FORCE };$/;"	e	enum:__anon213	file:
FNoChg	src/p_spec.h	/^  FNoChg,$/;"	e	enum:__anon241
FNumericModel	src/p_spec.h	/^  FNumericModel,$/;"	e	enum:__anon242
FONT_FOLDER_NAME	src/i_font.h	26;"	d
FOV90	src/e6y.h	49;"	d
FOV_CORRECTION_FACTOR	src/e6y.h	48;"	d
FRACBITS	src/m_fixed.h	38;"	d
FRACTOMAPBITS	src/am_map.h	48;"	d
FRACUNIT	src/m_fixed.h	39;"	d
FRICTION_FLY	src/doomdef.h	257;"	d
FRICTION_MASK	src/p_spec.h	75;"	d
FRICTION_SHIFT	src/p_spec.h	76;"	d
FSET	src/MUSIC/flplayer.c	124;"	d	file:
FSET	src/MUSIC/flplayer.c	144;"	d	file:
FTOM	src/am_map.c	124;"	d	file:
FTriggerModel	src/p_spec.h	/^  FTriggerModel,$/;"	e	enum:__anon242
FUDGEFACTOR	src/p_telept.c	209;"	d	file:
FUNC_V_CopyRect	src/v_video.c	/^static void FUNC_V_CopyRect(int srcscrn, int destscrn,$/;"	f	file:
FUNC_V_DrawBackground	src/v_video.c	/^static void FUNC_V_DrawBackground(const char *flatname, int scrn) {$/;"	f	file:
FUNC_V_DrawNumPatch	src/v_video.c	/^static void FUNC_V_DrawNumPatch(int x, int y, int scrn, int lump,$/;"	f	file:
FUNC_V_DrawNumPatchPrecise	src/v_video.c	/^static void FUNC_V_DrawNumPatchPrecise(float x, float y, int scrn, int lump,$/;"	f	file:
FUNC_V_FillFlat	src/v_video.c	/^static void FUNC_V_FillFlat(int lump, int scrn, int x, int y, int width, int height, enum patch_translation_e flags)$/;"	f	file:
FUNC_V_FillPatch	src/v_video.c	/^static void FUNC_V_FillPatch(int lump, int scrn, int x, int y, int width, int height, enum patch_translation_e flags)$/;"	f	file:
FUZZOFF	src/r_draw.c	99;"	d	file:
FUZZTABLE	src/r_draw.c	96;"	d	file:
F_BunnyScroll	src/f_finale.c	/^static void F_BunnyScroll (void)$/;"	f	file:
F_CastDrawer	src/f_finale.c	/^void F_CastDrawer (void)$/;"	f
F_CastPrint	src/f_finale.c	/^static void F_CastPrint (const char* text) \/\/ CPhipps - static, const char*$/;"	f	file:
F_CastResponder	src/f_finale.c	/^dboolean F_CastResponder (event_t* ev)$/;"	f
F_CastTicker	src/f_finale.c	/^void F_CastTicker (void)$/;"	f
F_Drawer	src/f_finale.c	/^void F_Drawer (void)$/;"	f
F_FINALE__	src/f_finale.h	25;"	d
F_OK	src/i_system.h	39;"	d
F_OK	src/z_zone.h	60;"	d
F_PANINC	src/am_map.c	113;"	d	file:
F_Responder	src/f_finale.c	/^dboolean F_Responder (event_t *event)$/;"	f
F_StartCast	src/f_finale.c	/^void F_StartCast (void)$/;"	f
F_StartFinale	src/f_finale.c	/^void F_StartFinale (void)$/;"	f
F_TextWrite	src/f_finale.c	/^static void F_TextWrite (void)$/;"	f	file:
F_Ticker	src/f_finale.c	/^void F_Ticker(void)$/;"	f
F_WIPE_H__	src/f_wipe.h	25;"	d
Fby24	src/p_spec.h	/^  Fby24,$/;"	e	enum:__anon240
Fby32	src/p_spec.h	/^  Fby32,$/;"	e	enum:__anon240
FbyST	src/p_spec.h	/^  FbyST,$/;"	e	enum:__anon240
FieldOfView	src/r_main.c	/^int FieldOfView;$/;"	v
FillBuffer	src/MUSIC/opl.c	/^static void FillBuffer(int16_t *buffer, unsigned int nsamples)$/;"	f	file:
FindAndConsume	src/PCRELIB/pcrecpp.cc	/^bool RE::FindAndConsume(StringPiece* input,$/;"	f	class:pcrecpp::RE
FindIWADFile	src/d_main.c	/^static char* FindIWADFile(void) {$/;"	f	file:
FindResponseFile	src/d_main.c	/^static void FindResponseFile (void)$/;"	f	file:
FindSelectableColumn	src/TEXTSCREEN/txt_table.c	/^static int FindSelectableColumn(txt_table_t *table, int row, int start_col)$/;"	f	file:
FirstPersonState	src/st_stuff.h	/^  FirstPersonState$/;"	e	enum:__anon324
FixedDiv	src/m_fixed.h	/^inline static CONSTFUNC fixed_t FixedDiv(fixed_t a, fixed_t b)$/;"	f
FixedMod	src/m_fixed.h	/^inline static CONSTFUNC fixed_t FixedMod(fixed_t a, fixed_t b)$/;"	f
FixedMul	src/m_fixed.h	/^inline static CONSTFUNC fixed_t FixedMul(fixed_t a, fixed_t b)$/;"	f
FloatFormatString	src/TEXTSCREEN/txt_spinctrl.c	/^static void FloatFormatString(float step, char *buf)$/;"	f	file:
FloatWidth	src/TEXTSCREEN/txt_spinctrl.c	/^static unsigned int FloatWidth(float val, float step)$/;"	f	file:
FloorChange	src/p_spec.h	98;"	d
FloorChangeShift	src/p_spec.h	105;"	d
FloorCrush	src/p_spec.h	97;"	d
FloorCrushShift	src/p_spec.h	104;"	d
FloorDirection	src/p_spec.h	100;"	d
FloorDirectionShift	src/p_spec.h	107;"	d
FloorModel	src/p_spec.h	101;"	d
FloorModelShift	src/p_spec.h	108;"	d
FloorSkyColor	src/gl_intern.h	/^  PalEntry_t FloorSkyColor[2];$/;"	m	struct:SkyBoxParams_s
FloorSpeed	src/p_spec.h	102;"	d
FloorSpeedShift	src/p_spec.h	109;"	d
FloorTarget	src/p_spec.h	99;"	d
FloorTargetShift	src/p_spec.h	106;"	d
Frame	src/MUSIC/madplayer.c	/^static struct mad_frame  Frame;$/;"	v	typeref:struct:mad_frame	file:
FreeEvent	src/MUSIC/midifile.c	/^static void FreeEvent(midi_event_t *event)$/;"	f	file:
FreeTrack	src/MUSIC/midifile.c	/^static void FreeTrack(midi_track_t *track)$/;"	f	file:
FreqCreateTable	src/MUSIC/dbopl.c	/^static const Bit8u FreqCreateTable[16] = {$/;"	v	file:
FrequencyForVoice	src/MUSIC/oplplayer.c	/^static unsigned int FrequencyForVoice(opl_voice_t *voice)$/;"	f	file:
FtoC	src/p_spec.h	/^  FtoC,$/;"	e	enum:__anon240
FtoHnF	src/p_spec.h	/^  FtoHnF,$/;"	e	enum:__anon240
FtoLnC	src/p_spec.h	/^  FtoLnC,$/;"	e	enum:__anon240
FtoLnF	src/p_spec.h	/^  FtoLnF,$/;"	e	enum:__anon240
FtoNnF	src/p_spec.h	/^  FtoNnF,$/;"	e	enum:__anon240
FullHeight	src/TEXTSCREEN/txt_scrollpane.c	/^static int FullHeight(txt_scrollpane_t *scrollpane)$/;"	f	file:
FullMatch	src/PCRELIB/pcrecpp.cc	/^bool RE::FullMatch(const StringPiece& text,$/;"	f	class:pcrecpp::RE
FullWidth	src/TEXTSCREEN/txt_scrollpane.c	/^static int FullWidth(txt_scrollpane_t *scrollpane)$/;"	f	file:
GAME_OPTIONS_SIZE	src/n_proto.h	28;"	d
GAME_OPTIONS_SIZE	src/protocol.h	57;"	d
GAME_OPTION_SIZE	src/g_game.h	69;"	d
GAMMALVL0	src/d_englsh.h	64;"	d
GAMMALVL1	src/d_englsh.h	65;"	d
GAMMALVL2	src/d_englsh.h	66;"	d
GAMMALVL3	src/d_englsh.h	67;"	d
GAMMALVL4	src/d_englsh.h	68;"	d
GCC_UNLIKELY	src/MUSIC/dbopl.c	57;"	d	file:
GENMIDI_FLAG_2VOICE	src/MUSIC/oplplayer.c	48;"	d	file:
GENMIDI_FLAG_FIXED	src/MUSIC/oplplayer.c	47;"	d	file:
GENMIDI_HEADER	src/MUSIC/oplplayer.c	46;"	d	file:
GENMIDI_NUM_INSTRS	src/MUSIC/oplplayer.c	44;"	d	file:
GET	src/PCRELIB/pcre_internal.h	228;"	d
GET	src/PCRELIB/pcre_internal.h	241;"	d
GET	src/PCRELIB/pcre_internal.h	255;"	d
GET2	src/PCRELIB/pcre_internal.h	279;"	d
GETBLENDED15_3268	src/r_filter.h	143;"	d
GETBLENDED15_5050	src/r_filter.h	131;"	d
GETBLENDED15_9406	src/r_filter.h	155;"	d
GETBLENDED16_3268	src/r_filter.h	147;"	d
GETBLENDED16_5050	src/r_filter.h	135;"	d
GETBLENDED16_9406	src/r_filter.h	159;"	d
GETBLENDED32_3268	src/r_filter.h	151;"	d
GETBLENDED32_5050	src/r_filter.h	139;"	d
GETBLENDED32_9406	src/r_filter.h	163;"	d
GETCHAR	src/PCRELIB/pcre_internal.h	290;"	d
GETCHAR	src/PCRELIB/pcre_internal.h	302;"	d
GETCHARINC	src/PCRELIB/pcre_internal.h	292;"	d
GETCHARINC	src/PCRELIB/pcre_internal.h	338;"	d
GETCHARINCTEST	src/PCRELIB/pcre_internal.h	293;"	d
GETCHARINCTEST	src/PCRELIB/pcre_internal.h	354;"	d
GETCHARLEN	src/PCRELIB/pcre_internal.h	294;"	d
GETCHARLEN	src/PCRELIB/pcre_internal.h	371;"	d
GETCHARTEST	src/PCRELIB/pcre_internal.h	291;"	d
GETCHARTEST	src/PCRELIB/pcre_internal.h	320;"	d
GETXY	src/p_setup.c	1242;"	d	file:
GF_X	src/m_menu.c	3022;"	d	file:
GGSAVED	src/d_englsh.h	133;"	d
GLDIT_ACEILING	src/gl_intern.h	/^  GLDIT_ACEILING, \/\/ animated ceiling$/;"	e	enum:__anon103
GLDIT_AFLOOR	src/gl_intern.h	/^  GLDIT_AFLOOR,   \/\/ animated floor$/;"	e	enum:__anon103
GLDIT_ASPRITE	src/gl_intern.h	/^  GLDIT_ASPRITE,$/;"	e	enum:__anon103
GLDIT_AWALL	src/gl_intern.h	/^  GLDIT_AWALL,   \/\/ animated wall$/;"	e	enum:__anon103
GLDIT_CEILING	src/gl_intern.h	/^  GLDIT_CEILING, \/\/ ceiling$/;"	e	enum:__anon103
GLDIT_FAWALL	src/gl_intern.h	/^  GLDIT_FAWALL,  \/\/ animated projected wall$/;"	e	enum:__anon103
GLDIT_FLOOR	src/gl_intern.h	/^  GLDIT_FLOOR,   \/\/ floor$/;"	e	enum:__anon103
GLDIT_FWALL	src/gl_intern.h	/^  GLDIT_FWALL,   \/\/ projected wall$/;"	e	enum:__anon103
GLDIT_HBAR	src/gl_intern.h	/^  GLDIT_HBAR,$/;"	e	enum:__anon103
GLDIT_MWALL	src/gl_intern.h	/^  GLDIT_MWALL,   \/\/ opaque mid wall$/;"	e	enum:__anon103
GLDIT_NONE	src/gl_intern.h	/^  GLDIT_NONE,$/;"	e	enum:__anon103
GLDIT_SHADOW	src/gl_intern.h	/^  GLDIT_SHADOW,$/;"	e	enum:__anon103
GLDIT_SPRITE	src/gl_intern.h	/^  GLDIT_SPRITE,  \/\/ opaque sprite$/;"	e	enum:__anon103
GLDIT_SWALL	src/gl_intern.h	/^  GLDIT_SWALL,   \/\/ sky walls$/;"	e	enum:__anon103
GLDIT_TSPRITE	src/gl_intern.h	/^  GLDIT_TSPRITE, \/\/ transparent sprites$/;"	e	enum:__anon103
GLDIT_TWALL	src/gl_intern.h	/^  GLDIT_TWALL,   \/\/ transparent walls$/;"	e	enum:__anon103
GLDIT_TYPES	src/gl_intern.h	/^  GLDIT_TYPES$/;"	e	enum:__anon103
GLDIT_WALL	src/gl_intern.h	/^  GLDIT_WALL,    \/\/ opaque wall$/;"	e	enum:__anon103
GLDT_BROKEN	src/gl_intern.h	/^  GLDT_BROKEN,$/;"	e	enum:__anon86
GLDT_FLAT	src/gl_intern.h	/^  GLDT_FLAT$/;"	e	enum:__anon86
GLDT_PATCH	src/gl_intern.h	/^  GLDT_PATCH,$/;"	e	enum:__anon86
GLDT_TEXTURE	src/gl_intern.h	/^  GLDT_TEXTURE,$/;"	e	enum:__anon86
GLDT_UNREGISTERED	src/gl_intern.h	/^  GLDT_UNREGISTERED,$/;"	e	enum:__anon86
GLDWF_BOT	src/gl_intern.h	223;"	d
GLDWF_BOTFLUD	src/gl_intern.h	225;"	d
GLDWF_M1S	src/gl_intern.h	221;"	d
GLDWF_M2S	src/gl_intern.h	222;"	d
GLDWF_SKY	src/gl_intern.h	226;"	d
GLDWF_SKYFLIP	src/gl_intern.h	227;"	d
GLDWF_TOP	src/gl_intern.h	220;"	d
GLDWF_TOPFLUD	src/gl_intern.h	224;"	d
GLDrawDataItem_s	src/gl_intern.h	/^typedef struct GLDrawDataItem_s$/;"	s
GLDrawDataItem_t	src/gl_intern.h	/^} GLDrawDataItem_t;$/;"	t	typeref:struct:GLDrawDataItem_s
GLDrawInfo	src/gl_intern.h	/^} GLDrawInfo;$/;"	t	typeref:struct:__anon105
GLDrawItem	src/gl_intern.h	/^} GLDrawItem;$/;"	t	typeref:struct:GLDrawItem_s
GLDrawItemType	src/gl_intern.h	/^} GLDrawItemType;$/;"	t	typeref:enum:__anon103
GLDrawItem_s	src/gl_intern.h	/^typedef struct GLDrawItem_s$/;"	s
GLEXT_CLAMP_TO_EDGE	src/gl_opengl.c	/^int GLEXT_CLAMP_TO_EDGE = GL_CLAMP;$/;"	v
GLEXT_glActiveTextureARB	src/gl_opengl.c	/^PFNGLACTIVETEXTUREARBPROC        GLEXT_glActiveTextureARB              = NULL;$/;"	v
GLEXT_glAttachObjectARB	src/gl_opengl.c	/^PFNGLATTACHOBJECTARBPROC        GLEXT_glAttachObjectARB = NULL;$/;"	v
GLEXT_glBindBufferARB	src/gl_opengl.c	/^PFNGLBINDBUFFERARBPROC              GLEXT_glBindBufferARB              = NULL;$/;"	v
GLEXT_glBindFramebufferEXT	src/gl_opengl.c	/^PFNGLBINDFRAMEBUFFEREXTPROC         GLEXT_glBindFramebufferEXT         = NULL;$/;"	v
GLEXT_glBindRenderbufferEXT	src/gl_opengl.c	/^PFNGLBINDRENDERBUFFEREXTPROC        GLEXT_glBindRenderbufferEXT        = NULL;$/;"	v
GLEXT_glBlendColorEXT	src/gl_opengl.c	/^PFNGLBLENDCOLOREXTPROC              GLEXT_glBlendColorEXT              = NULL;$/;"	v
GLEXT_glBufferDataARB	src/gl_opengl.c	/^PFNGLBUFFERDATAARBPROC              GLEXT_glBufferDataARB              = NULL;$/;"	v
GLEXT_glBufferSubDataARB	src/gl_opengl.c	/^PFNGLBUFFERSUBDATAARBPROC           GLEXT_glBufferSubDataARB           = NULL;$/;"	v
GLEXT_glCheckFramebufferStatusEXT	src/gl_opengl.c	/^PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC  GLEXT_glCheckFramebufferStatusEXT  = NULL;$/;"	v
GLEXT_glClientActiveTextureARB	src/gl_opengl.c	/^PFNGLCLIENTACTIVETEXTUREARBPROC  GLEXT_glClientActiveTextureARB        = NULL;$/;"	v
GLEXT_glColorTableEXT	src/gl_opengl.c	/^PFNGLCOLORTABLEEXTPROC              GLEXT_glColorTableEXT              = NULL;$/;"	v
GLEXT_glCompileShaderARB	src/gl_opengl.c	/^PFNGLCOMPILESHADERARBPROC       GLEXT_glCompileShaderARB = NULL;$/;"	v
GLEXT_glCompressedTexImage2DARB	src/gl_opengl.c	/^PFNGLCOMPRESSEDTEXIMAGE2DARBPROC GLEXT_glCompressedTexImage2DARB       = NULL;$/;"	v
GLEXT_glCreateProgramObjectARB	src/gl_opengl.c	/^PFNGLCREATEPROGRAMOBJECTARBPROC GLEXT_glCreateProgramObjectARB = NULL;$/;"	v
GLEXT_glCreateShaderObjectARB	src/gl_opengl.c	/^PFNGLCREATESHADEROBJECTARBPROC  GLEXT_glCreateShaderObjectARB = NULL;$/;"	v
GLEXT_glDeleteBuffersARB	src/gl_opengl.c	/^PFNGLDELETEBUFFERSARBPROC           GLEXT_glDeleteBuffersARB           = NULL;$/;"	v
GLEXT_glDeleteFramebuffersEXT	src/gl_opengl.c	/^PFNGLDELETEFRAMEBUFFERSEXTPROC      GLEXT_glDeleteFramebuffersEXT      = NULL;$/;"	v
GLEXT_glDeleteObjectARB	src/gl_opengl.c	/^PFNGLDELETEOBJECTARBPROC        GLEXT_glDeleteObjectARB = NULL;$/;"	v
GLEXT_glDeleteRenderbuffersEXT	src/gl_opengl.c	/^PFNGLDELETERENDERBUFFERSEXTPROC     GLEXT_glDeleteRenderbuffersEXT     = NULL;$/;"	v
GLEXT_glDetachObjectARB	src/gl_opengl.c	/^PFNGLDETACHOBJECTARBPROC        GLEXT_glDetachObjectARB = NULL;$/;"	v
GLEXT_glFramebufferRenderbufferEXT	src/gl_opengl.c	/^PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC GLEXT_glFramebufferRenderbufferEXT = NULL;$/;"	v
GLEXT_glFramebufferTexture2DEXT	src/gl_opengl.c	/^PFNGLFRAMEBUFFERTEXTURE2DEXTPROC    GLEXT_glFramebufferTexture2DEXT    = NULL;$/;"	v
GLEXT_glGenBuffersARB	src/gl_opengl.c	/^PFNGLGENBUFFERSARBPROC              GLEXT_glGenBuffersARB              = NULL;$/;"	v
GLEXT_glGenFramebuffersEXT	src/gl_opengl.c	/^PFNGLGENFRAMEBUFFERSEXTPROC         GLEXT_glGenFramebuffersEXT         = NULL;$/;"	v
GLEXT_glGenRenderbuffersEXT	src/gl_opengl.c	/^PFNGLGENRENDERBUFFERSEXTPROC        GLEXT_glGenRenderbuffersEXT        = NULL;$/;"	v
GLEXT_glGenerateMipmapEXT	src/gl_opengl.c	/^PFNGLGENERATEMIPMAPEXTPROC          GLEXT_glGenerateMipmapEXT          = NULL;$/;"	v
GLEXT_glGetActiveUniformARB	src/gl_opengl.c	/^PFNGLGETACTIVEUNIFORMARBPROC     GLEXT_glGetActiveUniformARB = NULL;$/;"	v
GLEXT_glGetAttachedObjectsARB	src/gl_opengl.c	/^PFNGLGETATTACHEDOBJECTSARBPROC   GLEXT_glGetAttachedObjectsARB = NULL;$/;"	v
GLEXT_glGetBufferParameterivARB	src/gl_opengl.c	/^PFNGLGETBUFFERPARAMETERIVARBPROC    GLEXT_glGetBufferParameterivARB    = NULL;$/;"	v
GLEXT_glGetHandleARB	src/gl_opengl.c	/^PFNGLGETHANDLEARBPROC           GLEXT_glGetHandleARB = NULL;$/;"	v
GLEXT_glGetInfoLogARB	src/gl_opengl.c	/^PFNGLGETINFOLOGARBPROC           GLEXT_glGetInfoLogARB = NULL;$/;"	v
GLEXT_glGetObjectParameterfvARB	src/gl_opengl.c	/^PFNGLGETOBJECTPARAMETERFVARBPROC GLEXT_glGetObjectParameterfvARB = NULL;$/;"	v
GLEXT_glGetObjectParameterivARB	src/gl_opengl.c	/^PFNGLGETOBJECTPARAMETERIVARBPROC GLEXT_glGetObjectParameterivARB = NULL;$/;"	v
GLEXT_glGetUniformLocationARB	src/gl_opengl.c	/^PFNGLGETUNIFORMLOCATIONARBPROC   GLEXT_glGetUniformLocationARB = NULL;$/;"	v
GLEXT_glGetUniformfvARB	src/gl_opengl.c	/^PFNGLGETUNIFORMFVARBPROC         GLEXT_glGetUniformfvARB = NULL;$/;"	v
GLEXT_glLinkProgramARB	src/gl_opengl.c	/^PFNGLLINKPROGRAMARBPROC         GLEXT_glLinkProgramARB = NULL;$/;"	v
GLEXT_glMapBufferARB	src/gl_opengl.c	/^PFNGLMAPBUFFERARBPROC               GLEXT_glMapBufferARB               = NULL;$/;"	v
GLEXT_glMultiTexCoord2fARB	src/gl_opengl.c	/^PFNGLMULTITEXCOORD2FARBPROC      GLEXT_glMultiTexCoord2fARB            = NULL;$/;"	v
GLEXT_glMultiTexCoord2fvARB	src/gl_opengl.c	/^PFNGLMULTITEXCOORD2FVARBPROC     GLEXT_glMultiTexCoord2fvARB           = NULL;$/;"	v
GLEXT_glRenderbufferStorageEXT	src/gl_opengl.c	/^PFNGLRENDERBUFFERSTORAGEEXTPROC     GLEXT_glRenderbufferStorageEXT     = NULL;$/;"	v
GLEXT_glShaderSourceARB	src/gl_opengl.c	/^PFNGLSHADERSOURCEARBPROC        GLEXT_glShaderSourceARB = NULL;$/;"	v
GLEXT_glUniform1fARB	src/gl_opengl.c	/^PFNGLUNIFORM1FARBPROC           GLEXT_glUniform1fARB = NULL;$/;"	v
GLEXT_glUniform1iARB	src/gl_opengl.c	/^PFNGLUNIFORM1IARBPROC           GLEXT_glUniform1iARB = NULL;$/;"	v
GLEXT_glUniform2fARB	src/gl_opengl.c	/^PFNGLUNIFORM2FARBPROC           GLEXT_glUniform2fARB = NULL;$/;"	v
GLEXT_glUnmapBufferARB	src/gl_opengl.c	/^PFNGLUNMAPBUFFERARBPROC             GLEXT_glUnmapBufferARB             = NULL;$/;"	v
GLEXT_glUseProgramObjectARB	src/gl_opengl.c	/^PFNGLUSEPROGRAMOBJECTARBPROC    GLEXT_glUseProgramObjectARB = NULL;$/;"	v
GLEXT_glValidateProgramARB	src/gl_opengl.c	/^PFNGLVALIDATEPROGRAMARBPROC     GLEXT_glValidateProgramARB = NULL;$/;"	v
GLFLAT_CEILING	src/gl_intern.h	/^  GLFLAT_CEILING      = 0x00000001,$/;"	e	enum:__anon92
GLFLAT_HAVE_OFFSET	src/gl_intern.h	/^  GLFLAT_HAVE_OFFSET  = 0x00000002,$/;"	e	enum:__anon92
GLFlat	src/gl_intern.h	/^} GLFlat;$/;"	t	typeref:struct:__anon93
GLFlat_flag_t	src/gl_intern.h	/^} GLFlat_flag_t;$/;"	t	typeref:enum:__anon92
GLGenericImage	src/gl_hires.c	/^} GLGenericImage;$/;"	t	typeref:struct:__anon85	file:
GLHealthBar	src/gl_intern.h	/^} GLHealthBar;$/;"	t	typeref:struct:__anon101
GLLight	src/gl_light.c	/^} GLLight;$/;"	t	typeref:struct:__anon106	file:
GLLoopDef	src/gl_intern.h	/^} GLLoopDef;$/;"	t	typeref:struct:__anon94
GLMapSubsector	src/gl_intern.h	/^} GLMapSubsector;$/;"	t	typeref:struct:__anon96
GLMipType	src/gl_intern.h	/^} GLMipType;$/;"	t	typeref:enum:__anon87
GLOWSPEED	src/p_spec.h	64;"	d
GLSector	src/gl_intern.h	/^} GLSector;$/;"	t	typeref:struct:__anon95
GLSeg	src/gl_intern.h	/^} GLSeg;$/;"	t	typeref:struct:__anon90
GLShader	src/gl_intern.h	/^} GLShader;$/;"	t	typeref:struct:GLShader_s
GLShader_s	src/gl_intern.h	/^typedef struct GLShader_s$/;"	s
GLShadow	src/gl_intern.h	/^} GLShadow;$/;"	t	typeref:struct:__anon100
GLSkyLoopDef	src/gl_sky.c	/^} GLSkyLoopDef;$/;"	t	typeref:struct:__anon111	file:
GLSkyVBO	src/gl_sky.c	/^} GLSkyVBO;$/;"	t	typeref:struct:__anon112	file:
GLSprite	src/gl_intern.h	/^} GLSprite;$/;"	t	typeref:struct:__anon102
GLSubSector	src/gl_intern.h	/^} GLSubSector;$/;"	t	typeref:struct:__anon99
GLTEXTURE_CLAMPX	src/gl_intern.h	/^  GLTEXTURE_CLAMPX    = 0x00000040,$/;"	e	enum:__anon88
GLTEXTURE_CLAMPXY	src/gl_intern.h	/^  GLTEXTURE_CLAMPXY   = (GLTEXTURE_CLAMPX | GLTEXTURE_CLAMPY),$/;"	e	enum:__anon88
GLTEXTURE_CLAMPY	src/gl_intern.h	/^  GLTEXTURE_CLAMPY    = 0x00000080,$/;"	e	enum:__anon88
GLTEXTURE_HASHOLES	src/gl_intern.h	/^  GLTEXTURE_HASHOLES  = 0x00000004,$/;"	e	enum:__anon88
GLTEXTURE_HASNOHIRES	src/gl_intern.h	/^  GLTEXTURE_HASNOHIRES= 0x00000020,$/;"	e	enum:__anon88
GLTEXTURE_HIRES	src/gl_intern.h	/^  GLTEXTURE_HIRES     = 0x00000010,$/;"	e	enum:__anon88
GLTEXTURE_MIPMAP	src/gl_intern.h	/^  GLTEXTURE_MIPMAP    = 0x00000100,$/;"	e	enum:__anon88
GLTEXTURE_SKY	src/gl_intern.h	/^  GLTEXTURE_SKY       = 0x00000008,$/;"	e	enum:__anon88
GLTEXTURE_SPRITE	src/gl_intern.h	/^  GLTEXTURE_SPRITE    = 0x00000002,$/;"	e	enum:__anon88
GLTexType	src/gl_intern.h	/^} GLTexType;$/;"	t	typeref:enum:__anon86
GLTexcoord	src/gl_intern.h	/^} GLTexcoord;$/;"	t	typeref:struct:__anon98
GLTexture	src/gl_intern.h	/^} GLTexture;$/;"	t	typeref:struct:__anon89
GLTexture_flag_t	src/gl_intern.h	/^} GLTexture_flag_t;$/;"	t	typeref:enum:__anon88
GLVertex	src/gl_intern.h	/^} GLVertex;$/;"	t	typeref:struct:__anon97
GLWall	src/gl_intern.h	/^} GLWall;$/;"	t	typeref:struct:__anon91
GL_COMBINE_ARB	src/e6y.h	45;"	d
GL_DEPTH_STENCIL_EXT	src/gl_opengl.h	51;"	d
GL_DOOM	src/MAC/config.h	91;"	d
GL_INTERN_H__	src/gl_intern.h	25;"	d
GL_OPENGL_H__	src/gl_opengl.h	25;"	d
GL_RGB_SCALE_ARB	src/e6y.h	46;"	d
GL_STRUCT_H__	src/gl_struct.h	25;"	d
GL_VERT_OFFSET	src/p_setup.c	91;"	d	file:
GOTARMBONUS	src/d_englsh.h	75;"	d
GOTARMOR	src/d_englsh.h	72;"	d
GOTBACKPACK	src/d_englsh.h	104;"	d
GOTBERSERK	src/d_englsh.h	89;"	d
GOTBFG9000	src/d_englsh.h	106;"	d
GOTBLUECARD	src/d_englsh.h	81;"	d
GOTBLUESKUL	src/d_englsh.h	84;"	d
GOTCELL	src/d_englsh.h	100;"	d
GOTCELLBOX	src/d_englsh.h	101;"	d
GOTCHAINGUN	src/d_englsh.h	107;"	d
GOTCHAINSAW	src/d_englsh.h	108;"	d
GOTCLIP	src/d_englsh.h	96;"	d
GOTCLIPBOX	src/d_englsh.h	97;"	d
GOTHTHBONUS	src/d_englsh.h	74;"	d
GOTINVIS	src/d_englsh.h	90;"	d
GOTINVUL	src/d_englsh.h	88;"	d
GOTLAUNCHER	src/d_englsh.h	109;"	d
GOTMAP	src/d_englsh.h	92;"	d
GOTMEDIKIT	src/d_englsh.h	78;"	d
GOTMEDINEED	src/d_englsh.h	77;"	d
GOTMEGA	src/d_englsh.h	73;"	d
GOTMSPHERE	src/d_englsh.h	94;"	d
GOTPLASMA	src/d_englsh.h	110;"	d
GOTREDCARD	src/d_englsh.h	83;"	d
GOTREDSKULL	src/d_englsh.h	86;"	d
GOTROCKBOX	src/d_englsh.h	99;"	d
GOTROCKET	src/d_englsh.h	98;"	d
GOTSHELLBOX	src/d_englsh.h	103;"	d
GOTSHELLS	src/d_englsh.h	102;"	d
GOTSHOTGUN	src/d_englsh.h	111;"	d
GOTSHOTGUN2	src/d_englsh.h	112;"	d
GOTSTIM	src/d_englsh.h	76;"	d
GOTSUIT	src/d_englsh.h	91;"	d
GOTSUPER	src/d_englsh.h	79;"	d
GOTVISOR	src/d_englsh.h	93;"	d
GOTYELWCARD	src/d_englsh.h	82;"	d
GOTYELWSKUL	src/d_englsh.h	85;"	d
GPART	src/gl_sky.c	431;"	d	file:
GRAVITY	src/p_mobj.h	373;"	d
GS_BAD	src/doomdef.h	/^  GS_BAD = -1,$/;"	e	enum:__anon46
GS_DEMOSCREEN	src/doomdef.h	/^  GS_DEMOSCREEN$/;"	e	enum:__anon46
GS_FINALE	src/doomdef.h	/^  GS_FINALE,$/;"	e	enum:__anon46
GS_INTERMISSION	src/doomdef.h	/^  GS_INTERMISSION,$/;"	e	enum:__anon46
GS_LEVEL	src/doomdef.h	/^  GS_LEVEL = 0,$/;"	e	enum:__anon46
G_BeginRecording	src/g_game.c	/^void G_BeginRecording(void) {$/;"	f
G_BuildTiccmd	src/g_game.c	/^void G_BuildTiccmd(ticcmd_t *cmd) {$/;"	f
G_ChangedPlayerColour	src/g_game.c	/^void G_ChangedPlayerColour(int pn, int cl) {$/;"	f
G_CheckDemoContinue	src/g_game.c	/^void G_CheckDemoContinue(void) {$/;"	f
G_CheckDemoStatus	src/g_game.c	/^dboolean G_CheckDemoStatus(void) {$/;"	f
G_CheckSpot	src/g_game.c	/^static dboolean G_CheckSpot(int playernum, mapthing_t *mthing) {$/;"	f	file:
G_ClearCorpses	src/g_game.c	/^void G_ClearCorpses(void) {$/;"	f
G_Compatibility	src/g_game.c	/^void G_Compatibility(void) {$/;"	f
G_DeathMatchSpawnPlayer	src/g_game.c	/^void G_DeathMatchSpawnPlayer(int playernum) {$/;"	f
G_DeferedInitNew	src/g_game.c	/^void G_DeferedInitNew(skill_t skill, int episode, int map) {$/;"	f
G_DeferedPlayDemo	src/g_game.c	/^void G_DeferedPlayDemo(const char* name) {$/;"	f
G_DoCompleted	src/g_game.c	/^void G_DoCompleted(void) {$/;"	f
G_DoLoadGame	src/g_game.c	/^void G_DoLoadGame(void) {$/;"	f
G_DoLoadLevel	src/g_game.c	/^static void G_DoLoadLevel(void) {$/;"	f	file:
G_DoNewGame	src/g_game.c	/^void G_DoNewGame(void) {$/;"	f
G_DoPlayDemo	src/g_game.c	/^void G_DoPlayDemo(void) {$/;"	f
G_DoReborn	src/g_game.c	/^void G_DoReborn(int playernum) {$/;"	f
G_DoSaveGame	src/g_game.c	/^void G_DoSaveGame(dboolean menu) {$/;"	f
G_DoWorldDone	src/g_game.c	/^void G_DoWorldDone(void) {$/;"	f
G_ExitLevel	src/g_game.c	/^void G_ExitLevel(void) {$/;"	f
G_ForcedLoadGame	src/g_game.c	/^void G_ForcedLoadGame(void) {$/;"	f
G_GAME_H__	src/g_game.h	25;"	d
G_GetAverageSaveSize	src/g_save.c	/^int G_GetAverageSaveSize(void) {$/;"	f
G_GetDemoFooter	src/r_demo.c	/^byte* G_GetDemoFooter(const char *filename, const byte **footer, size_t *size)$/;"	f
G_GetHelpers	src/g_game.c	/^static int G_GetHelpers(void) {$/;"	f	file:
G_GetOriginalDoomCompatLevel	src/g_game.c	/^static int G_GetOriginalDoomCompatLevel(int ver) {$/;"	f	file:
G_GotoNextLevel	src/e6y.c	/^int G_GotoNextLevel(void)$/;"	f
G_InitNew	src/g_game.c	/^void G_InitNew(skill_t skill, int episode, int map) {$/;"	f
G_KEYS_H__	src/g_keys.h	24;"	d
G_LoadGame	src/g_game.c	/^void G_LoadGame(int slot, dboolean command) {$/;"	f
G_LoadGameErr	src/g_save.c	/^static void G_LoadGameErr(const char *msg) {$/;"	f	file:
G_NextWeapon	src/g_game.c	/^static int G_NextWeapon(int direction) {$/;"	f	file:
G_OVERFLOW_H__	src/g_overflow.h	25;"	d
G_PlayerFinishLevel	src/g_game.c	/^static void G_PlayerFinishLevel(int player) {$/;"	f	file:
G_PlayerReborn	src/g_game.c	/^void G_PlayerReborn(int player) {$/;"	f
G_ReadDemoContinueTiccmd	src/g_game.c	/^void G_ReadDemoContinueTiccmd(ticcmd_t* cmd) {$/;"	f
G_ReadDemoFooter	src/r_demo.c	/^static int G_ReadDemoFooter(const char *filename) {$/;"	f	file:
G_ReadDemoHeader	src/g_game.c	/^const byte* G_ReadDemoHeader(const byte *demo_p, size_t size) {$/;"	f
G_ReadDemoHeaderEx	src/g_game.c	/^const byte* G_ReadDemoHeaderEx(const byte *demo_p, size_t size,$/;"	f
G_ReadDemoTiccmd	src/g_game.c	/^void G_ReadDemoTiccmd (ticcmd_t *cmd) {$/;"	f
G_ReadOneTick	src/g_game.c	/^void G_ReadOneTick(ticcmd_t* cmd, const byte **data_p) {$/;"	f
G_ReadOptions	src/g_game.c	/^void G_ReadOptions(byte game_options[]) {$/;"	f
G_ReadSaveData	src/g_save.c	/^dboolean G_ReadSaveData(pbuf_t *savebuffer, dboolean bail_on_errors,$/;"	f
G_RecordDemo	src/g_game.c	/^void G_RecordDemo(const char* name) {$/;"	f
G_ReloadDefaults	src/g_game.c	/^void G_ReloadDefaults(void) {$/;"	f
G_ReloadLevel	src/e6y.c	/^int G_ReloadLevel(void)$/;"	f
G_Responder	src/g_game.c	/^dboolean G_Responder(event_t *ev) {$/;"	f
G_RestartLevel	src/g_game.c	/^void G_RestartLevel(void) {$/;"	f
G_SAVE_H__	src/g_save.h	25;"	d
G_SaveGame	src/g_game.c	/^void G_SaveGame(int slot, char *description) {$/;"	f
G_SaveGameName	src/g_game.c	/^int G_SaveGameName(char *name, size_t size, int slot, dboolean demoplayback) {$/;"	f
G_SaveRestoreGameOptions	src/g_game.c	/^void G_SaveRestoreGameOptions(int save) {$/;"	f
G_SecretExitLevel	src/g_game.c	/^void G_SecretExitLevel(void) {$/;"	f
G_SetDemoFooter	src/r_demo.c	/^void G_SetDemoFooter(const char *filename, wadtbl_t *wadtbl)$/;"	f
G_SetFastParms	src/g_game.c	/^void G_SetFastParms(int fast_pending) {$/;"	f
G_SetSpeed	src/g_game.c	/^void G_SetSpeed(void) {$/;"	f
G_Signature	src/g_save.c	/^static uint_64_t G_Signature(void) {$/;"	f	file:
G_SkipDemoCheck	src/e6y.c	/^void G_SkipDemoCheck(void)$/;"	f
G_SkipDemoStart	src/e6y.c	/^void G_SkipDemoStart(void)$/;"	f
G_SkipDemoStop	src/e6y.c	/^void G_SkipDemoStop(void)$/;"	f
G_Ticker	src/g_game.c	/^void G_Ticker(void) {$/;"	f
G_UpdateAverageSaveSize	src/g_save.c	/^void G_UpdateAverageSaveSize(int new_size) {$/;"	f
G_UpdateSignature	src/g_save.c	/^static uint_64_t G_UpdateSignature(uint_64_t s, const char *name) {$/;"	f	file:
G_WorldDone	src/g_game.c	/^void G_WorldDone(void) {$/;"	f
G_WriteDemoFooter	src/r_demo.c	/^void G_WriteDemoFooter(FILE *file)$/;"	f
G_WriteDemoTiccmd	src/g_game.c	/^void G_WriteDemoTiccmd(ticcmd_t *cmd) {$/;"	f
G_WriteOptions	src/g_game.c	/^void G_WriteOptions(byte game_options[]) {$/;"	f
G_WriteSaveData	src/g_save.c	/^void G_WriteSaveData(pbuf_t *savebuffer) {$/;"	f
G_X	src/m_menu.c	3021;"	d	file:
G_X2	src/m_menu.c	3024;"	d	file:
G_Y	src/m_menu.c	3023;"	d	file:
GameMission_t	src/doomdef.h	/^} GameMission_t;$/;"	t	typeref:enum:__anon44
GameMode_t	src/doomdef.h	/^} GameMode_t;$/;"	t	typeref:enum:__anon43
GenCeilingBase	src/p_spec.h	85;"	d
GenCrusherBase	src/p_spec.h	90;"	d
GenDoorBase	src/p_spec.h	86;"	d
GenEnd	src/p_spec.h	83;"	d
GenFloorBase	src/p_spec.h	84;"	d
GenLiftBase	src/p_spec.h	88;"	d
GenLockedBase	src/p_spec.h	87;"	d
GenLookup	src/r_main.c	/^static void GenLookup(short *lookup1, short *lookup2, int size, int max, int step)$/;"	f	file:
GenStairsBase	src/p_spec.h	89;"	d
GeneralDef	src/m_menu.c	/^menu_t GeneralDef =                                           \/\/ killough 10\/98$/;"	v
Generic_Setup	src/m_menu.c	/^menuitem_t Generic_Setup[] =$/;"	v
Get2DLight	src/gl_light.c	/^  gld_Calc2DLightLevel_f Get2DLight;$/;"	m	struct:__anon106	file:
GetBestFake	src/gl_missingtexture.c	/^sector_t* GetBestFake(sector_t *sector, int ceiling, int validcount)$/;"	f
GetChatState	src/st_stuff.h	/^  GetChatState$/;"	e	enum:__anon325
GetColorForName	src/TEXTSCREEN/txt_io.c	/^static int GetColorForName(char *s)$/;"	f	file:
GetComments	src/PCRELIB/pcre_scanner.cc	/^void Scanner::GetComments(int start, int end, vector<StringPiece> *ranges) {$/;"	f	class:pcrecpp::Scanner
GetFirstMap	src/d_main.c	/^void GetFirstMap(int *ep, int *map)$/;"	f
GetFog	src/gl_light.c	/^  gld_CalcFogDensity_f GetFog;$/;"	m	struct:__anon106	file:
GetFreeVoice	src/MUSIC/oplplayer.c	/^static opl_voice_t *GetFreeVoice(void)$/;"	f	file:
GetFullPath	src/e6y.c	/^int GetFullPath(const char* FileName, const char* ext, char *Buffer, size_t BufferLength)$/;"	f
GetLight	src/gl_light.c	/^  gld_CalcLightLevel_f GetLight;$/;"	m	struct:__anon106	file:
GetLightTable	src/r_segs.c	/^const lighttable_t** GetLightTable(int lightlevel)$/;"	f
GetMIDIChannel	src/mus2mid.c	/^static int GetMIDIChannel(int mus_channel)$/;"	f	file:
GetMemoryValue	src/g_overflow.c	/^static int GetMemoryValue(unsigned int offset, void *value, int size)$/;"	f	file:
GetMouseLook	src/e6y.c	/^dboolean GetMouseLook(void)$/;"	f
GetMsgProc	src/e6y_launcher.c	/^LRESULT CALLBACK GetMsgProc(int nCode, WPARAM wParam, LPARAM lParam)$/;"	f
GetNextComments	src/PCRELIB/pcre_scanner.cc	/^void Scanner::GetNextComments(vector<StringPiece> *ranges) {$/;"	f	class:pcrecpp::Scanner
GetOffset	src/p_setup.c	/^static int GetOffset(vertex_t *v1, vertex_t *v2)$/;"	f	file:
GetOneOptionResult	src/PCRELIB/pcrecpp_unittest.cc	/^static void GetOneOptionResult($/;"	f	file:
GetPackageVersion	src/g_save.c	/^static unsigned int GetPackageVersion(void) {$/;"	f	file:
GetPairForSwitchTexture	src/p_switch.c	/^int GetPairForSwitchTexture(side_t *side)$/;"	f
GetSectorAtNullAddress	src/g_overflow.c	/^sector_t* GetSectorAtNullAddress(void)$/;"	f
GetTexelDistance	src/p_setup.c	/^static float GetTexelDistance(int dx, int dy)$/;"	f	file:
Get_TextSpeed	src/f_finale.c	/^static float Get_TextSpeed(void)$/;"	f	file:
GivenDamageApply	src/hu_tracers.c	/^void GivenDamageApply(tracertype_t index)$/;"	f
GivenDamageReset	src/hu_tracers.c	/^void GivenDamageReset(tracertype_t index)$/;"	f
GlobalReplace	src/PCRELIB/pcrecpp.cc	/^int RE::GlobalReplace(const StringPiece& rewrite,$/;"	f	class:pcrecpp::RE
GunMany	src/p_spec.h	/^  GunMany,$/;"	e	enum:__anon238
GunOnce	src/p_spec.h	/^  GunOnce,$/;"	e	enum:__anon238
HAVE_BCOPY	src/PCRELIB/config.h	80;"	d
HAVE_DECL_SYS_SIGLIST	src/MAC/config.h	121;"	d
HAVE_GETOPT	src/MAC/config.h	117;"	d
HAVE_INET_ATON	src/MAC/config.h	103;"	d
HAVE_INET_NTOP	src/MAC/config.h	104;"	d
HAVE_INET_PTON	src/MAC/config.h	105;"	d
HAVE_IPv6	src/MAC/config.h	113;"	d
HAVE_LIBKERN_OSBYTEORDER_H	src/MAC/config.h	135;"	d
HAVE_LIBPCREPOSIX	src/r_demo.c	201;"	d	file:
HAVE_LIBSDL_IMAGE	src/MAC/config.h	81;"	d
HAVE_MALLOC	src/SDL/SDL_win32_main.c	45;"	d	file:
HAVE_MEMMOVE	src/PCRELIB/config.h	74;"	d
HAVE_MKSTEMPS	src/MAC/config.h	111;"	d
HAVE_NET	src/MAC/config.h	77;"	d
HAVE_OWN_MUSIC	src/MAC/config.h	136;"	d
HAVE_SETSOCKOPT	src/MAC/config.h	106;"	d
HAVE_SNPRINTF	src/MAC/config.h	108;"	d
HAVE_STRERROR	src/PCRELIB/config.h	73;"	d
HAVE_STRLCAT	src/SDL/SDL_win32_main.c	49;"	d	file:
HAVE_STRLCPY	src/SDL/SDL_win32_main.c	48;"	d	file:
HAVE_STRLEN	src/SDL/SDL_win32_main.c	46;"	d	file:
HAVE_STRRCHR	src/SDL/SDL_win32_main.c	47;"	d	file:
HAVE_SYS_WAIT_H	src/MAC/config.h	116;"	d
HAVE_UNISTD_H	src/MAC/config.h	115;"	d
HAVE_VSNPRINTF	src/MAC/config.h	109;"	d
HEADER_CHUNK_ID	src/MUSIC/midifile.c	42;"	d	file:
HEADER_SIZE	src/z_zone.c	/^static const size_t HEADER_SIZE = (sizeof(memblock_t)+CHUNK_SIZE-1) & ~(CHUNK_SIZE-1);$/;"	v	file:
HEAPDUMP	src/MAC/config.h	53;"	d
HEAPDUMP_DIR	src/MAC/config.h	139;"	d
HEAPDUMP_DIR	src/z_zone.c	146;"	d	file:
HEIGHTBITS	src/r_segs.c	297;"	d	file:
HEIGHTUNIT	src/r_segs.c	298;"	d	file:
HIBYTE	src/gl_gamma.c	38;"	d	file:
HIGHRES	src/MAC/config.h	90;"	d
HQScaleHelper	src/gl_hqresize.c	/^static unsigned char *HQScaleHelper( void (*scaleNxFunction) ( unsigned int* , unsigned int* , int , int, int, int),$/;"	f	file:
HULIB_H__	src/hu_lib.h	25;"	d
HUSTR_1	src/d_englsh.h	178;"	d
HUSTR_10	src/d_englsh.h	187;"	d
HUSTR_11	src/d_englsh.h	188;"	d
HUSTR_12	src/d_englsh.h	190;"	d
HUSTR_13	src/d_englsh.h	191;"	d
HUSTR_14	src/d_englsh.h	192;"	d
HUSTR_15	src/d_englsh.h	193;"	d
HUSTR_16	src/d_englsh.h	194;"	d
HUSTR_17	src/d_englsh.h	195;"	d
HUSTR_18	src/d_englsh.h	196;"	d
HUSTR_19	src/d_englsh.h	197;"	d
HUSTR_2	src/d_englsh.h	179;"	d
HUSTR_20	src/d_englsh.h	198;"	d
HUSTR_21	src/d_englsh.h	200;"	d
HUSTR_22	src/d_englsh.h	201;"	d
HUSTR_23	src/d_englsh.h	202;"	d
HUSTR_24	src/d_englsh.h	203;"	d
HUSTR_25	src/d_englsh.h	204;"	d
HUSTR_26	src/d_englsh.h	205;"	d
HUSTR_27	src/d_englsh.h	206;"	d
HUSTR_28	src/d_englsh.h	207;"	d
HUSTR_29	src/d_englsh.h	208;"	d
HUSTR_3	src/d_englsh.h	180;"	d
HUSTR_30	src/d_englsh.h	209;"	d
HUSTR_31	src/d_englsh.h	211;"	d
HUSTR_32	src/d_englsh.h	212;"	d
HUSTR_33	src/d_englsh.h	213;"	d
HUSTR_4	src/d_englsh.h	181;"	d
HUSTR_5	src/d_englsh.h	182;"	d
HUSTR_6	src/d_englsh.h	183;"	d
HUSTR_7	src/d_englsh.h	184;"	d
HUSTR_8	src/d_englsh.h	185;"	d
HUSTR_9	src/d_englsh.h	186;"	d
HUSTR_CHATMACRO0	src/d_englsh.h	296;"	d
HUSTR_CHATMACRO1	src/d_englsh.h	287;"	d
HUSTR_CHATMACRO2	src/d_englsh.h	288;"	d
HUSTR_CHATMACRO3	src/d_englsh.h	289;"	d
HUSTR_CHATMACRO4	src/d_englsh.h	290;"	d
HUSTR_CHATMACRO5	src/d_englsh.h	291;"	d
HUSTR_CHATMACRO6	src/d_englsh.h	292;"	d
HUSTR_CHATMACRO7	src/d_englsh.h	293;"	d
HUSTR_CHATMACRO8	src/d_englsh.h	294;"	d
HUSTR_CHATMACRO9	src/d_englsh.h	295;"	d
HUSTR_E1M1	src/d_englsh.h	138;"	d
HUSTR_E1M2	src/d_englsh.h	139;"	d
HUSTR_E1M3	src/d_englsh.h	140;"	d
HUSTR_E1M4	src/d_englsh.h	141;"	d
HUSTR_E1M5	src/d_englsh.h	142;"	d
HUSTR_E1M6	src/d_englsh.h	143;"	d
HUSTR_E1M7	src/d_englsh.h	144;"	d
HUSTR_E1M8	src/d_englsh.h	145;"	d
HUSTR_E1M9	src/d_englsh.h	146;"	d
HUSTR_E2M1	src/d_englsh.h	148;"	d
HUSTR_E2M2	src/d_englsh.h	149;"	d
HUSTR_E2M3	src/d_englsh.h	150;"	d
HUSTR_E2M4	src/d_englsh.h	151;"	d
HUSTR_E2M5	src/d_englsh.h	152;"	d
HUSTR_E2M6	src/d_englsh.h	153;"	d
HUSTR_E2M7	src/d_englsh.h	154;"	d
HUSTR_E2M8	src/d_englsh.h	155;"	d
HUSTR_E2M9	src/d_englsh.h	156;"	d
HUSTR_E3M1	src/d_englsh.h	158;"	d
HUSTR_E3M2	src/d_englsh.h	159;"	d
HUSTR_E3M3	src/d_englsh.h	160;"	d
HUSTR_E3M4	src/d_englsh.h	161;"	d
HUSTR_E3M5	src/d_englsh.h	162;"	d
HUSTR_E3M6	src/d_englsh.h	163;"	d
HUSTR_E3M7	src/d_englsh.h	164;"	d
HUSTR_E3M8	src/d_englsh.h	165;"	d
HUSTR_E3M9	src/d_englsh.h	166;"	d
HUSTR_E4M1	src/d_englsh.h	168;"	d
HUSTR_E4M2	src/d_englsh.h	169;"	d
HUSTR_E4M3	src/d_englsh.h	170;"	d
HUSTR_E4M4	src/d_englsh.h	171;"	d
HUSTR_E4M5	src/d_englsh.h	172;"	d
HUSTR_E4M6	src/d_englsh.h	173;"	d
HUSTR_E4M7	src/d_englsh.h	174;"	d
HUSTR_E4M8	src/d_englsh.h	175;"	d
HUSTR_E4M9	src/d_englsh.h	176;"	d
HUSTR_KEYBROWN	src/d_englsh.h	316;"	d
HUSTR_KEYGREEN	src/d_englsh.h	314;"	d
HUSTR_KEYINDIGO	src/d_englsh.h	315;"	d
HUSTR_KEYRED	src/d_englsh.h	317;"	d
HUSTR_MESSAGESENT	src/d_englsh.h	304;"	d
HUSTR_MSGU	src/d_englsh.h	136;"	d
HUSTR_PLRBROWN	src/d_englsh.h	311;"	d
HUSTR_PLRGREEN	src/d_englsh.h	309;"	d
HUSTR_PLRINDIGO	src/d_englsh.h	310;"	d
HUSTR_PLRRED	src/d_englsh.h	312;"	d
HUSTR_TALKTOSELF1	src/d_englsh.h	298;"	d
HUSTR_TALKTOSELF2	src/d_englsh.h	299;"	d
HUSTR_TALKTOSELF3	src/d_englsh.h	300;"	d
HUSTR_TALKTOSELF4	src/d_englsh.h	301;"	d
HUSTR_TALKTOSELF5	src/d_englsh.h	302;"	d
HU_BROADCAST	src/hu_stuff.h	45;"	d
HU_CENTERMSGX	src/e6y.h	34;"	d
HU_CENTERMSGY	src/e6y.h	35;"	d
HU_CHAT_H__	src/hu_chat.h	25;"	d
HU_CONS_H__	src/hu_cons.h	25;"	d
HU_COORDX	src/hu_stuff.c	100;"	d	file:
HU_COORDXYZ_Y	src/hu_stuff.c	102;"	d	file:
HU_COORDX_Y	src/hu_stuff.c	103;"	d	file:
HU_COORDY_Y	src/hu_stuff.c	104;"	d	file:
HU_COORDZ_Y	src/hu_stuff.c	105;"	d	file:
HU_CROSSHAIRS	src/hu_stuff.h	54;"	d
HU_ChatActive	src/hu_stuff.c	/^bool HU_ChatActive(void) {$/;"	f
HU_ChatWidgetActivate	src/hu_chat.c	/^void HU_ChatWidgetActivate(chat_widget_t *cw) {$/;"	f
HU_ChatWidgetActive	src/hu_chat.c	/^bool HU_ChatWidgetActive(chat_widget_t *cw) {$/;"	f
HU_ChatWidgetClear	src/hu_chat.c	/^void HU_ChatWidgetClear(chat_widget_t *cw) {$/;"	f
HU_ChatWidgetDeactivate	src/hu_chat.c	/^void HU_ChatWidgetDeactivate(chat_widget_t *cw) {$/;"	f
HU_ChatWidgetDrawer	src/hu_chat.c	/^void HU_ChatWidgetDrawer(chat_widget_t *cw, void *render_context) {$/;"	f
HU_ChatWidgetGetInputText	src/hu_chat.c	/^char* HU_ChatWidgetGetInputText(chat_widget_t *cw) {$/;"	f
HU_ChatWidgetGetTextLength	src/hu_chat.c	/^size_t HU_ChatWidgetGetTextLength(chat_widget_t *cw) {$/;"	f
HU_ChatWidgetMoveToBottom	src/hu_chat.c	/^void HU_ChatWidgetMoveToBottom(chat_widget_t *cw, int baseline) {$/;"	f
HU_ChatWidgetNew	src/hu_chat.c	/^chat_widget_t* HU_ChatWidgetNew(void *render_context,$/;"	f
HU_ChatWidgetReset	src/hu_chat.c	/^void HU_ChatWidgetReset(chat_widget_t *cw, void *render_context) {$/;"	f
HU_ChatWidgetResponder	src/hu_chat.c	/^bool HU_ChatWidgetResponder(chat_widget_t *cw, event_t *ev) {$/;"	f
HU_ChatWidgetSetBGColor	src/hu_chat.c	/^void HU_ChatWidgetSetBGColor(chat_widget_t *cw, hu_color_t bg_color) {$/;"	f
HU_ChatWidgetSetFGColor	src/hu_chat.c	/^void HU_ChatWidgetSetFGColor(chat_widget_t *cw, hu_color_t fg_color) {$/;"	f
HU_ChatWidgetSetHeightByLines	src/hu_chat.c	/^void HU_ChatWidgetSetHeightByLines(chat_widget_t *cw, int lines) {$/;"	f
HU_ChatWidgetSetPosition	src/hu_chat.c	/^void HU_ChatWidgetSetPosition(chat_widget_t *cw, int x, int y) {$/;"	f
HU_ConsoleWidgetActive	src/hu_cons.c	/^bool HU_ConsoleWidgetActive(console_widget_t *cons) {$/;"	f
HU_ConsoleWidgetBanish	src/hu_cons.c	/^void HU_ConsoleWidgetBanish(console_widget_t *cons) {$/;"	f
HU_ConsoleWidgetDrawer	src/hu_cons.c	/^void HU_ConsoleWidgetDrawer(console_widget_t *cons, void *render_context) {$/;"	f
HU_ConsoleWidgetEcho	src/hu_cons.c	/^void HU_ConsoleWidgetEcho(console_widget_t *cons, const char *message) {$/;"	f
HU_ConsoleWidgetGetInputText	src/hu_cons.c	/^char* HU_ConsoleWidgetGetInputText(console_widget_t *cons) {$/;"	f
HU_ConsoleWidgetMEcho	src/hu_cons.c	/^void HU_ConsoleWidgetMEcho(console_widget_t *cons, const char *message) {$/;"	f
HU_ConsoleWidgetMPrintf	src/hu_cons.c	/^void HU_ConsoleWidgetMPrintf(console_widget_t *cons, const char *fmt, ...) {$/;"	f
HU_ConsoleWidgetMVPrintf	src/hu_cons.c	/^void HU_ConsoleWidgetMVPrintf(console_widget_t *cons, const char *fmt,$/;"	f
HU_ConsoleWidgetMWrite	src/hu_cons.c	/^void HU_ConsoleWidgetMWrite(console_widget_t *cons, const char *message) {$/;"	f
HU_ConsoleWidgetNew	src/hu_cons.c	/^console_widget_t* HU_ConsoleWidgetNew(void *render_context,$/;"	f
HU_ConsoleWidgetPrintf	src/hu_cons.c	/^void HU_ConsoleWidgetPrintf(console_widget_t *cons, const char *fmt, ...) {$/;"	f
HU_ConsoleWidgetReset	src/hu_cons.c	/^void HU_ConsoleWidgetReset(console_widget_t *cons, void *render_context) {$/;"	f
HU_ConsoleWidgetResponder	src/hu_cons.c	/^bool HU_ConsoleWidgetResponder(console_widget_t *cons, event_t *ev) {$/;"	f
HU_ConsoleWidgetScrollDown	src/hu_cons.c	/^void HU_ConsoleWidgetScrollDown(console_widget_t *cons) {$/;"	f
HU_ConsoleWidgetScrollUp	src/hu_cons.c	/^void HU_ConsoleWidgetScrollUp(console_widget_t *cons) {$/;"	f
HU_ConsoleWidgetSetFullScreen	src/hu_cons.c	/^void HU_ConsoleWidgetSetFullScreen(console_widget_t *cons) {$/;"	f
HU_ConsoleWidgetSummon	src/hu_cons.c	/^void HU_ConsoleWidgetSummon(console_widget_t *cons) {$/;"	f
HU_ConsoleWidgetTicker	src/hu_cons.c	/^void HU_ConsoleWidgetTicker(console_widget_t *cons) {$/;"	f
HU_ConsoleWidgetToggleScroll	src/hu_cons.c	/^void HU_ConsoleWidgetToggleScroll(console_widget_t *cons) {$/;"	f
HU_ConsoleWidgetVPrintf	src/hu_cons.c	/^void HU_ConsoleWidgetVPrintf(console_widget_t *cons, const char *fmt,$/;"	f
HU_ConsoleWidgetWrite	src/hu_cons.c	/^void HU_ConsoleWidgetWrite(console_widget_t *cons, const char *message) {$/;"	f
HU_DeactivateChat	src/hu_stuff.c	/^void HU_DeactivateChat(void) {$/;"	f
HU_DrawDemoProgress	src/e6y.c	/^int HU_DrawDemoProgress(int force)$/;"	f
HU_Drawer	src/hu_stuff.c	/^void HU_Drawer(void) {$/;"	f
HU_Erase	src/hu_stuff.c	/^void HU_Erase(void) {$/;"	f
HU_FONT	src/hu_stuff.h	36;"	d
HU_FONTEND	src/hu_stuff.h	40;"	d
HU_FONTSIZE	src/hu_stuff.h	43;"	d
HU_FONTSTART	src/hu_stuff.h	39;"	d
HU_FONT_FILE	src/hu_stuff.h	33;"	d
HU_GAPY	src/hu_stuff.c	116;"	d	file:
HU_GetAmmoColor	src/hu_stuff.c	/^int HU_GetAmmoColor(int ammo, int fullammo, int def, int tofire, dboolean backpack)$/;"	f
HU_GetArmorColor	src/hu_stuff.c	/^int HU_GetArmorColor(int armor, int def)$/;"	f
HU_GetHealthColor	src/hu_stuff.c	/^int HU_GetHealthColor(int health, int def)$/;"	f
HU_HUDADDX	src/e6y.h	32;"	d
HU_HUDADDX_D	src/e6y.h	37;"	d
HU_HUDADDY	src/e6y.h	33;"	d
HU_HUDADDY_D	src/e6y.h	38;"	d
HU_INPUTX	src/hu_stuff.c	118;"	d	file:
HU_INPUTY	src/hu_stuff.c	119;"	d	file:
HU_INPUT_H__	src/hu_input.h	25;"	d
HU_Init	src/hu_stuff.c	/^void HU_Init(void) {$/;"	f
HU_InputWidgetClear	src/hu_input.c	/^void HU_InputWidgetClear(input_widget_t *iw) {$/;"	f
HU_InputWidgetDrawer	src/hu_input.c	/^void HU_InputWidgetDrawer(input_widget_t *iw, void *render_context) {$/;"	f
HU_InputWidgetGetLayoutSize	src/hu_input.c	/^void HU_InputWidgetGetLayoutSize(input_widget_t *iw, int *width, int *height) {$/;"	f
HU_InputWidgetGetPosition	src/hu_input.c	/^void HU_InputWidgetGetPosition(input_widget_t *iw, int *x, int *y) {$/;"	f
HU_InputWidgetGetSize	src/hu_input.c	/^void HU_InputWidgetGetSize(input_widget_t *iw, int *width, int *height) {$/;"	f
HU_InputWidgetGetText	src/hu_input.c	/^char* HU_InputWidgetGetText(input_widget_t *iw) {$/;"	f
HU_InputWidgetGetTextLength	src/hu_input.c	/^size_t HU_InputWidgetGetTextLength(input_widget_t *iw) {$/;"	f
HU_InputWidgetNew	src/hu_input.c	/^input_widget_t* HU_InputWidgetNew(void *render_context, int x, int y,$/;"	f
HU_InputWidgetRebuild	src/hu_input.c	/^void HU_InputWidgetRebuild(input_widget_t *iw, void *render_context) {$/;"	f
HU_InputWidgetReset	src/hu_input.c	/^void HU_InputWidgetReset(input_widget_t *iw, void *render_context) {$/;"	f
HU_InputWidgetResponder	src/hu_input.c	/^bool HU_InputWidgetResponder(input_widget_t *iw, event_t *ev) {$/;"	f
HU_InputWidgetSetBGColor	src/hu_input.c	/^void HU_InputWidgetSetBGColor(input_widget_t *iw, hu_color_t bg_color) {$/;"	f
HU_InputWidgetSetCursorColor	src/hu_input.c	/^void HU_InputWidgetSetCursorColor(input_widget_t *iw, hu_color_t curs_color) {$/;"	f
HU_InputWidgetSetFGColor	src/hu_input.c	/^void HU_InputWidgetSetFGColor(input_widget_t *iw, hu_color_t fg_color) {$/;"	f
HU_InputWidgetSetFont	src/hu_input.c	/^void HU_InputWidgetSetFont(input_widget_t *iw, const char *font) { $/;"	f
HU_InputWidgetSetHeightByLines	src/hu_input.c	/^void HU_InputWidgetSetHeightByLines(input_widget_t *iw, int lines) {$/;"	f
HU_InputWidgetSetPosition	src/hu_input.c	/^void HU_InputWidgetSetPosition(input_widget_t *iw, int x, int y) {$/;"	f
HU_InputWidgetSetSize	src/hu_input.c	/^void HU_InputWidgetSetSize(input_widget_t *iw, int width, int height) {$/;"	f
HU_LoadHUDDefs	src/hu_stuff.c	/^void HU_LoadHUDDefs(void)$/;"	f
HU_MAP_ITEMS_Y	src/hu_stuff.c	111;"	d	file:
HU_MAP_MONSTERS_Y	src/hu_stuff.c	109;"	d	file:
HU_MAP_SECRETS_Y	src/hu_stuff.c	110;"	d	file:
HU_MAP_STAT_X	src/hu_stuff.c	107;"	d	file:
HU_MAP_STAT_Y	src/hu_stuff.c	108;"	d	file:
HU_MAP_TIME_Y	src/hu_stuff.c	112;"	d	file:
HU_MAP_TOTALTIME_Y	src/hu_stuff.c	113;"	d	file:
HU_MAXLINELENGTH	src/hu_lib.h	37;"	d
HU_MAXLINES	src/hu_lib.h	36;"	d
HU_MAXMESSAGES	src/hu_lib.h	40;"	d
HU_MSGHEIGHT	src/hu_stuff.h	50;"	d
HU_MSGTIMEOUT	src/hu_stuff.h	52;"	d
HU_MSGWIDTH	src/hu_stuff.h	49;"	d
HU_MSGX	src/hu_stuff.h	47;"	d
HU_MSGY	src/hu_stuff.h	48;"	d
HU_MSG_H__	src/hu_msg.h	25;"	d
HU_MessageWidgetClear	src/hu_msg.c	/^void HU_MessageWidgetClear(message_widget_t *mw) {$/;"	f
HU_MessageWidgetDrawer	src/hu_msg.c	/^void HU_MessageWidgetDrawer(message_widget_t *mw, void *render_context) {$/;"	f
HU_MessageWidgetEcho	src/hu_msg.c	/^void HU_MessageWidgetEcho(message_widget_t *mw, const char *message) {$/;"	f
HU_MessageWidgetGetLayoutSize	src/hu_msg.c	/^void HU_MessageWidgetGetLayoutSize(message_widget_t *mw, int *width, int *height) {$/;"	f
HU_MessageWidgetGetPosition	src/hu_msg.c	/^void HU_MessageWidgetGetPosition(message_widget_t *mw, int *x, int *y) {$/;"	f
HU_MessageWidgetGetSize	src/hu_msg.c	/^void HU_MessageWidgetGetSize(message_widget_t *mw, int *width, int *height) {$/;"	f
HU_MessageWidgetHasContent	src/hu_msg.c	/^bool HU_MessageWidgetHasContent(message_widget_t *mw) {$/;"	f
HU_MessageWidgetMEcho	src/hu_msg.c	/^void HU_MessageWidgetMEcho(message_widget_t *mw, const char *message) {$/;"	f
HU_MessageWidgetMPrintf	src/hu_msg.c	/^void HU_MessageWidgetMPrintf(message_widget_t *mw, const char *fmt, ...) {$/;"	f
HU_MessageWidgetMVPrintf	src/hu_msg.c	/^void HU_MessageWidgetMVPrintf(message_widget_t *mw, const char *fmt,$/;"	f
HU_MessageWidgetMWrite	src/hu_msg.c	/^void HU_MessageWidgetMWrite(message_widget_t *mw, const char *message) {$/;"	f
HU_MessageWidgetNew	src/hu_msg.c	/^message_widget_t* HU_MessageWidgetNew(void *render_context, int x, int y,$/;"	f
HU_MessageWidgetNewBuf	src/hu_msg.c	/^message_widget_t* HU_MessageWidgetNewBuf(void *render_context, void *buf,$/;"	f
HU_MessageWidgetPrintf	src/hu_msg.c	/^void HU_MessageWidgetPrintf(message_widget_t *mw, const char *fmt, ...) {$/;"	f
HU_MessageWidgetRebuild	src/hu_msg.c	/^void HU_MessageWidgetRebuild(message_widget_t *mw, void *render_context) {$/;"	f
HU_MessageWidgetReset	src/hu_msg.c	/^void HU_MessageWidgetReset(message_widget_t *mw, void *render_context) {$/;"	f
HU_MessageWidgetResponder	src/hu_msg.c	/^bool HU_MessageWidgetResponder(message_widget_t *mw, event_t *ev) {$/;"	f
HU_MessageWidgetRetract	src/hu_msg.c	/^void HU_MessageWidgetRetract(message_widget_t *mw) {$/;"	f
HU_MessageWidgetSetAlignBottom	src/hu_msg.c	/^void HU_MessageWidgetSetAlignBottom(message_widget_t *mw, bool align_bottom) {$/;"	f
HU_MessageWidgetSetBGColor	src/hu_msg.c	/^void HU_MessageWidgetSetBGColor(message_widget_t *mw, hu_color_t bg_color) {$/;"	f
HU_MessageWidgetSetBuf	src/hu_msg.c	/^void HU_MessageWidgetSetBuf(message_widget_t *mw, void *buf) {$/;"	f
HU_MessageWidgetSetFGColor	src/hu_msg.c	/^void HU_MessageWidgetSetFGColor(message_widget_t *mw, hu_color_t fg_color) {$/;"	f
HU_MessageWidgetSetFont	src/hu_msg.c	/^void HU_MessageWidgetSetFont(message_widget_t *mw, const char *font) { $/;"	f
HU_MessageWidgetSetHeightByLines	src/hu_msg.c	/^void HU_MessageWidgetSetHeightByLines(message_widget_t *mw, int lines) {$/;"	f
HU_MessageWidgetSetPosition	src/hu_msg.c	/^void HU_MessageWidgetSetPosition(message_widget_t *mw, int x, int y) {$/;"	f
HU_MessageWidgetSetRetractable	src/hu_msg.c	/^void HU_MessageWidgetSetRetractable(message_widget_t *mw, bool retractable) {$/;"	f
HU_MessageWidgetSetScrollAmount	src/hu_msg.c	/^void HU_MessageWidgetSetScrollAmount(message_widget_t *mw, int scroll_amount) {$/;"	f
HU_MessageWidgetSetScrollable	src/hu_msg.c	/^void HU_MessageWidgetSetScrollable(message_widget_t *mw, bool scrollable) {$/;"	f
HU_MessageWidgetSetSize	src/hu_msg.c	/^void HU_MessageWidgetSetSize(message_widget_t *mw, int width, int height) {$/;"	f
HU_MessageWidgetTextAppended	src/hu_msg.c	/^void HU_MessageWidgetTextAppended(message_widget_t *mw) {$/;"	f
HU_MessageWidgetTicker	src/hu_msg.c	/^void HU_MessageWidgetTicker(message_widget_t *mw) {$/;"	f
HU_MessageWidgetVPrintf	src/hu_msg.c	/^void HU_MessageWidgetVPrintf(message_widget_t *mw, const char *fmt,$/;"	f
HU_MessageWidgetWrite	src/hu_msg.c	/^void HU_MessageWidgetWrite(message_widget_t *mw, const char *message) {$/;"	f
HU_MoveHud	src/hu_stuff.c	/^void HU_MoveHud(int force)$/;"	f
HU_NextHud	src/hu_stuff.c	/^void HU_NextHud(void) {$/;"	f
HU_REFRESHSPACING	src/hu_lib.h	38;"	d
HU_Responder	src/hu_stuff.c	/^dboolean HU_Responder(event_t *ev) {$/;"	f
HU_STUFF_H__	src/hu_stuff.h	25;"	d
HU_SetLumpTrans	src/hu_stuff.c	/^static void HU_SetLumpTrans(const char *name)$/;"	f	file:
HU_Start	src/hu_stuff.c	/^void HU_Start(void) {$/;"	f
HU_Stop	src/hu_stuff.c	/^static void HU_Stop(void) {$/;"	f	file:
HU_TITLE	src/hu_stuff.c	87;"	d	file:
HU_TITLE2	src/hu_stuff.c	88;"	d	file:
HU_TITLEC	src/hu_stuff.c	91;"	d	file:
HU_TITLEP	src/hu_stuff.c	89;"	d	file:
HU_TITLET	src/hu_stuff.c	90;"	d	file:
HU_TITLEX	src/hu_stuff.c	92;"	d	file:
HU_TITLEY	src/hu_stuff.c	96;"	d	file:
HU_TRACERS_H__	src/hu_tracers.h	25;"	d
HU_TRACERX	src/hu_stuff.c	121;"	d	file:
HU_TRACERY	src/hu_stuff.c	122;"	d	file:
HU_Ticker	src/hu_stuff.c	/^void HU_Ticker(void) {$/;"	f
HU_UNIFONT	src/hu_stuff.h	37;"	d
HU_UNIFONT_FILE	src/hu_stuff.h	34;"	d
HU_draw_crosshair	src/hu_stuff.c	/^void HU_draw_crosshair(void)$/;"	f
HU_init_crosshair	src/hu_stuff.c	/^void HU_init_crosshair(void)$/;"	f
HU_widget_build_ammo	src/hu_stuff.c	/^void HU_widget_build_ammo(void)$/;"	f
HU_widget_build_ammo_big	src/hu_stuff.c	/^void HU_widget_build_ammo_big(void)$/;"	f
HU_widget_build_ammo_icon	src/hu_stuff.c	/^void HU_widget_build_ammo_icon(void)$/;"	f
HU_widget_build_armor	src/hu_stuff.c	/^void HU_widget_build_armor(void)$/;"	f
HU_widget_build_armor_big	src/hu_stuff.c	/^void HU_widget_build_armor_big(void)$/;"	f
HU_widget_build_armor_icon_big	src/hu_stuff.c	/^void HU_widget_build_armor_icon_big(void)$/;"	f
HU_widget_build_armor_icon_custom	src/hu_stuff.c	/^void HU_widget_build_armor_icon_custom(void)$/;"	f
HU_widget_build_armor_icon_small	src/hu_stuff.c	/^void HU_widget_build_armor_icon_small(void)$/;"	f
HU_widget_build_armor_percent	src/hu_stuff.c	/^void HU_widget_build_armor_percent(void)$/;"	f
HU_widget_build_func	src/hu_stuff.c	/^typedef void (*HU_widget_build_func)(void);$/;"	t	file:
HU_widget_build_gkeys	src/hu_stuff.c	/^void HU_widget_build_gkeys(void)$/;"	f
HU_widget_build_health	src/hu_stuff.c	/^void HU_widget_build_health(void)$/;"	f
HU_widget_build_health_big	src/hu_stuff.c	/^void HU_widget_build_health_big(void)$/;"	f
HU_widget_build_hudadd	src/hu_stuff.c	/^void HU_widget_build_hudadd(void)$/;"	f
HU_widget_build_keys	src/hu_stuff.c	/^void HU_widget_build_keys(void)$/;"	f
HU_widget_build_medict_icon_big	src/hu_stuff.c	/^void HU_widget_build_medict_icon_big(void)$/;"	f
HU_widget_build_medict_icon_custom	src/hu_stuff.c	/^void HU_widget_build_medict_icon_custom(void)$/;"	f
HU_widget_build_medict_icon_small	src/hu_stuff.c	/^void HU_widget_build_medict_icon_small(void)$/;"	f
HU_widget_build_medict_percent	src/hu_stuff.c	/^void HU_widget_build_medict_percent(void)$/;"	f
HU_widget_build_monsec	src/hu_stuff.c	/^void HU_widget_build_monsec(void)$/;"	f
HU_widget_build_weapon	src/hu_stuff.c	/^void HU_widget_build_weapon(void)$/;"	f
HU_widget_draw_ammo	src/hu_stuff.c	/^void HU_widget_draw_ammo(void)$/;"	f
HU_widget_draw_ammo_big	src/hu_stuff.c	/^void HU_widget_draw_ammo_big(void)$/;"	f
HU_widget_draw_ammo_icon	src/hu_stuff.c	/^void HU_widget_draw_ammo_icon(void)$/;"	f
HU_widget_draw_armor	src/hu_stuff.c	/^void HU_widget_draw_armor(void)$/;"	f
HU_widget_draw_armor_big	src/hu_stuff.c	/^void HU_widget_draw_armor_big(void)$/;"	f
HU_widget_draw_armor_icon_big	src/hu_stuff.c	/^void HU_widget_draw_armor_icon_big(void)$/;"	f
HU_widget_draw_armor_icon_custom	src/hu_stuff.c	/^void HU_widget_draw_armor_icon_custom(void)$/;"	f
HU_widget_draw_armor_icon_small	src/hu_stuff.c	/^void HU_widget_draw_armor_icon_small(void)$/;"	f
HU_widget_draw_armor_percent	src/hu_stuff.c	/^void HU_widget_draw_armor_percent(void)$/;"	f
HU_widget_draw_func	src/hu_stuff.c	/^typedef void (*HU_widget_draw_func)(void);$/;"	t	file:
HU_widget_draw_gkeys	src/hu_stuff.c	/^void HU_widget_draw_gkeys(void)$/;"	f
HU_widget_draw_health	src/hu_stuff.c	/^void HU_widget_draw_health(void)$/;"	f
HU_widget_draw_health_big	src/hu_stuff.c	/^void HU_widget_draw_health_big(void)$/;"	f
HU_widget_draw_hudadd	src/hu_stuff.c	/^void HU_widget_draw_hudadd(void)$/;"	f
HU_widget_draw_keys	src/hu_stuff.c	/^void HU_widget_draw_keys(void)$/;"	f
HU_widget_draw_medict_icon_big	src/hu_stuff.c	/^void HU_widget_draw_medict_icon_big(void)$/;"	f
HU_widget_draw_medict_icon_custom	src/hu_stuff.c	/^void HU_widget_draw_medict_icon_custom(void)$/;"	f
HU_widget_draw_medict_icon_small	src/hu_stuff.c	/^void HU_widget_draw_medict_icon_small(void)$/;"	f
HU_widget_draw_medict_percent	src/hu_stuff.c	/^void HU_widget_draw_medict_percent(void)$/;"	f
HU_widget_draw_monsec	src/hu_stuff.c	/^void HU_widget_draw_monsec(void)$/;"	f
HU_widget_draw_weapon	src/hu_stuff.c	/^void HU_widget_draw_weapon(void)$/;"	f
HUlib_addCharToTextLine	src/hu_lib.c	/^dboolean HUlib_addCharToTextLine(hu_textline_t *t, char ch)$/;"	f
HUlib_addLineToMText	src/hu_lib.c	/^static void HUlib_addLineToMText(hu_mtext_t *m)$/;"	f	file:
HUlib_addLineToSText	src/hu_lib.c	/^static void HUlib_addLineToSText(hu_stext_t* s)$/;"	f	file:
HUlib_addMessageToMText	src/hu_lib.c	/^void HUlib_addMessageToMText(hu_mtext_t *m, const char *prefix, const char *msg)$/;"	f
HUlib_addMessageToSText	src/hu_lib.c	/^void HUlib_addMessageToSText(hu_stext_t *s, const char *prefix, const char *msg)$/;"	f
HUlib_addPrefixToIText	src/hu_lib.c	/^void HUlib_addPrefixToIText(hu_itext_t *it, char *str)$/;"	f
HUlib_clearTextLine	src/hu_lib.c	/^void HUlib_clearTextLine(hu_textline_t* t)$/;"	f
HUlib_delCharFromIText	src/hu_lib.c	/^static void HUlib_delCharFromIText(hu_itext_t *it)$/;"	f	file:
HUlib_delCharFromTextLine	src/hu_lib.c	/^static dboolean HUlib_delCharFromTextLine(hu_textline_t* t)$/;"	f	file:
HUlib_drawIText	src/hu_lib.c	/^void HUlib_drawIText(hu_itext_t *it)$/;"	f
HUlib_drawMBg	src/hu_lib.c	/^void HUlib_drawMBg(int x, int y, int w, int h, const patchnum_t *bgp)$/;"	f
HUlib_drawMText	src/hu_lib.c	/^void HUlib_drawMText(hu_mtext_t *m)$/;"	f
HUlib_drawSText	src/hu_lib.c	/^void HUlib_drawSText(hu_stext_t* s)$/;"	f
HUlib_drawTextLine	src/hu_lib.c	/^void HUlib_drawTextLine(hu_textline_t *l, dboolean drawcursor)$/;"	f
HUlib_eraseIText	src/hu_lib.c	/^void HUlib_eraseIText(hu_itext_t *it)$/;"	f
HUlib_eraseMBg	src/hu_lib.c	/^static void HUlib_eraseMBg(hu_mtext_t *m)$/;"	f	file:
HUlib_eraseMText	src/hu_lib.c	/^void HUlib_eraseMText(hu_mtext_t *m)$/;"	f
HUlib_eraseSText	src/hu_lib.c	/^void HUlib_eraseSText(hu_stext_t* s)$/;"	f
HUlib_eraseTextLine	src/hu_lib.c	/^void HUlib_eraseTextLine(hu_textline_t* l)$/;"	f
HUlib_initIText	src/hu_lib.c	/^void HUlib_initIText(hu_itext_t *it, int x, int y, const patchnum_t *font,$/;"	f
HUlib_initMText	src/hu_lib.c	/^void HUlib_initMText(hu_mtext_t *m, int x, int y, int w, int h,$/;"	f
HUlib_initSText	src/hu_lib.c	/^void HUlib_initSText(hu_stext_t *s, int x, int y, int h,$/;"	f
HUlib_initTextLine	src/hu_lib.c	/^void HUlib_initTextLine(hu_textline_t* t, int x, int y,$/;"	f
HUlib_keyInIText	src/hu_lib.c	/^dboolean HUlib_keyInIText(hu_itext_t *it, unsigned char ch)$/;"	f
HUlib_resetIText	src/hu_lib.c	/^void HUlib_resetIText(hu_itext_t *it)$/;"	f
HUlib_setTextXCenter	src/hu_lib.c	/^void HUlib_setTextXCenter(hu_textline_t *t)$/;"	f
HWNDClient	src/e6y_launcher.c	/^  HWND HWNDClient;$/;"	m	struct:__anon68	file:
HWNDServer	src/e6y_launcher.c	/^  HWND HWNDServer;$/;"	m	struct:__anon68	file:
HasTrailingSlash	src/SDL/i_system.c	/^dboolean HasTrailingSlash(const char* dn)$/;"	f
HaveMouseLook	src/e6y.c	/^dboolean HaveMouseLook(void)$/;"	f
Header	src/MUSIC/madplayer.c	/^static struct mad_header Header;$/;"	v	typeref:struct:mad_header	file:
HelpDef	src/m_menu.c	/^menu_t HelpDef =           \/\/ killough 10\/98$/;"	v
HelpMenu	src/m_menu.c	/^menuitem_t HelpMenu[]=    \/\/ killough 10\/98$/;"	v
HelperThing	src/d_deh.c	/^int HelperThing = -1;     \/\/ in P_SpawnMapThing to substitute helper thing$/;"	v
I386_ASM	src/MAC/config.h	129;"	d
IMPLEMENT_BLOCK_MEMORY_ALLOC_ZONE	src/z_bmalloc.h	36;"	d
INFO_H__	src/info.h	25;"	d
INFRATICS	src/doomdef.h	/^  INFRATICS   = (120 * TICRATE),$/;"	e	enum:__anon52
INITSCALEMTOF	src/am_map.c	110;"	d	file:
INIT_DATA_DEST_2X	src/r_screenmultiply.c	38;"	d	file:
INIT_DATA_DEST_2X	src/r_screenmultiply.c	40;"	d	file:
INLINE	src/doomtype.h	94;"	d
INLINE	src/doomtype.h	96;"	d
INPUT_CURSOR_THICKNESS	src/hu_input.c	36;"	d	file:
INPUT_PROMPT_THICKNESS	src/hu_input.c	37;"	d	file:
INPUT_VALUE_TOO_LARGE_ERROR	src/cmp.c	/^  INPUT_VALUE_TOO_LARGE_ERROR,$/;"	e	enum:__anon7	file:
INSTRUMENTED	src/MAC/config.h	42;"	d
INTERP_CeilingPanning	src/r_defs.h	/^  int INTERP_CeilingPanning;$/;"	m	struct:__anon283
INTERP_CeilingPanning	src/r_fps.c	/^  INTERP_CeilingPanning$/;"	e	enum:__anon300	file:
INTERP_FloorPanning	src/r_defs.h	/^  int INTERP_FloorPanning;$/;"	m	struct:__anon283
INTERP_FloorPanning	src/r_fps.c	/^  INTERP_FloorPanning,$/;"	e	enum:__anon300	file:
INTERP_SectorCeiling	src/r_defs.h	/^  int INTERP_SectorCeiling;$/;"	m	struct:__anon283
INTERP_SectorCeiling	src/r_fps.c	/^  INTERP_SectorCeiling,$/;"	e	enum:__anon300	file:
INTERP_SectorFloor	src/r_defs.h	/^  int INTERP_SectorFloor;$/;"	m	struct:__anon283
INTERP_SectorFloor	src/r_fps.c	/^  INTERP_SectorFloor,$/;"	e	enum:__anon300	file:
INTERP_Vertex	src/r_fps.c	/^  INTERP_Vertex,$/;"	e	enum:__anon300	file:
INTERP_WallPanning	src/r_defs.h	/^  int INTERP_WallPanning;$/;"	m	struct:__anon284
INTERP_WallPanning	src/r_fps.c	/^  INTERP_WallPanning,$/;"	e	enum:__anon300	file:
INTS_PER_STATEBLOCK	src/PCRELIB/pcre_dfa_exec.c	173;"	d	file:
INVALID_FILE_ATTRIBUTES	src/PCRELIB/pcregrep.c	336;"	d	file:
INVALID_TYPE_ERROR	src/cmp.c	/^  INVALID_TYPE_ERROR,$/;"	e	enum:__anon7	file:
INVERSECOLORMAP	src/r_main.h	124;"	d
INVISTICS	src/doomdef.h	/^  INVISTICS   = (60  * TICRATE),$/;"	e	enum:__anon52
INVULNTICS	src/doomdef.h	/^  INVULNTICS  = (30  * TICRATE),$/;"	e	enum:__anon52
INVUL_BW	src/gl_intern.h	412;"	d
INVUL_CM	src/gl_intern.h	410;"	d
INVUL_INV	src/gl_intern.h	411;"	d
INV_ASPECT_RATIO	src/doomdef.h	93;"	d
IPPORT_RESERVED	src/i_network.h	43;"	d
IRONTICS	src/doomdef.h	/^  IRONTICS    = (60  * TICRATE)$/;"	e	enum:__anon52
IS_NEWLINE	src/PCRELIB/pcre_internal.h	144;"	d
IS_STRING	src/m_misc.h	96;"	d
ITEMQUESIZE	src/p_mobj.h	380;"	d
I_AllocPacket	src/SDL/i_network.c	/^UDP_PACKET* I_AllocPacket(int size) {$/;"	f
I_AnySoundStillPlaying	src/SDL/i_sound.c	/^dboolean I_AnySoundStillPlaying(void) {$/;"	f
I_BeginRead	src/m_file.c	/^static inline void I_BeginRead(void) {}$/;"	f	file:
I_CAPTURE_H__	src/i_capture.h	25;"	d
I_CalculateRes	src/SDL/i_video.c	/^void I_CalculateRes(int width, int height)$/;"	f
I_CaptureFinish	src/i_capture.c	/^void I_CaptureFinish (void)$/;"	f
I_CaptureFrame	src/i_capture.c	/^void I_CaptureFrame (void)$/;"	f
I_CapturePrep	src/i_capture.c	/^void I_CapturePrep (const char *fn)$/;"	f
I_CloseSocket	src/SDL/i_network.c	/^void I_CloseSocket(UDP_SOCKET sock) {$/;"	f
I_ClosestResolution	src/SDL/i_video.c	/^static void I_ClosestResolution (int *width, int *height, int flags)$/;"	f	file:
I_ConPrintString	src/lprintf.c	/^static int I_ConPrintString (const char *outline)$/;"	f	file:
I_ConTextAttr	src/lprintf.c	/^void I_ConTextAttr(unsigned char a)$/;"	f
I_ConnectToServer	src/SDL/i_network.c	/^int I_ConnectToServer(const char *serv) {$/;"	f
I_DebugSignalHandler	src/SDL/i_main.c	/^static void I_DebugSignalHandler(int s) {$/;"	f	file:
I_DemoExShutdown	src/r_demo.c	/^void I_DemoExShutdown(void)$/;"	f
I_Disconnect	src/SDL/i_network.c	/^void I_Disconnect(void) {$/;"	f
I_DoomExeDir	src/SDL/i_system.c	/^const char *I_DoomExeDir(void)$/;"	f
I_EndDisplay	src/SDL/i_system.c	/^void I_EndDisplay(void)$/;"	f
I_EndDoom	src/SDL/i_main.c	/^static void I_EndDoom(void)$/;"	f	file:
I_EndJoystick	src/SDL/i_joy.c	/^static void I_EndJoystick(void) {$/;"	f	file:
I_EndRead	src/m_file.c	/^static inline void I_EndRead(void) {}$/;"	f	file:
I_Error	src/d_server.c	/^void NORETURN I_Error(const char *error, ...) \/\/ killough 3\/20\/98: add const$/;"	f
I_Error	src/lprintf.c	/^void I_Error(const char *error, ...) {$/;"	f
I_ExeptionBegin	src/SDL/i_main.c	/^void I_ExeptionBegin(ExeptionsList_t exception_index)$/;"	f
I_ExeptionEnd	src/SDL/i_main.c	/^void I_ExeptionEnd(void)$/;"	f
I_ExeptionProcess	src/SDL/i_main.c	/^void I_ExeptionProcess(void)$/;"	f
I_FONT_H__	src/i_font.h	24;"	d
I_FillScreenResolutionsList	src/SDL/i_video.c	/^static void I_FillScreenResolutionsList(void) {$/;"	f	file:
I_FindAttr	src/e6y.h	291;"	d
I_FindClose	src/e6y_launcher.c	/^int I_FindClose (void *handle)$/;"	f
I_FindFile	src/SDL/i_system.c	/^char* I_FindFile(const char* wfname, const char* ext) {$/;"	f
I_FindFile2	src/SDL/i_system.c	/^const char* I_FindFile2(const char* wfname, const char* ext) {$/;"	f
I_FindFileInternal	src/SDL/i_system.c	/^char* I_FindFileInternal(const char* wfname, const char* ext) {$/;"	f
I_FindFirst	src/e6y_launcher.c	/^void *I_FindFirst (const char *filespec, findstate_t *fileinfo)$/;"	f
I_FindName	src/e6y.h	290;"	d
I_FindNext	src/e6y_launcher.c	/^int I_FindNext (void *handle, findstate_t *fileinfo)$/;"	f
I_FinishUpdate	src/SDL/i_video.c	/^void I_FinishUpdate(void) {$/;"	f
I_FreePacket	src/SDL/i_network.c	/^void I_FreePacket(UDP_PACKET *packet) {$/;"	f
I_GetEvent	src/SDL/i_video.c	/^static void I_GetEvent(void) {$/;"	f	file:
I_GetKeyString	src/SDL/i_video.c	/^const char* I_GetKeyString(int keycode) {$/;"	f
I_GetModeFromString	src/SDL/i_video.c	/^int I_GetModeFromString(const char *modestr)$/;"	f
I_GetPacket	src/SDL/i_network.c	/^size_t I_GetPacket(packet_header_t* buffer, size_t buflen) {$/;"	f
I_GetRandomTimeSeed	src/POSIX/i_system.c	/^unsigned long I_GetRandomTimeSeed(void) {                            $/;"	f
I_GetRandomTimeSeed	src/SDL/i_system.c	/^unsigned long I_GetRandomTimeSeed(void)$/;"	f
I_GetRenderContext	src/SDL/i_video.c	/^void* I_GetRenderContext(void) {$/;"	f
I_GetScreenResolution	src/SDL/i_video.c	/^void I_GetScreenResolution(void)$/;"	f
I_GetSfxLumpNum	src/SDL/i_sound.c	/^int I_GetSfxLumpNum(sfxinfo_t *sfx) {$/;"	f
I_GetTempDir	src/SDL/i_system.c	/^const char *I_GetTempDir(void)$/;"	f
I_GetTempDir	src/SDL/i_system.c	/^const char* I_GetTempDir(void)$/;"	f
I_GetTicks	src/SDL/i_system.c	/^uint32_t I_GetTicks(void) {$/;"	f
I_GetTime	src/SDL/i_main.c	/^int (*I_GetTime)(void) = I_GetTime_Error;$/;"	v
I_GetTimeFrac	src/SDL/i_system.c	/^fixed_t I_GetTimeFrac (void)$/;"	f
I_GetTime_Error	src/SDL/i_main.c	/^static int I_GetTime_Error(void)$/;"	f	file:
I_GetTime_FastDemo	src/SDL/i_main.c	/^static int  I_GetTime_FastDemo(void)$/;"	f	file:
I_GetTime_RealTime	src/POSIX/i_system.c	/^int I_GetTime_RealTime(void) {$/;"	f
I_GetTime_RealTime	src/SDL/i_system.c	/^int I_GetTime_RealTime(void) {$/;"	f
I_GetTime_SaveMS	src/SDL/i_system.c	/^void I_GetTime_SaveMS(void)$/;"	f
I_GetTime_Scale	src/SDL/i_main.c	/^static int_64_t I_GetTime_Scale = 1<<24;$/;"	v	file:
I_GetTime_Scaled	src/SDL/i_main.c	/^static int I_GetTime_Scaled(void)$/;"	f	file:
I_GetVersionString	src/POSIX/i_system.c	/^const char* I_GetVersionString(char *buf, size_t sz) {$/;"	f
I_GetVersionString	src/SDL/i_system.c	/^const char* I_GetVersionString(char* buf, size_t sz)$/;"	f
I_GrabScreen	src/SDL/i_sshot.c	/^unsigned char *I_GrabScreen (void)$/;"	f
I_GrabSound	src/SDL/i_sound.c	/^unsigned char* I_GrabSound (int len) {$/;"	f
I_Init	src/SDL/i_main.c	/^void I_Init(void)$/;"	f
I_Init2	src/SDL/i_main.c	/^void I_Init2(void)$/;"	f
I_InitBuffersRes	src/SDL/i_video.c	/^void I_InitBuffersRes(void)$/;"	f
I_InitGraphics	src/SDL/i_video.c	/^void I_InitGraphics(void)$/;"	f
I_InitInputs	src/SDL/i_video.c	/^static void I_InitInputs(void) {$/;"	f	file:
I_InitJoystick	src/SDL/i_joy.c	/^void I_InitJoystick(void) {$/;"	f
I_InitMusic	src/SDL/i_music.c	/^void I_InitMusic(void) {$/;"	f
I_InitNetwork	src/SDL/i_network.c	/^void I_InitNetwork(void) {$/;"	f
I_InitScreenResolution	src/SDL/i_video.c	/^void I_InitScreenResolution(void)$/;"	f
I_InitSockets	src/d_server.c	/^static void I_InitSockets(Uint16 port)$/;"	f	file:
I_InitSockets	src/d_server.c	/^static void I_InitSockets(int v4port)$/;"	f	file:
I_InitSound	src/SDL/i_sound.c	/^void I_InitSound(void) {$/;"	f
I_JOY_H__	src/i_joy.h	25;"	d
I_LoadCustomFonts	src/SDL/i_font.c	/^void I_LoadCustomFonts(void) {$/;"	f
I_MAIN_H__	src/i_main.h	25;"	d
I_MessageBox	src/e6y.c	/^int I_MessageBox(const char* text, unsigned int type)$/;"	f
I_NETWORK_H__	src/i_network.h	25;"	d
I_OPL_InitMusic	src/MUSIC/oplplayer.c	/^int I_OPL_InitMusic(int samplerate)$/;"	f
I_OPL_PauseSong	src/MUSIC/oplplayer.c	/^static void I_OPL_PauseSong(void)$/;"	f	file:
I_OPL_PlaySong	src/MUSIC/oplplayer.c	/^static void I_OPL_PlaySong(const void *handle, int looping)$/;"	f	file:
I_OPL_RegisterSong	src/MUSIC/oplplayer.c	/^static const void *I_OPL_RegisterSong(const void *data, unsigned len)$/;"	f	file:
I_OPL_RenderSamples	src/MUSIC/oplplayer.c	/^void I_OPL_RenderSamples (void *dest, unsigned nsamp)$/;"	f
I_OPL_ResumeSong	src/MUSIC/oplplayer.c	/^static void I_OPL_ResumeSong(void)$/;"	f	file:
I_OPL_SetMusicVolume	src/MUSIC/oplplayer.c	/^void I_OPL_SetMusicVolume(int volume)$/;"	f
I_OPL_ShutdownMusic	src/MUSIC/oplplayer.c	/^static void I_OPL_ShutdownMusic(void)$/;"	f	file:
I_OPL_StopSong	src/MUSIC/oplplayer.c	/^static void I_OPL_StopSong(void)$/;"	f	file:
I_OPL_SynthName	src/MUSIC/oplplayer.c	/^const char *I_OPL_SynthName (void)$/;"	f
I_OPL_UnRegisterSong	src/MUSIC/oplplayer.c	/^static void I_OPL_UnRegisterSong(const void *handle)$/;"	f	file:
I_PCSOUND_H__	src/i_pcsound.h	25;"	d
I_PCS_InitSound	src/i_pcsound.c	/^void I_PCS_InitSound(void)$/;"	f
I_PCS_SoundIsPlaying	src/i_pcsound.c	/^int I_PCS_SoundIsPlaying(int handle)$/;"	f
I_PCS_StartSound	src/i_pcsound.c	/^int I_PCS_StartSound(int id,$/;"	f
I_PCS_StopSound	src/i_pcsound.c	/^void I_PCS_StopSound(int handle)$/;"	f
I_PauseSong	src/SDL/i_music.c	/^void I_PauseSong(int handle) {$/;"	f
I_PlaySong	src/SDL/i_music.c	/^void I_PlaySong(int handle, int looping) {$/;"	f
I_PollJoystick	src/SDL/i_joy.c	/^void I_PollJoystick(void) {$/;"	f
I_PreInitGraphics	src/SDL/i_video.c	/^void I_PreInitGraphics(void)$/;"	f
I_PrintAddress	src/SDL/i_network.c	/^void I_PrintAddress(FILE* fp, UDP_CHANNEL *addr) {$/;"	f
I_PrintStr	src/lprintf.c	/^static void I_PrintStr (int xp, const char *cp, int count, BOOL scroll) {$/;"	f	file:
I_Quit	src/SDL/i_main.c	/^static void I_Quit (void)$/;"	f	file:
I_ReadMouse	src/SDL/i_video.c	/^static void I_ReadMouse(void)$/;"	f	file:
I_ReadOverlay	src/SDL/i_video.c	/^void I_ReadOverlay(void) {$/;"	f
I_RegisterMusic	src/SDL/i_music.c	/^int I_RegisterMusic(const char* filename, musicinfo_t *song) {$/;"	f
I_RegisterPlayer	src/SDL/i_network.c	/^UDP_CHANNEL I_RegisterPlayer(IPaddress *ipaddr) {$/;"	f
I_RegisterSong	src/SDL/i_music.c	/^int I_RegisterSong(const void *data, size_t len) {$/;"	f
I_RenderOverlay	src/SDL/i_video.c	/^void I_RenderOverlay(void) {$/;"	f
I_ResampleStream	src/SDL/i_sound.c	/^void I_ResampleStream(void *dest, unsigned nsamp,$/;"	f
I_ResetRenderContext	src/SDL/i_video.c	/^void I_ResetRenderContext(void) {$/;"	f
I_ResumeSong	src/SDL/i_music.c	/^void I_ResumeSong(int handle) {$/;"	f
I_SDLtoDoomMouseState	src/SDL/i_video.c	/^int I_SDLtoDoomMouseState(Uint8 buttonstate) {$/;"	f
I_SMP_H__	src/i_smp.h	25;"	d
I_SOUND_H__	src/i_sound.h	25;"	d
I_SYSTEM_H__	src/i_system.h	25;"	d
I_SafeExit	src/SDL/i_main.c	/^void I_SafeExit(int rc) {$/;"	f
I_ScreenShot	src/SDL/i_sshot.c	/^int I_ScreenShot (const char *fname)$/;"	f
I_SendPacket	src/SDL/i_network.c	/^void I_SendPacket(packet_header_t* packet, size_t len) {$/;"	f
I_SendPacketTo	src/SDL/i_network.c	/^void I_SendPacketTo(packet_header_t* packet, size_t len, UDP_CHANNEL *to) {$/;"	f
I_SetAffinityMask	src/SDL/i_main.c	/^static void I_SetAffinityMask(void)$/;"	f	file:
I_SetChannels	src/SDL/i_sound.c	/^void I_SetChannels(void) {$/;"	f
I_SetMusicVolume	src/SDL/i_music.c	/^void I_SetMusicVolume(int volume) {$/;"	f
I_SetPalette	src/SDL/i_video.c	/^void I_SetPalette (int pal)$/;"	f
I_SetProcessPriority	src/SDL/i_main.c	/^void I_SetProcessPriority(void)$/;"	f
I_SetSoundCap	src/SDL/i_sound.c	/^void I_SetSoundCap(void) {$/;"	f
I_SetWindowCaption	src/SDL/i_video.c	/^void I_SetWindowCaption(void) {$/;"	f
I_SetWindowIcon	src/SDL/i_video.c	/^void I_SetWindowIcon(void)$/;"	f
I_ShutdownGraphics	src/SDL/i_video.c	/^void I_ShutdownGraphics(void) {$/;"	f
I_ShutdownMusic	src/SDL/i_music.c	/^void I_ShutdownMusic(void) {$/;"	f
I_ShutdownNetwork	src/SDL/i_network.c	/^void I_ShutdownNetwork(void) {$/;"	f
I_ShutdownSDL	src/SDL/i_video.c	/^static void I_ShutdownSDL(void)$/;"	f	file:
I_ShutdownSound	src/SDL/i_sound.c	/^void I_ShutdownSound(void) {$/;"	f
I_SigString	src/POSIX/i_system.c	/^const char* I_SigString(char* buf, size_t sz, int signum) {$/;"	f
I_SigString	src/SDL/i_system.c	/^const char* I_SigString(char* buf, size_t sz, int signum)$/;"	f
I_SignalHandler	src/SDL/i_main.c	/^static void I_SignalHandler(int s) {$/;"	f	file:
I_Sleep	src/SDL/i_system.c	/^void I_Sleep(unsigned long ms) {$/;"	f
I_Socket	src/SDL/i_network.c	/^UDP_SOCKET I_Socket(Uint16 port) {$/;"	f
I_SoundIsPlaying	src/SDL/i_sound.c	/^dboolean I_SoundIsPlaying(int handle) {$/;"	f
I_StartDisplay	src/SDL/i_system.c	/^dboolean I_StartDisplay(void)$/;"	f
I_StartFrame	src/SDL/i_video.c	/^void I_StartFrame(void) {$/;"	f
I_StartSound	src/SDL/i_sound.c	/^int I_StartSound(int id, int channel, int vol, int sep, int pitch, int priority) {$/;"	f
I_StartTic	src/SDL/i_video.c	/^void I_StartTic(void) {$/;"	f
I_StopSong	src/SDL/i_music.c	/^void I_StopSong(int handle) {$/;"	f
I_StopSound	src/SDL/i_sound.c	/^void I_StopSound (int handle) {$/;"	f
I_SwitchToWindow	src/SDL/i_system.c	/^void I_SwitchToWindow(HWND hwnd)$/;"	f
I_TestCPUCacheMisses	src/SDL/i_video.c	/^unsigned int I_TestCPUCacheMisses(int width, int height, unsigned int mintime)$/;"	f
I_UnRegisterPlayer	src/SDL/i_network.c	/^void I_UnRegisterPlayer(UDP_CHANNEL channel) {$/;"	f
I_UnRegisterSong	src/SDL/i_music.c	/^void I_UnRegisterSong(int handle) {$/;"	f
I_UpdateConsole	src/lprintf.c	/^void I_UpdateConsole(void)$/;"	f
I_UpdateNoBlit	src/SDL/i_video.c	/^void I_UpdateNoBlit(void) {$/;"	f
I_UpdateSoundParams	src/SDL/i_sound.c	/^void I_UpdateSoundParams(int handle, int volume, int separation, int pitch) {$/;"	f
I_UpdateVideoMode	src/SDL/i_video.c	/^void I_UpdateVideoMode(void) {$/;"	f
I_UploadNewPalette	src/SDL/i_video.c	/^static void I_UploadNewPalette(int pal, int force)$/;"	f	file:
I_VIDEO_H__	src/i_video.h	25;"	d
I_WaitForPacket	src/SDL/i_network.c	/^void I_WaitForPacket(int ms) {$/;"	f
I_Warning	src/e6y.c	/^void I_Warning(const char *message, ...)$/;"	f
I_midiOutSetVolumes	src/e6y.c	/^void I_midiOutSetVolumes(int volume)$/;"	f
I_uSleep	src/POSIX/i_system.c	/^void I_uSleep(unsigned long usecs) {$/;"	f
I_vWarning	src/e6y.c	/^void I_vWarning(const char *message, va_list argList)$/;"	f
IdentifyVersion	src/d_main.c	/^void IdentifyVersion(void) {$/;"	f
InDisplay	src/SDL/i_system.c	/^static dboolean InDisplay = false;$/;"	v	file:
Init	src/PCRELIB/pcrecpp.cc	/^void RE::Init(const char* pat, const RE_Options* options) {$/;"	f	class:pcrecpp::RE
Init	src/gl_light.c	/^  gld_InitLightTable_f Init;$/;"	m	struct:__anon106	file:
InitChannel	src/MUSIC/oplplayer.c	/^static void InitChannel(opl_track_data_t *track, opl_channel_data_t *channel)$/;"	f	file:
InitStretchParam	src/r_main.c	/^static void InitStretchParam(stretch_param_t* offsets, int stretch, enum patch_translation_e flags)$/;"	f	file:
InitTracers	src/hu_tracers.c	/^void InitTracers(void)$/;"	f
InitVoices	src/MUSIC/oplplayer.c	/^static void InitVoices(void)$/;"	f	file:
Init_Console	src/lprintf.c	/^static void Init_Console(void)$/;"	f	file:
Init_ConsoleWin	src/lprintf.c	/^int Init_ConsoleWin(void)$/;"	f
InputHandler	src/hu_input.h	/^typedef void (*InputHandler)(input_widget_t *iw);$/;"	t
IntWidth	src/TEXTSCREEN/txt_spinctrl.c	/^static unsigned int IntWidth(int val)$/;"	f	file:
InterceptsMemoryOverrun	src/g_overflow.c	/^static void InterceptsMemoryOverrun(int location, int value)$/;"	f	file:
InterceptsOverrun	src/g_overflow.c	/^void InterceptsOverrun(int num_intercepts, intercept_t *intercept)$/;"	f
InterpretScrollKey	src/TEXTSCREEN/txt_scrollpane.c	/^static int InterpretScrollKey(txt_scrollpane_t *scrollpane, int key)$/;"	f	file:
IsDehMaxHealth	src/d_deh.c	/^dboolean IsDehMaxHealth = false;$/;"	v
IsDehMaxSoul	src/d_deh.c	/^dboolean IsDehMaxSoul = false;$/;"	v
IsDehMegaHealth	src/d_deh.c	/^dboolean IsDehMegaHealth = false;$/;"	v
IsDemoContinue	src/r_demo.c	/^int IsDemoContinue(void)$/;"	f
IsDemoPlayback	src/r_demo.c	/^int IsDemoPlayback(void)$/;"	f
IsMarker	src/w_wad.c	/^static int IsMarker(const char *marker, const char *name) {$/;"	f	file:
IsSpace	src/m_argv.c	109;"	d	file:
KB_NEXT	src/m_menu.c	2155;"	d	file:
KB_PREV	src/m_menu.c	2154;"	d	file:
KB_X	src/m_menu.c	2153;"	d	file:
KB_Y	src/m_menu.c	2156;"	d	file:
KEYBIND	src/m_misc.c	75;"	d	file:
KEYP_0	src/TEXTSCREEN/doomkeys.h	79;"	d
KEYP_1	src/TEXTSCREEN/doomkeys.h	80;"	d
KEYP_2	src/TEXTSCREEN/doomkeys.h	81;"	d
KEYP_3	src/TEXTSCREEN/doomkeys.h	82;"	d
KEYP_4	src/TEXTSCREEN/doomkeys.h	83;"	d
KEYP_5	src/TEXTSCREEN/doomkeys.h	84;"	d
KEYP_6	src/TEXTSCREEN/doomkeys.h	85;"	d
KEYP_7	src/TEXTSCREEN/doomkeys.h	86;"	d
KEYP_8	src/TEXTSCREEN/doomkeys.h	87;"	d
KEYP_9	src/TEXTSCREEN/doomkeys.h	88;"	d
KEYP_DIVIDE	src/TEXTSCREEN/doomkeys.h	90;"	d
KEYP_ENTER	src/TEXTSCREEN/doomkeys.h	96;"	d
KEYP_EQUALS	src/TEXTSCREEN/doomkeys.h	95;"	d
KEYP_MINUS	src/TEXTSCREEN/doomkeys.h	92;"	d
KEYP_MULTIPLY	src/TEXTSCREEN/doomkeys.h	93;"	d
KEYP_PERIOD	src/TEXTSCREEN/doomkeys.h	94;"	d
KEYP_PLUS	src/TEXTSCREEN/doomkeys.h	91;"	d
KEY_BACKSPACE	src/TEXTSCREEN/doomkeys.h	55;"	d
KEY_CAPSLOCK	src/TEXTSCREEN/doomkeys.h	69;"	d
KEY_DEL	src/TEXTSCREEN/doomkeys.h	77;"	d
KEY_DOWNARROW	src/TEXTSCREEN/doomkeys.h	38;"	d
KEY_END	src/TEXTSCREEN/doomkeys.h	73;"	d
KEY_ENTER	src/TEXTSCREEN/doomkeys.h	40;"	d
KEY_EQUALS	src/TEXTSCREEN/doomkeys.h	58;"	d
KEY_ESCAPE	src/TEXTSCREEN/doomkeys.h	39;"	d
KEY_F1	src/TEXTSCREEN/doomkeys.h	42;"	d
KEY_F10	src/TEXTSCREEN/doomkeys.h	51;"	d
KEY_F11	src/TEXTSCREEN/doomkeys.h	52;"	d
KEY_F12	src/TEXTSCREEN/doomkeys.h	53;"	d
KEY_F2	src/TEXTSCREEN/doomkeys.h	43;"	d
KEY_F3	src/TEXTSCREEN/doomkeys.h	44;"	d
KEY_F4	src/TEXTSCREEN/doomkeys.h	45;"	d
KEY_F5	src/TEXTSCREEN/doomkeys.h	46;"	d
KEY_F6	src/TEXTSCREEN/doomkeys.h	47;"	d
KEY_F7	src/TEXTSCREEN/doomkeys.h	48;"	d
KEY_F8	src/TEXTSCREEN/doomkeys.h	49;"	d
KEY_F9	src/TEXTSCREEN/doomkeys.h	50;"	d
KEY_HOME	src/TEXTSCREEN/doomkeys.h	72;"	d
KEY_INS	src/TEXTSCREEN/doomkeys.h	76;"	d
KEY_LALT	src/TEXTSCREEN/doomkeys.h	65;"	d
KEY_LEFTARROW	src/TEXTSCREEN/doomkeys.h	36;"	d
KEY_MINUS	src/TEXTSCREEN/doomkeys.h	59;"	d
KEY_PAUSE	src/TEXTSCREEN/doomkeys.h	56;"	d
KEY_PGDN	src/TEXTSCREEN/doomkeys.h	75;"	d
KEY_PGUP	src/TEXTSCREEN/doomkeys.h	74;"	d
KEY_RALT	src/TEXTSCREEN/doomkeys.h	63;"	d
KEY_RCTRL	src/TEXTSCREEN/doomkeys.h	62;"	d
KEY_RIGHTARROW	src/TEXTSCREEN/doomkeys.h	35;"	d
KEY_RSHIFT	src/TEXTSCREEN/doomkeys.h	61;"	d
KEY_SCRLCK	src/TEXTSCREEN/doomkeys.h	70;"	d
KEY_TAB	src/TEXTSCREEN/doomkeys.h	41;"	d
KEY_UPARROW	src/TEXTSCREEN/doomkeys.h	37;"	d
KT_X1	src/m_menu.c	4042;"	d	file:
KT_X2	src/m_menu.c	4043;"	d	file:
KT_X3	src/m_menu.c	4044;"	d	file:
KT_Y1	src/m_menu.c	4046;"	d	file:
KT_Y2	src/m_menu.c	4047;"	d	file:
KT_Y3	src/m_menu.c	4048;"	d	file:
KeyOffEvent	src/MUSIC/oplplayer.c	/^static void KeyOffEvent(opl_track_data_t *track, midi_event_t *event)$/;"	f	file:
KeyOnEvent	src/MUSIC/oplplayer.c	/^static void KeyOnEvent(opl_track_data_t *track, midi_event_t *event)$/;"	f	file:
KeybndDef	src/m_menu.c	/^menu_t KeybndDef =$/;"	v
KslCreateTable	src/MUSIC/dbopl.c	/^static const Bit8u KslCreateTable[16] = {$/;"	v	file:
KslShiftTable	src/MUSIC/dbopl.c	/^static const Bit8u KslShiftTable[4] = {$/;"	v	file:
KslTable	src/MUSIC/dbopl.c	/^static Bit8u KslTable[ 8 * 16 ];$/;"	v	file:
L	src/x_main.c	/^static lua_State *L = NULL;$/;"	v	file:
LAUNCHER_CAPTION	src/e6y_launcher.c	55;"	d	file:
LAUNCHER_HISTORY_SIZE	src/e6y_launcher.c	53;"	d	file:
LEAVE_ASIDE	src/z_zone.c	50;"	d	file:
LENGTH_READING_ERROR	src/cmp.c	/^  LENGTH_READING_ERROR,$/;"	e	enum:__anon7	file:
LENGTH_WRITING_ERROR	src/cmp.c	/^  LENGTH_WRITING_ERROR,$/;"	e	enum:__anon7	file:
LFO_MAX	src/MUSIC/dbopl.c	88;"	d	file:
LFO_SH	src/MUSIC/dbopl.c	86;"	d	file:
LIGHTBRIGHT	src/r_main.c	/^int LIGHTBRIGHT   = 2;$/;"	v
LIGHTLEVELS	src/r_main.c	/^int LIGHTLEVELS   = 32;$/;"	v
LIGHTLEVELS_MAX	src/r_main.h	87;"	d
LIGHTSCALESHIFT	src/r_main.h	95;"	d
LIGHTSEGSHIFT	src/r_main.c	/^int LIGHTSEGSHIFT = 3;$/;"	v
LIGHTZSHIFT	src/r_main.h	97;"	d
LINE	src/gl_main.c	1540;"	d	file:
LINE	src/gl_main.c	1961;"	d	file:
LINEHEIGHT	src/m_menu.c	138;"	d	file:
LINK_SIZE	src/PCRELIB/config.h	98;"	d
LOADGRAPHIC_Y	src/m_menu.c	700;"	d	file:
LOADNET	src/d_englsh.h	35;"	d
LOAD_PREVIOUS_STATE	src/n_main.c	57;"	d	file:
LOG_MAX	src/d_log.h	/^  LOG_MAX$/;"	e	enum:__anon20
LOG_MEM	src/d_log.h	/^  LOG_MEM,$/;"	e	enum:__anon20
LOG_NET	src/d_log.h	/^  LOG_NET,$/;"	e	enum:__anon20
LOG_SAVE	src/d_log.h	/^  LOG_SAVE,$/;"	e	enum:__anon20
LOG_SOUND	src/d_log.h	/^  LOG_SOUND,$/;"	e	enum:__anon20
LOG_STATE	src/d_log.h	/^  LOG_STATE,$/;"	e	enum:__anon20
LOG_SYNC	src/d_log.h	/^  LOG_SYNC,$/;"	e	enum:__anon20
LONGLONG	src/doomtype.h	64;"	d
LONGLONG	src/doomtype.h	69;"	d
LOOPREPEAT	src/PCRELIB/pcretest.c	129;"	d	file:
LOWERSPEED	src/p_pspr.c	43;"	d	file:
LO_ALWAYS	src/lprintf.h	/^  LO_ALWAYS=64,$/;"	e	enum:__anon142
LO_CONFIRM	src/lprintf.h	/^  LO_CONFIRM=2,             \/* call. Which are output, or echoed to console    *\/$/;"	e	enum:__anon142
LO_DEBUG	src/lprintf.h	/^  LO_DEBUG=32,$/;"	e	enum:__anon142
LO_ERROR	src/lprintf.h	/^  LO_ERROR=8,               \/* global masks: cons_output_mask,cons_error_mask. *\/$/;"	e	enum:__anon142
LO_FATAL	src/lprintf.h	/^  LO_FATAL=16,$/;"	e	enum:__anon142
LO_INFO	src/lprintf.h	/^  LO_INFO=1,                \/* One of these is used in each physical output    *\/$/;"	e	enum:__anon142
LO_WARN	src/lprintf.h	/^  LO_WARN=4,                \/* if output redirected is determined by the       *\/$/;"	e	enum:__anon142
LPRINTF_H__	src/lprintf.h	25;"	d
LUMP_CM2RGB	src/w_wad.h	120;"	d
LUMP_IS_NEW	src/SDL/i_main.c	276;"	d	file:
LUMP_PRBOOM	src/w_wad.h	121;"	d
LUMP_STATIC	src/w_wad.h	119;"	d
L_AddItemToCache	src/e6y_launcher.c	/^static void L_AddItemToCache(fileitem_t *item)$/;"	f	file:
L_Associate	src/e6y_launcher.c	/^static DWORD L_Associate(const char *Name, const char *Ext, const char *cmdline)$/;"	f	file:
L_CommandOnChange	src/e6y_launcher.c	/^static void L_CommandOnChange(void)$/;"	f	file:
L_FilesOnChange	src/e6y_launcher.c	/^static void L_FilesOnChange(void)$/;"	f	file:
L_FillFilesList	src/e6y_launcher.c	/^static void L_FillFilesList(fileitem_t *iwad)$/;"	f	file:
L_FillGameList	src/e6y_launcher.c	/^static void L_FillGameList(void)$/;"	f	file:
L_FillHistoryList	src/e6y_launcher.c	/^static void L_FillHistoryList(void)$/;"	f	file:
L_GUISelect	src/e6y_launcher.c	/^static dboolean L_GUISelect(waddata_t *waddata)$/;"	f	file:
L_GameOnChange	src/e6y_launcher.c	/^static void L_GameOnChange(void)$/;"	f	file:
L_GetFileType	src/e6y_launcher.c	/^static dboolean L_GetFileType(const char *filename, fileitem_t *item)$/;"	f	file:
L_HistoryFreeData	src/e6y_launcher.c	/^static void L_HistoryFreeData(void)$/;"	f	file:
L_HistoryGetStr	src/e6y_launcher.c	/^static char* L_HistoryGetStr(waddata_t *data)$/;"	f	file:
L_HistoryOnChange	src/e6y_launcher.c	/^static void L_HistoryOnChange(void)$/;"	f	file:
L_LauncherIsNeeded	src/e6y_launcher.c	/^static dboolean L_LauncherIsNeeded(void)$/;"	f	file:
L_PrepareToLaunch	src/e6y_launcher.c	/^static dboolean L_PrepareToLaunch(void)$/;"	f	file:
L_ReadCacheData	src/e6y_launcher.c	/^static void L_ReadCacheData(void)$/;"	f	file:
L_SelAdd	src/e6y_launcher.c	/^static void L_SelAdd(int index)$/;"	f	file:
L_SelClearAndFree	src/e6y_launcher.c	/^static void L_SelClearAndFree(void)$/;"	f	file:
L_SelGetList	src/e6y_launcher.c	/^static int L_SelGetList(int **list)$/;"	f	file:
L_SetupConsoleMasks	src/d_main.c	/^static void L_SetupConsoleMasks(void) {$/;"	f	file:
Language_t	src/doomdef.h	/^} Language_t;$/;"	t	typeref:enum:__anon45
Last	src/lprintf.c	/^char *Last = NULL;$/;"	v
LauncherClientCallback	src/e6y_launcher.c	/^BOOL CALLBACK LauncherClientCallback (HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f
LauncherServerCallback	src/e6y_launcher.c	/^BOOL CALLBACK LauncherServerCallback (HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f
LauncherShow	src/e6y_launcher.c	/^void LauncherShow(unsigned int params)$/;"	f
LayoutActionArea	src/TEXTSCREEN/txt_window.c	/^static void LayoutActionArea(txt_window_t *window)$/;"	f	file:
LayoutCell	src/TEXTSCREEN/txt_table.c	/^static void LayoutCell(txt_table_t *table, int x, int y, int col_width,$/;"	f	file:
LiftDelay	src/p_spec.h	130;"	d
LiftDelayShift	src/p_spec.h	135;"	d
LiftMonster	src/p_spec.h	131;"	d
LiftMonsterShift	src/p_spec.h	136;"	d
LiftSpeed	src/p_spec.h	132;"	d
LiftSpeedShift	src/p_spec.h	137;"	d
LiftTarget	src/p_spec.h	129;"	d
LiftTargetShift	src/p_spec.h	134;"	d
LimitToRange	src/TEXTSCREEN/txt_sdl.c	/^static int LimitToRange(int val, int min, int max)$/;"	f	file:
LineNumber	src/PCRELIB/pcre_scanner.cc	/^int Scanner::LineNumber() const {$/;"	f	class:pcrecpp::Scanner
Lines	src/lprintf.c	/^char Lines[(80+2)*25+1];$/;"	v
LittleLong	src/m_swap.h	146;"	d
LittleShort	src/m_swap.h	147;"	d
LnF2HnF	src/p_spec.h	/^  LnF2HnF,$/;"	e	enum:__anon246
LoadDef	src/m_menu.c	/^menu_t LoadDef =$/;"	v
LoadDemo	src/r_demo.c	/^int LoadDemo(const char *name, const byte **buffer, int *length, int *lump) {$/;"	f
LoadInstrumentTable	src/MUSIC/oplplayer.c	/^static dboolean LoadInstrumentTable(void)$/;"	f	file:
LoadMenue	src/m_menu.c	/^menuitem_t LoadMenue[]=$/;"	v
LoadOperatorData	src/MUSIC/oplplayer.c	/^static void LoadOperatorData(int operator,$/;"	f	file:
LockedKey	src/p_spec.h	178;"	d
LockedKeyShift	src/p_spec.h	183;"	d
LockedKind	src/p_spec.h	179;"	d
LockedKindShift	src/p_spec.h	184;"	d
LockedNKeys	src/p_spec.h	177;"	d
LockedNKeysShift	src/p_spec.h	182;"	d
LockedSpeed	src/p_spec.h	180;"	d
LockedSpeedShift	src/p_spec.h	185;"	d
LookingAt	src/PCRELIB/pcre_scanner.cc	/^bool Scanner::LookingAt(const RE& re) const {$/;"	f	class:pcrecpp::Scanner
M	src/MUSIC/dbopl.c	153;"	d	file:
M	src/MUSIC/dbopl.c	158;"	d	file:
MACOSX	src/MAC/config.h	134;"	d
MADPLAYER_H__	src/MUSIC/madplayer.h	25;"	d
MAGIC_NUMBER	src/PCRELIB/pcre_internal.h	446;"	d
MAKECOLOR	src/v_video.c	126;"	d	file:
MAP16_MARKER	src/cmp.c	/^  MAP16_MARKER           = 0xDE,$/;"	e	enum:__anon5	file:
MAP32_MARKER	src/cmp.c	/^  MAP32_MARKER           = 0xDF,$/;"	e	enum:__anon5	file:
MAPBITS	src/am_map.h	47;"	d
MAPBLOCKSHIFT	src/p_maputl.h	32;"	d
MAPBLOCKSIZE	src/p_maputl.h	31;"	d
MAPBLOCKUNITS	src/p_maputl.h	30;"	d
MAPBMASK	src/p_maputl.h	33;"	d
MAPBTOFRAC	src/p_maputl.h	34;"	d
MAP_COEFF	src/r_main.h	165;"	d
MAP_LENGTH_TOO_LONG_ERROR	src/cmp.c	/^  MAP_LENGTH_TOO_LONG_ERROR,$/;"	e	enum:__anon7	file:
MAP_NICE_THING_INIT	src/gl_map.c	130;"	d	file:
MAP_NICE_THING_INIT	src/gl_map.c	147;"	d	file:
MAP_SCALE	src/r_main.h	166;"	d
MASK_KSR	src/MUSIC/dbopl.h	/^        MASK_KSR = 0x10,$/;"	e	enum:__anon201
MASK_SUSTAIN	src/MUSIC/dbopl.h	/^        MASK_SUSTAIN = 0x20,$/;"	e	enum:__anon201
MASK_TREMOLO	src/MUSIC/dbopl.h	/^        MASK_TREMOLO = 0x80,$/;"	e	enum:__anon201
MASK_VIBRATO	src/MUSIC/dbopl.h	/^        MASK_VIBRATO = 0x40,$/;"	e	enum:__anon201
MATCH_LIMIT	src/PCRELIB/config.h	133;"	d
MATCH_LIMIT_RECURSION	src/PCRELIB/config.h	146;"	d
MATCH_MATCH	src/PCRELIB/pcre_exec.c	91;"	d	file:
MATCH_NOMATCH	src/PCRELIB/pcre_exec.c	92;"	d	file:
MAXANIMS	src/p_spec.c	79;"	d	file:
MAXBOB	src/p_user.c	102;"	d	file:
MAXBUTTONS	src/p_spec.h	57;"	d
MAXCHATWIDTH	src/m_menu.c	1745;"	d	file:
MAXCOORD	src/gl_intern.h	29;"	d
MAXDRAWSEGS	src/r_defs.h	52;"	d
MAXGATHER	src/m_menu.c	1816;"	d	file:
MAXGEAR	src/p_mobj.h	389;"	d
MAXHEALTH	src/p_inter.h	35;"	d
MAXINTERCEPTS_ORIGINAL	src/g_overflow.h	69;"	d
MAXLIGHTSCALE	src/r_main.h	94;"	d
MAXLIGHTZ	src/r_main.h	96;"	d
MAXLINES	src/hu_lib.h	70;"	d
MAXLOADFILES	src/d_main.h	90;"	d
MAXMIDLENGTH	src/MUSIC/oplplayer.c	43;"	d	file:
MAXMOVE	src/p_mobj.h	374;"	d
MAXNETNODES	src/d_net.h	46;"	d
MAXPLAYERS	src/d_server.c	188;"	d	file:
MAXPLAYERS	src/doomdef.h	118;"	d
MAXPLMOVE	src/g_game.c	80;"	d	file:
MAXRADIUS	src/p_map.h	36;"	d
MAXTRACEITEMS	src/hu_tracers.h	29;"	d
MAXTRANS	src/r_draw.c	559;"	d	file:
MAXVISPLANES	src/r_plane.c	38;"	d	file:
MAXWINDOWS	src/TEXTSCREEN/txt_desktop.c	35;"	d	file:
MAX_ADDRESS_LENGTH	src/n_net.c	51;"	d	file:
MAX_BUFFER_SIZE	src/MUSIC/midifile.c	44;"	d	file:
MAX_CC_SIDES	src/gl_preprocess.c	74;"	d	file:
MAX_COMMAND_COUNT	src/p_saveg.c	49;"	d	file:
MAX_COMMAND_LENGTH	src/n_pack.c	56;"	d	file:
MAX_COMPATIBILITY_LEVEL	src/doomtype.h	/^  MAX_COMPATIBILITY_LEVEL,               \/* Must be last entry *\/$/;"	e	enum:__anon57
MAX_DOWNLOAD	src/n_net.c	48;"	d	file:
MAX_DUPLENGTH	src/PCRELIB/config.h	162;"	d
MAX_GLGAMMA	src/gl_struct.h	50;"	d
MAX_IWAD_NAME_LENGTH	src/n_pack.c	48;"	d	file:
MAX_KEY	src/m_misc.h	98;"	d
MAX_MESSAGE_LENGTH	src/lprintf.h	30;"	d
MAX_MOUSEB	src/m_misc.h	99;"	d
MAX_MUS_ENTRIES	src/s_advsound.h	37;"	d
MAX_NAME_COUNT	src/PCRELIB/config.h	158;"	d
MAX_NAME_LENGTH	src/g_game.h	71;"	d
MAX_NAME_SIZE	src/PCRELIB/config.h	154;"	d
MAX_OPL_QUEUE	src/MUSIC/opl_queue.c	32;"	d	file:
MAX_PASSWORD_LENGTH	src/n_pack.c	55;"	d	file:
MAX_PATTERN_COUNT	src/PCRELIB/pcregrep.c	83;"	d	file:
MAX_PATTERN_SIZE	src/PCRELIB/pcre_internal.h	231;"	d
MAX_PATTERN_SIZE	src/PCRELIB/pcre_internal.h	244;"	d
MAX_PATTERN_SIZE	src/PCRELIB/pcre_internal.h	258;"	d
MAX_PLAYER_MESSAGE_SIZE	src/n_pack.c	52;"	d	file:
MAX_PLAYER_MESSAGE_SIZE	src/p_saveg.c	48;"	d	file:
MAX_PLAYER_NAME_SIZE	src/n_pack.c	54;"	d	file:
MAX_PLAYER_PREFERENCE_NAME_SIZE	src/n_pack.c	53;"	d	file:
MAX_PREF_NAME_SIZE	src/n_proto.c	49;"	d	file:
MAX_RESOLUTIONS_COUNT	src/SDL/i_video.c	899;"	d	file:
MAX_RESOURCE_NAMES	src/n_pack.c	49;"	d	file:
MAX_RESOURCE_NAME_LENGTH	src/n_pack.c	50;"	d	file:
MAX_SERVER_MESSAGE_SIZE	src/n_pack.c	51;"	d	file:
MAX_SOUND_CHANNELS	src/s_sound.h	39;"	d
MAX_SOUND_SLICE_TIME	src/MUSIC/opl.c	40;"	d	file:
MAX_SPRITE_FRAMES	src/r_things.c	105;"	d	file:
MAX_STRING_SIZE	src/sc_man.c	48;"	d	file:
MAX_UPLOAD	src/n_net.c	49;"	d	file:
MBUFTHIRD	src/PCRELIB/pcregrep.c	86;"	d	file:
MBUFTHIRD	src/PCRELIB/pcregrep.c	88;"	d	file:
MD5Context	src/md5.h	/^struct MD5Context {$/;"	s
MD5Final	src/md5.c	/^MD5Final(md5byte digest[16], struct MD5Context *ctx)$/;"	f
MD5Init	src/md5.c	/^MD5Init(struct MD5Context *ctx)$/;"	f
MD5STEP	src/md5.c	168;"	d	file:
MD5Transform	src/md5.c	/^MD5Transform(UWORD32 buf[4], UWORD32 const in[16])$/;"	f
MD5Update	src/md5.c	/^MD5Update(struct MD5Context *ctx, md5byte const *buf, unsigned len)$/;"	f
MD5_H	src/md5.h	47;"	d
MELEERANGE	src/p_map.h	31;"	d
MEMFILE	src/memio.h	/^typedef struct _MEMFILE MEMFILE;$/;"	t	typeref:struct:_MEMFILE
MEMIO_H__	src/memio.h	29;"	d
MEM_SEEK_CUR	src/memio.h	/^  MEM_SEEK_CUR,$/;"	e	enum:__anon147
MEM_SEEK_END	src/memio.h	/^  MEM_SEEK_END,$/;"	e	enum:__anon147
MEM_SEEK_SET	src/memio.h	/^  MEM_SEEK_SET,$/;"	e	enum:__anon147
MF_AMBUSH	src/p_mobj.h	123;"	d
MF_BOUNCES	src/p_mobj.h	208;"	d
MF_CORPSE	src/p_mobj.h	165;"	d
MF_COUNTITEM	src/p_mobj.h	177;"	d
MF_COUNTKILL	src/p_mobj.h	173;"	d
MF_DROPOFF	src/p_mobj.h	138;"	d
MF_DROPPED	src/p_mobj.h	156;"	d
MF_FLOAT	src/p_mobj.h	147;"	d
MF_FLY	src/p_mobj.h	219;"	d
MF_FOREGROUND	src/p_mobj.h	213;"	d
MF_FRIEND	src/p_mobj.h	209;"	d
MF_INFLOAT	src/p_mobj.h	168;"	d
MF_JUSTATTACKED	src/p_mobj.h	127;"	d
MF_JUSTHIT	src/p_mobj.h	125;"	d
MF_MISSILE	src/p_mobj.h	153;"	d
MF_NOBLOCKMAP	src/p_mobj.h	120;"	d
MF_NOBLOOD	src/p_mobj.h	162;"	d
MF_NOCLIP	src/p_mobj.h	142;"	d
MF_NOGRAVITY	src/p_mobj.h	134;"	d
MF_NOSECTOR	src/p_mobj.h	118;"	d
MF_NOTARGET	src/p_mobj.h	217;"	d
MF_NOTDMATCH	src/p_mobj.h	185;"	d
MF_NO_DEPTH_TEST	src/p_mobj.h	212;"	d
MF_PICKUP	src/p_mobj.h	140;"	d
MF_PLAYERSPRITE	src/p_mobj.h	214;"	d
MF_RESSURECTED	src/p_mobj.h	211;"	d
MF_SHADOW	src/p_mobj.h	159;"	d
MF_SHOOTABLE	src/p_mobj.h	116;"	d
MF_SKULLFLY	src/p_mobj.h	181;"	d
MF_SLIDE	src/p_mobj.h	144;"	d
MF_SOLID	src/p_mobj.h	114;"	d
MF_SPAWNCEILING	src/p_mobj.h	130;"	d
MF_SPECIAL	src/p_mobj.h	112;"	d
MF_TELEPORT	src/p_mobj.h	150;"	d
MF_TOUCHY	src/p_mobj.h	207;"	d
MF_TRANSLATION	src/p_mobj.h	191;"	d
MF_TRANSLATION1	src/p_mobj.h	192;"	d
MF_TRANSLATION2	src/p_mobj.h	193;"	d
MF_TRANSLUCENT	src/p_mobj.h	201;"	d
MF_TRANSSHIFT	src/p_mobj.h	195;"	d
MF_UNUSED2	src/p_mobj.h	197;"	d
MF_UNUSED3	src/p_mobj.h	198;"	d
MIDIFILE_H	src/MUSIC/midifile.h	27;"	d
MIDI_CHANNELS_PER_TRACK	src/MUSIC/midifile.h	34;"	d
MIDI_CONTROLLER_BANK_SELECT	src/MUSIC/midifile.h	/^    MIDI_CONTROLLER_BANK_SELECT     = 0x0,$/;"	e	enum:__anon186
MIDI_CONTROLLER_BREATH_CONTROL	src/MUSIC/midifile.h	/^    MIDI_CONTROLLER_BREATH_CONTROL  = 0x2,$/;"	e	enum:__anon186
MIDI_CONTROLLER_DATA_ENTRY	src/MUSIC/midifile.h	/^    MIDI_CONTROLLER_DATA_ENTRY      = 0x5,$/;"	e	enum:__anon186
MIDI_CONTROLLER_FOOT_CONTROL	src/MUSIC/midifile.h	/^    MIDI_CONTROLLER_FOOT_CONTROL    = 0x3,$/;"	e	enum:__anon186
MIDI_CONTROLLER_MAIN_VOLUME	src/MUSIC/midifile.h	/^    MIDI_CONTROLLER_MAIN_VOLUME     = 0x7,$/;"	e	enum:__anon186
MIDI_CONTROLLER_MODULATION	src/MUSIC/midifile.h	/^    MIDI_CONTROLLER_MODULATION      = 0x1,$/;"	e	enum:__anon186
MIDI_CONTROLLER_PAN	src/MUSIC/midifile.h	/^    MIDI_CONTROLLER_PAN             = 0xa$/;"	e	enum:__anon186
MIDI_CONTROLLER_PORTAMENTO	src/MUSIC/midifile.h	/^    MIDI_CONTROLLER_PORTAMENTO      = 0x4,$/;"	e	enum:__anon186
MIDI_DestroyFlatList	src/MUSIC/midifile.c	/^void MIDI_DestroyFlatList (midi_event_t **evs)$/;"	f
MIDI_EVENT_AFTERTOUCH	src/MUSIC/midifile.h	/^    MIDI_EVENT_AFTERTOUCH      = 0xa0,$/;"	e	enum:__anon185
MIDI_EVENT_CHAN_AFTERTOUCH	src/MUSIC/midifile.h	/^    MIDI_EVENT_CHAN_AFTERTOUCH = 0xd0,$/;"	e	enum:__anon185
MIDI_EVENT_CONTROLLER	src/MUSIC/midifile.h	/^    MIDI_EVENT_CONTROLLER      = 0xb0,$/;"	e	enum:__anon185
MIDI_EVENT_META	src/MUSIC/midifile.h	/^    MIDI_EVENT_META            = 0xff,$/;"	e	enum:__anon185
MIDI_EVENT_NOTE_OFF	src/MUSIC/midifile.h	/^    MIDI_EVENT_NOTE_OFF        = 0x80,$/;"	e	enum:__anon185
MIDI_EVENT_NOTE_ON	src/MUSIC/midifile.h	/^    MIDI_EVENT_NOTE_ON         = 0x90,$/;"	e	enum:__anon185
MIDI_EVENT_PITCH_BEND	src/MUSIC/midifile.h	/^    MIDI_EVENT_PITCH_BEND      = 0xe0,$/;"	e	enum:__anon185
MIDI_EVENT_PROGRAM_CHANGE	src/MUSIC/midifile.h	/^    MIDI_EVENT_PROGRAM_CHANGE  = 0xc0,$/;"	e	enum:__anon185
MIDI_EVENT_SYSEX	src/MUSIC/midifile.h	/^    MIDI_EVENT_SYSEX           = 0xf0,$/;"	e	enum:__anon185
MIDI_EVENT_SYSEX_SPLIT	src/MUSIC/midifile.h	/^    MIDI_EVENT_SYSEX_SPLIT     = 0xf7,$/;"	e	enum:__anon185
MIDI_EventTypeToString	src/MUSIC/midifile.c	/^static char *MIDI_EventTypeToString(midi_event_type_t event_type)$/;"	f	file:
MIDI_FreeFile	src/MUSIC/midifile.c	/^void MIDI_FreeFile(midi_file_t *file)$/;"	f
MIDI_FreeIterator	src/MUSIC/midifile.c	/^void MIDI_FreeIterator(midi_track_iter_t *iter)$/;"	f
MIDI_GenerateFlatList	src/MUSIC/midifile.c	/^midi_event_t **MIDI_GenerateFlatList (midi_file_t *file)$/;"	f
MIDI_GetDeltaTime	src/MUSIC/midifile.c	/^unsigned int MIDI_GetDeltaTime(midi_track_iter_t *iter)$/;"	f
MIDI_GetFileTimeDivision	src/MUSIC/midifile.c	/^unsigned int MIDI_GetFileTimeDivision(const midi_file_t *file)$/;"	f
MIDI_GetNextEvent	src/MUSIC/midifile.c	/^int MIDI_GetNextEvent(midi_track_iter_t *iter, midi_event_t **event)$/;"	f
MIDI_IterateTrack	src/MUSIC/midifile.c	/^midi_track_iter_t *MIDI_IterateTrack(const midi_file_t *file, unsigned int track)$/;"	f
MIDI_LoadFile	src/MUSIC/midifile.c	/^midi_file_t *MIDI_LoadFile (midimem_t *mf)$/;"	f
MIDI_LoadFileSpecial	src/MUSIC/midifile.c	/^midi_file_t *MIDI_LoadFileSpecial (midimem_t *mf)$/;"	f
MIDI_META_CHANNEL_PREFIX	src/MUSIC/midifile.h	/^    MIDI_META_CHANNEL_PREFIX        = 0x20,$/;"	e	enum:__anon187
MIDI_META_COPYRIGHT	src/MUSIC/midifile.h	/^    MIDI_META_COPYRIGHT             = 0x2,$/;"	e	enum:__anon187
MIDI_META_CUE_POINT	src/MUSIC/midifile.h	/^    MIDI_META_CUE_POINT             = 0x7,$/;"	e	enum:__anon187
MIDI_META_END_OF_TRACK	src/MUSIC/midifile.h	/^    MIDI_META_END_OF_TRACK          = 0x2f,$/;"	e	enum:__anon187
MIDI_META_INSTR_NAME	src/MUSIC/midifile.h	/^    MIDI_META_INSTR_NAME            = 0x4,$/;"	e	enum:__anon187
MIDI_META_KEY_SIGNATURE	src/MUSIC/midifile.h	/^    MIDI_META_KEY_SIGNATURE         = 0x59,$/;"	e	enum:__anon187
MIDI_META_LYRICS	src/MUSIC/midifile.h	/^    MIDI_META_LYRICS                = 0x5,$/;"	e	enum:__anon187
MIDI_META_MARKER	src/MUSIC/midifile.h	/^    MIDI_META_MARKER                = 0x6,$/;"	e	enum:__anon187
MIDI_META_SEQUENCER_SPECIFIC	src/MUSIC/midifile.h	/^    MIDI_META_SEQUENCER_SPECIFIC    = 0x7f,$/;"	e	enum:__anon187
MIDI_META_SEQUENCE_NUMBER	src/MUSIC/midifile.h	/^    MIDI_META_SEQUENCE_NUMBER       = 0x0,$/;"	e	enum:__anon187
MIDI_META_SET_TEMPO	src/MUSIC/midifile.h	/^    MIDI_META_SET_TEMPO             = 0x51,$/;"	e	enum:__anon187
MIDI_META_SMPTE_OFFSET	src/MUSIC/midifile.h	/^    MIDI_META_SMPTE_OFFSET          = 0x54,$/;"	e	enum:__anon187
MIDI_META_TEXT	src/MUSIC/midifile.h	/^    MIDI_META_TEXT                  = 0x1,$/;"	e	enum:__anon187
MIDI_META_TIME_SIGNATURE	src/MUSIC/midifile.h	/^    MIDI_META_TIME_SIGNATURE        = 0x58,$/;"	e	enum:__anon187
MIDI_META_TRACK_NAME	src/MUSIC/midifile.h	/^    MIDI_META_TRACK_NAME            = 0x3,$/;"	e	enum:__anon187
MIDI_NumTracks	src/MUSIC/midifile.c	/^unsigned int MIDI_NumTracks(const midi_file_t *file)$/;"	f
MIDI_PERCUSSION_CHAN	src/mus2mid.c	38;"	d	file:
MIDI_RestartIterator	src/MUSIC/midifile.c	/^void MIDI_RestartIterator(midi_track_iter_t *iter)$/;"	f
MIDI_spmc	src/MUSIC/midifile.c	/^double MIDI_spmc (const midi_file_t *file, const midi_event_t *ev, unsigned sndrate)$/;"	f
MIF_ARMED	src/p_mobj.h	/^  MIF_ARMED = 2,        \/\/ Object is armed (for MF_TOUCHY objects)$/;"	e	enum:__anon224
MIF_FALLING	src/p_mobj.h	/^  MIF_FALLING = 1,      \/\/ Object is falling$/;"	e	enum:__anon224
MINZ	src/r_things.h	33;"	d
MIN_BLOCK_SPLIT	src/z_zone.c	47;"	d	file:
MIN_MAXPLAYERS	src/g_game.h	64;"	d
MIP_COUNT	src/gl_intern.h	/^  MIP_COUNT$/;"	e	enum:__anon87
MIP_PATCH	src/gl_intern.h	/^  MIP_PATCH,$/;"	e	enum:__anon87
MIP_SPRITE	src/gl_intern.h	/^  MIP_SPRITE,$/;"	e	enum:__anon87
MIP_TEXTURE	src/gl_intern.h	/^  MIP_TEXTURE,$/;"	e	enum:__anon87
MISSILERANGE	src/p_map.h	32;"	d
ML_BLOCKING	src/doomdata.h	95;"	d
ML_BLOCKMAP	src/doomdata.h	/^  ML_BLOCKMAP           \/\/ LUT, motion clipping, walls\/grid element$/;"	e	enum:__anon28
ML_BLOCKMONSTERS	src/doomdata.h	98;"	d
ML_DONTDRAW	src/doomdata.h	125;"	d
ML_DONTPEGBOTTOM	src/doomdata.h	116;"	d
ML_DONTPEGTOP	src/doomdata.h	113;"	d
ML_GL_LABEL	src/p_setup.c	/^   ML_GL_LABEL=0,  \/\/ A separator name, GL_ExMx or GL_MAPxx$/;"	e	enum:__anon233	file:
ML_GL_NODES	src/p_setup.c	/^   ML_GL_NODES     \/\/ GL BSP nodes$/;"	e	enum:__anon233	file:
ML_GL_SEGS	src/p_setup.c	/^   ML_GL_SEGS,     \/\/ Segs, from linedefs & minisegs$/;"	e	enum:__anon233	file:
ML_GL_SSECT	src/p_setup.c	/^   ML_GL_SSECT,    \/\/ SubSectors, list of segs$/;"	e	enum:__anon233	file:
ML_GL_VERTS	src/p_setup.c	/^   ML_GL_VERTS,     \/\/ Extra Vertices$/;"	e	enum:__anon233	file:
ML_LABEL	src/doomdata.h	/^  ML_LABEL,             \/\/ A separator, name, ExMx or MAPxx$/;"	e	enum:__anon28
ML_LINEDEFS	src/doomdata.h	/^  ML_LINEDEFS,          \/\/ LineDefs, from editing$/;"	e	enum:__anon28
ML_MAPPED	src/doomdata.h	128;"	d
ML_NODES	src/doomdata.h	/^  ML_NODES,             \/\/ BSP nodes$/;"	e	enum:__anon28
ML_PASSUSE	src/doomdata.h	132;"	d
ML_REJECT	src/doomdata.h	/^  ML_REJECT,            \/\/ LUT, sector-sector visibility$/;"	e	enum:__anon28
ML_SECRET	src/doomdata.h	119;"	d
ML_SECTORS	src/doomdata.h	/^  ML_SECTORS,           \/\/ Sectors, from editing$/;"	e	enum:__anon28
ML_SEGS	src/doomdata.h	/^  ML_SEGS,              \/\/ LineSegs, from LineDefs split by BSP$/;"	e	enum:__anon28
ML_SIDEDEFS	src/doomdata.h	/^  ML_SIDEDEFS,          \/\/ SideDefs, from editing$/;"	e	enum:__anon28
ML_SOUNDBLOCK	src/doomdata.h	122;"	d
ML_SSECTORS	src/doomdata.h	/^  ML_SSECTORS,          \/\/ SubSectors, list of LineSegs$/;"	e	enum:__anon28
ML_THINGS	src/doomdata.h	/^  ML_THINGS,            \/\/ Monsters, items..$/;"	e	enum:__anon28
ML_TWOSIDED	src/doomdata.h	101;"	d
ML_VERTEXES	src/doomdata.h	/^  ML_VERTEXES,          \/\/ Vertices, edited and BSP splits generated$/;"	e	enum:__anon28
MODE_READ	src/memio.c	/^  MODE_READ,$/;"	e	enum:__anon146	file:
MODE_WRITE	src/memio.c	/^  MODE_WRITE,$/;"	e	enum:__anon146	file:
MONITOR_VISIBILITY	src/MAC/config.h	72;"	d
MORE_FRICTION_MOMENTUM	src/doomdef.h	254;"	d
MOUSE_SENS_MAX	src/m_menu.c	1235;"	d	file:
MO_TELEPORTMAN	src/p_spec.h	31;"	d
MSB	src/e6y.c	1359;"	d	file:
MSB	src/e6y.c	1362;"	d	file:
MSB	src/e6y.c	1417;"	d	file:
MSGOFF	src/d_englsh.h	54;"	d
MSGON	src/d_englsh.h	55;"	d
MTF_AMBUSH	src/doomdef.h	152;"	d
MTF_EASY	src/doomdef.h	148;"	d
MTF_FRIEND	src/doomdef.h	158;"	d
MTF_HARD	src/doomdef.h	150;"	d
MTF_NORMAL	src/doomdef.h	149;"	d
MTF_NOTCOOP	src/doomdef.h	157;"	d
MTF_NOTDM	src/doomdef.h	156;"	d
MTF_NOTSINGLE	src/doomdef.h	155;"	d
MTF_RESERVED	src/doomdef.h	159;"	d
MTOF	src/am_map.c	127;"	d	file:
MTOF_F	src/am_map.c	132;"	d	file:
MT_ARACHPLAZ	src/info.h	/^  MT_ARACHPLAZ,$/;"	e	enum:__anon137
MT_BABY	src/info.h	/^  MT_BABY,$/;"	e	enum:__anon137
MT_BARREL	src/info.h	/^  MT_BARREL,$/;"	e	enum:__anon137
MT_BFG	src/info.h	/^  MT_BFG,$/;"	e	enum:__anon137
MT_BIBLE	src/info.h	/^  MT_BIBLE,   \/\/ killough 7\/11\/98: unholy bible in beta version$/;"	e	enum:__anon137
MT_BLOOD	src/info.h	/^  MT_BLOOD,$/;"	e	enum:__anon137
MT_BOSSBRAIN	src/info.h	/^  MT_BOSSBRAIN,$/;"	e	enum:__anon137
MT_BOSSSPIT	src/info.h	/^  MT_BOSSSPIT,$/;"	e	enum:__anon137
MT_BOSSTARGET	src/info.h	/^  MT_BOSSTARGET,$/;"	e	enum:__anon137
MT_BRUISER	src/info.h	/^  MT_BRUISER,$/;"	e	enum:__anon137
MT_BRUISERSHOT	src/info.h	/^  MT_BRUISERSHOT,$/;"	e	enum:__anon137
MT_CHAINGUN	src/info.h	/^  MT_CHAINGUN,$/;"	e	enum:__anon137
MT_CHAINGUY	src/info.h	/^  MT_CHAINGUY,$/;"	e	enum:__anon137
MT_CLIP	src/info.h	/^  MT_CLIP,$/;"	e	enum:__anon137
MT_CYBORG	src/info.h	/^  MT_CYBORG,$/;"	e	enum:__anon137
MT_DOGS	src/info.h	/^  MT_DOGS,    \/* killough 7\/19\/98: Marine's best friend *\/$/;"	e	enum:__anon137
MT_EXTRABFG	src/info.h	/^  MT_EXTRABFG,$/;"	e	enum:__anon137
MT_FATSHOT	src/info.h	/^  MT_FATSHOT,$/;"	e	enum:__anon137
MT_FATSO	src/info.h	/^  MT_FATSO,$/;"	e	enum:__anon137
MT_FIRE	src/info.h	/^  MT_FIRE,$/;"	e	enum:__anon137
MT_GIBDTH	src/info.h	/^  MT_GIBDTH,$/;"	e	enum:__anon137
MT_HEAD	src/info.h	/^  MT_HEAD,$/;"	e	enum:__anon137
MT_HEADSHOT	src/info.h	/^  MT_HEADSHOT,$/;"	e	enum:__anon137
MT_IFOG	src/info.h	/^  MT_IFOG,$/;"	e	enum:__anon137
MT_INS	src/info.h	/^  MT_INS,$/;"	e	enum:__anon137
MT_INV	src/info.h	/^  MT_INV,$/;"	e	enum:__anon137
MT_KEEN	src/info.h	/^  MT_KEEN,$/;"	e	enum:__anon137
MT_KNIGHT	src/info.h	/^  MT_KNIGHT,$/;"	e	enum:__anon137
MT_MEGA	src/info.h	/^  MT_MEGA,$/;"	e	enum:__anon137
MT_MISC0	src/info.h	/^  MT_MISC0,$/;"	e	enum:__anon137
MT_MISC1	src/info.h	/^  MT_MISC1,$/;"	e	enum:__anon137
MT_MISC10	src/info.h	/^  MT_MISC10,$/;"	e	enum:__anon137
MT_MISC11	src/info.h	/^  MT_MISC11,$/;"	e	enum:__anon137
MT_MISC12	src/info.h	/^  MT_MISC12,$/;"	e	enum:__anon137
MT_MISC13	src/info.h	/^  MT_MISC13,$/;"	e	enum:__anon137
MT_MISC14	src/info.h	/^  MT_MISC14,$/;"	e	enum:__anon137
MT_MISC15	src/info.h	/^  MT_MISC15,$/;"	e	enum:__anon137
MT_MISC16	src/info.h	/^  MT_MISC16,$/;"	e	enum:__anon137
MT_MISC17	src/info.h	/^  MT_MISC17,$/;"	e	enum:__anon137
MT_MISC18	src/info.h	/^  MT_MISC18,$/;"	e	enum:__anon137
MT_MISC19	src/info.h	/^  MT_MISC19,$/;"	e	enum:__anon137
MT_MISC2	src/info.h	/^  MT_MISC2,$/;"	e	enum:__anon137
MT_MISC20	src/info.h	/^  MT_MISC20,$/;"	e	enum:__anon137
MT_MISC21	src/info.h	/^  MT_MISC21,$/;"	e	enum:__anon137
MT_MISC22	src/info.h	/^  MT_MISC22,$/;"	e	enum:__anon137
MT_MISC23	src/info.h	/^  MT_MISC23,$/;"	e	enum:__anon137
MT_MISC24	src/info.h	/^  MT_MISC24,$/;"	e	enum:__anon137
MT_MISC25	src/info.h	/^  MT_MISC25,$/;"	e	enum:__anon137
MT_MISC26	src/info.h	/^  MT_MISC26,$/;"	e	enum:__anon137
MT_MISC27	src/info.h	/^  MT_MISC27,$/;"	e	enum:__anon137
MT_MISC28	src/info.h	/^  MT_MISC28,$/;"	e	enum:__anon137
MT_MISC29	src/info.h	/^  MT_MISC29,$/;"	e	enum:__anon137
MT_MISC3	src/info.h	/^  MT_MISC3,$/;"	e	enum:__anon137
MT_MISC30	src/info.h	/^  MT_MISC30,$/;"	e	enum:__anon137
MT_MISC31	src/info.h	/^  MT_MISC31,$/;"	e	enum:__anon137
MT_MISC32	src/info.h	/^  MT_MISC32,$/;"	e	enum:__anon137
MT_MISC33	src/info.h	/^  MT_MISC33,$/;"	e	enum:__anon137
MT_MISC34	src/info.h	/^  MT_MISC34,$/;"	e	enum:__anon137
MT_MISC35	src/info.h	/^  MT_MISC35,$/;"	e	enum:__anon137
MT_MISC36	src/info.h	/^  MT_MISC36,$/;"	e	enum:__anon137
MT_MISC37	src/info.h	/^  MT_MISC37,$/;"	e	enum:__anon137
MT_MISC38	src/info.h	/^  MT_MISC38,$/;"	e	enum:__anon137
MT_MISC39	src/info.h	/^  MT_MISC39,$/;"	e	enum:__anon137
MT_MISC4	src/info.h	/^  MT_MISC4,$/;"	e	enum:__anon137
MT_MISC40	src/info.h	/^  MT_MISC40,$/;"	e	enum:__anon137
MT_MISC41	src/info.h	/^  MT_MISC41,$/;"	e	enum:__anon137
MT_MISC42	src/info.h	/^  MT_MISC42,$/;"	e	enum:__anon137
MT_MISC43	src/info.h	/^  MT_MISC43,$/;"	e	enum:__anon137
MT_MISC44	src/info.h	/^  MT_MISC44,$/;"	e	enum:__anon137
MT_MISC45	src/info.h	/^  MT_MISC45,$/;"	e	enum:__anon137
MT_MISC46	src/info.h	/^  MT_MISC46,$/;"	e	enum:__anon137
MT_MISC47	src/info.h	/^  MT_MISC47,$/;"	e	enum:__anon137
MT_MISC48	src/info.h	/^  MT_MISC48,$/;"	e	enum:__anon137
MT_MISC49	src/info.h	/^  MT_MISC49,$/;"	e	enum:__anon137
MT_MISC5	src/info.h	/^  MT_MISC5,$/;"	e	enum:__anon137
MT_MISC50	src/info.h	/^  MT_MISC50,$/;"	e	enum:__anon137
MT_MISC51	src/info.h	/^  MT_MISC51,$/;"	e	enum:__anon137
MT_MISC52	src/info.h	/^  MT_MISC52,$/;"	e	enum:__anon137
MT_MISC53	src/info.h	/^  MT_MISC53,$/;"	e	enum:__anon137
MT_MISC54	src/info.h	/^  MT_MISC54,$/;"	e	enum:__anon137
MT_MISC55	src/info.h	/^  MT_MISC55,$/;"	e	enum:__anon137
MT_MISC56	src/info.h	/^  MT_MISC56,$/;"	e	enum:__anon137
MT_MISC57	src/info.h	/^  MT_MISC57,$/;"	e	enum:__anon137
MT_MISC58	src/info.h	/^  MT_MISC58,$/;"	e	enum:__anon137
MT_MISC59	src/info.h	/^  MT_MISC59,$/;"	e	enum:__anon137
MT_MISC6	src/info.h	/^  MT_MISC6,$/;"	e	enum:__anon137
MT_MISC60	src/info.h	/^  MT_MISC60,$/;"	e	enum:__anon137
MT_MISC61	src/info.h	/^  MT_MISC61,$/;"	e	enum:__anon137
MT_MISC62	src/info.h	/^  MT_MISC62,$/;"	e	enum:__anon137
MT_MISC63	src/info.h	/^  MT_MISC63,$/;"	e	enum:__anon137
MT_MISC64	src/info.h	/^  MT_MISC64,$/;"	e	enum:__anon137
MT_MISC65	src/info.h	/^  MT_MISC65,$/;"	e	enum:__anon137
MT_MISC66	src/info.h	/^  MT_MISC66,$/;"	e	enum:__anon137
MT_MISC67	src/info.h	/^  MT_MISC67,$/;"	e	enum:__anon137
MT_MISC68	src/info.h	/^  MT_MISC68,$/;"	e	enum:__anon137
MT_MISC69	src/info.h	/^  MT_MISC69,$/;"	e	enum:__anon137
MT_MISC7	src/info.h	/^  MT_MISC7,$/;"	e	enum:__anon137
MT_MISC70	src/info.h	/^  MT_MISC70,$/;"	e	enum:__anon137
MT_MISC71	src/info.h	/^  MT_MISC71,$/;"	e	enum:__anon137
MT_MISC72	src/info.h	/^  MT_MISC72,$/;"	e	enum:__anon137
MT_MISC73	src/info.h	/^  MT_MISC73,$/;"	e	enum:__anon137
MT_MISC74	src/info.h	/^  MT_MISC74,$/;"	e	enum:__anon137
MT_MISC75	src/info.h	/^  MT_MISC75,$/;"	e	enum:__anon137
MT_MISC76	src/info.h	/^  MT_MISC76,$/;"	e	enum:__anon137
MT_MISC77	src/info.h	/^  MT_MISC77,$/;"	e	enum:__anon137
MT_MISC78	src/info.h	/^  MT_MISC78,$/;"	e	enum:__anon137
MT_MISC79	src/info.h	/^  MT_MISC79,$/;"	e	enum:__anon137
MT_MISC8	src/info.h	/^  MT_MISC8,$/;"	e	enum:__anon137
MT_MISC80	src/info.h	/^  MT_MISC80,$/;"	e	enum:__anon137
MT_MISC81	src/info.h	/^  MT_MISC81,$/;"	e	enum:__anon137
MT_MISC82	src/info.h	/^  MT_MISC82,$/;"	e	enum:__anon137
MT_MISC83	src/info.h	/^  MT_MISC83,$/;"	e	enum:__anon137
MT_MISC84	src/info.h	/^  MT_MISC84,$/;"	e	enum:__anon137
MT_MISC85	src/info.h	/^  MT_MISC85,$/;"	e	enum:__anon137
MT_MISC86	src/info.h	/^  MT_MISC86,$/;"	e	enum:__anon137
MT_MISC9	src/info.h	/^  MT_MISC9,$/;"	e	enum:__anon137
MT_MUSICSOURCE	src/info.h	/^  MT_MUSICSOURCE, \/* MUSINFO lump *\/$/;"	e	enum:__anon137
MT_PAIN	src/info.h	/^  MT_PAIN,$/;"	e	enum:__anon137
MT_PLASMA	src/info.h	/^  MT_PLASMA,$/;"	e	enum:__anon137
MT_PLASMA1	src/info.h	/^  MT_PLASMA1, \/\/ killough 7\/11\/98: first  of alternating beta plasma fireballs$/;"	e	enum:__anon137
MT_PLASMA2	src/info.h	/^  MT_PLASMA2, \/\/ killough 7\/11\/98: second of alternating beta plasma fireballs$/;"	e	enum:__anon137
MT_PLAYER	src/info.h	/^  MT_PLAYER,$/;"	e	enum:__anon137
MT_POSSESSED	src/info.h	/^  MT_POSSESSED,$/;"	e	enum:__anon137
MT_PUFF	src/info.h	/^  MT_PUFF,$/;"	e	enum:__anon137
MT_PULL	src/info.h	/^  MT_PULL,    \/* controls pull source - phares 3\/20\/98 *\/$/;"	e	enum:__anon137
MT_PUSH	src/info.h	/^  MT_PUSH,    \/* controls push source - phares *\/$/;"	e	enum:__anon137
MT_ROCKET	src/info.h	/^  MT_ROCKET,$/;"	e	enum:__anon137
MT_SCEPTRE	src/info.h	/^  MT_SCEPTRE, \/\/ killough 7\/11\/98: evil sceptre in beta version$/;"	e	enum:__anon137
MT_SERGEANT	src/info.h	/^  MT_SERGEANT,$/;"	e	enum:__anon137
MT_SHADOWS	src/info.h	/^  MT_SHADOWS,$/;"	e	enum:__anon137
MT_SHOTGUN	src/info.h	/^  MT_SHOTGUN,$/;"	e	enum:__anon137
MT_SHOTGUY	src/info.h	/^  MT_SHOTGUY,$/;"	e	enum:__anon137
MT_SKULL	src/info.h	/^  MT_SKULL,$/;"	e	enum:__anon137
MT_SMOKE	src/info.h	/^  MT_SMOKE,$/;"	e	enum:__anon137
MT_SPAWNFIRE	src/info.h	/^  MT_SPAWNFIRE,$/;"	e	enum:__anon137
MT_SPAWNSHOT	src/info.h	/^  MT_SPAWNSHOT,$/;"	e	enum:__anon137
MT_SPIDER	src/info.h	/^  MT_SPIDER,$/;"	e	enum:__anon137
MT_STEALTHBABY	src/info.h	/^  MT_STEALTHBABY,$/;"	e	enum:__anon137
MT_STEALTHBRUISER	src/info.h	/^  MT_STEALTHBRUISER,$/;"	e	enum:__anon137
MT_STEALTHCHAINGUY	src/info.h	/^  MT_STEALTHCHAINGUY,$/;"	e	enum:__anon137
MT_STEALTHFATSO	src/info.h	/^  MT_STEALTHFATSO,$/;"	e	enum:__anon137
MT_STEALTHHEAD	src/info.h	/^  MT_STEALTHHEAD,$/;"	e	enum:__anon137
MT_STEALTHIMP	src/info.h	/^  MT_STEALTHIMP,$/;"	e	enum:__anon137
MT_STEALTHKNIGHT	src/info.h	/^  MT_STEALTHKNIGHT,$/;"	e	enum:__anon137
MT_STEALTHSERGEANT	src/info.h	/^  MT_STEALTHSERGEANT,$/;"	e	enum:__anon137
MT_STEALTHSHOTGUY	src/info.h	/^  MT_STEALTHSHOTGUY,$/;"	e	enum:__anon137
MT_STEALTHUNDEAD	src/info.h	/^  MT_STEALTHUNDEAD,$/;"	e	enum:__anon137
MT_STEALTHVILE	src/info.h	/^  MT_STEALTHVILE,$/;"	e	enum:__anon137
MT_STEALTHZOMBIE	src/info.h	/^  MT_STEALTHZOMBIE,$/;"	e	enum:__anon137
MT_SUPERSHOTGUN	src/info.h	/^  MT_SUPERSHOTGUN,$/;"	e	enum:__anon137
MT_TELEPORTMAN	src/info.h	/^  MT_TELEPORTMAN,$/;"	e	enum:__anon137
MT_TFOG	src/info.h	/^  MT_TFOG,$/;"	e	enum:__anon137
MT_TRACER	src/info.h	/^  MT_TRACER,$/;"	e	enum:__anon137
MT_TROOP	src/info.h	/^  MT_TROOP,$/;"	e	enum:__anon137
MT_TROOPSHOT	src/info.h	/^  MT_TROOPSHOT,$/;"	e	enum:__anon137
MT_UNDEAD	src/info.h	/^  MT_UNDEAD,$/;"	e	enum:__anon137
MT_VILE	src/info.h	/^  MT_VILE,$/;"	e	enum:__anon137
MT_WOLFSS	src/info.h	/^  MT_WOLFSS,$/;"	e	enum:__anon137
MULTILINE	src/PCRELIB/pcrecpp.h	/^static inline RE_Options MULTILINE() {$/;"	f	namespace:pcrecpp
MULTINET	src/n_net.h	32;"	d
MUL_SH	src/MUSIC/dbopl.c	111;"	d	file:
MUS2MID_H__	src/mus2mid.h	32;"	d
MUSICPLAYER_H__	src/MUSIC/musicplayer.h	25;"	d
MUSIC_DISABLED	src/s_sound.h	42;"	d
MUSIC_TMP_EXT	src/SDL/i_music.c	73;"	d	file:
MUS_PERCUSSION_CHAN	src/mus2mid.c	39;"	d	file:
M_ARGV_H__	src/m_argv.h	25;"	d
M_AVG_H__	src/m_avg.h	25;"	d
M_AddDefaultExtension	src/m_file.c	/^char* M_AddDefaultExtension(const char *path, const char *ext) {$/;"	f
M_AddParam	src/m_argv.c	/^void M_AddParam(const char *param)$/;"	f
M_AddToBox	src/m_bbox.c	/^void M_AddToBox(fixed_t* box,fixed_t x,fixed_t y)$/;"	f
M_ApplyDelta	src/m_delta.c	/^dboolean M_ApplyDelta(pbuf_t *b1, pbuf_t *b2, buf_t *delta) {$/;"	f
M_ArrayAddItem	src/m_misc.c	/^void M_ArrayAddItem(array_t *data, void *item, int itemsize) {$/;"	f
M_ArrayClear	src/m_misc.c	/^void M_ArrayClear(array_t *data) {$/;"	f
M_ArrayFree	src/m_misc.c	/^void M_ArrayFree(array_t *data) {$/;"	f
M_ArrayGetNewItem	src/m_misc.c	/^void* M_ArrayGetNewItem(array_t *data, int itemsize) {$/;"	f
M_Automap	src/m_menu.c	/^void M_Automap(int choice)$/;"	f
M_AverageInit	src/m_avg.c	/^void M_AverageInit(avg_t *avg) {$/;"	f
M_AverageNew	src/m_avg.c	/^avg_t* M_AverageNew(void) {$/;"	f
M_AverageUpdate	src/m_avg.c	/^void M_AverageUpdate(avg_t *avg, int new_data_point) {$/;"	f
M_BBOX_H__	src/m_bbox.h	25;"	d
M_BUF_H__	src/m_buf.h	25;"	d
M_Basename	src/m_file.c	/^char* M_Basename(const char *path) {$/;"	f
M_BufferClear	src/m_buf.c	/^void M_BufferClear(buf_t *buf) {$/;"	f
M_BufferCompact	src/m_buf.c	/^void M_BufferCompact(buf_t *buf) {$/;"	f
M_BufferCopy	src/m_buf.c	/^void M_BufferCopy(buf_t *dst, buf_t *src) {$/;"	f
M_BufferCopyString	src/m_buf.c	/^dboolean M_BufferCopyString(buf_t *dst, buf_t *src) {$/;"	f
M_BufferCursorCopy	src/m_buf.c	/^void M_BufferCursorCopy(buf_t *dst, buf_t *src) {$/;"	f
M_BufferEnsureCapacity	src/m_buf.c	/^void M_BufferEnsureCapacity(buf_t *buf, size_t capacity) {$/;"	f
M_BufferEnsureTotalCapacity	src/m_buf.c	/^void M_BufferEnsureTotalCapacity(buf_t *buf, size_t capacity) {$/;"	f
M_BufferEqualsData	src/m_buf.c	/^dboolean M_BufferEqualsData(buf_t *buf, const void *d, size_t size) {$/;"	f
M_BufferEqualsString	src/m_buf.c	/^dboolean M_BufferEqualsString(buf_t *buf, const char *s) {$/;"	f
M_BufferFree	src/m_buf.c	/^void M_BufferFree(buf_t *buf) {$/;"	f
M_BufferGetCapacity	src/m_buf.c	/^size_t M_BufferGetCapacity(buf_t *buf) {$/;"	f
M_BufferGetCursor	src/m_buf.c	/^size_t M_BufferGetCursor(buf_t *buf) {$/;"	f
M_BufferGetData	src/m_buf.c	/^char* M_BufferGetData(buf_t *buf) {$/;"	f
M_BufferGetDataAtCursor	src/m_buf.c	/^char* M_BufferGetDataAtCursor(buf_t *buf) {$/;"	f
M_BufferGetSize	src/m_buf.c	/^size_t M_BufferGetSize(buf_t *buf) {$/;"	f
M_BufferInit	src/m_buf.c	/^void M_BufferInit(buf_t *buf) {$/;"	f
M_BufferInitWithCapacity	src/m_buf.c	/^void M_BufferInitWithCapacity(buf_t *buf, size_t capacity) {$/;"	f
M_BufferMove	src/m_buf.c	/^dboolean M_BufferMove(buf_t *buf, size_t dpos, size_t spos, size_t count) {$/;"	f
M_BufferNew	src/m_buf.c	/^buf_t* M_BufferNew(void) {$/;"	f
M_BufferNewWithCapacity	src/m_buf.c	/^buf_t* M_BufferNewWithCapacity(size_t capacity) {$/;"	f
M_BufferPeek	src/m_buf.c	/^byte M_BufferPeek(buf_t *buf) {$/;"	f
M_BufferPrint	src/m_buf.c	/^void M_BufferPrint(buf_t *buf) {$/;"	f
M_BufferPrintAll	src/m_buf.c	/^void M_BufferPrintAll(buf_t *buf) {$/;"	f
M_BufferRead	src/m_buf.c	/^dboolean M_BufferRead(buf_t *buf, void *data, size_t size) {$/;"	f
M_BufferReadBool	src/m_buf.c	/^dboolean M_BufferReadBool(buf_t *buf, dboolean *b) {$/;"	f
M_BufferReadBools	src/m_buf.c	/^dboolean M_BufferReadBools(buf_t *buf, dboolean *b, size_t count) {$/;"	f
M_BufferReadChar	src/m_buf.c	/^dboolean M_BufferReadChar(buf_t *buf, char *c) {$/;"	f
M_BufferReadChars	src/m_buf.c	/^dboolean M_BufferReadChars(buf_t *buf, char *c, size_t count) {$/;"	f
M_BufferReadDouble	src/m_buf.c	/^dboolean M_BufferReadDouble(buf_t *buf, double *d) {$/;"	f
M_BufferReadDoubles	src/m_buf.c	/^dboolean M_BufferReadDoubles(buf_t *buf, double *d, size_t count) {$/;"	f
M_BufferReadFloat	src/m_buf.c	/^dboolean M_BufferReadFloat(buf_t *buf, float *f) {$/;"	f
M_BufferReadFloats	src/m_buf.c	/^dboolean M_BufferReadFloats(buf_t *buf, float *f, size_t count) {$/;"	f
M_BufferReadInt	src/m_buf.c	/^dboolean M_BufferReadInt(buf_t *buf, int *i) {$/;"	f
M_BufferReadInts	src/m_buf.c	/^dboolean M_BufferReadInts(buf_t *buf, int *i, size_t count) {$/;"	f
M_BufferReadLong	src/m_buf.c	/^dboolean M_BufferReadLong(buf_t *buf, int_64_t *l) {$/;"	f
M_BufferReadLongs	src/m_buf.c	/^dboolean M_BufferReadLongs(buf_t *buf, int_64_t *l, size_t count) {$/;"	f
M_BufferReadShort	src/m_buf.c	/^dboolean M_BufferReadShort(buf_t *buf, short *s) {$/;"	f
M_BufferReadShorts	src/m_buf.c	/^dboolean M_BufferReadShorts(buf_t *buf, short *s, size_t count) {$/;"	f
M_BufferReadString	src/m_buf.c	/^dboolean M_BufferReadString(buf_t *buf, char *s, size_t length) {$/;"	f
M_BufferReadStringDup	src/m_buf.c	/^dboolean M_BufferReadStringDup(buf_t *buf, char **s) {$/;"	f
M_BufferReadUChar	src/m_buf.c	/^dboolean M_BufferReadUChar(buf_t *buf, unsigned char *c) {$/;"	f
M_BufferReadUChars	src/m_buf.c	/^dboolean M_BufferReadUChars(buf_t *buf, unsigned char *c, size_t count) {$/;"	f
M_BufferReadUInt	src/m_buf.c	/^dboolean M_BufferReadUInt(buf_t *buf, unsigned int *i) {$/;"	f
M_BufferReadUInts	src/m_buf.c	/^dboolean M_BufferReadUInts(buf_t *buf, unsigned int *i, size_t count) {$/;"	f
M_BufferReadULong	src/m_buf.c	/^dboolean M_BufferReadULong(buf_t *buf, uint_64_t *l) {$/;"	f
M_BufferReadULongs	src/m_buf.c	/^dboolean M_BufferReadULongs(buf_t *buf, uint_64_t *l, size_t count) {$/;"	f
M_BufferReadUShort	src/m_buf.c	/^dboolean M_BufferReadUShort(buf_t *buf, unsigned short *s) {$/;"	f
M_BufferReadUShorts	src/m_buf.c	/^dboolean M_BufferReadUShorts(buf_t *buf, unsigned short *s, size_t count) {$/;"	f
M_BufferSeek	src/m_buf.c	/^dboolean M_BufferSeek(buf_t *buf, size_t pos) {$/;"	f
M_BufferSeekBackward	src/m_buf.c	/^dboolean M_BufferSeekBackward(buf_t *buf, size_t count) {$/;"	f
M_BufferSeekForward	src/m_buf.c	/^dboolean M_BufferSeekForward(buf_t *buf, size_t count) {$/;"	f
M_BufferSetData	src/m_buf.c	/^void M_BufferSetData(buf_t *buf, const void *data, size_t size) {$/;"	f
M_BufferSetFile	src/m_buf.c	/^dboolean M_BufferSetFile(buf_t *buf, const char *filename) {$/;"	f
M_BufferSetString	src/m_buf.c	/^void M_BufferSetString(buf_t *buf, const char *data, size_t length) {$/;"	f
M_BufferTruncate	src/m_buf.c	/^void M_BufferTruncate(buf_t *buf, size_t new_size) {$/;"	f
M_BufferWrite	src/m_buf.c	/^void M_BufferWrite(buf_t *buf, const void *data, size_t size) {$/;"	f
M_BufferWriteBool	src/m_buf.c	/^void M_BufferWriteBool(buf_t *buf, dboolean b) {$/;"	f
M_BufferWriteBools	src/m_buf.c	/^void M_BufferWriteBools(buf_t *buf, const dboolean *bools, size_t count) {$/;"	f
M_BufferWriteChar	src/m_buf.c	/^void M_BufferWriteChar(buf_t *buf, char c) {$/;"	f
M_BufferWriteChars	src/m_buf.c	/^void M_BufferWriteChars(buf_t *buf, const char *chars, size_t count) {$/;"	f
M_BufferWriteDouble	src/m_buf.c	/^void M_BufferWriteDouble(buf_t *buf, double d) {$/;"	f
M_BufferWriteDoubles	src/m_buf.c	/^void M_BufferWriteDoubles(buf_t *buf, const double *doubles, size_t count) {$/;"	f
M_BufferWriteFloat	src/m_buf.c	/^void M_BufferWriteFloat(buf_t *buf, float f) {$/;"	f
M_BufferWriteFloats	src/m_buf.c	/^void M_BufferWriteFloats(buf_t *buf, const float *floats, size_t count) {$/;"	f
M_BufferWriteInt	src/m_buf.c	/^void M_BufferWriteInt(buf_t *buf, int i) {$/;"	f
M_BufferWriteInts	src/m_buf.c	/^void M_BufferWriteInts(buf_t *buf, const int *ints, size_t count) {$/;"	f
M_BufferWriteLong	src/m_buf.c	/^void M_BufferWriteLong(buf_t *buf, int_64_t l) {$/;"	f
M_BufferWriteLongs	src/m_buf.c	/^void M_BufferWriteLongs(buf_t *buf, const int_64_t *longs, size_t count) {$/;"	f
M_BufferWriteShort	src/m_buf.c	/^void M_BufferWriteShort(buf_t *buf, short s) {$/;"	f
M_BufferWriteShorts	src/m_buf.c	/^void M_BufferWriteShorts(buf_t *buf, const short *shorts, size_t count) {$/;"	f
M_BufferWriteString	src/m_buf.c	/^void M_BufferWriteString(buf_t *buf, const char *string, size_t length) {$/;"	f
M_BufferWriteUChar	src/m_buf.c	/^void M_BufferWriteUChar(buf_t *buf, unsigned char c) {$/;"	f
M_BufferWriteUChars	src/m_buf.c	/^void M_BufferWriteUChars(buf_t *buf, const unsigned char *uchars, size_t count) {$/;"	f
M_BufferWriteUInt	src/m_buf.c	/^void M_BufferWriteUInt(buf_t *buf, unsigned int s) {$/;"	f
M_BufferWriteUInts	src/m_buf.c	/^void M_BufferWriteUInts(buf_t *buf, const unsigned int *uints, size_t count) {$/;"	f
M_BufferWriteULong	src/m_buf.c	/^void M_BufferWriteULong(buf_t *buf, uint_64_t l) {$/;"	f
M_BufferWriteULongs	src/m_buf.c	/^void M_BufferWriteULongs(buf_t *buf, const uint_64_t *ulongs, size_t count) {$/;"	f
M_BufferWriteUShort	src/m_buf.c	/^void M_BufferWriteUShort(buf_t *buf, unsigned short s) {$/;"	f
M_BufferWriteUShorts	src/m_buf.c	/^void M_BufferWriteUShorts(buf_t *buf, const unsigned short *ushorts,$/;"	f
M_BufferWriteZeros	src/m_buf.c	/^void M_BufferWriteZeros(buf_t *buf, size_t count) {$/;"	f
M_BufferZero	src/m_buf.c	/^void M_BufferZero(buf_t *buf) {$/;"	f
M_BuildDelta	src/m_delta.c	/^void M_BuildDelta(pbuf_t *b1, pbuf_t *b2, buf_t *delta) {$/;"	f
M_CHEAT_H__	src/m_cheat.h	25;"	d
M_ChangeAllowBoomColormaps	src/e6y.c	/^void M_ChangeAllowBoomColormaps(void)$/;"	f
M_ChangeAllowFog	src/gl_light.c	/^void M_ChangeAllowFog(void)$/;"	f
M_ChangeApplyPalette	src/st_stuff.c	/^void M_ChangeApplyPalette(void)$/;"	f
M_ChangeAspectRatio	src/e6y.c	/^void M_ChangeAspectRatio(void)$/;"	f
M_ChangeDemoExtendedFormat	src/r_demo.c	/^void M_ChangeDemoExtendedFormat(void)$/;"	f
M_ChangeDemoSmoothTurns	src/m_menu.c	/^void M_ChangeDemoSmoothTurns(void)$/;"	f
M_ChangeFOV	src/e6y.c	/^void M_ChangeFOV(void)$/;"	f
M_ChangeFullScreen	src/m_menu.c	/^void M_ChangeFullScreen(void)$/;"	f
M_ChangeInterlacedScanning	src/e6y.c	/^void M_ChangeInterlacedScanning(void)$/;"	f
M_ChangeLightMode	src/gl_light.c	/^void M_ChangeLightMode(void)$/;"	f
M_ChangeMIDIPlayer	src/SDL/i_emusic.c	/^void M_ChangeMIDIPlayer(void) {$/;"	f
M_ChangeMapMultisamling	src/am_map.c	/^void M_ChangeMapMultisamling(void)$/;"	f
M_ChangeMapTextured	src/am_map.c	/^void M_ChangeMapTextured(void)$/;"	f
M_ChangeMaxViewPitch	src/e6y.c	/^void M_ChangeMaxViewPitch(void)$/;"	f
M_ChangeMessages	src/m_menu.c	/^void M_ChangeMessages(int choice) {$/;"	f
M_ChangeMouseInvert	src/e6y.c	/^void M_ChangeMouseInvert(void)$/;"	f
M_ChangeMouseLook	src/e6y.c	/^void M_ChangeMouseLook(void)$/;"	f
M_ChangeMultiSample	src/e6y.c	/^void M_ChangeMultiSample(void)$/;"	f
M_ChangeRenderPrecise	src/e6y.c	/^void M_ChangeRenderPrecise(void)$/;"	f
M_ChangeScreenMultipleFactor	src/e6y.c	/^void M_ChangeScreenMultipleFactor(void)$/;"	f
M_ChangeSensitivity	src/m_menu.c	/^void M_ChangeSensitivity(int choice)$/;"	f
M_ChangeSpeed	src/e6y.c	/^void M_ChangeSpeed(void)$/;"	f
M_ChangeSpriteClip	src/e6y.c	/^void M_ChangeSpriteClip(void)$/;"	f
M_ChangeStretch	src/e6y.c	/^void M_ChangeStretch(void)$/;"	f
M_ChangeTextureHQResize	src/e6y.c	/^void M_ChangeTextureHQResize(void)$/;"	f
M_ChangeTextureParams	src/m_menu.c	/^void M_ChangeTextureParams(void)$/;"	f
M_ChangeTextureUseHires	src/e6y.c	/^void M_ChangeTextureUseHires(void)$/;"	f
M_ChangeUncappedFrameRate	src/r_fps.c	/^void M_ChangeUncappedFrameRate(void)$/;"	f
M_ChangeUseDetail	src/gl_detail.c	/^void M_ChangeUseDetail(void)$/;"	f
M_ChangeUseGLSurface	src/m_menu.c	/^void M_ChangeUseGLSurface(void)$/;"	f
M_ChangeVideoMode	src/m_menu.c	/^void M_ChangeVideoMode(void)$/;"	f
M_ChatStrings	src/m_menu.c	/^void M_ChatStrings(int choice)$/;"	f
M_CheckParm	src/d_server.c	/^int M_CheckParm(const char* p) { p = NULL; return 1; }$/;"	f
M_CheckParm	src/m_argv.c	/^int M_CheckParm(const char *check)$/;"	f
M_CheckParmEx	src/m_argv.c	/^int M_CheckParmEx(const char *check, char **params, int paramscount)$/;"	f
M_CheckWritableDir	src/m_misc.c	/^const char* M_CheckWritableDir(const char *dir) {$/;"	f
M_ChooseSkill	src/m_menu.c	/^void M_ChooseSkill(int choice)$/;"	f
M_ClearBox	src/m_bbox.c	/^void M_ClearBox (fixed_t *box)$/;"	f
M_ClearMenus	src/m_menu.c	/^void M_ClearMenus (void)$/;"	f
M_ClearRandom	src/m_random.c	/^void M_ClearRandom(void) {$/;"	f
M_Close	src/m_file.c	/^bool M_Close(int fd) {$/;"	f
M_CloseFile	src/m_file.c	/^bool M_CloseFile(FILE *f) {$/;"	f
M_Compat	src/m_menu.c	/^void M_Compat(int choice)$/;"	f
M_CreateFile	src/m_file.c	/^bool M_CreateFile(const char *path, int mode) {$/;"	f
M_CreateFolder	src/m_file.c	/^bool M_CreateFolder(const char *path, int mode) {$/;"	f
M_DELTA_H__	src/m_delta.h	25;"	d
M_DeleteFile	src/m_file.c	/^bool M_DeleteFile(const char *path) {$/;"	f
M_DeleteFileInFolder	src/m_file.c	/^bool M_DeleteFileInFolder(const char *folder, const char *file) {$/;"	f
M_DeleteFolder	src/m_file.c	/^bool M_DeleteFolder(const char *path) {$/;"	f
M_DeletePath	src/m_file.c	/^bool M_DeletePath(const char *path) {$/;"	f
M_Dirname	src/m_file.c	/^char* M_Dirname(const char *path) {$/;"	f
M_DirnameIsFolder	src/m_file.c	/^bool M_DirnameIsFolder(const char *path) {$/;"	f
M_DoNothing	src/m_menu.c	/^static void M_DoNothing(int choice)$/;"	f	file:
M_DoSave	src/m_menu.c	/^static void M_DoSave(int slot)$/;"	f	file:
M_DoScreenShot	src/m_misc.c	/^void M_DoScreenShot(const char* fname) {$/;"	f
M_DoubleToInt	src/m_misc.c	/^int M_DoubleToInt(double x) {$/;"	f
M_DrawAutoMap	src/m_menu.c	/^void M_DrawAutoMap(void)$/;"	f
M_DrawBackground	src/m_menu.c	/^static void M_DrawBackground(const char *flat, int scrn)$/;"	f	file:
M_DrawChatStrings	src/m_menu.c	/^void M_DrawChatStrings(void)$/;"	f
M_DrawColPal	src/m_menu.c	/^static void M_DrawColPal(void)$/;"	f	file:
M_DrawCompat	src/m_menu.c	/^void M_DrawCompat(void)$/;"	f
M_DrawCredits	src/m_menu.c	/^void M_DrawCredits(void)     \/\/ killough 10\/98: credit screen$/;"	f
M_DrawDefVerify	src/m_menu.c	/^static void M_DrawDefVerify(void)$/;"	f	file:
M_DrawEmptyCell	src/m_menu.c	/^void M_DrawEmptyCell (menu_t* menu,int item)$/;"	f
M_DrawEnemy	src/m_menu.c	/^void M_DrawEnemy(void)$/;"	f
M_DrawEpisode	src/m_menu.c	/^void M_DrawEpisode(void)$/;"	f
M_DrawExtHelp	src/m_menu.c	/^void M_DrawExtHelp(void)$/;"	f
M_DrawGeneral	src/m_menu.c	/^void M_DrawGeneral(void)$/;"	f
M_DrawHelp	src/m_menu.c	/^void M_DrawHelp (void)$/;"	f
M_DrawInstructions	src/m_menu.c	/^static void M_DrawInstructions(void)$/;"	f	file:
M_DrawItem	src/m_menu.c	/^static void M_DrawItem(const setup_menu_t* s)$/;"	f	file:
M_DrawKeybnd	src/m_menu.c	/^void M_DrawKeybnd(void)$/;"	f
M_DrawLoad	src/m_menu.c	/^void M_DrawLoad(void)$/;"	f
M_DrawMainMenu	src/m_menu.c	/^void M_DrawMainMenu(void)$/;"	f
M_DrawMenuString	src/m_menu.c	/^static void M_DrawMenuString(int cx, int cy, int color)$/;"	f	file:
M_DrawMessages	src/m_menu.c	/^void M_DrawMessages(void)$/;"	f
M_DrawMouse	src/m_menu.c	/^void M_DrawMouse(void)$/;"	f
M_DrawNewGame	src/m_menu.c	/^void M_DrawNewGame(void)$/;"	f
M_DrawOptions	src/m_menu.c	/^void M_DrawOptions(void)$/;"	f
M_DrawReadThis1	src/m_menu.c	/^void M_DrawReadThis1(void)$/;"	f
M_DrawReadThis2	src/m_menu.c	/^void M_DrawReadThis2(void)$/;"	f
M_DrawSave	src/m_menu.c	/^void M_DrawSave(void)$/;"	f
M_DrawSaveLoadBorder	src/m_menu.c	/^void M_DrawSaveLoadBorder(int x,int y)$/;"	f
M_DrawScreenItems	src/m_menu.c	/^static void M_DrawScreenItems(const setup_menu_t* src)$/;"	f	file:
M_DrawSelCell	src/m_menu.c	/^void M_DrawSelCell (menu_t* menu,int item)$/;"	f
M_DrawSetting	src/m_menu.c	/^static void M_DrawSetting(const setup_menu_t* s)$/;"	f	file:
M_DrawSetup	src/m_menu.c	/^void M_DrawSetup(void)$/;"	f
M_DrawSound	src/m_menu.c	/^void M_DrawSound(void)$/;"	f
M_DrawStatusHUD	src/m_menu.c	/^void M_DrawStatusHUD(void)$/;"	f
M_DrawString	src/m_menu.c	/^static void M_DrawString(int cx, int cy, int color, const char* ch)$/;"	f	file:
M_DrawStringCentered	src/m_menu.c	/^static void M_DrawStringCentered(int cx, int cy, int color, const char* ch)$/;"	f	file:
M_DrawThermo	src/m_menu.c	/^void M_DrawThermo(int x,int y,int thermWidth,int thermDot )$/;"	f
M_DrawTitle	src/m_menu.c	/^void M_DrawTitle(int x, int y, const char *patch, int cm,$/;"	f
M_DrawWeapons	src/m_menu.c	/^void M_DrawWeapons(void)$/;"	f
M_Drawer	src/m_menu.c	/^void M_Drawer (void)$/;"	f
M_EndGame	src/m_menu.c	/^void M_EndGame(int choice) {$/;"	f
M_EndGameResponse	src/m_menu.c	/^static void M_EndGameResponse(int ch)$/;"	f	file:
M_Enemy	src/m_menu.c	/^void M_Enemy(int choice)$/;"	f
M_Episode	src/m_menu.c	/^void M_Episode(int choice)$/;"	f
M_ExtHelp	src/m_menu.c	/^void M_ExtHelp(int choice)$/;"	f
M_ExtHelpNextScreen	src/m_menu.c	/^void M_ExtHelpNextScreen(int choice)$/;"	f
M_ExtractFileBase	src/m_file.c	/^void M_ExtractFileBase(const char *path, char *dest) {$/;"	f
M_FDLength	src/m_file.c	/^uint32_t M_FDLength(int fd) {$/;"	f
M_FILE_ERROR	src/m_file.c	32;"	d	file:
M_FILE_H__	src/m_file.h	25;"	d
M_FIXED_H__	src/m_fixed.h	25;"	d
M_FileLength	src/m_file.c	/^uint32_t M_FileLength(FILE *f) {$/;"	f
M_FindCheats	src/m_cheat.c	/^dboolean M_FindCheats(int key) {$/;"	f
M_FindCheats_Boom	src/m_cheat.c	/^static int M_FindCheats_Boom(int key) {$/;"	f	file:
M_FindCheats_Doom	src/m_cheat.c	/^static int M_FindCheats_Doom(int key) {$/;"	f	file:
M_FinishHelp	src/m_menu.c	/^void M_FinishHelp(int choice)        \/\/ killough 10\/98$/;"	f
M_FinishReadThis	src/m_menu.c	/^void M_FinishReadThis(int choice)$/;"	f
M_FlushFile	src/m_file.c	/^bool M_FlushFile(FILE *f) {$/;"	f
M_ForcedLoadGame	src/m_menu.c	/^void M_ForcedLoadGame(const char *msg)$/;"	f
M_General	src/m_menu.c	/^void M_General(int choice)$/;"	f
M_GetCurrentFolder	src/m_file.c	/^char* M_GetCurrentFolder(void) {$/;"	f
M_GetFileError	src/m_file.c	/^const char* M_GetFileError(void) {$/;"	f
M_GetFilePosition	src/m_file.c	/^long M_GetFilePosition(FILE *f) {$/;"	f
M_GetKeyString	src/m_menu.c	/^int M_GetKeyString(int c, int offset) {$/;"	f
M_GetPixelWidth	src/m_menu.c	/^static int M_GetPixelWidth(const char* ch)$/;"	f	file:
M_IndexInChoices	src/m_menu.c	/^static int M_IndexInChoices(const char *str, const char **choices) {$/;"	f	file:
M_Init	src/m_menu.c	/^void M_Init(void)$/;"	f
M_InitDefaults	src/m_menu.c	/^static void M_InitDefaults(void)$/;"	f	file:
M_InitDeltas	src/m_delta.c	/^void M_InitDeltas(void) {$/;"	f
M_InitExtendedHelp	src/m_menu.c	/^void M_InitExtendedHelp(void)$/;"	f
M_InitHelpScreen	src/m_menu.c	/^void M_InitHelpScreen(void)$/;"	f
M_IsAbsolutePath	src/m_file.c	/^bool M_IsAbsolutePath(const char *path) {$/;"	f
M_IsFile	src/m_file.c	/^bool M_IsFile(const char *path) {$/;"	f
M_IsFileInFolder	src/m_file.c	/^bool M_IsFileInFolder(const char *folder, const char *file) {$/;"	f
M_IsFolder	src/m_file.c	/^bool M_IsFolder(const char *path) {$/;"	f
M_IsRootFolder	src/m_file.c	/^bool M_IsRootFolder(const char *path) {$/;"	f
M_KeyBindings	src/m_menu.c	/^void M_KeyBindings(int choice)$/;"	f
M_ListFiles	src/m_file.c	/^GPtrArray* M_ListFiles(const char *path) {$/;"	f
M_ListFilesAndFolders	src/m_file.c	/^GPtrArray* M_ListFilesAndFolders(const char *path) {$/;"	f
M_ListFilesAndFoldersBuf	src/m_file.c	/^bool M_ListFilesAndFoldersBuf(const char *path, GPtrArray *files_and_folders) {$/;"	f
M_ListFilesBuf	src/m_file.c	/^bool M_ListFilesBuf(const char *path, GPtrArray *files) {$/;"	f
M_ListFolders	src/m_file.c	/^GPtrArray* M_ListFolders(const char *path) {$/;"	f
M_ListFoldersBuf	src/m_file.c	/^bool M_ListFoldersBuf(const char *path, GPtrArray *folders) {$/;"	f
M_LoadDefaults	src/m_misc.c	/^void M_LoadDefaults (void)$/;"	f
M_LoadGame	src/m_menu.c	/^void M_LoadGame (int choice)$/;"	f
M_LoadSelect	src/m_menu.c	/^void M_LoadSelect(int choice)$/;"	f
M_LocalizePath	src/m_file.c	/^char* M_LocalizePath(const char *path) {$/;"	f
M_LookupDefault	src/m_misc.c	/^struct default_s *M_LookupDefault(const char *name)$/;"	f
M_MENU_H__	src/m_menu.h	25;"	d
M_MISC_H__	src/m_misc.h	25;"	d
M_Messages	src/m_menu.c	/^void M_Messages(int choice)$/;"	f
M_Mouse	src/m_menu.c	/^void M_Mouse(int choice, int *sens)$/;"	f
M_MouseAccel	src/e6y.c	/^void M_MouseAccel(int choice)$/;"	f
M_MouseHoriz	src/m_menu.c	/^void M_MouseHoriz(int choice)$/;"	f
M_MouseMLook	src/e6y.c	/^void M_MouseMLook(int choice)$/;"	f
M_MouseVert	src/m_menu.c	/^void M_MouseVert(int choice)$/;"	f
M_MusicVol	src/m_menu.c	/^void M_MusicVol(int choice)$/;"	f
M_NewGame	src/m_menu.c	/^void M_NewGame(int choice)$/;"	f
M_Open	src/m_file.c	/^int M_Open(const char *path, int flags, int mode) {$/;"	f
M_OpenFile	src/m_file.c	/^FILE* M_OpenFile(const char *path, const char *mode) {$/;"	f
M_Options	src/m_menu.c	/^void M_Options(int choice)$/;"	f
M_PBUF_H__	src/m_pbuf.h	25;"	d
M_PBufAtEOF	src/m_pbuf.c	/^dboolean M_PBufAtEOF(pbuf_t *pbuf) {$/;"	f
M_PBufClear	src/m_pbuf.c	/^void M_PBufClear(pbuf_t *pbuf) {$/;"	f
M_PBufCompact	src/m_pbuf.c	/^void M_PBufCompact(pbuf_t *pbuf) {$/;"	f
M_PBufCopy	src/m_pbuf.c	/^void M_PBufCopy(pbuf_t *dst, pbuf_t *src) {$/;"	f
M_PBufEnsureCapacity	src/m_pbuf.c	/^void M_PBufEnsureCapacity(pbuf_t *pbuf, size_t capacity) {$/;"	f
M_PBufEnsureTotalCapacity	src/m_pbuf.c	/^void M_PBufEnsureTotalCapacity(pbuf_t *pbuf, size_t capacity) {$/;"	f
M_PBufFree	src/m_pbuf.c	/^void M_PBufFree(pbuf_t *pbuf) {$/;"	f
M_PBufGetBuffer	src/m_pbuf.c	/^buf_t* M_PBufGetBuffer(pbuf_t *pbuf) {$/;"	f
M_PBufGetCapacity	src/m_pbuf.c	/^size_t M_PBufGetCapacity(pbuf_t *pbuf) {$/;"	f
M_PBufGetCursor	src/m_pbuf.c	/^size_t M_PBufGetCursor(pbuf_t *pbuf) {$/;"	f
M_PBufGetData	src/m_pbuf.c	/^char* M_PBufGetData(pbuf_t *pbuf) {$/;"	f
M_PBufGetDataAtCursor	src/m_pbuf.c	/^char* M_PBufGetDataAtCursor(pbuf_t *pbuf) {$/;"	f
M_PBufGetError	src/m_pbuf.c	/^const char* M_PBufGetError(pbuf_t *pbuf) {$/;"	f
M_PBufGetSize	src/m_pbuf.c	/^size_t M_PBufGetSize(pbuf_t *pbuf) {$/;"	f
M_PBufInit	src/m_pbuf.c	/^void M_PBufInit(pbuf_t *pbuf) {$/;"	f
M_PBufInitWithCapacity	src/m_pbuf.c	/^void M_PBufInitWithCapacity(pbuf_t *pbuf, size_t capacity) {$/;"	f
M_PBufNew	src/m_pbuf.c	/^pbuf_t* M_PBufNew(void) {$/;"	f
M_PBufNewWithCapacity	src/m_pbuf.c	/^pbuf_t* M_PBufNewWithCapacity(size_t capacity) {$/;"	f
M_PBufPrint	src/m_pbuf.c	/^void M_PBufPrint(pbuf_t *pbuf) {$/;"	f
M_PBufReadArray	src/m_pbuf.c	/^dboolean M_PBufReadArray(pbuf_t *pbuf, unsigned int *array_size) {$/;"	f
M_PBufReadBool	src/m_pbuf.c	/^dboolean M_PBufReadBool(pbuf_t *pbuf, dboolean *b) {$/;"	f
M_PBufReadBoolArray	src/m_pbuf.c	/^dboolean M_PBufReadBoolArray(pbuf_t *pbuf, buf_t *bools, size_t limit) {$/;"	f
M_PBufReadBytes	src/m_pbuf.c	/^dboolean M_PBufReadBytes(pbuf_t *pbuf, buf_t *buf) {$/;"	f
M_PBufReadChar	src/m_pbuf.c	/^dboolean M_PBufReadChar(pbuf_t *pbuf, char *c) {$/;"	f
M_PBufReadCharArray	src/m_pbuf.c	/^dboolean M_PBufReadCharArray(pbuf_t *pbuf, buf_t *chars, size_t limit) {$/;"	f
M_PBufReadDouble	src/m_pbuf.c	/^dboolean M_PBufReadDouble(pbuf_t *pbuf, double *d) {$/;"	f
M_PBufReadDoubleArray	src/m_pbuf.c	/^dboolean M_PBufReadDoubleArray(pbuf_t *pbuf, buf_t *doubles, size_t limit) {$/;"	f
M_PBufReadFloat	src/m_pbuf.c	/^dboolean M_PBufReadFloat(pbuf_t *pbuf, float *f) {$/;"	f
M_PBufReadFloatArray	src/m_pbuf.c	/^dboolean M_PBufReadFloatArray(pbuf_t *pbuf, buf_t *floats, size_t limit) {$/;"	f
M_PBufReadInt	src/m_pbuf.c	/^dboolean M_PBufReadInt(pbuf_t *pbuf, int *i) {$/;"	f
M_PBufReadIntArray	src/m_pbuf.c	/^dboolean M_PBufReadIntArray(pbuf_t *pbuf, buf_t *ints, size_t limit) {$/;"	f
M_PBufReadLong	src/m_pbuf.c	/^dboolean M_PBufReadLong(pbuf_t *pbuf, int_64_t *l) {$/;"	f
M_PBufReadLongArray	src/m_pbuf.c	/^dboolean M_PBufReadLongArray(pbuf_t *pbuf, buf_t *longs, size_t limit) {$/;"	f
M_PBufReadMap	src/m_pbuf.c	/^dboolean M_PBufReadMap(pbuf_t *pbuf, unsigned int *map_size) {$/;"	f
M_PBufReadNil	src/m_pbuf.c	/^dboolean M_PBufReadNil(pbuf_t *pbuf) {$/;"	f
M_PBufReadShort	src/m_pbuf.c	/^dboolean M_PBufReadShort(pbuf_t *pbuf, short *s) {$/;"	f
M_PBufReadShortArray	src/m_pbuf.c	/^dboolean M_PBufReadShortArray(pbuf_t *pbuf, buf_t *shorts, size_t limit) {$/;"	f
M_PBufReadString	src/m_pbuf.c	/^dboolean M_PBufReadString(pbuf_t *pbuf, buf_t *buf, size_t limit) {$/;"	f
M_PBufReadStringArray	src/m_pbuf.c	/^dboolean M_PBufReadStringArray(pbuf_t *pbuf, GPtrArray *strings,$/;"	f
M_PBufReadUChar	src/m_pbuf.c	/^dboolean M_PBufReadUChar(pbuf_t *pbuf, unsigned char *c) {$/;"	f
M_PBufReadUCharArray	src/m_pbuf.c	/^dboolean M_PBufReadUCharArray(pbuf_t *pbuf, buf_t *uchars, size_t limit) {$/;"	f
M_PBufReadUInt	src/m_pbuf.c	/^dboolean M_PBufReadUInt(pbuf_t *pbuf, unsigned int *i) {$/;"	f
M_PBufReadUIntArray	src/m_pbuf.c	/^dboolean M_PBufReadUIntArray(pbuf_t *pbuf, buf_t *uints, size_t limit) {$/;"	f
M_PBufReadULong	src/m_pbuf.c	/^dboolean M_PBufReadULong(pbuf_t *pbuf, uint_64_t *l) {$/;"	f
M_PBufReadULongArray	src/m_pbuf.c	/^dboolean M_PBufReadULongArray(pbuf_t *pbuf, buf_t *ulongs, size_t limit) {$/;"	f
M_PBufReadUShort	src/m_pbuf.c	/^dboolean M_PBufReadUShort(pbuf_t *pbuf, unsigned short *s) {$/;"	f
M_PBufReadUShortArray	src/m_pbuf.c	/^dboolean M_PBufReadUShortArray(pbuf_t *pbuf, buf_t *ushorts, size_t limit) {$/;"	f
M_PBufSeek	src/m_pbuf.c	/^dboolean M_PBufSeek(pbuf_t *pbuf, size_t pos) {$/;"	f
M_PBufSeekBackward	src/m_pbuf.c	/^dboolean M_PBufSeekBackward(pbuf_t *pbuf, size_t count) {$/;"	f
M_PBufSeekForward	src/m_pbuf.c	/^dboolean M_PBufSeekForward(pbuf_t *pbuf, size_t count) {$/;"	f
M_PBufSetData	src/m_pbuf.c	/^void M_PBufSetData(pbuf_t *pbuf, void *data, size_t size) {$/;"	f
M_PBufSetFile	src/m_pbuf.c	/^dboolean M_PBufSetFile(pbuf_t *pbuf, const char *filename) {$/;"	f
M_PBufWriteArray	src/m_pbuf.c	/^dboolean M_PBufWriteArray(pbuf_t *pbuf, unsigned int array_size) {$/;"	f
M_PBufWriteBool	src/m_pbuf.c	/^dboolean M_PBufWriteBool(pbuf_t *pbuf, dboolean b) {$/;"	f
M_PBufWriteBoolArray	src/m_pbuf.c	/^dboolean M_PBufWriteBoolArray(pbuf_t *pbuf, buf_t *bools) {$/;"	f
M_PBufWriteBytes	src/m_pbuf.c	/^dboolean M_PBufWriteBytes(pbuf_t *pbuf, const void *data, size_t size) {$/;"	f
M_PBufWriteChar	src/m_pbuf.c	/^dboolean M_PBufWriteChar(pbuf_t *pbuf, char c) {$/;"	f
M_PBufWriteCharArray	src/m_pbuf.c	/^dboolean M_PBufWriteCharArray(pbuf_t *pbuf, buf_t *chars) {$/;"	f
M_PBufWriteDouble	src/m_pbuf.c	/^dboolean M_PBufWriteDouble(pbuf_t *pbuf, double d) {$/;"	f
M_PBufWriteDoubleArray	src/m_pbuf.c	/^dboolean M_PBufWriteDoubleArray(pbuf_t *pbuf, buf_t *doubles) {$/;"	f
M_PBufWriteFloat	src/m_pbuf.c	/^dboolean M_PBufWriteFloat(pbuf_t *pbuf, float f) {$/;"	f
M_PBufWriteFloatArray	src/m_pbuf.c	/^dboolean M_PBufWriteFloatArray(pbuf_t *pbuf, buf_t *floats) {$/;"	f
M_PBufWriteInt	src/m_pbuf.c	/^dboolean M_PBufWriteInt(pbuf_t *pbuf, int i) {$/;"	f
M_PBufWriteIntArray	src/m_pbuf.c	/^dboolean M_PBufWriteIntArray(pbuf_t *pbuf, buf_t *ints) {$/;"	f
M_PBufWriteLong	src/m_pbuf.c	/^dboolean M_PBufWriteLong(pbuf_t *pbuf, int_64_t l) {$/;"	f
M_PBufWriteLongArray	src/m_pbuf.c	/^dboolean M_PBufWriteLongArray(pbuf_t *pbuf, buf_t *longs) {$/;"	f
M_PBufWriteMap	src/m_pbuf.c	/^dboolean M_PBufWriteMap(pbuf_t *pbuf, unsigned int map_size) {$/;"	f
M_PBufWriteNil	src/m_pbuf.c	/^dboolean M_PBufWriteNil(pbuf_t *pbuf) {$/;"	f
M_PBufWriteShort	src/m_pbuf.c	/^dboolean M_PBufWriteShort(pbuf_t *pbuf, short s) {$/;"	f
M_PBufWriteShortArray	src/m_pbuf.c	/^dboolean M_PBufWriteShortArray(pbuf_t *pbuf, buf_t *shorts) {$/;"	f
M_PBufWriteString	src/m_pbuf.c	/^dboolean M_PBufWriteString(pbuf_t *pbuf, const char *data, size_t length) {$/;"	f
M_PBufWriteStringArray	src/m_pbuf.c	/^dboolean M_PBufWriteStringArray(pbuf_t *pbuf, GPtrArray *strings) {$/;"	f
M_PBufWriteUChar	src/m_pbuf.c	/^dboolean M_PBufWriteUChar(pbuf_t *pbuf, unsigned char c) {$/;"	f
M_PBufWriteUCharArray	src/m_pbuf.c	/^dboolean M_PBufWriteUCharArray(pbuf_t *pbuf, buf_t *uchars) {$/;"	f
M_PBufWriteUInt	src/m_pbuf.c	/^dboolean M_PBufWriteUInt(pbuf_t *pbuf, unsigned int i) {$/;"	f
M_PBufWriteUIntArray	src/m_pbuf.c	/^dboolean M_PBufWriteUIntArray(pbuf_t *pbuf, buf_t *uints) {$/;"	f
M_PBufWriteULong	src/m_pbuf.c	/^dboolean M_PBufWriteULong(pbuf_t *pbuf, uint_64_t l) {$/;"	f
M_PBufWriteULongArray	src/m_pbuf.c	/^dboolean M_PBufWriteULongArray(pbuf_t *pbuf, buf_t *ulongs) {$/;"	f
M_PBufWriteUShort	src/m_pbuf.c	/^dboolean M_PBufWriteUShort(pbuf_t *pbuf, unsigned short s) {$/;"	f
M_PBufWriteUShortArray	src/m_pbuf.c	/^dboolean M_PBufWriteUShortArray(pbuf_t *pbuf, buf_t *ushorts) {$/;"	f
M_PI	src/tables.h	43;"	d
M_ParseCmdLine	src/m_argv.c	/^void M_ParseCmdLine(char *cmdstart, char **argv, char *args, int *numargs, int *numchars)$/;"	f
M_PathExists	src/m_file.c	/^bool M_PathExists(const char *path) {$/;"	f
M_PathJoin	src/m_file.c	/^char* M_PathJoin(const char *one, const char *two) {$/;"	f
M_PathJoinBuf	src/m_file.c	/^bool M_PathJoinBuf(buf_t *buf, const char *one, const char *two) {$/;"	f
M_QuickLoad	src/m_menu.c	/^void M_QuickLoad(void)$/;"	f
M_QuickLoadResponse	src/m_menu.c	/^static void M_QuickLoadResponse(int ch)$/;"	f	file:
M_QuickSave	src/m_menu.c	/^void M_QuickSave(void)$/;"	f
M_QuickSaveResponse	src/m_menu.c	/^static void M_QuickSaveResponse(int ch)$/;"	f	file:
M_QuitDOOM	src/m_menu.c	/^void M_QuitDOOM(int choice)$/;"	f
M_QuitResponse	src/m_menu.c	/^static void M_QuitResponse(int ch)$/;"	f	file:
M_RANDOM_H__	src/m_random.h	25;"	d
M_Random	src/m_random.h	138;"	d
M_Read	src/m_file.c	/^bool M_Read(int fd, void *vbuf, size_t sz) {$/;"	f
M_ReadFile	src/m_file.c	/^bool M_ReadFile(const char *path, char **data, size_t *size) {$/;"	f
M_ReadFileBuf	src/m_file.c	/^bool M_ReadFileBuf(buf_t *buf, const char *path) {$/;"	f
M_ReadSaveStrings	src/m_menu.c	/^void M_ReadSaveStrings(void) {$/;"	f
M_ReadThis	src/m_menu.c	/^void M_ReadThis(int choice)$/;"	f
M_ReadThis2	src/m_menu.c	/^void M_ReadThis2(int choice)$/;"	f
M_RenamePath	src/m_file.c	/^bool M_RenamePath(const char *oldpath, const char *newpath) {$/;"	f
M_ResetDefaults	src/m_menu.c	/^static void M_ResetDefaults(void)$/;"	f	file:
M_Responder	src/m_menu.c	/^dboolean M_Responder(event_t* ev) {$/;"	f
M_RestartLevelResponse	src/m_menu.c	/^static void M_RestartLevelResponse(int ch)$/;"	f	file:
M_SWAP_H__	src/m_swap.h	25;"	d
M_SaveDefaults	src/m_misc.c	/^void M_SaveDefaults (void)$/;"	f
M_SaveGame	src/m_menu.c	/^void M_SaveGame(int choice)$/;"	f
M_SaveSelect	src/m_menu.c	/^void M_SaveSelect(int choice)$/;"	f
M_ScreenShot	src/m_misc.c	/^void M_ScreenShot(void) {$/;"	f
M_Seek	src/m_file.c	/^bool M_Seek(int fd, off_t offset, int origin) {$/;"	f
M_SeekFile	src/m_file.c	/^bool M_SeekFile(FILE *f, long int offset, int origin) {$/;"	f
M_SelectDone	src/m_menu.c	/^static void M_SelectDone(setup_menu_t* ptr)$/;"	f	file:
M_SetCurrentFolder	src/m_file.c	/^bool M_SetCurrentFolder(const char *path) {$/;"	f
M_SetCurrentMenu	src/m_menu.c	/^void M_SetCurrentMenu(menu_t *new_menu) {$/;"	f
M_SetFileExtension	src/m_file.c	/^char* M_SetFileExtension(const char *path, const char *ext) {$/;"	f
M_Setup	src/m_menu.c	/^void M_Setup(int choice)$/;"	f
M_SetupNextMenu	src/m_menu.c	/^void M_SetupNextMenu(menu_t *menudef)$/;"	f
M_SfxVol	src/m_menu.c	/^void M_SfxVol(int choice)$/;"	f
M_SizeDisplay	src/m_menu.c	/^void M_SizeDisplay(int choice)$/;"	f
M_Sound	src/m_menu.c	/^void M_Sound(int choice)$/;"	f
M_StartControlPanel	src/m_menu.c	/^void M_StartControlPanel (void)$/;"	f
M_StartMessage	src/m_menu.c	/^void M_StartMessage (const char* string,void* routine,dboolean input)$/;"	f
M_StatusBar	src/m_menu.c	/^void M_StatusBar(int choice)$/;"	f
M_StopMessage	src/m_menu.c	/^void M_StopMessage(void)$/;"	f
M_StrRTrim	src/m_misc.c	/^char *M_StrRTrim(char *str) {$/;"	f
M_StrToFloat	src/m_misc.c	/^int M_StrToFloat(const char *s, float *f) {      $/;"	f
M_StrToInt	src/m_misc.c	/^int M_StrToInt(const char *s, int *l) {      $/;"	f
M_StringHeight	src/m_menu.c	/^int M_StringHeight(const char* string)$/;"	f
M_StringWidth	src/m_menu.c	/^int M_StringWidth(const char* string)$/;"	f
M_StripAbsolutePath	src/m_file.c	/^char* M_StripAbsolutePath(const char *path) {$/;"	f
M_Strlwr	src/m_misc.c	/^char* M_Strlwr(char* str) {$/;"	f
M_Strupr	src/m_misc.c	/^char* M_Strupr(char* str) {$/;"	f
M_Ticker	src/m_menu.c	/^void M_Ticker (void)$/;"	f
M_Trans	src/m_menu.c	/^void M_Trans(void) \/\/ To reset translucency after setting it in menu$/;"	f
M_UnLocalizePath	src/m_file.c	/^char* M_UnLocalizePath(const char *local_path) {$/;"	f
M_UpdateCurrent	src/m_menu.c	/^static void M_UpdateCurrent(default_t* def)$/;"	f	file:
M_VerifyForcedLoadGame	src/m_menu.c	/^static void M_VerifyForcedLoadGame(int ch)$/;"	f	file:
M_VerifyNightmare	src/m_menu.c	/^static void M_VerifyNightmare(int ch)$/;"	f	file:
M_Weapons	src/m_menu.c	/^void M_Weapons(int choice)$/;"	f
M_WriteFile	src/m_file.c	/^bool M_WriteFile(const char *path, const char *contents, size_t size) {$/;"	f
M_WriteText	src/m_menu.c	/^void M_WriteText (int x,int y, const char* string, int cm)$/;"	f
M_X	src/m_menu.c	3563;"	d	file:
M_Y	src/m_menu.c	3564;"	d	file:
M_ZOOMIN	src/am_map.c	116;"	d	file:
M_ZOOMOUT	src/am_map.c	119;"	d	file:
MainDef	src/m_menu.c	/^menu_t MainDef =$/;"	v
MainMenu	src/m_menu.c	/^menuitem_t MainMenu[]=$/;"	v
MakeVolume	src/MUSIC/dbopl.c	/^static inline Bits MakeVolume( Bitu wave, Bitu volume ) {$/;"	f	file:
MarkAnimatedTextures	src/p_spec.c	/^void MarkAnimatedTextures(void)$/;"	f
MessageDef	src/m_menu.c	/^menu_t MessageDef =                                         \/\/ phares 4\/08\/98$/;"	v
MetaEvent	src/MUSIC/oplplayer.c	/^static void MetaEvent(opl_track_data_t *track, midi_event_t *event)$/;"	f	file:
MissedBackSideOverrun	src/g_overflow.c	/^int MissedBackSideOverrun(line_t *line)$/;"	f
MouseAccelChanging	src/e6y.c	/^void MouseAccelChanging(void)$/;"	f
MouseButtonPress	src/TEXTSCREEN/txt_window.c	/^static void MouseButtonPress(txt_window_t *window, int b)$/;"	f	file:
MouseDef	src/m_menu.c	/^menu_t MouseDef =$/;"	v
MouseMenu	src/m_menu.c	/^menuitem_t MouseMenu[]=$/;"	v
MouseShouldBeGrabbed	src/SDL/i_video.c	/^static dboolean MouseShouldBeGrabbed()$/;"	f	file:
MulTable	src/MUSIC/dbopl.c	/^static Bit16u MulTable[ 384 ];$/;"	v	file:
MultiSampleCaps	src/gl_hires.c	/^    } MultiSampleCaps;$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon76	typeref:struct:_DDRAW_H_DDPIXELFORMAT::__anon76::__anon77	file:
MusInfoThinker	src/s_advsound.c	/^void MusInfoThinker(mobj_t *thing)$/;"	f
NCMD_CHECKSUM	src/d_ipxgate.c	43;"	d	file:
NCMD_EXIT	src/d_ipxgate.c	39;"	d	file:
NCMD_KILL	src/d_ipxgate.c	42;"	d	file:
NCMD_RETRANSMIT	src/d_ipxgate.c	40;"	d	file:
NCMD_SETUP	src/d_ipxgate.c	41;"	d	file:
NEGATIVE_FIXNUM_MARKER	src/cmp.c	/^  NEGATIVE_FIXNUM_MARKER = 0xE0$/;"	e	enum:__anon5	file:
NETEND	src/d_englsh.h	56;"	d
NETPEER_FOR_EACH	src/n_peer.h	67;"	d
NET_CHANNEL_MAX	src/n_net.h	/^  NET_CHANNEL_MAX$/;"	e	enum:__anon204
NET_CHANNEL_RELIABLE	src/n_net.h	/^  NET_CHANNEL_RELIABLE,$/;"	e	enum:__anon204
NET_CHANNEL_UNRELIABLE	src/n_net.h	/^  NET_CHANNEL_UNRELIABLE,$/;"	e	enum:__anon204
NET_H__	src/n_net.h	25;"	d
NET_SYNC_TYPE_COMMAND	src/n_net.h	/^  NET_SYNC_TYPE_COMMAND,$/;"	e	enum:__anon205
NET_SYNC_TYPE_DELTA	src/n_net.h	/^  NET_SYNC_TYPE_DELTA,$/;"	e	enum:__anon205
NET_SYNC_TYPE_NONE	src/n_net.h	/^  NET_SYNC_TYPE_NONE,$/;"	e	enum:__anon205
NET_TIMEOUT	src/n_net.h	28;"	d
NEWGAME	src/d_englsh.h	42;"	d
NEWLINE	src/PCRELIB/config.h	87;"	d
NEWTEXTSPEED	src/f_finale.c	47;"	d	file:
NEWTEXTWAIT	src/f_finale.c	48;"	d	file:
NF_SUBSECTOR	src/doomdata.h	191;"	d
NG_SPACINGX	src/wi_stuff.c	87;"	d	file:
NG_STATSX	src/wi_stuff.c	85;"	d	file:
NG_STATSY	src/wi_stuff.c	84;"	d	file:
NIGHTMARE	src/d_englsh.h	46;"	d
NIL_MARKER	src/cmp.c	/^  NIL_MARKER             = 0xC0,$/;"	e	enum:__anon5	file:
NLBLOCK	src/PCRELIB/pcre_compile.c	68;"	d	file:
NLBLOCK	src/PCRELIB/pcre_dfa_exec.c	69;"	d	file:
NLBLOCK	src/PCRELIB/pcre_exec.c	68;"	d	file:
NORETURN	src/doomtype.h	80;"	d
NORETURN	src/doomtype.h	84;"	d
NORMALIZE_PLANE	src/gl_clipper.c	361;"	d	file:
NORM_PITCH	src/s_sound.c	61;"	d	file:
NORM_PRIORITY	src/s_sound.c	62;"	d	file:
NORM_SEP	src/s_sound.c	63;"	d	file:
NOT_COMMAND_CLIENT	src/n_proto.c	117;"	d	file:
NOT_COMMAND_SERVER	src/n_proto.c	107;"	d	file:
NOT_DELTA_CLIENT	src/n_proto.c	98;"	d	file:
NOT_DELTA_SERVER	src/n_proto.c	89;"	d	file:
NO_BOTTOMTEXTURES	src/r_defs.h	87;"	d
NO_INDEX	src/doomdata.h	88;"	d
NO_PALETTE_CHANGE	src/SDL/i_video.c	724;"	d	file:
NO_TEXTURE	src/r_data.h	82;"	d
NO_TOPTEXTURES	src/r_defs.h	86;"	d
NULL_BLOCK_MEMORY_ALLOC_ZONE	src/z_bmalloc.h	38;"	d
NULL_CopyRect	src/v_video.c	/^static void NULL_CopyRect(int srcscrn, int destscrn, int x, int y, int width, int height, enum patch_translation_e flags) {}$/;"	f	file:
NULL_DrawBackground	src/v_video.c	/^static void NULL_DrawBackground(const char *flatname, int n) {}$/;"	f	file:
NULL_DrawLine	src/v_video.c	/^static void NULL_DrawLine(fline_t* fl, int color) {}$/;"	f	file:
NULL_DrawLineWu	src/v_video.c	/^static void NULL_DrawLineWu(fline_t* fl, int color) {}$/;"	f	file:
NULL_DrawNumPatch	src/v_video.c	/^static void NULL_DrawNumPatch(int x, int y, int scrn, int lump, int cm, enum patch_translation_e flags) {}$/;"	f	file:
NULL_DrawNumPatchPrecise	src/v_video.c	/^static void NULL_DrawNumPatchPrecise(float x, float y, int scrn, int lump, int cm, enum patch_translation_e flags) {}$/;"	f	file:
NULL_FillFlat	src/v_video.c	/^static void NULL_FillFlat(int lump, int n, int x, int y, int width, int height, enum patch_translation_e flags) {}$/;"	f	file:
NULL_FillPatch	src/v_video.c	/^static void NULL_FillPatch(int lump, int n, int x, int y, int width, int height, enum patch_translation_e flags) {}$/;"	f	file:
NULL_FillRect	src/v_video.c	/^static void NULL_FillRect(int scrn, int x, int y, int width, int height, byte colour) {}$/;"	f	file:
NULL_PlotPixel	src/v_video.c	/^static void NULL_PlotPixel(int scrn, int x, int y, byte color) {}$/;"	f	file:
NULL_PlotPixelWu	src/v_video.c	/^static void NULL_PlotPixelWu(int scrn, int x, int y, byte color, int weight) {}$/;"	f	file:
NULL_SECTOR	src/r_defs.h	89;"	d
NULL_VBO_VERTEX	src/gl_intern.h	506;"	d
NULL_VBO_XYZ_UV	src/gl_intern.h	517;"	d
NUMAMMO	src/doomdef.h	/^  NUMAMMO,$/;"	e	enum:__anon50
NUMANIMS	src/wi_stuff.c	/^static int NUMANIMS[NUMEPISODES] =$/;"	v	file:
NUMBONUSPALS	src/st_stuff.c	55;"	d	file:
NUMCARDS	src/doomdef.h	/^  NUMCARDS$/;"	e	enum:__anon48
NUMCHATSTRINGS	src/m_misc.c	1260;"	d	file:
NUMCHEATPLYRLINES	src/am_map.c	179;"	d	file:
NUMCOLORMAPS	src/r_main.h	122;"	d
NUMCROSSMARKLINES	src/am_map.c	189;"	d	file:
NUMDIRS	src/p_enemy.c	/^  NUMDIRS$/;"	e	enum:__anon220	file:
NUMEPISODES	src/wi_stuff.c	55;"	d	file:
NUMKEYS	src/g_keys.h	26;"	d
NUMMAPS	src/wi_stuff.c	56;"	d	file:
NUMMOBJTYPES	src/info.h	/^  NUMMOBJTYPES  \/\/ Counter of how many there are$/;"	e	enum:__anon137
NUMMUSIC	src/sounds.h	/^  NUMMUSIC$/;"	e	enum:__anon317
NUMPLYRLINES	src/am_map.c	158;"	d	file:
NUMPOWERS	src/doomdef.h	/^  NUMPOWERS$/;"	e	enum:__anon51
NUMPRCLASS	src/m_random.h	/^  NUMPRCLASS               \/\/ MUST be last item in list$/;"	e	enum:__anon172
NUMPSPRITES	src/p_pspr.h	/^  NUMPSPRITES$/;"	e	enum:__anon225
NUMREDPALS	src/st_stuff.c	54;"	d	file:
NUMSFX	src/sounds.h	/^  NUMSFX$/;"	e	enum:__anon318
NUMSPRITES	src/info.h	/^  NUMSPRITES  \/* counter of how many there are *\/$/;"	e	enum:__anon134
NUMSTATES	src/info.h	/^  NUMSTATES  \/* Counter of how many there are *\/$/;"	e	enum:__anon135
NUMTHCLASS	src/p_tick.h	/^  NUMTHCLASS,$/;"	e	enum:__anon276
NUMTHINTRIANGLEGUYLINES	src/am_map.c	200;"	d	file:
NUMTRACES	src/hu_tracers.h	/^  NUMTRACES$/;"	e	enum:__anon126
NUMWEAPONS	src/doomdef.h	/^  NUMWEAPONS,$/;"	e	enum:__anon49
NUM_CHANNELS	src/mus2mid.c	36;"	d	file:
NUM_FREQUENCIES	src/i_pcsound.c	60;"	d	file:
NUM_HISTORY_TYPES	src/z_zone.c	/^enum {malloc_history, free_history, NUM_HISTORY_TYPES};$/;"	e	enum:__anon360	file:
NUM_MUS_PLAYERS	src/SDL/i_emusic.c	79;"	d	file:
NUM_QUITMESSAGES	src/dstrings.c	/^const size_t NUM_QUITMESSAGES = sizeof(endmsg) \/ sizeof(*endmsg) - 1;$/;"	v
NUM_SCREENS	src/v_video.h	133;"	d
N_ApplyStateDelta	src/n_state.c	/^bool N_ApplyStateDelta(game_state_delta_t *delta) {$/;"	f
N_BuildStateDelta	src/n_state.c	/^void N_BuildStateDelta(int tic, game_state_delta_t *delta) {$/;"	f
N_COLOUR	src/PCRELIB/pcregrep.c	185;"	d	file:
N_ClearStates	src/n_state.c	/^void N_ClearStates(void) {$/;"	f
N_Connect	src/n_net.c	/^dboolean N_Connect(const char *host, unsigned short port) {$/;"	f
N_ConnectToServer	src/n_net.c	/^dboolean N_ConnectToServer(const char *address) {$/;"	f
N_Disconnect	src/n_net.c	/^void N_Disconnect(void) {$/;"	f
N_DisconnectPeer	src/n_net.c	/^void N_DisconnectPeer(int peernum) {$/;"	f
N_DisconnectPlayer	src/n_net.c	/^void N_DisconnectPlayer(short playernum) {$/;"	f
N_EXCLUDE	src/PCRELIB/pcregrep.c	186;"	d	file:
N_GetDownloadBandwidth	src/n_net.c	/^uint32_t N_GetDownloadBandwidth(void) {$/;"	f
N_GetHostFromAddressString	src/n_net.c	/^size_t N_GetHostFromAddressString(const char *address, char **host) {$/;"	f
N_GetLatestState	src/n_state.c	/^game_state_t* N_GetLatestState(void) {$/;"	f
N_GetPortFromAddressString	src/n_net.c	/^dboolean N_GetPortFromAddressString(const char *address, uint16_t *port) {$/;"	f
N_GetUploadBandwidth	src/n_net.c	/^uint32_t N_GetUploadBandwidth(void) {$/;"	f
N_GetWad	src/d_client.c	/^dboolean N_GetWad(const char* name)$/;"	f
N_GetWad	src/n_main.c	/^bool N_GetWad(const char *name) {$/;"	f
N_HELP	src/PCRELIB/pcregrep.c	187;"	d	file:
N_HandlePacket	src/n_proto.c	/^void N_HandlePacket(int peernum, void *data, size_t data_size) {$/;"	f
N_INCLUDE	src/PCRELIB/pcregrep.c	188;"	d	file:
N_IPToConstString	src/n_net.c	/^const char* N_IPToConstString(int address) {$/;"	f
N_IPToInt	src/n_net.c	/^int N_IPToInt(const char *address) {$/;"	f
N_IPToString	src/n_net.c	/^size_t N_IPToString(int address, char *buffer) {$/;"	f
N_Init	src/n_net.c	/^void N_Init(void) {$/;"	f
N_InitNetGame	src/d_client.c	/^void N_InitNetGame (void)$/;"	f
N_InitNetGame	src/n_main.c	/^void N_InitNetGame(void) {$/;"	f
N_InitPeers	src/n_peer.c	/^void N_InitPeers(void) {$/;"	f
N_InitStates	src/n_state.c	/^void N_InitStates(void) {$/;"	f
N_LABEL	src/PCRELIB/pcregrep.c	189;"	d	file:
N_LOCALE	src/PCRELIB/pcregrep.c	190;"	d	file:
N_Listen	src/n_net.c	/^dboolean N_Listen(const char *host, unsigned short port) {$/;"	f
N_LoadLatestState	src/n_state.c	/^bool N_LoadLatestState(bool call_init_new) {$/;"	f
N_LoadState	src/n_state.c	/^bool N_LoadState(int tic, bool call_init_new) {$/;"	f
N_LogCommand	src/n_main.c	/^void N_LogCommand(netticcmd_t *ncmd) {$/;"	f
N_LogPlayerPosition	src/n_main.c	/^void N_LogPlayerPosition(player_t *player) {$/;"	f
N_MAIN_H__	src/n_main.h	25;"	d
N_NULL	src/PCRELIB/pcregrep.c	191;"	d	file:
N_PACK_H__	src/n_pack.h	25;"	d
N_PEER_H__	src/n_peer.h	25;"	d
N_PROTO_H__	src/n_proto.h	25;"	d
N_PackAuthRequest	src/n_pack.c	/^void N_PackAuthRequest(netpeer_t *np, const char *password) {$/;"	f
N_PackAuthResponse	src/n_pack.c	/^void N_PackAuthResponse(netpeer_t *np, auth_level_e auth_level) {$/;"	f
N_PackAutoaimChange	src/n_pack.c	/^void N_PackAutoaimChange(netpeer_t *np, short playernum,$/;"	f
N_PackBobbingChange	src/n_pack.c	/^void N_PackBobbingChange(netpeer_t *np, short playernum,$/;"	f
N_PackColorChange	src/n_pack.c	/^void N_PackColorChange(netpeer_t *np, short playernum, byte new_red,$/;"	f
N_PackColorIndexChange	src/n_pack.c	/^void N_PackColorIndexChange(netpeer_t *np, short playernum,$/;"	f
N_PackNameChange	src/n_pack.c	/^void N_PackNameChange(netpeer_t *np, short playernum, const char *new_name) {$/;"	f
N_PackPWOChange	src/n_pack.c	/^void N_PackPWOChange(netpeer_t *np, short playernum) {$/;"	f
N_PackPlayerMessage	src/n_pack.c	/^void N_PackPlayerMessage(netpeer_t *np, short sender, buf_t *recipients,$/;"	f
N_PackRCONCommand	src/n_pack.c	/^void N_PackRCONCommand(netpeer_t *np, const char *command) {$/;"	f
N_PackRelayedPlayerMessage	src/n_pack.c	/^void N_PackRelayedPlayerMessage(netpeer_t *np, short sender, short recipient,$/;"	f
N_PackServerMessage	src/n_pack.c	/^void N_PackServerMessage(netpeer_t *np, const char *message) {$/;"	f
N_PackSetup	src/n_pack.c	/^void N_PackSetup(netpeer_t *np) {$/;"	f
N_PackSkinChange	src/n_pack.c	/^void N_PackSkinChange(netpeer_t *np, short playernum) {$/;"	f
N_PackSync	src/n_pack.c	/^void N_PackSync(netpeer_t *np) {$/;"	f
N_PackTeamChange	src/n_pack.c	/^void N_PackTeamChange(netpeer_t *np, short playernum, byte new_team) {$/;"	f
N_PackVoteRequest	src/n_pack.c	/^void N_PackVoteRequest(netpeer_t *np, const char *command) {$/;"	f
N_PackWSOPChange	src/n_pack.c	/^void N_PackWSOPChange(netpeer_t *np, short playernum, byte new_wsop_flags) {$/;"	f
N_PackWeaponSpeedChange	src/n_pack.c	/^void N_PackWeaponSpeedChange(netpeer_t *np, short playernum,$/;"	f
N_ParseAddressString	src/n_net.c	/^size_t N_ParseAddressString(const char *address, char **host, uint16_t *port) {$/;"	f
N_PeerAdd	src/n_peer.c	/^unsigned int N_PeerAdd(void) {$/;"	f
N_PeerBeginMessage	src/n_peer.c	/^pbuf_t* N_PeerBeginMessage(int peernum, net_channel_e chan_type,$/;"	f
N_PeerCheckTimeout	src/n_peer.c	/^bool N_PeerCheckTimeout(int peernum) {$/;"	f
N_PeerClearReliable	src/n_peer.c	/^void N_PeerClearReliable(int peernum) {$/;"	f
N_PeerClearUnreliable	src/n_peer.c	/^void N_PeerClearUnreliable(int peernum) {$/;"	f
N_PeerFlushBuffers	src/n_peer.c	/^void N_PeerFlushBuffers(int peernum) {$/;"	f
N_PeerForPeer	src/n_peer.c	/^unsigned int N_PeerForPeer(ENetPeer *peer) {$/;"	f
N_PeerForPlayer	src/n_peer.c	/^netpeer_t* N_PeerForPlayer(short playernum) {$/;"	f
N_PeerGet	src/n_peer.c	/^netpeer_t* N_PeerGet(int peernum) {$/;"	f
N_PeerGetCount	src/n_peer.c	/^unsigned int N_PeerGetCount(void) {$/;"	f
N_PeerGetNumForPlayer	src/n_peer.c	/^unsigned int N_PeerGetNumForPlayer(short playernum) {$/;"	f
N_PeerGetPacket	src/n_peer.c	/^ENetPacket* N_PeerGetPacket(int peernum, net_channel_e chan_type) {$/;"	f
N_PeerIter	src/n_peer.c	/^bool N_PeerIter(netpeer_iter_t **it, netpeer_t **np) {$/;"	f
N_PeerIterRemove	src/n_peer.c	/^void N_PeerIterRemove(netpeer_iter_t *it, netpeer_t *np) {$/;"	f
N_PeerLoadIncoming	src/n_peer.c	/^bool N_PeerLoadIncoming(int peernum, unsigned char *data, size_t size) {$/;"	f
N_PeerLoadNextMessage	src/n_peer.c	/^bool N_PeerLoadNextMessage(int peernum, unsigned char *message_type) {$/;"	f
N_PeerRemove	src/n_peer.c	/^void N_PeerRemove(netpeer_t *np) {$/;"	f
N_PeerResetSync	src/n_peer.c	/^void N_PeerResetSync(int peernum) {$/;"	f
N_PeerSetConnected	src/n_peer.c	/^void N_PeerSetConnected(int peernum, ENetPeer *peer) {$/;"	f
N_PeerSetDisconnected	src/n_peer.c	/^void N_PeerSetDisconnected(int peernum) {$/;"	f
N_PrintAddress	src/n_net.c	/^void N_PrintAddress(FILE *fp, int peernum) {$/;"	f
N_ReadNewStateFromPackedBuffer	src/n_state.c	/^game_state_t* N_ReadNewStateFromPackedBuffer(int tic, pbuf_t *pbuf) {$/;"	f
N_Reconnect	src/n_net.c	/^dboolean N_Reconnect(void) {$/;"	f
N_RemoveOldStates	src/n_state.c	/^void N_RemoveOldStates(int tic) {$/;"	f
N_STATE_H__	src/n_state.h	25;"	d
N_SaveState	src/n_state.c	/^void N_SaveState(void) {$/;"	f
N_ServiceNetwork	src/n_net.c	/^void N_ServiceNetwork(void) {$/;"	f
N_ServiceNetworkTimeout	src/n_net.c	/^void N_ServiceNetworkTimeout(int timeout_ms) {$/;"	f
N_SetLatestState	src/n_state.c	/^void N_SetLatestState(game_state_t *state) {$/;"	f
N_Shutdown	src/n_net.c	/^void N_Shutdown(void) {$/;"	f
N_TryRunTics	src/d_client.c	/^void N_TryRunTics(void)$/;"	f
N_TryRunTics	src/n_main.c	/^bool N_TryRunTics(void) {$/;"	f
N_UnpackAuthRequest	src/n_pack.c	/^dboolean N_UnpackAuthRequest(netpeer_t *np, buf_t *buf) {$/;"	f
N_UnpackAuthResponse	src/n_pack.c	/^dboolean N_UnpackAuthResponse(netpeer_t *np, auth_level_e *auth_level) {$/;"	f
N_UnpackAutoaimChange	src/n_pack.c	/^dboolean N_UnpackAutoaimChange(netpeer_t *np, dboolean *new_autoaim_enabled) {$/;"	f
N_UnpackBobbingChanged	src/n_pack.c	/^dboolean N_UnpackBobbingChanged(netpeer_t *np, double *new_bobbing_amount) {$/;"	f
N_UnpackColorChange	src/n_pack.c	/^dboolean N_UnpackColorChange(netpeer_t *np, byte *new_red,$/;"	f
N_UnpackColorIndexChange	src/n_pack.c	/^dboolean N_UnpackColorIndexChange(netpeer_t *np, int *new_color_index) {$/;"	f
N_UnpackNameChange	src/n_pack.c	/^dboolean N_UnpackNameChange(netpeer_t *np, buf_t *buf) {$/;"	f
N_UnpackPWOChange	src/n_pack.c	/^dboolean N_UnpackPWOChange(netpeer_t *np) {$/;"	f
N_UnpackPlayerMessage	src/n_pack.c	/^dboolean N_UnpackPlayerMessage(netpeer_t *np, short *sender, buf_t *recipients,$/;"	f
N_UnpackPlayerPreferenceChange	src/n_pack.c	/^dboolean N_UnpackPlayerPreferenceChange(netpeer_t *np, int *tic,$/;"	f
N_UnpackPlayerPreferenceName	src/n_pack.c	/^dboolean N_UnpackPlayerPreferenceName(netpeer_t *np, buf_t *buf) {$/;"	f
N_UnpackRCONCommand	src/n_pack.c	/^dboolean N_UnpackRCONCommand(netpeer_t *np, buf_t *buf) {$/;"	f
N_UnpackServerMessage	src/n_pack.c	/^dboolean N_UnpackServerMessage(netpeer_t *np, buf_t *buf) {$/;"	f
N_UnpackSetup	src/n_pack.c	/^dboolean N_UnpackSetup(netpeer_t *np, net_sync_type_e *sync_type,$/;"	f
N_UnpackSkinChange	src/n_pack.c	/^dboolean N_UnpackSkinChange(netpeer_t *np, short *playernum) {$/;"	f
N_UnpackSync	src/n_pack.c	/^dboolean N_UnpackSync(netpeer_t *np) {$/;"	f
N_UnpackTeamChange	src/n_pack.c	/^dboolean N_UnpackTeamChange(netpeer_t *np, byte *new_team) {$/;"	f
N_UnpackVoteRequest	src/n_pack.c	/^dboolean N_UnpackVoteRequest(netpeer_t *np, buf_t *buf) {$/;"	f
N_UnpackWSOPChange	src/n_pack.c	/^dboolean N_UnpackWSOPChange(netpeer_t *np, byte *new_wsop_flags) {$/;"	f
N_UnpackWeaponSpeedChange	src/n_pack.c	/^dboolean N_UnpackWeaponSpeedChange(netpeer_t *np, byte *new_weapon_speed) {$/;"	f
N_UpdateSync	src/n_proto.c	/^void N_UpdateSync(void) {$/;"	f
N_WaitForPacket	src/n_net.c	/^void N_WaitForPacket(int ms) {$/;"	f
Name	src/e6y.h	/^	char Name[PATH_MAX];$/;"	m	struct:__anon66
NeedsScrollbars	src/TEXTSCREEN/txt_scrollpane.c	/^static int NeedsScrollbars(txt_scrollpane_t *scrollpane)$/;"	f	file:
NetUpdate	src/d_client.c	/^void NetUpdate(void)$/;"	f
NetbufferChecksum	src/d_ipxgate.c	/^unsigned NetbufferChecksum (void* p, size_t l)$/;"	f
NewDef	src/m_menu.c	/^menu_t NewDef =$/;"	v
NewDef	src/m_menu.c	/^menu_t NewDef;                                              \/\/ phares 5\/04\/98$/;"	v
NewGameMenu	src/m_menu.c	/^menuitem_t NewGameMenu[]=$/;"	v
NewIntDynArray	src/gl_texture.c	/^void* NewIntDynArray(int dimCount, int *dims)$/;"	f
NewLine	src/TEXTSCREEN/txt_io.c	/^static void NewLine(unsigned char *screendata)$/;"	f	file:
NewlineMode	src/PCRELIB/pcrecpp.cc	/^static int NewlineMode(int pcre_options) {$/;"	f	namespace:pcrecpp
NoInterpolateView	src/r_fps.c	/^static dboolean NoInterpolateView;$/;"	v	file:
NoState	src/wi_stuff.h	/^  NoState = -1,$/;"	e	enum:__anon349
NormalizeSlashes	src/d_main.c	/^static void NormalizeSlashes(char *str)$/;"	f	file:
NormalizeSlashes2	src/e6y.c	/^void NormalizeSlashes2(char *str)$/;"	f
NumberOfCapturingGroups	src/PCRELIB/pcrecpp.cc	/^int RE::NumberOfCapturingGroups() const {$/;"	f	class:pcrecpp::RE
ODoor	src/p_spec.h	/^  ODoor,$/;"	e	enum:__anon247
OFF	src/MUSIC/dbopl.h	/^        OFF,$/;"	e	enum:__anon202
OLDBFG_1FRAMES	src/info.c	1139;"	d	file:
OLDBFG_2FRAMES	src/info.c	1140;"	d	file:
OLDBFG_4FRAMES	src/info.c	1141;"	d	file:
OLDBFG_8FRAMES	src/info.c	1142;"	d	file:
OLD_GAME_OPTION_SIZE	src/g_game.h	67;"	d
ONCEILINGZ	src/p_mobj.h	377;"	d
ONFLOORZ	src/p_mobj.h	376;"	d
OPENGL_VERSION_1_0	src/gl_opengl.h	/^  OPENGL_VERSION_1_0,$/;"	e	enum:__anon109
OPENGL_VERSION_1_1	src/gl_opengl.h	/^  OPENGL_VERSION_1_1,$/;"	e	enum:__anon109
OPENGL_VERSION_1_2	src/gl_opengl.h	/^  OPENGL_VERSION_1_2,$/;"	e	enum:__anon109
OPENGL_VERSION_1_3	src/gl_opengl.h	/^  OPENGL_VERSION_1_3,$/;"	e	enum:__anon109
OPENGL_VERSION_1_4	src/gl_opengl.h	/^  OPENGL_VERSION_1_4,$/;"	e	enum:__anon109
OPENGL_VERSION_1_5	src/gl_opengl.h	/^  OPENGL_VERSION_1_5,$/;"	e	enum:__anon109
OPENGL_VERSION_2_0	src/gl_opengl.h	/^  OPENGL_VERSION_2_0,$/;"	e	enum:__anon109
OPENGL_VERSION_2_1	src/gl_opengl.h	/^  OPENGL_VERSION_2_1,$/;"	e	enum:__anon109
OPLPLAYER_H__	src/MUSIC/oplplayer.h	29;"	d
OPLRATE	src/MUSIC/dbopl.c	66;"	d	file:
OPLTimer_CalculateEndTime	src/MUSIC/opl.c	/^static void OPLTimer_CalculateEndTime(opl_timer_t *timer)$/;"	f	file:
OPL_AdvanceTime	src/MUSIC/opl.c	/^static void OPL_AdvanceTime(unsigned int nsamples) $/;"	f	file:
OPL_ClearCallbacks	src/MUSIC/opl.c	/^void OPL_ClearCallbacks(void)$/;"	f
OPL_DATA_PORT	src/MUSIC/opl.h	/^    OPL_DATA_PORT = 1$/;"	e	enum:__anon193
OPL_Init	src/MUSIC/opl.c	/^int OPL_Init (unsigned int rate)$/;"	f
OPL_InitRegisters	src/MUSIC/opl.c	/^void OPL_InitRegisters(void)$/;"	f
OPL_NUM_OPERATORS	src/MUSIC/opl.h	38;"	d
OPL_NUM_VOICES	src/MUSIC/opl.h	39;"	d
OPL_OPL_H	src/MUSIC/opl.h	28;"	d
OPL_QUEUE_H	src/MUSIC/opl_queue.h	27;"	d
OPL_Queue_Clear	src/MUSIC/opl_queue.c	/^void OPL_Queue_Clear(opl_callback_queue_t *queue)$/;"	f
OPL_Queue_Create	src/MUSIC/opl_queue.c	/^opl_callback_queue_t *OPL_Queue_Create(void)$/;"	f
OPL_Queue_Destroy	src/MUSIC/opl_queue.c	/^void OPL_Queue_Destroy(opl_callback_queue_t *queue)$/;"	f
OPL_Queue_IsEmpty	src/MUSIC/opl_queue.c	/^int OPL_Queue_IsEmpty(opl_callback_queue_t *queue)$/;"	f
OPL_Queue_Peek	src/MUSIC/opl_queue.c	/^unsigned int OPL_Queue_Peek(opl_callback_queue_t *queue)$/;"	f
OPL_Queue_Pop	src/MUSIC/opl_queue.c	/^int OPL_Queue_Pop(opl_callback_queue_t *queue,$/;"	f
OPL_Queue_Push	src/MUSIC/opl_queue.c	/^void OPL_Queue_Push(opl_callback_queue_t *queue,$/;"	f
OPL_REGISTER_PORT	src/MUSIC/opl.h	/^    OPL_REGISTER_PORT = 0,$/;"	e	enum:__anon193
OPL_REGS_ATTACK	src/MUSIC/opl.h	51;"	d
OPL_REGS_FEEDBACK	src/MUSIC/opl.h	59;"	d
OPL_REGS_FREQ_1	src/MUSIC/opl.h	57;"	d
OPL_REGS_FREQ_2	src/MUSIC/opl.h	58;"	d
OPL_REGS_LEVEL	src/MUSIC/opl.h	50;"	d
OPL_REGS_SUSTAIN	src/MUSIC/opl.h	52;"	d
OPL_REGS_TREMOLO	src/MUSIC/opl.h	49;"	d
OPL_REGS_WAVEFORM	src/MUSIC/opl.h	53;"	d
OPL_REG_FM_MODE	src/MUSIC/opl.h	45;"	d
OPL_REG_TIMER1	src/MUSIC/opl.h	42;"	d
OPL_REG_TIMER2	src/MUSIC/opl.h	43;"	d
OPL_REG_TIMER_CTRL	src/MUSIC/opl.h	44;"	d
OPL_REG_WAVEFORM_ENABLE	src/MUSIC/opl.h	41;"	d
OPL_ReadPort	src/MUSIC/opl.c	/^unsigned int OPL_ReadPort(opl_port_t port)$/;"	f
OPL_ReadStatus	src/MUSIC/opl.c	/^unsigned int OPL_ReadStatus(void)$/;"	f
OPL_Render_Samples	src/MUSIC/opl.c	/^void OPL_Render_Samples (void *dest, unsigned buffer_len)$/;"	f
OPL_SetCallback	src/MUSIC/opl.c	/^void OPL_SetCallback(unsigned int ms,$/;"	f
OPL_SetPaused	src/MUSIC/opl.c	/^void OPL_SetPaused(int paused)$/;"	f
OPL_Shutdown	src/MUSIC/opl.c	/^void OPL_Shutdown(void)$/;"	f
OPL_WritePort	src/MUSIC/opl.c	/^void OPL_WritePort(opl_port_t port, unsigned int value)$/;"	f
OPL_WriteRegister	src/MUSIC/opl.c	/^void OPL_WriteRegister(int reg, int value)$/;"	f
OP_ALT	src/PCRELIB/pcre_internal.h	/^  OP_ALT,            \/* 65 Start of alternation *\/$/;"	e	enum:__anon210
OP_ANY	src/PCRELIB/pcre_internal.h	/^  OP_ANY,            \/* 11 Match any character *\/$/;"	e	enum:__anon210
OP_ANYBYTE	src/PCRELIB/pcre_internal.h	/^  OP_ANYBYTE,        \/* 12 Match any byte (\\C); different to OP_ANY for UTF-8 *\/$/;"	e	enum:__anon210
OP_ASSERT	src/PCRELIB/pcre_internal.h	/^  OP_ASSERT,         \/* 69 Positive lookahead *\/$/;"	e	enum:__anon210
OP_ASSERTBACK	src/PCRELIB/pcre_internal.h	/^  OP_ASSERTBACK,     \/* 71 Positive lookbehind *\/$/;"	e	enum:__anon210
OP_ASSERTBACK_NOT	src/PCRELIB/pcre_internal.h	/^  OP_ASSERTBACK_NOT, \/* 72 Negative lookbehind *\/$/;"	e	enum:__anon210
OP_ASSERT_NOT	src/PCRELIB/pcre_internal.h	/^  OP_ASSERT_NOT,     \/* 70 Negative lookahead *\/$/;"	e	enum:__anon210
OP_BRA	src/PCRELIB/pcre_internal.h	/^  OP_BRA             \/* 80 This and greater values are used for brackets that$/;"	e	enum:__anon210
OP_BRAMINZERO	src/PCRELIB/pcre_internal.h	/^  OP_BRAMINZERO,     \/* 78 order. *\/$/;"	e	enum:__anon210
OP_BRANUMBER	src/PCRELIB/pcre_internal.h	/^  OP_BRANUMBER,      \/* 79 Used for extracting brackets whose number is greater$/;"	e	enum:__anon210
OP_BRAZERO	src/PCRELIB/pcre_internal.h	/^  OP_BRAZERO,        \/* 77 These two must remain together and in this *\/$/;"	e	enum:__anon210
OP_CALLOUT	src/PCRELIB/pcre_internal.h	/^  OP_CALLOUT,        \/* 64 Call out to external function if provided *\/$/;"	e	enum:__anon210
OP_CHAR	src/PCRELIB/pcre_internal.h	/^  OP_CHAR,           \/* 21 Match one character, casefully *\/$/;"	e	enum:__anon210
OP_CHARNC	src/PCRELIB/pcre_internal.h	/^  OP_CHARNC,         \/* 22 Match one character, caselessly *\/$/;"	e	enum:__anon210
OP_CIRC	src/PCRELIB/pcre_internal.h	/^  OP_CIRC,           \/* 19 Start of line - varies with multiline switch *\/$/;"	e	enum:__anon210
OP_CLASS	src/PCRELIB/pcre_internal.h	/^  OP_CLASS,          \/* 59 Match a character class, chars < 256 only *\/$/;"	e	enum:__anon210
OP_COND	src/PCRELIB/pcre_internal.h	/^  OP_COND,           \/* 75 Conditional group *\/$/;"	e	enum:__anon210
OP_CREF	src/PCRELIB/pcre_internal.h	/^  OP_CREF,           \/* 76 Used to hold an extraction string number (cond ref) *\/$/;"	e	enum:__anon210
OP_CRMINPLUS	src/PCRELIB/pcre_internal.h	/^  OP_CRMINPLUS,      \/* 54 be in exactly the same order as those above. *\/$/;"	e	enum:__anon210
OP_CRMINQUERY	src/PCRELIB/pcre_internal.h	/^  OP_CRMINQUERY,     \/* 56 *\/$/;"	e	enum:__anon210
OP_CRMINRANGE	src/PCRELIB/pcre_internal.h	/^  OP_CRMINRANGE,     \/* 58 *\/$/;"	e	enum:__anon210
OP_CRMINSTAR	src/PCRELIB/pcre_internal.h	/^  OP_CRMINSTAR,      \/* 52 all these opcodes must come in pairs, with *\/$/;"	e	enum:__anon210
OP_CRPLUS	src/PCRELIB/pcre_internal.h	/^  OP_CRPLUS,         \/* 53 the minimizing one second. These codes must *\/$/;"	e	enum:__anon210
OP_CRQUERY	src/PCRELIB/pcre_internal.h	/^  OP_CRQUERY,        \/* 55 These are for character classes and back refs *\/$/;"	e	enum:__anon210
OP_CRRANGE	src/PCRELIB/pcre_internal.h	/^  OP_CRRANGE,        \/* 57 These are different to the three sets above. *\/$/;"	e	enum:__anon210
OP_CRSTAR	src/PCRELIB/pcre_internal.h	/^  OP_CRSTAR,         \/* 51 The maximizing and minimizing versions of *\/$/;"	e	enum:__anon210
OP_DIGIT	src/PCRELIB/pcre_internal.h	/^  OP_DIGIT,              \/*  6 \\d *\/$/;"	e	enum:__anon210
OP_DIV	src/TEXTSCREEN/examples/calculator.c	/^    OP_DIV,$/;"	e	enum:__anon332	file:
OP_DOLL	src/PCRELIB/pcre_internal.h	/^  OP_DOLL,           \/* 20 End of line - varies with multiline switch *\/$/;"	e	enum:__anon210
OP_END	src/PCRELIB/pcre_internal.h	/^  OP_END,            \/* 0 End of pattern *\/$/;"	e	enum:__anon210
OP_EOD	src/PCRELIB/pcre_internal.h	/^  OP_EOD,            \/* 17 End of data: \\z *\/$/;"	e	enum:__anon210
OP_EODN	src/PCRELIB/pcre_internal.h	/^  OP_EODN,           \/* 16 End of data or \\n at end of data: \\Z. *\/$/;"	e	enum:__anon210
OP_EXACT	src/PCRELIB/pcre_internal.h	/^  OP_EXACT,          \/* 32 Exactly n matches *\/$/;"	e	enum:__anon210
OP_EXTUNI	src/PCRELIB/pcre_internal.h	/^  OP_EXTUNI,         \/* 15 \\X (extended Unicode sequence *\/$/;"	e	enum:__anon210
OP_EXTUNI_EXTRA	src/PCRELIB/pcre_dfa_exec.c	88;"	d	file:
OP_KET	src/PCRELIB/pcre_internal.h	/^  OP_KET,            \/* 66 End of group that doesn't have an unbounded repeat *\/$/;"	e	enum:__anon210
OP_KETRMAX	src/PCRELIB/pcre_internal.h	/^  OP_KETRMAX,        \/* 67 These two must remain together and in this *\/$/;"	e	enum:__anon210
OP_KETRMIN	src/PCRELIB/pcre_internal.h	/^  OP_KETRMIN,        \/* 68 order. They are for groups the repeat for ever. *\/$/;"	e	enum:__anon210
OP_LENGTHS	src/PCRELIB/pcre_internal.h	692;"	d
OP_MINPLUS	src/PCRELIB/pcre_internal.h	/^  OP_MINPLUS,        \/* 27 This first set applies to single characters *\/$/;"	e	enum:__anon210
OP_MINQUERY	src/PCRELIB/pcre_internal.h	/^  OP_MINQUERY,       \/* 29 *\/$/;"	e	enum:__anon210
OP_MINSTAR	src/PCRELIB/pcre_internal.h	/^  OP_MINSTAR,        \/* 25 all these opcodes must come in pairs, with *\/$/;"	e	enum:__anon210
OP_MINUPTO	src/PCRELIB/pcre_internal.h	/^  OP_MINUPTO,        \/* 31 *\/$/;"	e	enum:__anon210
OP_MINUS	src/TEXTSCREEN/examples/calculator.c	/^    OP_MINUS,$/;"	e	enum:__anon332	file:
OP_MULT	src/TEXTSCREEN/examples/calculator.c	/^    OP_MULT,$/;"	e	enum:__anon332	file:
OP_NAME_LIST	src/PCRELIB/pcre_internal.h	667;"	d
OP_NCLASS	src/PCRELIB/pcre_internal.h	/^  OP_NCLASS,         \/* 60 Same, but the bitmap was created from a negative$/;"	e	enum:__anon210
OP_NODATA	src/PCRELIB/pcregrep.c	/^enum { OP_NODATA, OP_STRING, OP_OP_STRING, OP_NUMBER, OP_OP_NUMBER,$/;"	e	enum:__anon216	file:
OP_NONE	src/TEXTSCREEN/examples/calculator.c	/^    OP_NONE,$/;"	e	enum:__anon332	file:
OP_NOT	src/PCRELIB/pcre_internal.h	/^  OP_NOT,            \/* 23 Match one character, not the following one *\/$/;"	e	enum:__anon210
OP_NOTEXACT	src/PCRELIB/pcre_internal.h	/^  OP_NOTEXACT,       \/* 41 Exactly n matches *\/$/;"	e	enum:__anon210
OP_NOTMINPLUS	src/PCRELIB/pcre_internal.h	/^  OP_NOTMINPLUS,     \/* 36 This set applies to "not" single characters *\/$/;"	e	enum:__anon210
OP_NOTMINQUERY	src/PCRELIB/pcre_internal.h	/^  OP_NOTMINQUERY,    \/* 38 *\/$/;"	e	enum:__anon210
OP_NOTMINSTAR	src/PCRELIB/pcre_internal.h	/^  OP_NOTMINSTAR,     \/* 34 all these opcodes must come in pairs, with *\/$/;"	e	enum:__anon210
OP_NOTMINUPTO	src/PCRELIB/pcre_internal.h	/^  OP_NOTMINUPTO,     \/* 40 *\/$/;"	e	enum:__anon210
OP_NOTPLUS	src/PCRELIB/pcre_internal.h	/^  OP_NOTPLUS,        \/* 35 the minimizing one second. *\/$/;"	e	enum:__anon210
OP_NOTPROP	src/PCRELIB/pcre_internal.h	/^  OP_NOTPROP,        \/* 13 \\P (not Unicode property) *\/$/;"	e	enum:__anon210
OP_NOTQUERY	src/PCRELIB/pcre_internal.h	/^  OP_NOTQUERY,       \/* 37 *\/$/;"	e	enum:__anon210
OP_NOTSTAR	src/PCRELIB/pcre_internal.h	/^  OP_NOTSTAR,        \/* 33 The maximizing and minimizing versions of *\/$/;"	e	enum:__anon210
OP_NOTUPTO	src/PCRELIB/pcre_internal.h	/^  OP_NOTUPTO,        \/* 39 From 0 to n matches *\/$/;"	e	enum:__anon210
OP_NOT_DIGIT	src/PCRELIB/pcre_internal.h	/^  OP_NOT_DIGIT,          \/*  5 \\D *\/$/;"	e	enum:__anon210
OP_NOT_WHITESPACE	src/PCRELIB/pcre_internal.h	/^  OP_NOT_WHITESPACE,     \/*  7 \\S *\/$/;"	e	enum:__anon210
OP_NOT_WORDCHAR	src/PCRELIB/pcre_internal.h	/^  OP_NOT_WORDCHAR,       \/*  9 \\W *\/$/;"	e	enum:__anon210
OP_NOT_WORD_BOUNDARY	src/PCRELIB/pcre_internal.h	/^  OP_NOT_WORD_BOUNDARY,  \/*  3 \\B *\/$/;"	e	enum:__anon210
OP_NUMBER	src/PCRELIB/pcregrep.c	/^enum { OP_NODATA, OP_STRING, OP_OP_STRING, OP_NUMBER, OP_OP_NUMBER,$/;"	e	enum:__anon216	file:
OP_ONCE	src/PCRELIB/pcre_internal.h	/^  OP_ONCE,           \/* 74 Once matched, don't back up into the subpattern *\/$/;"	e	enum:__anon210
OP_OPT	src/PCRELIB/pcre_internal.h	/^  OP_OPT,            \/* 18 Set runtime options *\/$/;"	e	enum:__anon210
OP_OP_NUMBER	src/PCRELIB/pcregrep.c	/^enum { OP_NODATA, OP_STRING, OP_OP_STRING, OP_NUMBER, OP_OP_NUMBER,$/;"	e	enum:__anon216	file:
OP_OP_STRING	src/PCRELIB/pcregrep.c	/^enum { OP_NODATA, OP_STRING, OP_OP_STRING, OP_NUMBER, OP_OP_NUMBER,$/;"	e	enum:__anon216	file:
OP_PATLIST	src/PCRELIB/pcregrep.c	/^       OP_PATLIST };$/;"	e	enum:__anon216	file:
OP_PLUS	src/PCRELIB/pcre_internal.h	/^  OP_PLUS,           \/* 26 the minimizing one second. *\/$/;"	e	enum:__anon210
OP_PLUS	src/TEXTSCREEN/examples/calculator.c	/^    OP_PLUS,$/;"	e	enum:__anon332	file:
OP_PROP	src/PCRELIB/pcre_internal.h	/^  OP_PROP,           \/* 14 \\p (Unicode property) *\/$/;"	e	enum:__anon210
OP_PROP_EXTRA	src/PCRELIB/pcre_dfa_exec.c	87;"	d	file:
OP_QUERY	src/PCRELIB/pcre_internal.h	/^  OP_QUERY,          \/* 28 *\/$/;"	e	enum:__anon210
OP_RECURSE	src/PCRELIB/pcre_internal.h	/^  OP_RECURSE,        \/* 63 Match a numbered subpattern (possibly recursive) *\/$/;"	e	enum:__anon210
OP_REF	src/PCRELIB/pcre_internal.h	/^  OP_REF,            \/* 62 Match a back reference *\/$/;"	e	enum:__anon210
OP_REVERSE	src/PCRELIB/pcre_internal.h	/^  OP_REVERSE,        \/* 73 Move pointer back - used in lookbehind assertions *\/$/;"	e	enum:__anon210
OP_SOD	src/PCRELIB/pcre_internal.h	/^  OP_SOD,            \/* 1 Start of data: \\A *\/$/;"	e	enum:__anon210
OP_SOM	src/PCRELIB/pcre_internal.h	/^  OP_SOM,            \/* 2 Start of match (subject + offset): \\G *\/$/;"	e	enum:__anon210
OP_STAR	src/PCRELIB/pcre_internal.h	/^  OP_STAR,           \/* 24 The maximizing and minimizing versions of *\/$/;"	e	enum:__anon210
OP_STRING	src/PCRELIB/pcregrep.c	/^enum { OP_NODATA, OP_STRING, OP_OP_STRING, OP_NUMBER, OP_OP_NUMBER,$/;"	e	enum:__anon216	file:
OP_TYPEEXACT	src/PCRELIB/pcre_internal.h	/^  OP_TYPEEXACT,      \/* 50 Exactly n matches *\/$/;"	e	enum:__anon210
OP_TYPEMINPLUS	src/PCRELIB/pcre_internal.h	/^  OP_TYPEMINPLUS,    \/* 45 be in exactly the same order as those above. *\/$/;"	e	enum:__anon210
OP_TYPEMINQUERY	src/PCRELIB/pcre_internal.h	/^  OP_TYPEMINQUERY,   \/* 47 *\/$/;"	e	enum:__anon210
OP_TYPEMINSTAR	src/PCRELIB/pcre_internal.h	/^  OP_TYPEMINSTAR,    \/* 43 all these opcodes must come in pairs, with *\/$/;"	e	enum:__anon210
OP_TYPEMINUPTO	src/PCRELIB/pcre_internal.h	/^  OP_TYPEMINUPTO,    \/* 49 *\/$/;"	e	enum:__anon210
OP_TYPEPLUS	src/PCRELIB/pcre_internal.h	/^  OP_TYPEPLUS,       \/* 44 the minimizing one second. These codes must *\/$/;"	e	enum:__anon210
OP_TYPEQUERY	src/PCRELIB/pcre_internal.h	/^  OP_TYPEQUERY,      \/* 46 This set applies to character types such as \\d *\/$/;"	e	enum:__anon210
OP_TYPESTAR	src/PCRELIB/pcre_internal.h	/^  OP_TYPESTAR,       \/* 42 The maximizing and minimizing versions of *\/$/;"	e	enum:__anon210
OP_TYPEUPTO	src/PCRELIB/pcre_internal.h	/^  OP_TYPEUPTO,       \/* 48 From 0 to n matches *\/$/;"	e	enum:__anon210
OP_UPTO	src/PCRELIB/pcre_internal.h	/^  OP_UPTO,           \/* 30 From 0 to n matches *\/$/;"	e	enum:__anon210
OP_WHITESPACE	src/PCRELIB/pcre_internal.h	/^  OP_WHITESPACE,         \/*  8 \\s *\/$/;"	e	enum:__anon210
OP_WORDCHAR	src/PCRELIB/pcre_internal.h	/^  OP_WORDCHAR,           \/* 10 \\w *\/$/;"	e	enum:__anon210
OP_WORD_BOUNDARY	src/PCRELIB/pcre_internal.h	/^  OP_WORD_BOUNDARY,      \/*  4 \\b *\/$/;"	e	enum:__anon210
OP_XCLASS	src/PCRELIB/pcre_internal.h	/^  OP_XCLASS,         \/* 61 Extended class for handling UTF-8 chars within the$/;"	e	enum:__anon210
ORIG_FRICTION	src/doomdef.h	255;"	d
ORIG_FRICTION_FACTOR	src/doomdef.h	256;"	d
OU	src/gl_main.c	1546;"	d	file:
OU	src/gl_main.c	1963;"	d	file:
OV	src/gl_main.c	1547;"	d	file:
OV	src/gl_main.c	1964;"	d	file:
OVECCOUNT	src/PCRELIB/pcredemo.c	46;"	d	file:
OVERDRIVE	src/p_mobj.h	388;"	d
OVERFLOW_DONUT	src/g_overflow.h	/^  OVERFLOW_DONUT,$/;"	e	enum:overrun_list_s
OVERFLOW_INTERCEPT	src/g_overflow.h	/^  OVERFLOW_INTERCEPT,$/;"	e	enum:overrun_list_s
OVERFLOW_MAX	src/g_overflow.h	/^  OVERFLOW_MAX \/\/last$/;"	e	enum:overrun_list_s
OVERFLOW_MISSEDBACKSIDE	src/g_overflow.h	/^  OVERFLOW_MISSEDBACKSIDE,$/;"	e	enum:overrun_list_s
OVERFLOW_PLYERINGAME	src/g_overflow.h	/^  OVERFLOW_PLYERINGAME,$/;"	e	enum:overrun_list_s
OVERFLOW_REJECT	src/g_overflow.h	/^  OVERFLOW_REJECT,$/;"	e	enum:overrun_list_s
OVERFLOW_SPECHIT	src/g_overflow.h	/^  OVERFLOW_SPECHIT,$/;"	e	enum:overrun_list_s
OV_PEG	src/gl_main.c	1548;"	d	file:
OV_PEG	src/gl_main.c	1965;"	d	file:
O_BINARY	src/doomdef.h	43;"	d
OdCDoor	src/p_spec.h	/^  OdCDoor,$/;"	e	enum:__anon247
OemFont	src/lprintf.c	/^HFONT OemFont;$/;"	v
OemHeight	src/lprintf.c	/^int OemWidth, OemHeight;$/;"	v
OemWidth	src/lprintf.c	/^int OemWidth, OemHeight;$/;"	v
Offset	src/PCRELIB/pcre_scanner.cc	/^int Scanner::Offset() const {$/;"	f	class:pcrecpp::Scanner
OnWMNotify	src/e6y_launcher.c	/^VOID OnWMNotify(LPARAM lParam)$/;"	f
OpOffsetTable	src/MUSIC/dbopl.c	/^static Bit16u OpOffsetTable[64];$/;"	v	file:
OpenScript	src/sc_man.c	/^static void OpenScript(void)$/;"	f	file:
OpenScriptByName	src/sc_man.c	/^static void OpenScriptByName(const char *name)$/;"	f	file:
OpenScriptByNum	src/sc_man.c	/^static void OpenScriptByNum(int lump)$/;"	f	file:
OpenSelectorWindow	src/TEXTSCREEN/txt_dropdown.c	/^static void OpenSelectorWindow(txt_dropdown_list_t *list)$/;"	f	file:
Operator	src/MUSIC/dbopl.h	/^typedef struct _Operator Operator;$/;"	t	typeref:struct:_Operator
OperatorState	src/MUSIC/dbopl.h	/^} OperatorState;$/;"	t	typeref:enum:__anon202
Operator__ForwardVolume	src/MUSIC/dbopl.c	/^static inline Bitu Operator__ForwardVolume(Operator *self) {$/;"	f	file:
Operator__ForwardWave	src/MUSIC/dbopl.c	/^static inline Bitu Operator__ForwardWave(Operator *self) {$/;"	f	file:
Operator__GetSample	src/MUSIC/dbopl.c	/^static inline Bits Operator__GetSample(Operator *self, Bits modulation ) {$/;"	f	file:
Operator__GetWave	src/MUSIC/dbopl.c	/^static inline Bits Operator__GetWave(Operator *self, Bitu index, Bitu vol ) {$/;"	f	file:
Operator__KeyOff	src/MUSIC/dbopl.c	/^static void Operator__KeyOff(Operator *self, Bit8u mask ) {$/;"	f	file:
Operator__KeyOn	src/MUSIC/dbopl.c	/^static void Operator__KeyOn(Operator *self, Bit8u mask ) {$/;"	f	file:
Operator__Operator	src/MUSIC/dbopl.c	/^static void Operator__Operator(Operator *self) {$/;"	f	file:
Operator__Prepare	src/MUSIC/dbopl.c	/^static inline void Operator__Prepare(Operator *self, const Chip* chip )  {$/;"	f	file:
Operator__RateForward	src/MUSIC/dbopl.c	/^static inline Bit32s Operator__RateForward(Operator *self, Bit32u add ) {$/;"	f	file:
Operator__SetState	src/MUSIC/dbopl.c	/^static inline void Operator__SetState(Operator *self, Bit8u s ) {$/;"	f	file:
Operator__Silent	src/MUSIC/dbopl.c	/^static inline int Operator__Silent(Operator *self) {$/;"	f	file:
Operator__TemplateVolume	src/MUSIC/dbopl.c	/^static Bits Operator__TemplateVolume(Operator *self, OperatorState yes) {$/;"	f	file:
Operator__UpdateAttack	src/MUSIC/dbopl.c	/^static inline void Operator__UpdateAttack(Operator *self, const Chip* chip ) {$/;"	f	file:
Operator__UpdateAttenuation	src/MUSIC/dbopl.c	/^static inline void Operator__UpdateAttenuation(Operator *self) {$/;"	f	file:
Operator__UpdateDecay	src/MUSIC/dbopl.c	/^static inline void Operator__UpdateDecay(Operator *self, const Chip* chip ) {$/;"	f	file:
Operator__UpdateFrequency	src/MUSIC/dbopl.c	/^static void Operator__UpdateFrequency(Operator *self) {$/;"	f	file:
Operator__UpdateRates	src/MUSIC/dbopl.c	/^static void Operator__UpdateRates(Operator *self, const Chip* chip ) {$/;"	f	file:
Operator__UpdateRelease	src/MUSIC/dbopl.c	/^static inline void Operator__UpdateRelease(Operator *self, const Chip* chip ) {$/;"	f	file:
Operator__Write20	src/MUSIC/dbopl.c	/^static void Operator__Write20(Operator *self, const Chip* chip, Bit8u val ) {$/;"	f	file:
Operator__Write40	src/MUSIC/dbopl.c	/^static void Operator__Write40(Operator *self, const Chip *chip, Bit8u val ) {$/;"	f	file:
Operator__Write60	src/MUSIC/dbopl.c	/^static void Operator__Write60(Operator *self, const Chip* chip, Bit8u val ) {$/;"	f	file:
Operator__Write80	src/MUSIC/dbopl.c	/^static void Operator__Write80(Operator *self, const Chip* chip, Bit8u val ) {$/;"	f	file:
Operator__WriteE0	src/MUSIC/dbopl.c	/^static void Operator__WriteE0(Operator *self, const Chip* chip, Bit8u val ) {$/;"	f	file:
OptionsDef	src/m_menu.c	/^menu_t OptionsDef =$/;"	v
OptionsMenu	src/m_menu.c	/^menuitem_t OptionsMenu[]=$/;"	v
OutOfMemory	src/SDL/SDL_win32_main.c	/^static BOOL OutOfMemory(void)$/;"	f	file:
OutputLevels	src/lprintf.h	/^} OutputLevels;$/;"	t	typeref:enum:__anon142
P1TEXT	src/d_englsh.h	531;"	d
P2TEXT	src/d_englsh.h	548;"	d
P3TEXT	src/d_englsh.h	559;"	d
P4TEXT	src/d_englsh.h	573;"	d
P5TEXT	src/d_englsh.h	589;"	d
P6TEXT	src/d_englsh.h	597;"	d
PACKAGE_NAME	src/MAC/config.h	26;"	d
PACKAGE_TARNAME	src/MAC/config.h	29;"	d
PACKAGE_VERSION	src/MAC/config.h	32;"	d
PACKEDATTR	src/MAC/config.h	132;"	d
PACKEDATTR	src/MUSIC/midifile.c	37;"	d	file:
PAL_BLACK	src/m_menu.c	1736;"	d	file:
PAL_WHITE	src/m_menu.c	1737;"	d	file:
PATCH_HASHOLES	src/r_patch.h	/^  PATCH_HASHOLES        = 0x00000004,$/;"	e	enum:__anon308
PATCH_ISNOTTILEABLE	src/r_patch.h	/^  PATCH_ISNOTTILEABLE   = 0x00000001,$/;"	e	enum:__anon308
PATCH_REPEAT	src/r_patch.h	/^  PATCH_REPEAT          = 0x00000002,$/;"	e	enum:__anon308
PATH_MAX	src/doomtype.h	70;"	d
PATH_MAX	src/doomtype.h	71;"	d
PCRE_ANCHORED	src/PCRELIB/pcre.h	125;"	d
PCRE_AUTO_CALLOUT	src/PCRELIB/pcre.h	135;"	d
PCRE_CASELESS	src/PCRELIB/pcre.h	121;"	d
PCRE_CONFIG_LINK_SIZE	src/PCRELIB/pcre.h	190;"	d
PCRE_CONFIG_MATCH_LIMIT	src/PCRELIB/pcre.h	192;"	d
PCRE_CONFIG_MATCH_LIMIT_RECURSION	src/PCRELIB/pcre.h	195;"	d
PCRE_CONFIG_NEWLINE	src/PCRELIB/pcre.h	189;"	d
PCRE_CONFIG_POSIX_MALLOC_THRESHOLD	src/PCRELIB/pcre.h	191;"	d
PCRE_CONFIG_STACKRECURSE	src/PCRELIB/pcre.h	193;"	d
PCRE_CONFIG_UNICODE_PROPERTIES	src/PCRELIB/pcre.h	194;"	d
PCRE_CONFIG_UTF8	src/PCRELIB/pcre.h	188;"	d
PCRE_DATA_SCOPE	src/PCRELIB/pcre.h	102;"	d
PCRE_DATA_SCOPE	src/PCRELIB/pcre.h	104;"	d
PCRE_DATA_SCOPE	src/PCRELIB/pcre.h	89;"	d
PCRE_DATA_SCOPE	src/PCRELIB/pcre.h	93;"	d
PCRE_DATA_SCOPE	src/PCRELIB/pcreposix.h	138;"	d
PCRE_DATA_SCOPE	src/PCRELIB/pcreposix.h	142;"	d
PCRE_DATA_SCOPE	src/PCRELIB/pcreposix.h	152;"	d
PCRE_DATA_SCOPE	src/PCRELIB/pcreposix.h	154;"	d
PCRE_DATE	src/PCRELIB/pcre.h	81;"	d
PCRE_DEFINITION	src/PCRELIB/pcre_internal.h	106;"	d
PCRE_DEFINITION	src/PCRELIB/pcrecpp.cc	43;"	d	file:
PCRE_DFA_RESTART	src/PCRELIB/pcre.h	138;"	d
PCRE_DFA_SHORTEST	src/PCRELIB/pcre.h	137;"	d
PCRE_DOLLAR_ENDONLY	src/PCRELIB/pcre.h	126;"	d
PCRE_DOTALL	src/PCRELIB/pcre.h	123;"	d
PCRE_DUPNAMES	src/PCRELIB/pcre.h	140;"	d
PCRE_ERROR_BADCOUNT	src/PCRELIB/pcre.h	161;"	d
PCRE_ERROR_BADMAGIC	src/PCRELIB/pcre.h	150;"	d
PCRE_ERROR_BADOPTION	src/PCRELIB/pcre.h	149;"	d
PCRE_ERROR_BADPARTIAL	src/PCRELIB/pcre.h	159;"	d
PCRE_ERROR_BADUTF8	src/PCRELIB/pcre.h	156;"	d
PCRE_ERROR_BADUTF8_OFFSET	src/PCRELIB/pcre.h	157;"	d
PCRE_ERROR_CALLOUT	src/PCRELIB/pcre.h	155;"	d
PCRE_ERROR_DFA_RECURSE	src/PCRELIB/pcre.h	166;"	d
PCRE_ERROR_DFA_UCOND	src/PCRELIB/pcre.h	163;"	d
PCRE_ERROR_DFA_UITEM	src/PCRELIB/pcre.h	162;"	d
PCRE_ERROR_DFA_UMLIMIT	src/PCRELIB/pcre.h	164;"	d
PCRE_ERROR_DFA_WSSIZE	src/PCRELIB/pcre.h	165;"	d
PCRE_ERROR_INTERNAL	src/PCRELIB/pcre.h	160;"	d
PCRE_ERROR_MATCHLIMIT	src/PCRELIB/pcre.h	154;"	d
PCRE_ERROR_NOMATCH	src/PCRELIB/pcre.h	147;"	d
PCRE_ERROR_NOMEMORY	src/PCRELIB/pcre.h	152;"	d
PCRE_ERROR_NOSUBSTRING	src/PCRELIB/pcre.h	153;"	d
PCRE_ERROR_NULL	src/PCRELIB/pcre.h	148;"	d
PCRE_ERROR_PARTIAL	src/PCRELIB/pcre.h	158;"	d
PCRE_ERROR_RECURSIONLIMIT	src/PCRELIB/pcre.h	167;"	d
PCRE_ERROR_UNKNOWN_NODE	src/PCRELIB/pcre.h	151;"	d
PCRE_EXTENDED	src/PCRELIB/pcre.h	124;"	d
PCRE_EXTRA	src/PCRELIB/pcre.h	127;"	d
PCRE_EXTRA_CALLOUT_DATA	src/PCRELIB/pcre.h	202;"	d
PCRE_EXTRA_MATCH_LIMIT	src/PCRELIB/pcre.h	201;"	d
PCRE_EXTRA_MATCH_LIMIT_RECURSION	src/PCRELIB/pcre.h	204;"	d
PCRE_EXTRA_STUDY_DATA	src/PCRELIB/pcre.h	200;"	d
PCRE_EXTRA_TABLES	src/PCRELIB/pcre.h	203;"	d
PCRE_FIRSTLINE	src/PCRELIB/pcre.h	139;"	d
PCRE_FIRSTSET	src/PCRELIB/pcre_internal.h	414;"	d
PCRE_IMS	src/PCRELIB/pcre_internal.h	405;"	d
PCRE_INFO_BACKREFMAX	src/PCRELIB/pcre.h	174;"	d
PCRE_INFO_CAPTURECOUNT	src/PCRELIB/pcre.h	173;"	d
PCRE_INFO_DEFAULT_TABLES	src/PCRELIB/pcre.h	183;"	d
PCRE_INFO_FIRSTBYTE	src/PCRELIB/pcre.h	175;"	d
PCRE_INFO_FIRSTCHAR	src/PCRELIB/pcre.h	176;"	d
PCRE_INFO_FIRSTTABLE	src/PCRELIB/pcre.h	177;"	d
PCRE_INFO_LASTLITERAL	src/PCRELIB/pcre.h	178;"	d
PCRE_INFO_NAMECOUNT	src/PCRELIB/pcre.h	180;"	d
PCRE_INFO_NAMEENTRYSIZE	src/PCRELIB/pcre.h	179;"	d
PCRE_INFO_NAMETABLE	src/PCRELIB/pcre.h	181;"	d
PCRE_INFO_OPTIONS	src/PCRELIB/pcre.h	171;"	d
PCRE_INFO_SIZE	src/PCRELIB/pcre.h	172;"	d
PCRE_INFO_STUDYSIZE	src/PCRELIB/pcre.h	182;"	d
PCRE_INTERNAL_H	src/PCRELIB/pcre_internal.h	69;"	d
PCRE_IS_SET	src/PCRELIB/pcrecpp.h	364;"	d
PCRE_JCHANGED	src/PCRELIB/pcre_internal.h	417;"	d
PCRE_MAJOR	src/PCRELIB/pcre.h	78;"	d
PCRE_MINOR	src/PCRELIB/pcre.h	79;"	d
PCRE_MULTILINE	src/PCRELIB/pcre.h	122;"	d
PCRE_NEWLINE_CR	src/PCRELIB/pcre.h	141;"	d
PCRE_NEWLINE_CRLF	src/PCRELIB/pcre.h	143;"	d
PCRE_NEWLINE_LF	src/PCRELIB/pcre.h	142;"	d
PCRE_NOPARTIAL	src/PCRELIB/pcre_internal.h	413;"	d
PCRE_NOTBOL	src/PCRELIB/pcre.h	128;"	d
PCRE_NOTEMPTY	src/PCRELIB/pcre.h	131;"	d
PCRE_NOTEOL	src/PCRELIB/pcre.h	129;"	d
PCRE_NO_AUTO_CAPTURE	src/PCRELIB/pcre.h	133;"	d
PCRE_NO_UTF8_CHECK	src/PCRELIB/pcre.h	134;"	d
PCRE_PARTIAL	src/PCRELIB/pcre.h	136;"	d
PCRE_PRERELEASE	src/PCRELIB/pcre.h	80;"	d
PCRE_REQCHSET	src/PCRELIB/pcre_internal.h	415;"	d
PCRE_SET_OR_CLEAR	src/PCRELIB/pcrecpp.h	360;"	d
PCRE_SPTR	src/PCRELIB/pcre.h	216;"	d
PCRE_SPTR	src/PCRELIB/pcre_internal.h	158;"	d
PCRE_SPTR	src/PCRELIB/pcre_internal.h	161;"	d
PCRE_SPY	src/PCRELIB/pcretest.c	74;"	d	file:
PCRE_STARTLINE	src/PCRELIB/pcre_internal.h	416;"	d
PCRE_STATIC	src/PCRELIB/config.h	167;"	d
PCRE_STATIC	src/r_demo.c	202;"	d	file:
PCRE_STUDY_MAPPED	src/PCRELIB/pcre_internal.h	421;"	d
PCRE_UNGREEDY	src/PCRELIB/pcre.h	130;"	d
PCRE_UTF8	src/PCRELIB/pcre.h	132;"	d
PCSCallbackFunc	src/i_pcsound.c	/^void PCSCallbackFunc(int *duration, int *freq)$/;"	f
PCSOUND_8253_FREQUENCY	src/PCSOUND/pcsound.h	29;"	d
PCSOUND_H__	src/PCSOUND/pcsound.h	27;"	d
PCSound_Init	src/PCSOUND/pcsound.c	/^int PCSound_Init(pcsound_callback_func callback_func)$/;"	f
PCSound_Linux_Init	src/PCSOUND/pcsound_linux.c	/^static int PCSound_Linux_Init(pcsound_callback_func callback_func)$/;"	f	file:
PCSound_Linux_Shutdown	src/PCSOUND/pcsound_linux.c	/^static void PCSound_Linux_Shutdown(void)$/;"	f	file:
PCSound_Mix_Callback	src/PCSOUND/pcsound_sdl.c	/^void PCSound_Mix_Callback(void *udata, Uint8 *stream, int len)$/;"	f
PCSound_SDL_Init	src/PCSOUND/pcsound_sdl.c	/^static int PCSound_SDL_Init(pcsound_callback_func callback_func)$/;"	f	file:
PCSound_SDL_Shutdown	src/PCSOUND/pcsound_sdl.c	/^static void PCSound_SDL_Shutdown(void)$/;"	f	file:
PCSound_Shutdown	src/PCSOUND/pcsound.c	/^void PCSound_Shutdown(void)$/;"	f
PCSound_Win32_Init	src/PCSOUND/pcsound_win32.c	/^static int PCSound_Win32_Init(pcsound_callback_func callback_func)$/;"	f	file:
PCSound_Win32_Shutdown	src/PCSOUND/pcsound_win32.c	/^static void PCSound_Win32_Shutdown(void)$/;"	f	file:
PC_ALLOW_SKY_TRANSFER_IN_BOOM	src/e6y.h	/^  PC_ALLOW_SKY_TRANSFER_IN_BOOM,$/;"	e	enum:__anon64
PC_ALLOW_SSG_DIRECT	src/e6y.h	/^  PC_ALLOW_SSG_DIRECT,$/;"	e	enum:__anon64
PC_APPLY_BLUE_ARMOR_CLASS_TO_MEGASPHERE	src/e6y.h	/^  PC_APPLY_BLUE_ARMOR_CLASS_TO_MEGASPHERE,$/;"	e	enum:__anon64
PC_APPLY_GREEN_ARMOR_CLASS_TO_ARMOR_BONUSES	src/e6y.h	/^  PC_APPLY_GREEN_ARMOR_CLASS_TO_ARMOR_BONUSES,$/;"	e	enum:__anon64
PC_APPLY_MBF_CODEPOINTERS_TO_ANY_COMPLEVEL	src/e6y.h	/^  PC_APPLY_MBF_CODEPOINTERS_TO_ANY_COMPLEVEL,$/;"	e	enum:__anon64
PC_BOOM_BRAINAWAKE	src/e6y.h	/^  PC_BOOM_BRAINAWAKE,$/;"	e	enum:__anon64
PC_BOOM_DEH_PARSER	src/e6y.h	/^  PC_BOOM_DEH_PARSER,$/;"	e	enum:__anon64
PC_DO_NOT_INHERIT_FRIENDLYNESS_FLAG_ON_SPAWN	src/e6y.h	/^  PC_DO_NOT_INHERIT_FRIENDLYNESS_FLAG_ON_SPAWN,$/;"	e	enum:__anon64
PC_DO_NOT_USE_MISC12_FRAME_PARAMETERS_IN_A_MUSHROOM	src/e6y.h	/^  PC_DO_NOT_USE_MISC12_FRAME_PARAMETERS_IN_A_MUSHROOM,$/;"	e	enum:__anon64
PC_FORCE_BOOM_FINDNEXTHIGHESTFLOOR	src/e6y.h	/^  PC_FORCE_BOOM_FINDNEXTHIGHESTFLOOR,$/;"	e	enum:__anon64
PC_FORCE_CORRECT_CODE_FOR_3_KEYS_DOORS_IN_MBF	src/e6y.h	/^  PC_FORCE_CORRECT_CODE_FOR_3_KEYS_DOORS_IN_MBF,$/;"	e	enum:__anon64
PC_FORCE_INCORRECT_BOBBING_IN_BOOM	src/e6y.h	/^  PC_FORCE_INCORRECT_BOBBING_IN_BOOM,$/;"	e	enum:__anon64
PC_FORCE_INCORRECT_PROCESSING_OF_RESPAWN_FRAME_ENTRY	src/e6y.h	/^  PC_FORCE_INCORRECT_PROCESSING_OF_RESPAWN_FRAME_ENTRY,$/;"	e	enum:__anon64
PC_FORCE_LXDOOM_DEMO_COMPATIBILITY	src/e6y.h	/^  PC_FORCE_LXDOOM_DEMO_COMPATIBILITY,$/;"	e	enum:__anon64
PC_MAX	src/e6y.h	/^  PC_MAX$/;"	e	enum:__anon64
PC_MBF_REMOVE_THINKER_IN_KILLMOBJ	src/e6y.h	/^  PC_MBF_REMOVE_THINKER_IN_KILLMOBJ,$/;"	e	enum:__anon64
PC_MONSTER_AVOID_HAZARDS	src/e6y.h	/^  PC_MONSTER_AVOID_HAZARDS,$/;"	e	enum:__anon64
PC_NO_DROPOFF	src/e6y.h	/^  PC_NO_DROPOFF,$/;"	e	enum:__anon64
PC_PRBOOM_FRICTION	src/e6y.h	/^  PC_PRBOOM_FRICTION,$/;"	e	enum:__anon64
PC_REJECT_PAD_WITH_FF	src/e6y.h	/^  PC_REJECT_PAD_WITH_FF,$/;"	e	enum:__anon64
PC_REMOVE_SLIME_TRAILS	src/e6y.h	/^  PC_REMOVE_SLIME_TRAILS,$/;"	e	enum:__anon64
PC_RESET_MONSTERSPAWNER_PARAMS_AFTER_LOADING	src/e6y.h	/^  PC_RESET_MONSTERSPAWNER_PARAMS_AFTER_LOADING,$/;"	e	enum:__anon64
PC_TREAT_NO_CLIPPING_THINGS_AS_NOT_BLOCKING	src/e6y.h	/^  PC_TREAT_NO_CLIPPING_THINGS_AS_NOT_BLOCKING,$/;"	e	enum:__anon64
PC_TRUNCATED_SECTOR_SPECIALS	src/e6y.h	/^  PC_TRUNCATED_SECTOR_SPECIALS,$/;"	e	enum:__anon64
PC_UNINITIALIZE_CRUSH_FIELD_FOR_STAIRS	src/e6y.h	/^  PC_UNINITIALIZE_CRUSH_FIELD_FOR_STAIRS,$/;"	e	enum:__anon64
PD_ALL3	src/d_englsh.h	129;"	d
PD_ALL6	src/d_englsh.h	130;"	d
PD_ANY	src/d_englsh.h	128;"	d
PD_BLUEC	src/d_englsh.h	122;"	d
PD_BLUEK	src/d_englsh.h	118;"	d
PD_BLUEO	src/d_englsh.h	115;"	d
PD_BLUES	src/d_englsh.h	125;"	d
PD_REDC	src/d_englsh.h	123;"	d
PD_REDK	src/d_englsh.h	119;"	d
PD_REDO	src/d_englsh.h	116;"	d
PD_REDS	src/d_englsh.h	126;"	d
PD_YELLOWC	src/d_englsh.h	124;"	d
PD_YELLOWK	src/d_englsh.h	120;"	d
PD_YELLOWO	src/d_englsh.h	117;"	d
PD_YELLOWS	src/d_englsh.h	127;"	d
PHUSTR_1	src/d_englsh.h	215;"	d
PHUSTR_10	src/d_englsh.h	224;"	d
PHUSTR_11	src/d_englsh.h	225;"	d
PHUSTR_12	src/d_englsh.h	227;"	d
PHUSTR_13	src/d_englsh.h	228;"	d
PHUSTR_14	src/d_englsh.h	229;"	d
PHUSTR_15	src/d_englsh.h	230;"	d
PHUSTR_16	src/d_englsh.h	231;"	d
PHUSTR_17	src/d_englsh.h	232;"	d
PHUSTR_18	src/d_englsh.h	233;"	d
PHUSTR_19	src/d_englsh.h	234;"	d
PHUSTR_2	src/d_englsh.h	216;"	d
PHUSTR_20	src/d_englsh.h	235;"	d
PHUSTR_21	src/d_englsh.h	237;"	d
PHUSTR_22	src/d_englsh.h	238;"	d
PHUSTR_23	src/d_englsh.h	239;"	d
PHUSTR_24	src/d_englsh.h	240;"	d
PHUSTR_25	src/d_englsh.h	241;"	d
PHUSTR_26	src/d_englsh.h	242;"	d
PHUSTR_27	src/d_englsh.h	243;"	d
PHUSTR_28	src/d_englsh.h	244;"	d
PHUSTR_29	src/d_englsh.h	245;"	d
PHUSTR_3	src/d_englsh.h	217;"	d
PHUSTR_30	src/d_englsh.h	246;"	d
PHUSTR_31	src/d_englsh.h	248;"	d
PHUSTR_32	src/d_englsh.h	249;"	d
PHUSTR_4	src/d_englsh.h	218;"	d
PHUSTR_5	src/d_englsh.h	219;"	d
PHUSTR_6	src/d_englsh.h	220;"	d
PHUSTR_7	src/d_englsh.h	221;"	d
PHUSTR_8	src/d_englsh.h	222;"	d
PHUSTR_9	src/d_englsh.h	223;"	d
PI	src/MUSIC/dbopl.c	63;"	d	file:
PICKUP_SOUND	src/s_sound.h	71;"	d
PIT_AddLineIntercepts	src/p_maputl.c	/^dboolean PIT_AddLineIntercepts(line_t *ld)$/;"	f
PIT_AddThingIntercepts	src/p_maputl.c	/^dboolean PIT_AddThingIntercepts(mobj_t *thing)$/;"	f
PIT_ApplyTorque	src/p_map.c	/^static dboolean PIT_ApplyTorque(line_t *ld)$/;"	f	file:
PIT_AvoidDropoff	src/p_enemy.c	/^static dboolean PIT_AvoidDropoff(line_t *line)$/;"	f	file:
PIT_ChangeSector	src/p_map.c	/^dboolean PIT_ChangeSector (mobj_t* thing)$/;"	f
PIT_CheckLine	src/p_map.c	/^dboolean PIT_CheckLine (line_t* ld)$/;"	f	file:
PIT_CheckThing	src/p_map.c	/^static dboolean PIT_CheckThing(mobj_t *thing) \/\/ killough 3\/26\/98: make static$/;"	f	file:
PIT_CrossLine	src/p_map.c	/^dboolean PIT_CrossLine (line_t* ld)$/;"	f	file:
PIT_FindTarget	src/p_enemy.c	/^static dboolean PIT_FindTarget(mobj_t *mo)$/;"	f	file:
PIT_GetSectors	src/p_map.c	/^dboolean PIT_GetSectors(line_t* ld)$/;"	f
PIT_PushThing	src/p_spec.c	/^static dboolean PIT_PushThing(mobj_t* thing)$/;"	f	file:
PIT_RadiusAttack	src/p_map.c	/^dboolean PIT_RadiusAttack (mobj_t* thing)$/;"	f
PIT_StompThing	src/p_map.c	/^dboolean PIT_StompThing (mobj_t* thing)$/;"	f
PIT_VileCheck	src/p_enemy.c	/^static dboolean PIT_VileCheck(mobj_t *thing)$/;"	f	file:
PKT_BACKOFF	src/protocol.h	/^  PKT_BACKOFF, \/\/ Request for client back-off$/;"	e	enum:packet_type_e
PKT_DOWN	src/protocol.h	/^  PKT_DOWN,    \/\/ Server downed$/;"	e	enum:packet_type_e
PKT_EXTRA	src/protocol.h	/^  PKT_EXTRA,   \/\/ Extra info packet$/;"	e	enum:packet_type_e
PKT_GO	src/protocol.h	/^  PKT_GO,      \/\/ game has started$/;"	e	enum:packet_type_e
PKT_INIT	src/protocol.h	/^  PKT_INIT,    \/\/ initial packet to server$/;"	e	enum:packet_type_e
PKT_QUIT	src/protocol.h	/^  PKT_QUIT,    \/\/ Player quit game$/;"	e	enum:packet_type_e
PKT_RETRANS	src/protocol.h	/^  PKT_RETRANS, \/\/ Request for retransmission$/;"	e	enum:packet_type_e
PKT_SETUP	src/protocol.h	/^  PKT_SETUP,   \/\/ game information packet$/;"	e	enum:packet_type_e
PKT_TICC	src/protocol.h	/^  PKT_TICC,    \/\/ tics from client$/;"	e	enum:packet_type_e
PKT_TICS	src/protocol.h	/^  PKT_TICS,    \/\/ tics from server$/;"	e	enum:packet_type_e
PKT_WAD	src/protocol.h	/^  PKT_WAD,     \/\/ Wad file request$/;"	e	enum:packet_type_e
PLATSPEED	src/p_spec.h	51;"	d
PLATWAIT	src/p_spec.h	50;"	d
PLAYERCOLORMAP_COUNT	src/gl_intern.h	78;"	d
PLAYERRADIUS	src/am_map.c	121;"	d	file:
PLAYER_DUMB	src/SDL/i_emusic.c	75;"	d	file:
PLAYER_FLUIDSYNTH	src/SDL/i_emusic.c	76;"	d	file:
PLAYER_MAD	src/SDL/i_emusic.c	74;"	d	file:
PLAYER_OPL2	src/SDL/i_emusic.c	77;"	d	file:
PLAYER_PORTMIDI	src/SDL/i_emusic.c	78;"	d	file:
PLAYER_VORBIS	src/SDL/i_emusic.c	73;"	d	file:
PL_SKYFLAT	src/r_plane.h	34;"	d
PORTMIDIPLAYER_H__	src/MUSIC/portmidiplayer.h	25;"	d
POSITIVE_FIXNUM_MARKER	src/cmp.c	/^  POSITIVE_FIXNUM_MARKER = 0x00,$/;"	e	enum:__anon5	file:
POSIX_MALLOC_THRESHOLD	src/PCRELIB/config.h	111;"	d
POSIX_MALLOC_THRESHOLD	src/PCRELIB/config.h	179;"	d
PO_FIXED_STRINGS	src/PCRELIB/pcregrep.c	107;"	d	file:
PO_LINE_MATCH	src/PCRELIB/pcregrep.c	106;"	d	file:
PO_WORD_MATCH	src/PCRELIB/pcregrep.c	105;"	d	file:
PRBOOM_EXCEPT	src/i_main.h	52;"	d
PRBOOM_EXCEPT	src/i_main.h	55;"	d
PRBOOM_TRY	src/i_main.h	51;"	d
PRBOOM_TRY	src/i_main.h	54;"	d
PRB_IDABORT	src/e6y.h	336;"	d
PRB_IDCANCEL	src/e6y.h	335;"	d
PRB_IDIGNORE	src/e6y.h	338;"	d
PRB_IDNO	src/e6y.h	340;"	d
PRB_IDOK	src/e6y.h	334;"	d
PRB_IDRETRY	src/e6y.h	337;"	d
PRB_IDYES	src/e6y.h	339;"	d
PRB_MB_ABORTRETRYIGNORE	src/e6y.h	327;"	d
PRB_MB_DEFBUTTON1	src/e6y.h	331;"	d
PRB_MB_DEFBUTTON2	src/e6y.h	332;"	d
PRB_MB_DEFBUTTON3	src/e6y.h	333;"	d
PRB_MB_OK	src/e6y.h	325;"	d
PRB_MB_OKCANCEL	src/e6y.h	326;"	d
PRB_MB_RETRYCANCEL	src/e6y.h	330;"	d
PRB_MB_YESNO	src/e6y.h	329;"	d
PRB_MB_YESNOCANCEL	src/e6y.h	328;"	d
PREDICT_LOST_TICS	src/n_main.c	58;"	d	file:
PRESSKEY	src/d_englsh.h	32;"	d
PRESSYN	src/d_englsh.h	33;"	d
PRINTF_DECL	src/z_zone.h	30;"	d
PRINTF_DECL	src/z_zone.h	32;"	d
PRINTF_DECL	src/z_zone.h	36;"	d
PRINT_BANDWIDTH_STATS	src/n_main.c	59;"	d	file:
PROCESS	src/g_overflow.h	57;"	d
PROCESS_LINE_2X_1	src/r_screenmultiply.c	43;"	d	file:
PROCESS_LINE_2X_2	src/r_screenmultiply.c	56;"	d	file:
PROCESS_LINE_2X_4	src/r_screenmultiply.c	68;"	d	file:
PROCESS_LINE_4X_1	src/r_screenmultiply.c	119;"	d	file:
PROCESS_LINE_4X_2	src/r_screenmultiply.c	132;"	d	file:
PROCESS_LINE_4X_4	src/r_screenmultiply.c	145;"	d	file:
PROCESS_SCREEN_MULTIPLY_2X	src/r_screenmultiply.c	80;"	d	file:
PROCESS_SCREEN_MULTIPLY_4X	src/r_screenmultiply.c	159;"	d	file:
PROCESS_SCREEN_MULTIPLY_UNI	src/r_screenmultiply.c	193;"	d	file:
PSDL_Surface	src/i_video.h	/^typedef struct SDL_Surface *PSDL_Surface;$/;"	t	typeref:struct:SDL_Surface
PST_DEAD	src/d_player.h	/^  PST_DEAD,$/;"	e	enum:__anon58
PST_DISCONNECTED	src/d_player.h	/^  PST_DISCONNECTED$/;"	e	enum:__anon58
PST_LIVE	src/d_player.h	/^  PST_LIVE,$/;"	e	enum:__anon58
PST_REBORN	src/d_player.h	/^  PST_REBORN,$/;"	e	enum:__anon58
PTR_AimTraverse	src/p_map.c	/^dboolean PTR_AimTraverse (intercept_t* in)$/;"	f
PTR_NoWayTraverse	src/p_map.c	/^dboolean PTR_NoWayTraverse(intercept_t* in)$/;"	f
PTR_ShootTraverse	src/p_map.c	/^dboolean PTR_ShootTraverse (intercept_t* in)$/;"	f
PTR_SightTraverse	src/p_sight.c	/^dboolean PTR_SightTraverse(intercept_t *in)$/;"	f
PTR_SlideTraverse	src/p_map.c	/^dboolean PTR_SlideTraverse (intercept_t* in)$/;"	f
PTR_UseTraverse	src/p_map.c	/^dboolean PTR_UseTraverse (intercept_t *in) {$/;"	f
PT_ADDLINES	src/p_maputl.h	36;"	d
PT_ADDTHINGS	src/p_maputl.h	37;"	d
PT_ANY	src/PCRELIB/pcre_internal.h	500;"	d
PT_EARLYOUT	src/p_maputl.h	38;"	d
PT_GC	src/PCRELIB/pcre_internal.h	502;"	d
PT_LAMP	src/PCRELIB/pcre_internal.h	501;"	d
PT_PC	src/PCRELIB/pcre_internal.h	503;"	d
PT_SC	src/PCRELIB/pcre_internal.h	504;"	d
PUBLIC_DFA_EXEC_OPTIONS	src/PCRELIB/pcre_internal.h	436;"	d
PUBLIC_EXEC_OPTIONS	src/PCRELIB/pcre_internal.h	432;"	d
PUBLIC_OPTIONS	src/PCRELIB/pcre_internal.h	426;"	d
PUBLIC_STUDY_OPTIONS	src/PCRELIB/pcre_internal.h	441;"	d
PUREFUNC	src/doomtype.h	79;"	d
PUREFUNC	src/doomtype.h	83;"	d
PUSH_FACTOR	src/p_spec.c	3232;"	d	file:
PUSH_MASK	src/p_spec.h	77;"	d
PUSH_SHIFT	src/p_spec.h	78;"	d
PUT	src/PCRELIB/pcre_internal.h	224;"	d
PUT	src/PCRELIB/pcre_internal.h	236;"	d
PUT	src/PCRELIB/pcre_internal.h	249;"	d
PUT2	src/PCRELIB/pcre_internal.h	275;"	d
PUT2INC	src/PCRELIB/pcre_internal.h	282;"	d
PUTDOT	src/v_video.c	917;"	d	file:
PUTINC	src/PCRELIB/pcre_internal.h	268;"	d
PU_CACHE	src/z_zone.h	/^enum {PU_FREE, PU_STATIC, PU_SOUND, PU_MUSIC, PU_LEVEL, PU_LEVSPEC, PU_CACHE,$/;"	e	enum:__anon361
PU_FREE	src/z_zone.h	/^enum {PU_FREE, PU_STATIC, PU_SOUND, PU_MUSIC, PU_LEVEL, PU_LEVSPEC, PU_CACHE,$/;"	e	enum:__anon361
PU_LEVEL	src/z_zone.h	/^enum {PU_FREE, PU_STATIC, PU_SOUND, PU_MUSIC, PU_LEVEL, PU_LEVSPEC, PU_CACHE,$/;"	e	enum:__anon361
PU_LEVSPEC	src/z_zone.h	/^enum {PU_FREE, PU_STATIC, PU_SOUND, PU_MUSIC, PU_LEVEL, PU_LEVSPEC, PU_CACHE,$/;"	e	enum:__anon361
PU_MAX	src/z_zone.h	/^      \/* Must always be last -- killough *\/ PU_MAX};$/;"	e	enum:__anon361
PU_MUSIC	src/z_zone.h	/^enum {PU_FREE, PU_STATIC, PU_SOUND, PU_MUSIC, PU_LEVEL, PU_LEVSPEC, PU_CACHE,$/;"	e	enum:__anon361
PU_PURGELEVEL	src/z_zone.h	126;"	d
PU_SOUND	src/z_zone.h	/^enum {PU_FREE, PU_STATIC, PU_SOUND, PU_MUSIC, PU_LEVEL, PU_LEVSPEC, PU_CACHE,$/;"	e	enum:__anon361
PU_STATIC	src/z_zone.h	/^enum {PU_FREE, PU_STATIC, PU_SOUND, PU_MUSIC, PU_LEVEL, PU_LEVSPEC, PU_CACHE,$/;"	e	enum:__anon361
PWAD_SIGNATURE	src/r_demo.c	213;"	d	file:
P_ActivateInStasis	src/p_plats.c	/^void P_ActivateInStasis(int tag)$/;"	f
P_ActivateInStasisCeiling	src/p_ceilng.c	/^int P_ActivateInStasisCeiling(line_t *line)$/;"	f
P_AddActiveCeiling	src/p_ceilng.c	/^void P_AddActiveCeiling(ceiling_t *ceiling) {$/;"	f
P_AddActivePlat	src/p_plats.c	/^void P_AddActivePlat(plat_t *plat) {$/;"	f
P_AddLineToSector	src/p_setup.c	/^static void P_AddLineToSector(line_t* li, sector_t* sector)$/;"	f	file:
P_AddMessage	src/p_user.c	/^void P_AddMessage(int playernum, player_message_t *message) {$/;"	f
P_AddSecnode	src/p_map.c	/^msecnode_t* P_AddSecnode(sector_t* s, mobj_t* thing, msecnode_t* nextnode)$/;"	f
P_AddThinker	src/p_tick.c	/^void P_AddThinker(thinker_t* thinker) {$/;"	f
P_AimLineAttack	src/p_map.c	/^fixed_t P_AimLineAttack(mobj_t* t1,angle_t angle,fixed_t distance, uint_64_t mask)$/;"	f
P_ApplyTorque	src/p_map.c	/^void P_ApplyTorque(mobj_t *mo)$/;"	f
P_AproxDistance	src/p_maputl.c	/^fixed_t CONSTFUNC P_AproxDistance(fixed_t dx, fixed_t dy)$/;"	f
P_ArchiveActor	src/p_saveg.c	/^static void P_ArchiveActor(pbuf_t *savebuffer, mobj_t *mobj) {$/;"	f	file:
P_ArchiveActorPointers	src/p_saveg.c	/^static void P_ArchiveActorPointers(pbuf_t *savebuffer, mobj_t *mobj) {$/;"	f	file:
P_ArchiveCeiling	src/p_saveg.c	/^void P_ArchiveCeiling(pbuf_t *savebuffer, ceiling_t *ceiling) {$/;"	f
P_ArchiveDoor	src/p_saveg.c	/^void P_ArchiveDoor(pbuf_t *savebuffer, vldoor_t *door) {$/;"	f
P_ArchiveElevator	src/p_saveg.c	/^void P_ArchiveElevator(pbuf_t *savebuffer, elevator_t *elevator) {$/;"	f
P_ArchiveFireFlicker	src/p_saveg.c	/^void P_ArchiveFireFlicker(pbuf_t *savebuffer, fireflicker_t *flicker) {$/;"	f
P_ArchiveFloor	src/p_saveg.c	/^void P_ArchiveFloor(pbuf_t *savebuffer, floormove_t *floor) {$/;"	f
P_ArchiveGlow	src/p_saveg.c	/^void P_ArchiveGlow(pbuf_t *savebuffer, glow_t *glow) {$/;"	f
P_ArchiveLightFlash	src/p_saveg.c	/^void P_ArchiveLightFlash(pbuf_t *savebuffer, lightflash_t *flash) {$/;"	f
P_ArchiveLineIndex	src/p_saveg.c	/^void P_ArchiveLineIndex(pbuf_t *savebuffer, line_t *li, const char *fun) {$/;"	f
P_ArchiveMap	src/p_saveg.c	/^void P_ArchiveMap(pbuf_t *savebuffer) {$/;"	f
P_ArchivePlat	src/p_saveg.c	/^void P_ArchivePlat(pbuf_t *savebuffer, plat_t *plat) {$/;"	f
P_ArchivePlayer	src/p_saveg.c	/^static void P_ArchivePlayer(pbuf_t *savebuffer, player_t *player) {$/;"	f	file:
P_ArchivePlayers	src/p_saveg.c	/^void P_ArchivePlayers(pbuf_t *savebuffer) {$/;"	f
P_ArchivePusher	src/p_saveg.c	/^void P_ArchivePusher(pbuf_t *savebuffer, pusher_t *pusher) {$/;"	f
P_ArchiveRNG	src/p_saveg.c	/^void P_ArchiveRNG(pbuf_t *savebuffer) {$/;"	f
P_ArchiveScroll	src/p_saveg.c	/^void P_ArchiveScroll(pbuf_t *savebuffer, scroll_t *scroll) {$/;"	f
P_ArchiveSectorIndex	src/p_saveg.c	/^void P_ArchiveSectorIndex(pbuf_t *savebuffer, sector_t *s, const char *fun) {$/;"	f
P_ArchiveSpecials	src/p_saveg.c	/^void P_ArchiveSpecials(pbuf_t *savebuffer) {$/;"	f
P_ArchiveStrobe	src/p_saveg.c	/^void P_ArchiveStrobe(pbuf_t *savebuffer, strobe_t *strobe) {$/;"	f
P_ArchiveThinkers	src/p_saveg.c	/^void P_ArchiveThinkers(pbuf_t *savebuffer) {$/;"	f
P_ArchiveWorld	src/p_saveg.c	/^void P_ArchiveWorld(pbuf_t *savebuffer) {$/;"	f
P_AvoidDropoff	src/p_enemy.c	/^static fixed_t P_AvoidDropoff(mobj_t *actor)$/;"	f	file:
P_BlockLinesIterator	src/p_maputl.c	/^dboolean P_BlockLinesIterator(int x, int y, dboolean func(line_t*))$/;"	f
P_BlockThingsIterator	src/p_maputl.c	/^dboolean P_BlockThingsIterator(int x, int y, dboolean func(mobj_t*))$/;"	f
P_Bob	src/p_user.c	/^static void P_Bob(player_t *player, angle_t angle, fixed_t move) {$/;"	f	file:
P_BoxOnLineSide	src/p_maputl.c	/^int PUREFUNC P_BoxOnLineSide(const fixed_t *tmbox, const line_t *ld)$/;"	f
P_BringUpWeapon	src/p_pspr.c	/^static void P_BringUpWeapon(player_t *player)$/;"	f	file:
P_BuildCommand	src/p_cmd.c	/^void P_BuildCommand(void) {$/;"	f
P_BulletSlope	src/p_pspr.c	/^static void P_BulletSlope(mobj_t *mo)$/;"	f	file:
P_CHECKSUM_H__	src/p_checksum.h	25;"	d
P_CMD_H__	src/p_cmd.h	25;"	d
P_CalcHeight	src/p_user.c	/^void P_CalcHeight(player_t *player) {$/;"	f
P_CanUnlockGenDoor	src/p_spec.c	/^dboolean P_CanUnlockGenDoor$/;"	f
P_CenterEcho	src/p_user.c	/^void P_CenterEcho(int playernum, const char *message) {$/;"	f
P_CenterMEcho	src/p_user.c	/^void P_CenterMEcho(int playernum, const char *message) {$/;"	f
P_CenterMPrintf	src/p_user.c	/^void P_CenterMPrintf(int playernum, const char *fmt, ...) {$/;"	f
P_CenterMSEcho	src/p_user.c	/^void P_CenterMSEcho(int playernum, int sfx, const char *message) {$/;"	f
P_CenterMSPrintf	src/p_user.c	/^void P_CenterMSPrintf(int playernum, int sfx, const char *fmt, ...) {$/;"	f
P_CenterMSVPrintf	src/p_user.c	/^void P_CenterMSVPrintf(int playernum, int sfx, const char *fmt, va_list args) {$/;"	f
P_CenterMSWrite	src/p_user.c	/^void P_CenterMSWrite(int playernum, int sfx, const char *message) {$/;"	f
P_CenterMVPrintf	src/p_user.c	/^void P_CenterMVPrintf(int playernum, const char *fmt, va_list args) {$/;"	f
P_CenterMWrite	src/p_user.c	/^void P_CenterMWrite(int playernum, const char *message) {$/;"	f
P_CenterPrintf	src/p_user.c	/^void P_CenterPrintf(int playernum, const char *fmt, ...) {$/;"	f
P_CenterSEcho	src/p_user.c	/^void P_CenterSEcho(int playernum, int sfx, const char *message) {$/;"	f
P_CenterSPrintf	src/p_user.c	/^void P_CenterSPrintf(int playernum, int sfx, const char *fmt, ...) {$/;"	f
P_CenterSVPrintf	src/p_user.c	/^void P_CenterSVPrintf(int playernum, int sfx, const char *fmt, va_list args) {$/;"	f
P_CenterSWrite	src/p_user.c	/^void P_CenterSWrite(int playernum, int sfx, const char *message) {$/;"	f
P_CenterVPrintf	src/p_user.c	/^void P_CenterVPrintf(int playernum, const char *fmt, va_list args) {$/;"	f
P_CenterWrite	src/p_user.c	/^void P_CenterWrite(int playernum, const char *message) {$/;"	f
P_ChangeSector	src/p_map.c	/^dboolean P_ChangeSector(sector_t* sector,dboolean crunch)$/;"	f
P_ChangeSwitchTexture	src/p_switch.c	/^void P_ChangeSwitchTexture$/;"	f
P_CheckAmmo	src/p_pspr.c	/^dboolean P_CheckAmmo(player_t *player)$/;"	f
P_CheckForDeePBSPv4Nodes	src/p_setup.c	/^static dboolean P_CheckForDeePBSPv4Nodes(int lumpnum, int gl_lumpnum)$/;"	f	file:
P_CheckForZDoomNodes	src/p_setup.c	/^static dboolean P_CheckForZDoomNodes(int lumpnum, int gl_lumpnum)$/;"	f	file:
P_CheckForZDoomUncompressedNodes	src/p_setup.c	/^static int P_CheckForZDoomUncompressedNodes(int lumpnum, int gl_lumpnum)$/;"	f	file:
P_CheckLevelWadStructure	src/p_setup.c	/^void P_CheckLevelWadStructure(const char *mapname) {$/;"	f
P_CheckLumpsForSameSource	src/p_setup.c	/^dboolean P_CheckLumpsForSameSource(int lump1, int lump2) {$/;"	f
P_CheckMeleeRange	src/p_enemy.c	/^static dboolean P_CheckMeleeRange(mobj_t *actor)$/;"	f	file:
P_CheckMissileRange	src/p_enemy.c	/^static dboolean P_CheckMissileRange(mobj_t *actor)$/;"	f	file:
P_CheckMissileSpawn	src/p_mobj.c	/^void P_CheckMissileSpawn (mobj_t* th)$/;"	f
P_CheckPosition	src/p_map.c	/^dboolean P_CheckPosition (mobj_t* thing,fixed_t x,fixed_t y)$/;"	f
P_CheckSector	src/p_map.c	/^dboolean P_CheckSector(sector_t* sector,dboolean crunch)$/;"	f
P_CheckSight	src/p_sight.c	/^dboolean P_CheckSight(mobj_t *t1, mobj_t *t2) {$/;"	f
P_CheckSight_12	src/p_sight.c	/^dboolean P_CheckSight_12(mobj_t *t1, mobj_t *t2)$/;"	f
P_CheckTag	src/p_spec.c	/^int P_CheckTag(line_t *line)$/;"	f
P_Checksum	src/p_checksum.c	/^void (*P_Checksum)(int) = p_checksum_nop;$/;"	v
P_ChecksumFinal	src/p_checksum.c	/^void P_ChecksumFinal(void) {$/;"	f
P_ClearMessages	src/p_user.c	/^void P_ClearMessages(int playernum) {$/;"	f
P_CreateBlockMap	src/p_setup.c	/^static void P_CreateBlockMap(void)$/;"	f	file:
P_CreateSecNodeList	src/p_map.c	/^void P_CreateSecNodeList(mobj_t* thing, fixed_t x, fixed_t y) {$/;"	f
P_CrossBSPNode	src/p_sight.c	/^static dboolean P_CrossBSPNode(int bspnum)$/;"	f	file:
P_CrossBSPNode_LxDoom	src/p_sight.c	/^static dboolean P_CrossBSPNode_LxDoom(int bspnum)$/;"	f	file:
P_CrossBSPNode_PrBoom	src/p_sight.c	/^static dboolean P_CrossBSPNode_PrBoom(int bspnum)$/;"	f	file:
P_CrossSpecialLine	src/p_spec.c	/^void P_CrossSpecialLine(line_t *line, int side, mobj_t *thing)$/;"	f
P_CrossSubsector	src/p_sight.c	/^CrossSubsectorFunc P_CrossSubsector;$/;"	v
P_CrossSubsector_Boom	src/p_sight.c	/^dboolean P_CrossSubsector_Boom(int num)$/;"	f
P_CrossSubsector_Doom	src/p_sight.c	/^dboolean P_CrossSubsector_Doom(int num)$/;"	f
P_CrossSubsector_PrBoom	src/p_sight.c	/^dboolean P_CrossSubsector_PrBoom(int num)$/;"	f
P_DamageMobj	src/p_inter.c	/^void P_DamageMobj(mobj_t *target,mobj_t *inflictor, mobj_t *source, int damage)$/;"	f
P_DeathThink	src/p_user.c	/^void P_DeathThink(player_t *player) {$/;"	f
P_DelSeclist	src/p_map.c	/^void P_DelSeclist(msecnode_t* node) {$/;"	f
P_DelSecnode	src/p_map.c	/^msecnode_t* P_DelSecnode(msecnode_t* node) {$/;"	f
P_DestroyMessage	src/p_user.c	/^void P_DestroyMessage(gpointer data) {$/;"	f
P_DivlineCrossed	src/p_sight.c	/^INLINE static int P_DivlineCrossed(fixed_t x1, fixed_t y1, fixed_t x2, fixed_t y2, divline_t *node)$/;"	f	file:
P_DivlineSide	src/p_sight.c	/^INLINE static int P_DivlineSide(fixed_t x, fixed_t y, const divline_t *node)$/;"	f	file:
P_DoNewChaseDir	src/p_enemy.c	/^static void P_DoNewChaseDir(mobj_t *actor, fixed_t deltax, fixed_t deltay) {$/;"	f	file:
P_DropWeapon	src/p_pspr.c	/^void P_DropWeapon(player_t *player) {$/;"	f
P_ENEMY_H__	src/p_enemy.h	25;"	d
P_Echo	src/p_user.c	/^void P_Echo(int playernum, const char *message) {$/;"	f
P_ExplodeMissile	src/p_mobj.c	/^void P_ExplodeMissile(mobj_t *mo) {$/;"	f
P_FindDoomedNum	src/p_mobj.c	/^static PUREFUNC int P_FindDoomedNum(unsigned int type) {$/;"	f	file:
P_FindHighestCeilingSurrounding	src/p_spec.c	/^fixed_t P_FindHighestCeilingSurrounding(sector_t* sec)$/;"	f
P_FindHighestFloorSurrounding	src/p_spec.c	/^fixed_t P_FindHighestFloorSurrounding(sector_t *sec)$/;"	f
P_FindLineFromLineTag	src/p_spec.c	/^int P_FindLineFromLineTag(const line_t *line, int start)$/;"	f
P_FindLowestCeilingSurrounding	src/p_spec.c	/^fixed_t P_FindLowestCeilingSurrounding(sector_t* sec)$/;"	f
P_FindLowestFloorSurrounding	src/p_spec.c	/^fixed_t P_FindLowestFloorSurrounding(sector_t* sec)$/;"	f
P_FindMinSurroundingLight	src/p_spec.c	/^int P_FindMinSurroundingLight$/;"	f
P_FindModelCeilingSector	src/p_spec.c	/^sector_t *P_FindModelCeilingSector(fixed_t ceildestheight,int secnum)$/;"	f
P_FindModelFloorSector	src/p_spec.c	/^sector_t *P_FindModelFloorSector(fixed_t floordestheight,int secnum)$/;"	f
P_FindNextHighestCeiling	src/p_spec.c	/^fixed_t P_FindNextHighestCeiling(sector_t *sec, int currentheight)$/;"	f
P_FindNextHighestFloor	src/p_spec.c	/^fixed_t P_FindNextHighestFloor(sector_t *sec, int currentheight)$/;"	f
P_FindNextLowestCeiling	src/p_spec.c	/^fixed_t P_FindNextLowestCeiling(sector_t *sec, int currentheight)$/;"	f
P_FindNextLowestFloor	src/p_spec.c	/^fixed_t P_FindNextLowestFloor(sector_t *sec, int currentheight)$/;"	f
P_FindSectorFromLineTag	src/p_spec.c	/^int P_FindSectorFromLineTag(const line_t *line, int start)$/;"	f
P_FindSectorFromLineTagWithLowerBound	src/p_floor.c	/^static inline int P_FindSectorFromLineTagWithLowerBound$/;"	f	file:
P_FindShortestTextureAround	src/p_spec.c	/^fixed_t P_FindShortestTextureAround(int secnum)$/;"	f
P_FindShortestUpperAround	src/p_spec.c	/^fixed_t P_FindShortestUpperAround(int secnum)$/;"	f
P_FireWeapon	src/p_pspr.c	/^static void P_FireWeapon(player_t *player)$/;"	f	file:
P_FreeSecNodeList	src/p_map.c	/^void P_FreeSecNodeList(void)$/;"	f
P_GetFriction	src/p_map.c	/^int P_GetFriction(const mobj_t *mo, int *frictionfactor) {$/;"	f
P_GetMoveFactor	src/p_map.c	/^int P_GetMoveFactor(mobj_t *mo, int *frictionp)$/;"	f
P_GetNewBlankCommand	src/p_cmd.c	/^netticcmd_t* P_GetNewBlankCommand(void) {$/;"	f
P_GetNodesVersion	src/p_setup.c	/^static void P_GetNodesVersion(int lumpnum, int gl_lumpnum)$/;"	f	file:
P_GetPlayerCommandCount	src/p_cmd.c	/^unsigned int P_GetPlayerCommandCount(int playernum) {$/;"	f
P_GetPushThing	src/p_spec.c	/^mobj_t* P_GetPushThing(int s)$/;"	f
P_GetSafeBlockX	src/p_maputl.c	/^int P_GetSafeBlockX(int coord)$/;"	f
P_GetSafeBlockY	src/p_maputl.c	/^int P_GetSafeBlockY(int coord)$/;"	f
P_GetSecnode	src/p_map.c	/^inline static msecnode_t* P_GetSecnode(void)$/;"	f	file:
P_GetSecnode	src/p_map.c	/^static msecnode_t *P_GetSecnode(void)$/;"	f	file:
P_GiveAmmo	src/p_inter.c	/^static dboolean P_GiveAmmo(player_t *player, ammotype_t ammo, int num)$/;"	f	file:
P_GiveArmor	src/p_inter.c	/^static dboolean P_GiveArmor(player_t *player, int armortype)$/;"	f	file:
P_GiveBody	src/p_inter.c	/^static dboolean P_GiveBody(player_t *player, int num)$/;"	f	file:
P_GiveCard	src/p_inter.c	/^static void P_GiveCard(player_t *player, card_t card)$/;"	f	file:
P_GivePower	src/p_inter.c	/^dboolean P_GivePower(player_t *player, int power)$/;"	f
P_GiveWeapon	src/p_inter.c	/^static dboolean P_GiveWeapon(player_t *player, weapontype_t weapon, dboolean dropped)$/;"	f	file:
P_GroupLines	src/p_setup.c	/^static int P_GroupLines (void)$/;"	f	file:
P_GunShot	src/p_pspr.c	/^static void P_GunShot(mobj_t *mo, dboolean accurate)$/;"	f	file:
P_HelpFriend	src/p_enemy.c	/^static dboolean P_HelpFriend(mobj_t *actor) {$/;"	f	file:
P_HitFriend	src/p_enemy.c	/^static dboolean P_HitFriend(mobj_t *actor)$/;"	f	file:
P_HitSlideLine	src/p_map.c	/^void P_HitSlideLine (line_t* ld)$/;"	f
P_IDENT_H__	src/p_ident.h	25;"	d
P_INTER_H__	src/p_inter.h	25;"	d
P_IdentAssignID	src/p_ident.c	/^void P_IdentAssignID(void *obj, uint32_t obj_id) {$/;"	f
P_IdentGetID	src/p_ident.c	/^void P_IdentGetID(void *obj, uint32_t *obj_id) {$/;"	f
P_IdentGetMaxID	src/p_ident.c	/^uint32_t P_IdentGetMaxID(void) {$/;"	f
P_IdentInit	src/p_ident.c	/^void P_IdentInit(void) {$/;"	f
P_IdentLookup	src/p_ident.c	/^void* P_IdentLookup(uint32_t id) {$/;"	f
P_IdentReleaseID	src/p_ident.c	/^void P_IdentReleaseID(uint32_t *obj_id) {$/;"	f
P_IdentReset	src/p_ident.c	/^void P_IdentReset(void) {$/;"	f
P_IdentSetMaxID	src/p_ident.c	/^void P_IdentSetMaxID(uint32_t new_max_id) {$/;"	f
P_Init	src/p_setup.c	/^void P_Init(void) {$/;"	f
P_InitCommands	src/p_cmd.c	/^void P_InitCommands(void) {$/;"	f
P_InitPicAnims	src/p_spec.c	/^void P_InitPicAnims(void) {$/;"	f
P_InitSubsectorsLines	src/p_setup.c	/^void P_InitSubsectorsLines(void)$/;"	f
P_InitSwitchList	src/p_switch.c	/^void P_InitSwitchList(void)$/;"	f
P_InitTagLists	src/p_spec.c	/^static void P_InitTagLists(void)$/;"	f	file:
P_InitThinkers	src/p_tick.c	/^void P_InitThinkers(void) {$/;"	f
P_InterceptVector	src/p_maputl.c	/^fixed_t PUREFUNC P_InterceptVector(const divline_t *v2, const divline_t *v1)$/;"	f
P_InterceptVector2	src/p_maputl.c	/^fixed_t PUREFUNC P_InterceptVector2(const divline_t *v2, const divline_t *v1)$/;"	f
P_IsDoomnumAllowed	src/p_mobj.c	/^dboolean P_IsDoomnumAllowed(int doomnum)$/;"	f
P_IsOnLift	src/p_enemy.c	/^static dboolean P_IsOnLift(const mobj_t *actor)$/;"	f	file:
P_IsSecret	src/p_spec.c	/^dboolean PUREFUNC P_IsSecret(const sector_t *sec)$/;"	f
P_IsUnderDamage	src/p_enemy.c	/^static int P_IsUnderDamage(mobj_t *actor) {$/;"	f	file:
P_IsVisible	src/p_enemy.c	/^static dboolean P_IsVisible(mobj_t *actor, mobj_t *mo, dboolean allaround) {$/;"	f	file:
P_KillMobj	src/p_inter.c	/^static void P_KillMobj(mobj_t *source, mobj_t *target) {$/;"	f	file:
P_LineAttack	src/p_map.c	/^void P_LineAttack$/;"	f
P_LineOpening	src/p_maputl.c	/^void P_LineOpening(const line_t *linedef)$/;"	f
P_LoadBlockMap	src/p_setup.c	/^static void P_LoadBlockMap (int lump)$/;"	f	file:
P_LoadGLSegs	src/p_setup.c	/^static void P_LoadGLSegs(int lump)$/;"	f	file:
P_LoadLineDefs	src/p_setup.c	/^static void P_LoadLineDefs (int lump)$/;"	f	file:
P_LoadLineDefs2	src/p_setup.c	/^static void P_LoadLineDefs2(int lump)$/;"	f	file:
P_LoadNodes	src/p_setup.c	/^static void P_LoadNodes (int lump)$/;"	f	file:
P_LoadNodes_V4	src/p_setup.c	/^static void P_LoadNodes_V4(int lump)$/;"	f	file:
P_LoadReject	src/p_setup.c	/^static void P_LoadReject(int lumpnum, int totallines)$/;"	f	file:
P_LoadSectors	src/p_setup.c	/^static void P_LoadSectors(int lump) {$/;"	f	file:
P_LoadSegs	src/p_setup.c	/^static void P_LoadSegs (int lump)$/;"	f	file:
P_LoadSegs_V4	src/p_setup.c	/^static void P_LoadSegs_V4(int lump)$/;"	f	file:
P_LoadSideDefs	src/p_setup.c	/^static void P_LoadSideDefs (int lump)$/;"	f	file:
P_LoadSideDefs2	src/p_setup.c	/^static void P_LoadSideDefs2(int lump)$/;"	f	file:
P_LoadSubsectors	src/p_setup.c	/^static void P_LoadSubsectors (int lump)$/;"	f	file:
P_LoadSubsectors_V4	src/p_setup.c	/^static void P_LoadSubsectors_V4(int lump)$/;"	f	file:
P_LoadThings	src/p_setup.c	/^static void P_LoadThings (int lump)$/;"	f	file:
P_LoadVertexes	src/p_setup.c	/^static void P_LoadVertexes (int lump)$/;"	f	file:
P_LoadVertexes2	src/p_setup.c	/^static void P_LoadVertexes2(int lump, int gllump)$/;"	f	file:
P_LoadZNodes	src/p_setup.c	/^static void P_LoadZNodes(int lump, int glnodes)$/;"	f	file:
P_LoadZSegs	src/p_setup.c	/^static void P_LoadZSegs (const byte *data)$/;"	f	file:
P_LookForMonsters	src/p_enemy.c	/^static dboolean P_LookForMonsters(mobj_t *actor, dboolean allaround) {$/;"	f	file:
P_LookForPlayers	src/p_enemy.c	/^static dboolean P_LookForPlayers(mobj_t *actor, dboolean allaround) {$/;"	f	file:
P_LookForTargets	src/p_enemy.c	/^static dboolean P_LookForTargets(mobj_t *actor, int allaround) {$/;"	f	file:
P_MAPUTL_H__	src/p_maputl.h	25;"	d
P_MAP_H__	src/p_map.h	25;"	d
P_MEcho	src/p_user.c	/^void P_MEcho(int playernum, const char *message) {$/;"	f
P_MOBJ_H__	src/p_mobj.h	25;"	d
P_MPrintf	src/p_user.c	/^void P_MPrintf(int playernum, const char *fmt, ...) {$/;"	f
P_MSEcho	src/p_user.c	/^void P_MSEcho(int playernum, int sfx, const char *message) {$/;"	f
P_MSPrintf	src/p_user.c	/^void P_MSPrintf(int playernum, int sfx, const char *fmt, ...) {$/;"	f
P_MSVPrintf	src/p_user.c	/^void P_MSVPrintf(int playernum, int sfx, const char *fmt, va_list args) {$/;"	f
P_MSWrite	src/p_user.c	/^void P_MSWrite(int playernum, int sfx, const char *message) {$/;"	f
P_MVPrintf	src/p_user.c	/^void P_MVPrintf(int playernum, const char *fmt, va_list args) {$/;"	f
P_MWrite	src/p_user.c	/^void P_MWrite(int playernum, const char *message) {$/;"	f
P_MakeDivline	src/p_maputl.c	/^void P_MakeDivline(const line_t *li, divline_t *dl)$/;"	f
P_MapEnd	src/p_map.c	/^void P_MapEnd(void) {$/;"	f
P_MapStart	src/p_map.c	/^void P_MapStart(void) {$/;"	f
P_MobjThinker	src/p_mobj.c	/^void P_MobjThinker(mobj_t* mobj) {$/;"	f
P_Move	src/p_enemy.c	/^static dboolean P_Move(mobj_t *actor, dboolean dropoff) {$/;"	f	file:
P_MovePlayer	src/p_user.c	/^void P_MovePlayer(player_t *player) {$/;"	f
P_MovePsprites	src/p_pspr.c	/^void P_MovePsprites(player_t *player) {$/;"	f
P_NewChaseDir	src/p_enemy.c	/^static void P_NewChaseDir(mobj_t *actor) {$/;"	f	file:
P_NextThinker	src/p_tick.c	/^thinker_t* P_NextThinker(thinker_t* th, th_class cl) {$/;"	f
P_NightmareRespawn	src/p_mobj.c	/^static void P_NightmareRespawn(mobj_t *mobj) {$/;"	f	file:
P_NoiseAlert	src/p_enemy.c	/^void P_NoiseAlert(mobj_t *target, mobj_t *emitter)$/;"	f
P_PSPR_H__	src/p_pspr.h	25;"	d
P_PathTraverse	src/p_maputl.c	/^dboolean P_PathTraverse(fixed_t x1, fixed_t y1, fixed_t x2, fixed_t y2,$/;"	f
P_PlayerInSpecialSector	src/p_spec.c	/^void P_PlayerInSpecialSector (player_t* player)$/;"	f
P_PlayerThink	src/p_user.c	/^void P_PlayerThink(int playernum) {$/;"	f
P_PointOnDivlineSide	src/p_maputl.c	/^int PUREFUNC P_PointOnDivlineSide(fixed_t x, fixed_t y, const divline_t *line)$/;"	f
P_PointOnLineSide	src/p_maputl.c	/^int PUREFUNC P_PointOnLineSide(fixed_t x, fixed_t y, const line_t *line)$/;"	f
P_PrintCommands	src/p_cmd.c	/^void P_PrintCommands(GQueue *commands) {$/;"	f
P_Printf	src/p_user.c	/^void P_Printf(int playernum, const char *fmt, ...) {$/;"	f
P_PutSecnode	src/p_map.c	/^inline static void P_PutSecnode(msecnode_t* node)$/;"	f	file:
P_PutSecnode	src/p_map.c	/^static void P_PutSecnode(msecnode_t *node)$/;"	f	file:
P_RadiusAttack	src/p_map.c	/^void P_RadiusAttack(mobj_t* spot,mobj_t* source,int damage)$/;"	f
P_Random	src/m_random.c	/^int (P_Random)(pr_class_t pr_class$/;"	f
P_Random	src/m_random.h	134;"	d
P_RecordChecksum	src/p_checksum.c	/^void P_RecordChecksum(const char *file) {$/;"	f
P_RecursiveSound	src/p_enemy.c	/^static void P_RecursiveSound(sector_t *sec, int soundblocks,$/;"	f	file:
P_RecycleCommand	src/p_cmd.c	/^void P_RecycleCommand(netticcmd_t *ncmd) {$/;"	f
P_RegisterFunctions	src/p_user.c	/^void P_RegisterFunctions(void) {$/;"	f
P_RemoveActiveCeiling	src/p_ceilng.c	/^void P_RemoveActiveCeiling(ceiling_t *ceiling) {$/;"	f
P_RemoveActivePlat	src/p_plats.c	/^void P_RemoveActivePlat(plat_t *plat) {$/;"	f
P_RemoveAllActiveCeilings	src/p_ceilng.c	/^void P_RemoveAllActiveCeilings(void)$/;"	f
P_RemoveAllActivePlats	src/p_plats.c	/^void P_RemoveAllActivePlats(void)$/;"	f
P_RemoveMobj	src/p_mobj.c	/^void P_RemoveMobj(mobj_t* mobj) {$/;"	f
P_RemoveOldCommands	src/p_cmd.c	/^void P_RemoveOldCommands(int sync_index, GQueue *commands) {$/;"	f
P_RemoveSlimeTrails	src/p_setup.c	/^static void P_RemoveSlimeTrails(void)         \/\/ killough 10\/98$/;"	f	file:
P_RemoveThinker	src/p_tick.c	/^void P_RemoveThinker(thinker_t *thinker) {$/;"	f
P_RemoveThinkerDelayed	src/p_tick.c	/^void P_RemoveThinkerDelayed(thinker_t *thinker) {$/;"	f
P_ResetWalkcam	src/g_game.c	/^void P_ResetWalkcam(void) {$/;"	f
P_RespawnSpecials	src/p_mobj.c	/^void P_RespawnSpecials (void)$/;"	f
P_RunPlayerCommands	src/p_cmd.c	/^void P_RunPlayerCommands(int playernum) {$/;"	f
P_RunThinkers	src/p_tick.c	/^static void P_RunThinkers(void) {$/;"	f	file:
P_SAVEG_H__	src/p_saveg.h	25;"	d
P_SETUP_H__	src/p_setup.h	25;"	d
P_SEcho	src/p_user.c	/^void P_SEcho(int playernum, int sfx, const char *message) {$/;"	f
P_SPEC_H__	src/p_spec.h	25;"	d
P_SPrintf	src/p_user.c	/^void P_SPrintf(int playernum, int sfx, const char *fmt, ...) {$/;"	f
P_SVPrintf	src/p_user.c	/^void P_SVPrintf(int playernum, int sfx, const char *fmt, va_list args) {$/;"	f
P_SWrite	src/p_user.c	/^void P_SWrite(int playernum, int sfx, const char *message) {$/;"	f
P_SectorActive	src/p_spec.c	/^dboolean PUREFUNC P_SectorActive(special_e t, const sector_t *sec)$/;"	f
P_SendMessage	src/p_user.c	/^void P_SendMessage(const char *message) {$/;"	f
P_SetMobjState	src/p_mobj.c	/^dboolean P_SetMobjState(mobj_t *mobj, statenum_t state) {$/;"	f
P_SetName	src/p_user.c	/^void P_SetName(int playernum, char *name) {$/;"	f
P_SetPitch	src/p_user.c	/^void P_SetPitch(player_t *player) {$/;"	f
P_SetPlayerName	src/p_user.c	/^void P_SetPlayerName(int playernum, const char *name) {$/;"	f
P_SetPsprite	src/p_pspr.c	/^static void P_SetPsprite(player_t *player, int position, statenum_t stnum) {$/;"	f	file:
P_SetTarget	src/p_tick.c	/^void P_SetTarget(mobj_t **mop, mobj_t *targ) {$/;"	f
P_SetThingPosition	src/p_maputl.c	/^void P_SetThingPosition(mobj_t *thing) { \/\/ link into subsector$/;"	f
P_SetupLevel	src/p_setup.c	/^void P_SetupLevel(int episode, int map, int playermask, skill_t skill)$/;"	f
P_SetupPsprites	src/p_pspr.c	/^void P_SetupPsprites(player_t *player)$/;"	f
P_ShootSpecialLine	src/p_spec.c	/^void P_ShootSpecialLine$/;"	f
P_SideThrust	src/p_user.c	/^void P_SideThrust(player_t *player, angle_t angle, fixed_t move) {$/;"	f
P_SightBlockLinesIterator	src/p_sight.c	/^dboolean P_SightBlockLinesIterator(int x, int y)$/;"	f
P_SightPathTraverse	src/p_sight.c	/^dboolean P_SightPathTraverse(fixed_t x1, fixed_t y1, fixed_t x2, fixed_t y2)$/;"	f
P_SightTraverseIntercepts	src/p_sight.c	/^dboolean P_SightTraverseIntercepts(void)$/;"	f
P_SlideMove	src/p_map.c	/^void P_SlideMove(mobj_t *mo)$/;"	f
P_SmartMove	src/p_enemy.c	/^static dboolean P_SmartMove(mobj_t *actor) {$/;"	f	file:
P_SpawnBlood	src/p_mobj.c	/^void P_SpawnBlood(fixed_t x,fixed_t y,fixed_t z,int damage)$/;"	f
P_SpawnBrainTargets	src/p_enemy.c	/^void P_SpawnBrainTargets(void)  \/\/ killough 3\/26\/98: renamed old function$/;"	f
P_SpawnDoorCloseIn30	src/p_doors.c	/^void P_SpawnDoorCloseIn30(sector_t *sec) {$/;"	f
P_SpawnDoorRaiseIn5Mins	src/p_doors.c	/^void P_SpawnDoorRaiseIn5Mins(sector_t *sec, int secnum) {$/;"	f
P_SpawnFireFlicker	src/p_lights.c	/^void P_SpawnFireFlicker (sector_t*  sector)$/;"	f
P_SpawnFriction	src/p_spec.c	/^static void P_SpawnFriction(void)$/;"	f	file:
P_SpawnGlowingLight	src/p_lights.c	/^void P_SpawnGlowingLight(sector_t*  sector)$/;"	f
P_SpawnLightFlash	src/p_lights.c	/^void P_SpawnLightFlash (sector_t* sector)$/;"	f
P_SpawnMapThing	src/p_mobj.c	/^mobj_t* P_SpawnMapThing (const mapthing_t* mthing, int index)$/;"	f
P_SpawnMissile	src/p_mobj.c	/^mobj_t* P_SpawnMissile(mobj_t *source, mobj_t *dest, mobjtype_t type) {$/;"	f
P_SpawnMobj	src/p_mobj.c	/^mobj_t* P_SpawnMobj(fixed_t x, fixed_t y, fixed_t z, mobjtype_t type) {$/;"	f
P_SpawnPlayer	src/p_mobj.c	/^void P_SpawnPlayer(int playernum, const mapthing_t* mthing) {$/;"	f
P_SpawnPlayerMissile	src/p_mobj.c	/^void P_SpawnPlayerMissile(mobj_t *source, mobjtype_t type) {$/;"	f
P_SpawnPuff	src/p_mobj.c	/^void P_SpawnPuff(fixed_t x,fixed_t y,fixed_t z)$/;"	f
P_SpawnPushers	src/p_spec.c	/^static void P_SpawnPushers(void)$/;"	f	file:
P_SpawnScrollers	src/p_spec.c	/^static void P_SpawnScrollers(void)$/;"	f	file:
P_SpawnSpecials	src/p_spec.c	/^void P_SpawnSpecials (void)$/;"	f
P_SpawnStrobeFlash	src/p_lights.c	/^void P_SpawnStrobeFlash$/;"	f
P_StartButton	src/p_switch.c	/^static void P_StartButton$/;"	f	file:
P_SubstNullMobj	src/p_mobj.c	/^mobj_t *P_SubstNullMobj(mobj_t *mobj) {$/;"	f
P_SwitchWeapon	src/p_pspr.c	/^int P_SwitchWeapon(player_t *player)$/;"	f
P_SyncWalkcam	src/g_game.c	/^void P_SyncWalkcam(dboolean sync_coords, dboolean sync_sight) {$/;"	f
P_TICK_H__	src/p_tick.h	25;"	d
P_TeleportDestination	src/p_telept.c	/^static mobj_t* P_TeleportDestination(line_t* line)$/;"	f	file:
P_TeleportMove	src/p_map.c	/^dboolean P_TeleportMove (mobj_t* thing,fixed_t x,fixed_t y, dboolean boss)$/;"	f
P_ThingHeightClip	src/p_map.c	/^dboolean P_ThingHeightClip (mobj_t* thing)$/;"	f
P_Thrust	src/p_user.c	/^void P_Thrust(player_t* player,angle_t angle,fixed_t move) {$/;"	f
P_Ticker	src/p_tick.c	/^void P_Ticker(void) {$/;"	f
P_TouchSpecialThing	src/p_inter.c	/^void P_TouchSpecialThing(mobj_t *special, mobj_t *toucher) {$/;"	f
P_TraverseIntercepts	src/p_maputl.c	/^dboolean P_TraverseIntercepts(traverser_t func, fixed_t maxfrac)$/;"	f
P_TryMove	src/p_map.c	/^dboolean P_TryMove(mobj_t* thing,fixed_t x,fixed_t y,$/;"	f
P_TryWalk	src/p_enemy.c	/^static dboolean P_TryWalk(mobj_t *actor) {$/;"	f	file:
P_USER__	src/p_user.h	25;"	d
P_UnArchiveActor	src/p_saveg.c	/^static void P_UnArchiveActor(pbuf_t *savebuffer, mobj_t *mobj) {$/;"	f	file:
P_UnArchiveActorPointers	src/p_saveg.c	/^static void P_UnArchiveActorPointers(pbuf_t *savebuffer, mobj_t *mobj) {$/;"	f	file:
P_UnArchiveCeiling	src/p_saveg.c	/^void P_UnArchiveCeiling(pbuf_t *savebuffer, ceiling_t *ceiling) {$/;"	f
P_UnArchiveDoor	src/p_saveg.c	/^void P_UnArchiveDoor(pbuf_t *savebuffer, vldoor_t *door) {$/;"	f
P_UnArchiveElevator	src/p_saveg.c	/^void P_UnArchiveElevator(pbuf_t *savebuffer, elevator_t *elevator) {$/;"	f
P_UnArchiveFireFlicker	src/p_saveg.c	/^void P_UnArchiveFireFlicker(pbuf_t *savebuffer, fireflicker_t *flicker) {$/;"	f
P_UnArchiveFloor	src/p_saveg.c	/^void P_UnArchiveFloor(pbuf_t *savebuffer, floormove_t *floor) {$/;"	f
P_UnArchiveGlow	src/p_saveg.c	/^void P_UnArchiveGlow(pbuf_t *savebuffer, glow_t *glow) {$/;"	f
P_UnArchiveLightFlash	src/p_saveg.c	/^void P_UnArchiveLightFlash(pbuf_t *savebuffer, lightflash_t *flash) {$/;"	f
P_UnArchiveLineIndex	src/p_saveg.c	/^void P_UnArchiveLineIndex(pbuf_t *savebuffer, line_t **li, const char *fun) {$/;"	f
P_UnArchiveMap	src/p_saveg.c	/^void P_UnArchiveMap(pbuf_t *savebuffer) {$/;"	f
P_UnArchivePlat	src/p_saveg.c	/^void P_UnArchivePlat(pbuf_t *savebuffer, plat_t *plat) {$/;"	f
P_UnArchivePlayer	src/p_saveg.c	/^static void P_UnArchivePlayer(pbuf_t *savebuffer, player_t *player) {$/;"	f	file:
P_UnArchivePlayers	src/p_saveg.c	/^void P_UnArchivePlayers(pbuf_t *savebuffer) {$/;"	f
P_UnArchivePusher	src/p_saveg.c	/^void P_UnArchivePusher(pbuf_t *savebuffer, pusher_t *pusher) {$/;"	f
P_UnArchiveRNG	src/p_saveg.c	/^void P_UnArchiveRNG(pbuf_t *savebuffer) {$/;"	f
P_UnArchiveScroll	src/p_saveg.c	/^void P_UnArchiveScroll(pbuf_t *savebuffer, scroll_t *scroll) {$/;"	f
P_UnArchiveSectorIndex	src/p_saveg.c	/^void P_UnArchiveSectorIndex(pbuf_t *savebuffer, sector_t **s, const char *f) {$/;"	f
P_UnArchiveSpecials	src/p_saveg.c	/^void P_UnArchiveSpecials(pbuf_t *savebuffer) {$/;"	f
P_UnArchiveStrobe	src/p_saveg.c	/^void P_UnArchiveStrobe(pbuf_t *savebuffer, strobe_t *strobe) {$/;"	f
P_UnArchiveThinkers	src/p_saveg.c	/^void P_UnArchiveThinkers(pbuf_t *savebuffer) {$/;"	f
P_UnArchiveWorld	src/p_saveg.c	/^void P_UnArchiveWorld(pbuf_t *savebuffer) {$/;"	f
P_UnsetThingPosition	src/p_maputl.c	/^void P_UnsetThingPosition(mobj_t *thing) {$/;"	f
P_UpdateSpecials	src/p_spec.c	/^void P_UpdateSpecials(void) {$/;"	f
P_UpdateThinker	src/p_tick.c	/^void P_UpdateThinker(thinker_t *thinker) {$/;"	f
P_UseLines	src/p_map.c	/^void P_UseLines(player_t*  player) {$/;"	f
P_UseSpecialLine	src/p_switch.c	/^dboolean P_UseSpecialLine(mobj_t *thing, line_t *line, int side) {$/;"	f
P_VPrintf	src/p_user.c	/^void P_VPrintf(int playernum, const char *fmt, va_list args) {$/;"	f
P_VerifyBlockMap	src/p_setup.c	/^static dboolean P_VerifyBlockMap(int count)$/;"	f	file:
P_WalkTicker	src/g_game.c	/^void P_WalkTicker() {$/;"	f
P_WasSecret	src/p_spec.c	/^dboolean PUREFUNC P_WasSecret(const sector_t *sec)$/;"	f
P_WeaponPreferred	src/p_pspr.c	/^int P_WeaponPreferred(int w1, int w2)$/;"	f
P_Write	src/p_user.c	/^void P_Write(int playernum, const char *message) {$/;"	f
P_XYMovement	src/p_mobj.c	/^static void P_XYMovement(mobj_t* mo) {$/;"	f	file:
P_ZMovement	src/p_mobj.c	/^static void P_ZMovement(mobj_t *mo) {$/;"	f	file:
PageSelectedWidget	src/TEXTSCREEN/txt_scrollpane.c	/^static int PageSelectedWidget(txt_scrollpane_t *scrollpane, int key)$/;"	f	file:
PalEntry_s	src/gl_intern.h	/^typedef struct PalEntry_s$/;"	s
PalEntry_t	src/gl_intern.h	/^} PalEntry_t;$/;"	t	typeref:struct:PalEntry_s
Palettes15	src/v_video.c	/^static unsigned short *Palettes15 = NULL;$/;"	v	file:
Palettes16	src/v_video.c	/^static unsigned short *Palettes16 = NULL;$/;"	v	file:
Palettes32	src/v_video.c	/^static unsigned int *Palettes32 = NULL;$/;"	v	file:
ParamsMatchingCheck	src/e6y.c	/^void ParamsMatchingCheck()$/;"	f
ParseCommandLine	src/SDL/SDL_win32_main.c	/^static int ParseCommandLine(char *cmdline, char **argv)$/;"	f	file:
ParseDemoPattern	src/r_demo.c	/^int ParseDemoPattern(const char *str, waddata_t* waddata, char **missed, dboolean trytodownload)$/;"	f
PartialMatch	src/PCRELIB/pcrecpp.cc	/^bool RE::PartialMatch(const StringPiece& text,$/;"	f	class:pcrecpp::RE
PathFindFileName	src/e6y.c	/^char* PathFindFileName(const char* pPath)$/;"	f
Pi	src/r_main.h	162;"	d
PitchBendEvent	src/MUSIC/oplplayer.c	/^static void PitchBendEvent(opl_track_data_t *track, midi_event_t *event)$/;"	f	file:
PlayeringameOverrun	src/g_overflow.c	/^int PlayeringameOverrun(const mapthing_t* mthing)$/;"	f
PrevAngle	src/e6y.h	/^  angle_t PrevAngle;$/;"	m	struct:camera_s
PrevPitch	src/e6y.h	/^  angle_t PrevPitch;$/;"	m	struct:camera_s
PrevX	src/e6y.h	/^  long PrevX;$/;"	m	struct:camera_s
PrevX	src/p_mobj.h	/^    fixed_t             PrevX;$/;"	m	struct:mobj_s
PrevY	src/e6y.h	/^  long PrevY;$/;"	m	struct:camera_s
PrevY	src/p_mobj.h	/^    fixed_t             PrevY;$/;"	m	struct:mobj_s
PrevZ	src/e6y.h	/^  long PrevZ;$/;"	m	struct:camera_s
PrevZ	src/p_mobj.h	/^    fixed_t             PrevZ;$/;"	m	struct:mobj_s
PrintQueue	src/MUSIC/opl_queue.c	/^static void PrintQueue(opl_callback_queue_t *queue)$/;"	f	file:
PrintQueueNode	src/MUSIC/opl_queue.c	/^static void PrintQueueNode(opl_callback_queue_t *queue, int node, int depth)$/;"	f	file:
PrintTrack	src/MUSIC/midifile.c	/^void PrintTrack (midi_track_t *track)$/;"	f
PrintVer	src/SDL/i_main.c	/^static void PrintVer(void)$/;"	f	file:
ProcessDehFile	src/d_deh.c	/^void ProcessDehFile(const char *filename, const char *outfilename, int lumpnum)$/;"	f
ProcessEvent	src/MUSIC/oplplayer.c	/^static void ProcessEvent(opl_track_data_t *track, midi_event_t *event)$/;"	f	file:
ProcessNoTagLines	src/e6y.c	/^dboolean ProcessNoTagLines(line_t* line, sector_t **sec, int *secnum)$/;"	f
ProgramChangeEvent	src/MUSIC/oplplayer.c	/^static void ProgramChangeEvent(opl_track_data_t *track, midi_event_t *event)$/;"	f	file:
PushMany	src/p_spec.h	/^  PushMany,$/;"	e	enum:__anon238
PushOnce	src/p_spec.h	/^  PushOnce,$/;"	e	enum:__anon238
PutChar	src/TEXTSCREEN/txt_io.c	/^static void PutChar(unsigned char *screendata, int c)$/;"	f	file:
QLOADNET	src/d_englsh.h	36;"	d
QLPROMPT	src/d_englsh.h	40;"	d
QSAVESPOT	src/d_englsh.h	37;"	d
QSPROMPT	src/d_englsh.h	39;"	d
QUICKREVERSE	src/g_game.c	83;"	d	file:
QUITMSG	src/d_englsh.h	34;"	d
R	src/am_map.c	146;"	d	file:
R	src/am_map.c	157;"	d	file:
R	src/am_map.c	160;"	d	file:
R	src/am_map.c	178;"	d	file:
R	src/am_map.c	182;"	d	file:
R	src/am_map.c	188;"	d	file:
R	src/am_map.c	192;"	d	file:
R	src/am_map.c	199;"	d	file:
RAD2DEG	src/r_main.h	164;"	d
RADIATIONPAL	src/st_stuff.c	57;"	d	file:
RADIO_VALUE_BADGER	src/TEXTSCREEN/examples/guitest.c	/^    RADIO_VALUE_BADGER,$/;"	e	enum:__anon331	file:
RADIO_VALUE_MUSHROOM	src/TEXTSCREEN/examples/guitest.c	/^    RADIO_VALUE_MUSHROOM,$/;"	e	enum:__anon331	file:
RADIO_VALUE_SNAKE	src/TEXTSCREEN/examples/guitest.c	/^    RADIO_VALUE_SNAKE,$/;"	e	enum:__anon331	file:
RAISESPEED	src/p_pspr.c	44;"	d	file:
RANGECHECK	src/MAC/config.h	37;"	d
RATE_MASK	src/MUSIC/dbopl.c	109;"	d	file:
RATE_SH	src/MUSIC/dbopl.c	108;"	d	file:
RCard	src/p_spec.h	/^  RCard,$/;"	e	enum:__anon248
RDC_BILINEAR	src/r_draw.c	124;"	d	file:
RDC_DITHERZ	src/r_draw.c	123;"	d	file:
RDC_FUZZ	src/r_draw.c	119;"	d	file:
RDC_NOCOLMAP	src/r_draw.c	121;"	d	file:
RDC_PIPELINE_FUZZ	src/r_draw.h	/^  RDC_PIPELINE_FUZZ,$/;"	e	enum:column_pipeline_e
RDC_PIPELINE_MAXPIPELINES	src/r_draw.h	/^  RDC_PIPELINE_MAXPIPELINES,$/;"	e	enum:column_pipeline_e
RDC_PIPELINE_STANDARD	src/r_draw.h	/^  RDC_PIPELINE_STANDARD,$/;"	e	enum:column_pipeline_e
RDC_PIPELINE_TRANSLATED	src/r_draw.h	/^  RDC_PIPELINE_TRANSLATED,$/;"	e	enum:column_pipeline_e
RDC_PIPELINE_TRANSLUCENT	src/r_draw.h	/^  RDC_PIPELINE_TRANSLUCENT,$/;"	e	enum:column_pipeline_e
RDC_ROUNDED	src/r_draw.c	125;"	d	file:
RDC_STANDARD	src/r_draw.c	116;"	d	file:
RDC_TRANSLATED	src/r_draw.c	118;"	d	file:
RDC_TRANSLUCENT	src/r_draw.c	117;"	d	file:
RDH_SAFE	src/g_game.h	120;"	d
RDH_SKIP_HEADER	src/g_game.h	121;"	d
RDRAW_EDGESLOPE_BOT_DOWN	src/r_patch.h	/^  RDRAW_EDGESLOPE_BOT_DOWN = (1<<3),$/;"	e	enum:__anon307
RDRAW_EDGESLOPE_BOT_MASK	src/r_patch.h	/^  RDRAW_EDGESLOPE_BOT_MASK = 0xc,  $/;"	e	enum:__anon307
RDRAW_EDGESLOPE_BOT_UP	src/r_patch.h	/^  RDRAW_EDGESLOPE_BOT_UP   = (1<<2),$/;"	e	enum:__anon307
RDRAW_EDGESLOPE_TOP_DOWN	src/r_patch.h	/^  RDRAW_EDGESLOPE_TOP_DOWN = (1<<1),$/;"	e	enum:__anon307
RDRAW_EDGESLOPE_TOP_MASK	src/r_patch.h	/^  RDRAW_EDGESLOPE_TOP_MASK = 0x3,$/;"	e	enum:__anon307
RDRAW_EDGESLOPE_TOP_UP	src/r_patch.h	/^  RDRAW_EDGESLOPE_TOP_UP   = (1<<0),$/;"	e	enum:__anon307
RDRAW_FILTER_LINEAR	src/r_draw.h	/^  RDRAW_FILTER_LINEAR,$/;"	e	enum:draw_filter_type_e
RDRAW_FILTER_MAXFILTERS	src/r_draw.h	/^  RDRAW_FILTER_MAXFILTERS$/;"	e	enum:draw_filter_type_e
RDRAW_FILTER_NONE	src/r_draw.h	/^  RDRAW_FILTER_NONE,$/;"	e	enum:draw_filter_type_e
RDRAW_FILTER_POINT	src/r_draw.h	/^  RDRAW_FILTER_POINT,$/;"	e	enum:draw_filter_type_e
RDRAW_FILTER_ROUNDED	src/r_draw.h	/^  RDRAW_FILTER_ROUNDED,$/;"	e	enum:draw_filter_type_e
RDRAW_MASKEDCOLUMNEDGE_SLOPED	src/r_draw.h	/^  RDRAW_MASKEDCOLUMNEDGE_SLOPED$/;"	e	enum:sloped_edge_type_e
RDRAW_MASKEDCOLUMNEDGE_SQUARE	src/r_draw.h	/^  RDRAW_MASKEDCOLUMNEDGE_SQUARE,$/;"	e	enum:sloped_edge_type_e
RE	src/PCRELIB/pcrecpp.h	/^  RE(const char *pat, const RE_Options& option) { Init(pat, &option); }$/;"	f	class:pcrecpp::RE
RE	src/PCRELIB/pcrecpp.h	/^  RE(const char* pat) { Init(pat, NULL); }$/;"	f	class:pcrecpp::RE
RE	src/PCRELIB/pcrecpp.h	/^  RE(const string& pat) { Init(pat.c_str(), NULL); }$/;"	f	class:pcrecpp::RE
RE	src/PCRELIB/pcrecpp.h	/^  RE(const string& pat, const RE_Options& option) { Init(pat.c_str(), &option); }$/;"	f	class:pcrecpp::RE
RE	src/PCRELIB/pcrecpp.h	/^class RE {$/;"	c	namespace:pcrecpp
REAL_SCREENHEIGHT	src/doomdef.c	/^int REAL_SCREENHEIGHT;$/;"	v
REAL_SCREENPITCH	src/doomdef.c	/^int REAL_SCREENPITCH;$/;"	v
REAL_SCREENWIDTH	src/doomdef.c	/^int REAL_SCREENWIDTH;$/;"	v
REC_STACK_SAVE_MAX	src/PCRELIB/pcre_exec.c	98;"	d	file:
REGCHAN	src/MUSIC/dbopl.c	1184;"	d	file:
REGISTER	src/PCRELIB/pcre_exec.c	220;"	d	file:
REGISTER	src/PCRELIB/pcre_exec.c	246;"	d	file:
REGOP	src/MUSIC/dbopl.c	1177;"	d	file:
REG_ASSERT	src/PCRELIB/pcreposix.h	/^  REG_ASSERT = 1,  \/* internal error ? *\/$/;"	e	enum:__anon217
REG_BADBR	src/PCRELIB/pcreposix.h	/^  REG_BADBR,       \/* invalid repeat counts in {} *\/$/;"	e	enum:__anon217
REG_BADPAT	src/PCRELIB/pcreposix.h	/^  REG_BADPAT,      \/* pattern error *\/$/;"	e	enum:__anon217
REG_BADRPT	src/PCRELIB/pcreposix.h	/^  REG_BADRPT,      \/* ? * + invalid *\/$/;"	e	enum:__anon217
REG_DOTALL	src/PCRELIB/pcreposix.h	82;"	d
REG_EBRACE	src/PCRELIB/pcreposix.h	/^  REG_EBRACE,      \/* unbalanced {} *\/$/;"	e	enum:__anon217
REG_EBRACK	src/PCRELIB/pcreposix.h	/^  REG_EBRACK,      \/* unbalanced [] *\/$/;"	e	enum:__anon217
REG_ECOLLATE	src/PCRELIB/pcreposix.h	/^  REG_ECOLLATE,    \/* collation error - not relevant *\/$/;"	e	enum:__anon217
REG_ECTYPE	src/PCRELIB/pcreposix.h	/^  REG_ECTYPE,      \/* bad class *\/$/;"	e	enum:__anon217
REG_EESCAPE	src/PCRELIB/pcreposix.h	/^  REG_EESCAPE,     \/* bad escape sequence *\/$/;"	e	enum:__anon217
REG_EMPTY	src/PCRELIB/pcreposix.h	/^  REG_EMPTY,       \/* empty expression *\/$/;"	e	enum:__anon217
REG_EPAREN	src/PCRELIB/pcreposix.h	/^  REG_EPAREN,      \/* unbalanced () *\/$/;"	e	enum:__anon217
REG_ERANGE	src/PCRELIB/pcreposix.h	/^  REG_ERANGE,      \/* bad range inside [] *\/$/;"	e	enum:__anon217
REG_ESIZE	src/PCRELIB/pcreposix.h	/^  REG_ESIZE,       \/* expression too big *\/$/;"	e	enum:__anon217
REG_ESPACE	src/PCRELIB/pcreposix.h	/^  REG_ESPACE,      \/* failed to get memory *\/$/;"	e	enum:__anon217
REG_ESUBREG	src/PCRELIB/pcreposix.h	/^  REG_ESUBREG,     \/* bad back reference *\/$/;"	e	enum:__anon217
REG_EXTENDED	src/PCRELIB/pcreposix.h	89;"	d
REG_ICASE	src/PCRELIB/pcreposix.h	78;"	d
REG_INVARG	src/PCRELIB/pcreposix.h	/^  REG_INVARG,      \/* bad argument *\/$/;"	e	enum:__anon217
REG_NEWLINE	src/PCRELIB/pcreposix.h	79;"	d
REG_NOMATCH	src/PCRELIB/pcreposix.h	/^  REG_NOMATCH      \/* match failed *\/$/;"	e	enum:__anon217
REG_NOSUB	src/PCRELIB/pcreposix.h	83;"	d
REG_NOTBOL	src/PCRELIB/pcreposix.h	80;"	d
REG_NOTEOL	src/PCRELIB/pcreposix.h	81;"	d
REG_UTF8	src/PCRELIB/pcreposix.h	84;"	d
RELEASE	src/MUSIC/dbopl.h	/^        RELEASE,$/;"	e	enum:__anon202
REQ_BYTE_MAX	src/PCRELIB/pcre_internal.h	456;"	d
REQ_CASELESS	src/PCRELIB/pcre_internal.h	461;"	d
REQ_NONE	src/PCRELIB/pcre_internal.h	451;"	d
REQ_UNSET	src/PCRELIB/pcre_internal.h	450;"	d
REQ_VARY	src/PCRELIB/pcre_internal.h	462;"	d
RESTARTLEVEL	src/d_englsh.h	58;"	d
RETRACTION_TIME	src/hu_msg.c	39;"	d	file:
RETRACTION_TIMEOUT	src/hu_msg.c	40;"	d	file:
RETRY_AMOUNT	src/z_zone.c	53;"	d	file:
RE_Options	src/PCRELIB/pcrecpp.h	/^  RE_Options() : match_limit_(0), match_limit_recursion_(0), all_options_(0) {}$/;"	f	class:pcrecpp::RE_Options
RE_Options	src/PCRELIB/pcrecpp.h	/^  RE_Options(int option_flags) : match_limit_(0), match_limit_recursion_(0),$/;"	f	class:pcrecpp::RE_Options
RE_Options	src/PCRELIB/pcrecpp.h	/^class RE_Options {$/;"	c	namespace:pcrecpp
RF_BOT_TILE	src/r_defs.h	/^    RF_BOT_TILE = 4,     \/\/ Lower texture needs tiling$/;"	e	enum:line_s::__anon286
RF_CLOSED	src/r_defs.h	/^    RF_CLOSED   =16,     \/\/ Line blocks view$/;"	e	enum:line_s::__anon286
RF_IGNORE	src/r_defs.h	/^    RF_IGNORE   = 8,     \/\/ Renderer can skip this line$/;"	e	enum:line_s::__anon286
RF_ISOLATED	src/r_defs.h	/^    RF_ISOLATED =32,     \/\/ Isolated line$/;"	e	enum:line_s::__anon286
RF_MID_TILE	src/r_defs.h	/^    RF_MID_TILE = 2,     \/\/ Mid texture needs tiling$/;"	e	enum:line_s::__anon286
RF_TOP_TILE	src/r_defs.h	/^    RF_TOP_TILE  = 1,     \/\/ Upper texture needs tiling$/;"	e	enum:line_s::__anon286
RGB2COLOR	src/v_video.c	1004;"	d	file:
RGB2PAL	src/gl_hires.c	/^static byte* RGB2PAL = NULL;$/;"	v	file:
RGB2PAL_NAME	src/gl_hires.c	897;"	d	file:
RGB32k	src/v_video.c	/^byte RGB32k[32][32][32];$/;"	v
RGBAFormat	src/gl_opengl.c	/^SDL_PixelFormat RGBAFormat;$/;"	v
RMATCH	src/PCRELIB/pcre_exec.c	222;"	d	file:
RMATCH	src/PCRELIB/pcre_exec.c	234;"	d	file:
RMATCH	src/PCRELIB/pcre_exec.c	248;"	d	file:
RMUL	src/r_main.h	59;"	d
RPART	src/gl_sky.c	430;"	d	file:
RRETURN	src/PCRELIB/pcre_exec.c	228;"	d	file:
RRETURN	src/PCRELIB/pcre_exec.c	236;"	d	file:
RRETURN	src/PCRELIB/pcre_exec.c	273;"	d	file:
RSkull	src/p_spec.h	/^  RSkull,$/;"	e	enum:__anon248
R_ActivateSectorInterpolations	src/r_fps.c	/^void R_ActivateSectorInterpolations()$/;"	f
R_ActivateThinkerInterpolations	src/r_fps.c	/^void R_ActivateThinkerInterpolations(thinker_t *th)$/;"	f
R_AddAllAliveMonstersSprites	src/r_things.c	/^void R_AddAllAliveMonstersSprites(void)$/;"	f
R_AddLine	src/r_bsp.c	/^static void R_AddLine (seg_t *line)$/;"	f	file:
R_AddSprites	src/r_things.c	/^void R_AddSprites(subsector_t* subsec, int lightlevel)$/;"	f
R_BSP_H__	src/r_bsp.h	25;"	d
R_BoxSkyboxNumForName	src/gl_sky.c	/^int R_BoxSkyboxNumForName(const char *name)$/;"	f
R_BuildModelViewMatrix	src/r_main.c	/^void R_BuildModelViewMatrix(void)$/;"	f
R_CachePatchName	src/r_patch.h	83;"	d
R_CachePatchNum	src/r_patch.c	/^const rpatch_t *R_CachePatchNum(int id) {$/;"	f
R_CacheTextureCompositePatchNum	src/r_patch.c	/^const rpatch_t *R_CacheTextureCompositePatchNum(int id) {$/;"	f
R_CheckBBox	src/r_bsp.c	/^static dboolean R_CheckBBox(const fixed_t *bspcoord)$/;"	f	file:
R_CheckPlane	src/r_plane.c	/^visplane_t *R_CheckPlane(visplane_t *pl, int start, int stop)$/;"	f
R_CheckTextureNumForName	src/r_data.c	/^int PUREFUNC R_CheckTextureNumForName(const char *name)$/;"	f
R_ClearClipSegs	src/r_bsp.c	/^void R_ClearClipSegs (void)$/;"	f
R_ClearDrawSegs	src/r_bsp.c	/^void R_ClearDrawSegs(void)$/;"	f
R_ClearPlanes	src/r_plane.c	/^void R_ClearPlanes(void)$/;"	f
R_ClearSprites	src/r_things.c	/^void R_ClearSprites (void)$/;"	f
R_ClearStats	src/r_main.c	/^void R_ClearStats(void)$/;"	f
R_ClipWallSegment	src/r_bsp.c	/^static void R_ClipWallSegment(int first, int last, dboolean solid)$/;"	f	file:
R_ColormapNumForName	src/r_data.c	/^int R_ColormapNumForName(const char *name)$/;"	f
R_CopyBakToInterp	src/r_fps.c	/^static void R_CopyBakToInterp (int i)$/;"	f	file:
R_CopyInterpToOld	src/r_fps.c	/^static void R_CopyInterpToOld (int i)$/;"	f	file:
R_DATA_H__	src/r_data.h	25;"	d
R_DEFS_H__	src/r_defs.h	25;"	d
R_DEMO_H__	src/r_demo.h	25;"	d
R_DRAWCOLUMN_FUNCNAME_COMPOSITE	src/r_draw.c	327;"	d	file:
R_DRAWCOLUMN_FUNCNAME_COMPOSITE	src/r_draw.c	375;"	d	file:
R_DRAWCOLUMN_FUNCNAME_COMPOSITE	src/r_draw.c	421;"	d	file:
R_DRAWCOLUMN_FUNCNAME_COMPOSITE	src/r_draw.c	466;"	d	file:
R_DRAWCOLUMN_PIPELINE	src/r_draw.c	265;"	d	file:
R_DRAWCOLUMN_PIPELINE	src/r_draw.c	272;"	d	file:
R_DRAWCOLUMN_PIPELINE	src/r_draw.c	279;"	d	file:
R_DRAWCOLUMN_PIPELINE_BASE	src/r_draw.c	301;"	d	file:
R_DRAWCOLUMN_PIPELINE_BASE	src/r_draw.c	333;"	d	file:
R_DRAWCOLUMN_PIPELINE_BASE	src/r_draw.c	349;"	d	file:
R_DRAWCOLUMN_PIPELINE_BASE	src/r_draw.c	381;"	d	file:
R_DRAWCOLUMN_PIPELINE_BASE	src/r_draw.c	395;"	d	file:
R_DRAWCOLUMN_PIPELINE_BASE	src/r_draw.c	427;"	d	file:
R_DRAWCOLUMN_PIPELINE_BASE	src/r_draw.c	440;"	d	file:
R_DRAWCOLUMN_PIPELINE_BASE	src/r_draw.c	472;"	d	file:
R_DRAWCOLUMN_PIPELINE_BITS	src/r_draw.c	266;"	d	file:
R_DRAWCOLUMN_PIPELINE_BITS	src/r_draw.c	273;"	d	file:
R_DRAWCOLUMN_PIPELINE_BITS	src/r_draw.c	280;"	d	file:
R_DRAWCOLUMN_PIPELINE_BITS	src/r_draw.c	326;"	d	file:
R_DRAWCOLUMN_PIPELINE_BITS	src/r_draw.c	374;"	d	file:
R_DRAWCOLUMN_PIPELINE_BITS	src/r_draw.c	420;"	d	file:
R_DRAWCOLUMN_PIPELINE_BITS	src/r_draw.c	465;"	d	file:
R_DRAWCOLUMN_PIPELINE_TYPE	src/r_draw.c	300;"	d	file:
R_DRAWCOLUMN_PIPELINE_TYPE	src/r_draw.c	334;"	d	file:
R_DRAWCOLUMN_PIPELINE_TYPE	src/r_draw.c	348;"	d	file:
R_DRAWCOLUMN_PIPELINE_TYPE	src/r_draw.c	382;"	d	file:
R_DRAWCOLUMN_PIPELINE_TYPE	src/r_draw.c	394;"	d	file:
R_DRAWCOLUMN_PIPELINE_TYPE	src/r_draw.c	428;"	d	file:
R_DRAWCOLUMN_PIPELINE_TYPE	src/r_draw.c	439;"	d	file:
R_DRAWCOLUMN_PIPELINE_TYPE	src/r_draw.c	473;"	d	file:
R_DRAWSPAN_FUNCNAME	src/r_draw.c	698;"	d	file:
R_DRAWSPAN_FUNCNAME	src/r_draw.c	703;"	d	file:
R_DRAWSPAN_FUNCNAME	src/r_draw.c	708;"	d	file:
R_DRAWSPAN_FUNCNAME	src/r_draw.c	713;"	d	file:
R_DRAWSPAN_FUNCNAME	src/r_draw.c	718;"	d	file:
R_DRAWSPAN_FUNCNAME	src/r_draw.c	723;"	d	file:
R_DRAWSPAN_PIPELINE	src/r_draw.c	700;"	d	file:
R_DRAWSPAN_PIPELINE	src/r_draw.c	705;"	d	file:
R_DRAWSPAN_PIPELINE	src/r_draw.c	710;"	d	file:
R_DRAWSPAN_PIPELINE	src/r_draw.c	715;"	d	file:
R_DRAWSPAN_PIPELINE	src/r_draw.c	720;"	d	file:
R_DRAWSPAN_PIPELINE	src/r_draw.c	725;"	d	file:
R_DRAWSPAN_PIPELINE_BITS	src/r_draw.c	699;"	d	file:
R_DRAWSPAN_PIPELINE_BITS	src/r_draw.c	704;"	d	file:
R_DRAWSPAN_PIPELINE_BITS	src/r_draw.c	709;"	d	file:
R_DRAWSPAN_PIPELINE_BITS	src/r_draw.c	714;"	d	file:
R_DRAWSPAN_PIPELINE_BITS	src/r_draw.c	719;"	d	file:
R_DRAWSPAN_PIPELINE_BITS	src/r_draw.c	724;"	d	file:
R_DRAW_H__	src/r_draw.h	25;"	d
R_DemoEx_AddMouseLookData	src/r_demo.c	/^static void R_DemoEx_AddMouseLookData(wadtbl_t *wadtbl)$/;"	f	file:
R_DemoEx_AddParams	src/r_demo.c	/^static void R_DemoEx_AddParams(wadtbl_t *wadtbl) {$/;"	f	file:
R_DemoEx_GetParams	src/r_demo.c	/^static void R_DemoEx_GetParams(const byte *pwad_p, waddata_t *waddata)$/;"	f	file:
R_DemoEx_GetVersion	src/r_demo.c	/^static int R_DemoEx_GetVersion(void)$/;"	f	file:
R_DemoEx_ReadMLook	src/r_demo.c	/^angle_t R_DemoEx_ReadMLook(void)$/;"	f
R_DemoEx_ShowComment	src/r_demo.c	/^void R_DemoEx_ShowComment(void)$/;"	f
R_DemoEx_WriteMLook	src/r_demo.c	/^void R_DemoEx_WriteMLook(angle_t pitch)$/;"	f
R_DoAnInterpolation	src/r_fps.c	/^static void R_DoAnInterpolation (int i, fixed_t smoothratio)$/;"	f	file:
R_DoDrawPlane	src/r_plane.c	/^static void R_DoDrawPlane(visplane_t *pl)$/;"	f	file:
R_DrawColumn_f	src/r_draw.h	/^typedef void (*R_DrawColumn_f)(pdraw_column_vars_s dcvars);$/;"	t
R_DrawMasked	src/r_things.c	/^void R_DrawMasked(void)$/;"	f
R_DrawMaskedColumn	src/r_things.c	/^void R_DrawMaskedColumn($/;"	f
R_DrawPSprite	src/r_things.c	/^static void R_DrawPSprite (pspdef_t *psp)$/;"	f	file:
R_DrawPlanes	src/r_plane.c	/^void R_DrawPlanes (void)$/;"	f
R_DrawPlayerSprites	src/r_things.c	/^void R_DrawPlayerSprites(void)$/;"	f
R_DrawSpan	src/r_draw.c	/^void R_DrawSpan(draw_span_vars_t *dsvars) {$/;"	f
R_DrawSpan_f	src/r_draw.h	/^typedef void (*R_DrawSpan_f)(draw_span_vars_t *dsvars);$/;"	t
R_DrawSprite	src/r_things.c	/^static void R_DrawSprite (vissprite_t* spr)$/;"	f	file:
R_DrawViewBorder	src/r_draw.c	/^void R_DrawViewBorder(void)$/;"	f
R_DrawVisSprite	src/r_things.c	/^static void R_DrawVisSprite(vissprite_t *vis)$/;"	f	file:
R_DupPlane	src/r_plane.c	/^visplane_t *R_DupPlane(const visplane_t *pl, int start, int stop)$/;"	f
R_ExecuteSetViewSize	src/r_main.c	/^void R_ExecuteSetViewSize (void)$/;"	f
R_FILTER_H__	src/r_filter.h	25;"	d
R_FLUSHHEADTAIL_FUNCNAME	src/r_draw.c	268;"	d	file:
R_FLUSHHEADTAIL_FUNCNAME	src/r_draw.c	275;"	d	file:
R_FLUSHHEADTAIL_FUNCNAME	src/r_draw.c	282;"	d	file:
R_FLUSHHEADTAIL_FUNCNAME	src/r_draw.c	329;"	d	file:
R_FLUSHHEADTAIL_FUNCNAME	src/r_draw.c	377;"	d	file:
R_FLUSHHEADTAIL_FUNCNAME	src/r_draw.c	423;"	d	file:
R_FLUSHHEADTAIL_FUNCNAME	src/r_draw.c	468;"	d	file:
R_FLUSHQUAD_FUNCNAME	src/r_draw.c	269;"	d	file:
R_FLUSHQUAD_FUNCNAME	src/r_draw.c	276;"	d	file:
R_FLUSHQUAD_FUNCNAME	src/r_draw.c	283;"	d	file:
R_FLUSHQUAD_FUNCNAME	src/r_draw.c	330;"	d	file:
R_FLUSHQUAD_FUNCNAME	src/r_draw.c	378;"	d	file:
R_FLUSHQUAD_FUNCNAME	src/r_draw.c	424;"	d	file:
R_FLUSHQUAD_FUNCNAME	src/r_draw.c	469;"	d	file:
R_FLUSHWHOLE_FUNCNAME	src/r_draw.c	267;"	d	file:
R_FLUSHWHOLE_FUNCNAME	src/r_draw.c	274;"	d	file:
R_FLUSHWHOLE_FUNCNAME	src/r_draw.c	281;"	d	file:
R_FLUSHWHOLE_FUNCNAME	src/r_draw.c	328;"	d	file:
R_FLUSHWHOLE_FUNCNAME	src/r_draw.c	376;"	d	file:
R_FLUSHWHOLE_FUNCNAME	src/r_draw.c	422;"	d	file:
R_FLUSHWHOLE_FUNCNAME	src/r_draw.c	467;"	d	file:
R_FPS_H__	src/r_fps.h	25;"	d
R_FakeFlat	src/r_bsp.c	/^sector_t *R_FakeFlat(sector_t *sec, sector_t *tempsec,$/;"	f
R_FillBackScreen	src/r_draw.c	/^void R_FillBackScreen (void)$/;"	f
R_FilterInit	src/r_filter.c	/^void R_FilterInit(void) {$/;"	f
R_FindPlane	src/r_plane.c	/^visplane_t *R_FindPlane(fixed_t height, int picnum, int lightlevel,$/;"	f
R_FlatNumForName	src/r_data.c	/^int R_FlatNumForName(const char *name)    \/\/ killough -- const added$/;"	f
R_FlushAllPatches	src/r_patch.c	/^void R_FlushAllPatches(void) {$/;"	f
R_FlushColumns	src/r_draw.c	/^static void R_FlushColumns(void)$/;"	f	file:
R_FlushHTColumns	src/r_draw.c	/^static void (*R_FlushHTColumns)(void)    = R_FlushHTError;$/;"	v	file:
R_FlushHTError	src/r_draw.c	/^static void R_FlushHTError(void)$/;"	f	file:
R_FlushQuadColumn	src/r_draw.c	/^static void (*R_FlushQuadColumn)(void) = R_QuadFlushError;$/;"	v	file:
R_FlushWholeColumns	src/r_draw.c	/^static void (*R_FlushWholeColumns)(void) = R_FlushWholeError;$/;"	v	file:
R_FlushWholeError	src/r_draw.c	/^static void R_FlushWholeError(void)$/;"	f	file:
R_GetBoxSkybox	src/gl_sky.c	/^box_skybox_t* R_GetBoxSkybox(int index)$/;"	f
R_GetDrawColumnFunc	src/r_draw.c	/^R_DrawColumn_f R_GetDrawColumnFunc(enum column_pipeline_e type,$/;"	f
R_GetDrawSpanFunc	src/r_draw.c	/^R_DrawSpan_f R_GetDrawSpanFunc(enum draw_filter_type_e filter,$/;"	f
R_GetPatchColumn	src/r_patch.c	/^const rcolumn_t *R_GetPatchColumn(const rpatch_t *patch, int columnIndex) {$/;"	f
R_GetPatchColumnClamped	src/r_patch.c	/^const rcolumn_t *R_GetPatchColumnClamped(const rpatch_t *patch, int columnIndex) {$/;"	f
R_GetPatchColumnWrapped	src/r_patch.c	/^const rcolumn_t *R_GetPatchColumnWrapped(const rpatch_t *patch, int columnIndex) {$/;"	f
R_GetTextureColumn	src/r_data.c	/^const byte *R_GetTextureColumn(const rpatch_t *texpatch, int col) {$/;"	f
R_GetVertexViewAngle	src/r_main.c	/^angle_t R_GetVertexViewAngle(vertex_t *v)$/;"	f
R_GetVertexViewAngleGL	src/r_main.c	/^angle_t R_GetVertexViewAngleGL(vertex_t *v)$/;"	f
R_Init	src/r_main.c	/^void R_Init (void)$/;"	f
R_InitBuffer	src/r_draw.c	/^void R_InitBuffer(int width, int height)$/;"	f
R_InitBuffersRes	src/r_draw.c	/^void R_InitBuffersRes(void)$/;"	f
R_InitColormaps	src/r_data.c	/^static void R_InitColormaps(void)$/;"	f	file:
R_InitData	src/r_data.c	/^void R_InitData(void)$/;"	f
R_InitFlats	src/r_data.c	/^static void R_InitFlats(void)$/;"	f	file:
R_InitInterpolation	src/r_fps.c	/^void R_InitInterpolation(void)$/;"	f
R_InitLightTables	src/r_main.c	/^static void R_InitLightTables (void)$/;"	f	file:
R_InitMeltRes	src/f_wipe.c	/^void R_InitMeltRes(void) {$/;"	f
R_InitPatches	src/r_patch.c	/^void R_InitPatches(void) {$/;"	f
R_InitPlanes	src/r_plane.c	/^void R_InitPlanes (void)$/;"	f
R_InitPlanesRes	src/r_plane.c	/^void R_InitPlanesRes(void)$/;"	f
R_InitSkyMap	src/r_sky.c	/^void R_InitSkyMap(void)$/;"	f
R_InitSpriteDefs	src/r_things.c	/^static void R_InitSpriteDefs(const char * const * namelist)$/;"	f	file:
R_InitSpriteLumps	src/r_data.c	/^static void R_InitSpriteLumps(void)$/;"	f	file:
R_InitSprites	src/r_things.c	/^void R_InitSprites(const char * const *namelist)$/;"	f
R_InitSpritesRes	src/r_things.c	/^void R_InitSpritesRes(void)$/;"	f
R_InitTextureMapping	src/r_main.c	/^static void R_InitTextureMapping (void)$/;"	f	file:
R_InitTextures	src/r_data.c	/^static void R_InitTextures (void)$/;"	f	file:
R_InitTranMap	src/r_data.c	/^void R_InitTranMap(int progress)$/;"	f
R_InitTranslationTables	src/r_draw.c	/^void R_InitTranslationTables (void)$/;"	f
R_InitVisplanesRes	src/r_plane.c	/^void R_InitVisplanesRes(void)$/;"	f
R_InstallSpriteLump	src/r_things.c	/^static void R_InstallSpriteLump(int lump, unsigned frame,$/;"	f	file:
R_InterpolateView	src/r_fps.c	/^void R_InterpolateView(player_t *player)$/;"	f
R_InterpolationGetData	src/r_fps.c	/^static void R_InterpolationGetData(thinker_t *th,$/;"	f	file:
R_LoadTrigTables	src/tables.c	/^void R_LoadTrigTables(void)$/;"	f
R_MAIN_H__	src/r_main.h	25;"	d
R_MakeSpans	src/r_plane.c	/^static void R_MakeSpans(int x, unsigned int t1, unsigned int b1,$/;"	f	file:
R_MapPlane	src/r_plane.c	/^static void R_MapPlane(int y, int x1, int x2, draw_span_vars_t *dsvars)$/;"	f	file:
R_MultMatrixVecd	src/r_main.c	/^void R_MultMatrixVecd(const float matrix[16], const float in[4], float out[4])$/;"	f
R_NamePatchHeight	src/r_patch.h	94;"	d
R_NamePatchWidth	src/r_patch.h	93;"	d
R_NewVisSprite	src/r_things.c	/^static vissprite_t *R_NewVisSprite(void)$/;"	f	file:
R_NumPatchHeight	src/r_patch.c	/^int R_NumPatchHeight(int lump)$/;"	f
R_NumPatchWidth	src/r_patch.c	/^int R_NumPatchWidth(int lump)$/;"	f
R_OK	src/i_system.h	41;"	d
R_OK	src/z_zone.h	62;"	d
R_PATCH_H__	src/r_patch.h	25;"	d
R_PLANE_H__	src/r_plane.h	25;"	d
R_PointInSubsector	src/r_main.c	/^subsector_t *R_PointInSubsector(fixed_t x, fixed_t y)$/;"	f
R_PointOnSegSide	src/r_main.c	/^PUREFUNC int R_PointOnSegSide(fixed_t x, fixed_t y, const seg_t *line)$/;"	f
R_PointOnSide	src/r_main.c	/^PUREFUNC int R_PointOnSide(fixed_t x, fixed_t y, const node_t *node)$/;"	f
R_PointToAngle	src/r_main.c	/^angle_t R_PointToAngle(fixed_t x, fixed_t y)$/;"	f
R_PointToAngle2	src/r_main.c	/^angle_t R_PointToAngle2(fixed_t viewx, fixed_t viewy, fixed_t x, fixed_t y)$/;"	f
R_PointToAngleEx	src/r_main.c	/^angle_t R_PointToAngleEx(fixed_t x, fixed_t y)$/;"	f
R_PointToDist	src/r_segs.c	/^static fixed_t R_PointToDist(fixed_t x, fixed_t y)$/;"	f	file:
R_PointToPseudoAngle	src/r_main.c	/^angle_t R_PointToPseudoAngle (fixed_t x, fixed_t y)$/;"	f
R_PrecacheLevel	src/r_data.c	/^void R_PrecacheLevel(void)$/;"	f
R_ProcessScreenMultiply	src/r_screenmultiply.c	/^void R_ProcessScreenMultiply(byte* pixels_src, byte* pixels_dest,$/;"	f
R_ProcessScreenMultiplyBlock	src/r_screenmultiply.c	/^static void R_ProcessScreenMultiplyBlock(byte* pixels_src, byte* pixels_dest,$/;"	f	file:
R_ProcessScreenMultiplyBlock2x	src/r_screenmultiply.c	/^static void R_ProcessScreenMultiplyBlock2x(byte* pixels_src, byte* pixels_dest,$/;"	f	file:
R_ProcessScreenMultiplyBlock4x	src/r_screenmultiply.c	/^static void R_ProcessScreenMultiplyBlock4x(byte* pixels_src, byte* pixels_dest,$/;"	f	file:
R_Project	src/r_main.c	/^int R_Project(float objx, float objy, float objz, float *winx, float *winy, float *winz)$/;"	f
R_ProjectSprite	src/r_things.c	/^static void R_ProjectSprite (mobj_t* thing)$/;"	f	file:
R_QuadFlushError	src/r_draw.c	/^static void R_QuadFlushError(void)$/;"	f	file:
R_RecalcLineFlags	src/r_bsp.c	/^static void R_RecalcLineFlags(line_t *linedef)$/;"	f	file:
R_RenderBSPNode	src/r_bsp.c	/^void R_RenderBSPNode(int bspnum)$/;"	f
R_RenderMaskedSegRange	src/r_segs.c	/^void R_RenderMaskedSegRange(drawseg_t *ds, int x1, int x2)$/;"	f
R_RenderPlayerView	src/r_main.c	/^void R_RenderPlayerView (player_t* player)$/;"	f
R_RenderSegLoop	src/r_segs.c	/^static void R_RenderSegLoop (void)$/;"	f	file:
R_ResetAfterTeleport	src/r_demo.c	/^void R_ResetAfterTeleport(player_t *player)$/;"	f
R_ResetColumnBuffer	src/r_draw.c	/^void R_ResetColumnBuffer(void)$/;"	f
R_ResetViewInterpolation	src/r_fps.c	/^void R_ResetViewInterpolation ()$/;"	f
R_RestoreInterpolations	src/r_fps.c	/^void R_RestoreInterpolations(void)$/;"	f
R_SCREENMULTIPLY_H__	src/r_screenmultiply.h	25;"	d
R_SEGS_H__	src/r_segs.h	25;"	d
R_SKY_H__	src/r_sky.h	25;"	d
R_STATE_H__	src/r_state.h	25;"	d
R_SafeTextureNumForName	src/r_data.c	/^int PUREFUNC R_SafeTextureNumForName(const char *name, int snum)$/;"	f
R_ScaleFromGlobalAngle	src/r_segs.c	/^static fixed_t R_ScaleFromGlobalAngle(angle_t visangle)$/;"	f	file:
R_SetBoxSkybox	src/gl_sky.c	/^void R_SetBoxSkybox(int texture)$/;"	f
R_SetClipPlanes	src/r_things.c	/^void R_SetClipPlanes(void)$/;"	f
R_SetDefaultDrawColumnVars	src/r_draw.c	/^void R_SetDefaultDrawColumnVars(draw_column_vars_t *dcvars) {$/;"	f
R_SetFloorNum	src/r_data.c	/^void R_SetFloorNum(patchnum_t *patchnum, const char *name)$/;"	f
R_SetInterpolation	src/r_fps.c	/^static void R_SetInterpolation(interpolation_type_e type, void *posptr)$/;"	f	file:
R_SetPatchByName	src/r_data.c	/^int R_SetPatchByName(patchnum_t *patchnum, const char *name)$/;"	f
R_SetPatchNum	src/r_data.c	/^void R_SetPatchNum(patchnum_t *patchnum, const char *name)$/;"	f
R_SetSpriteByIndex	src/r_data.c	/^int R_SetSpriteByIndex(patchnum_t *patchnum, spritenum_t item)$/;"	f
R_SetSpriteByName	src/r_data.c	/^int R_SetSpriteByName(patchnum_t *patchnum, const char *name)$/;"	f
R_SetSpriteByNum	src/r_data.c	/^void R_SetSpriteByNum(patchnum_t *patchnum, int lump)$/;"	f
R_SetViewSize	src/r_main.c	/^void R_SetViewSize(int blocks)$/;"	f
R_SetupFrame	src/r_main.c	/^static void R_SetupFrame (player_t *player)$/;"	f	file:
R_SetupFreelook	src/r_main.c	/^void R_SetupFreelook(void)$/;"	f
R_SetupMatrix	src/r_main.c	/^void R_SetupMatrix(void)$/;"	f
R_SetupPerspective	src/r_main.c	/^void R_SetupPerspective(float fovy, float aspect, float znear)$/;"	f
R_SetupViewScaling	src/r_main.c	/^void R_SetupViewScaling(void)$/;"	f
R_SetupViewport	src/r_main.c	/^void R_SetupViewport(void)$/;"	f
R_ShowStats	src/r_main.c	/^void R_ShowStats(void) {$/;"	f
R_SmoothPlaying_Add	src/r_demo.c	/^void R_SmoothPlaying_Add(int delta)$/;"	f
R_SmoothPlaying_Get	src/r_demo.c	/^angle_t R_SmoothPlaying_Get(player_t *player)$/;"	f
R_SmoothPlaying_Reset	src/r_demo.c	/^void R_SmoothPlaying_Reset(player_t *player)$/;"	f
R_SortVisSprites	src/r_things.c	/^void R_SortVisSprites (void)$/;"	f
R_SpriteNameHash	src/r_things.c	217;"	d	file:
R_StopAllInterpolations	src/r_fps.c	/^void R_StopAllInterpolations(void)$/;"	f
R_StopInterpolation	src/r_fps.c	/^static void R_StopInterpolation(interpolation_type_e type, void *posptr)$/;"	f	file:
R_StopInterpolationIfNeeded	src/r_fps.c	/^void R_StopInterpolationIfNeeded(thinker_t *th)$/;"	f
R_StoreWallRange	src/r_segs.c	/^void R_StoreWallRange(const int start, const int stop)$/;"	f
R_Subsector	src/r_bsp.c	/^static void R_Subsector(int num)$/;"	f	file:
R_THINGS_H__	src/r_things.h	25;"	d
R_TextureNumForName	src/r_data.c	/^int PUREFUNC R_TextureNumForName(const char *name)  \/\/ const added -- killough$/;"	f
R_UnlockPatchName	src/r_patch.h	84;"	d
R_UnlockPatchNum	src/r_patch.c	/^void R_UnlockPatchNum(int id)$/;"	f
R_UnlockTextureCompositePatchNum	src/r_patch.c	/^void R_UnlockTextureCompositePatchNum(int id)$/;"	f
R_UpdateInterpolations	src/r_fps.c	/^void R_UpdateInterpolations()$/;"	f
R_VideoErase	src/r_draw.c	/^void R_VideoErase(int x, int y, int count)$/;"	f
RadixTests	src/PCRELIB/pcrecpp_unittest.cc	/^static void RadixTests() {$/;"	f	file:
RawToTic	src/protocol.h	/^inline static void RawToTic(ticcmd_t* dst, const void* src)$/;"	f
ReadAllTracks	src/MUSIC/midifile.c	/^static dboolean ReadAllTracks(midi_file_t *file, midimem_t *mf)$/;"	f	file:
ReadByte	src/MUSIC/midifile.c	/^static dboolean ReadByte(byte *result, midimem_t *mf)$/;"	f	file:
ReadByteSequence	src/MUSIC/midifile.c	/^static void *ReadByteSequence(unsigned int num_bytes, midimem_t *mf)$/;"	f	file:
ReadChannelEvent	src/MUSIC/midifile.c	/^static dboolean ReadChannelEvent(midi_event_t *event,$/;"	f	file:
ReadDDSFile	src/gl_hires.c	/^GLGenericImage * ReadDDSFile(const char *filename, int * bufsize, int * numMipmaps) $/;"	f
ReadDef1	src/m_menu.c	/^menu_t ReadDef1 =$/;"	v
ReadDef2	src/m_menu.c	/^menu_t ReadDef2 =$/;"	v
ReadEvent	src/MUSIC/midifile.c	/^static dboolean ReadEvent(midi_event_t *event, unsigned int *last_event_type,$/;"	f	file:
ReadFileHeader	src/MUSIC/midifile.c	/^static dboolean ReadFileHeader(midi_file_t *file, midimem_t *mf)$/;"	f	file:
ReadLump	src/gl_shader.c	/^static int ReadLump(const char *filename, const char *lumpname, unsigned char **buffer)$/;"	f	file:
ReadMenu1	src/m_menu.c	/^menuitem_t ReadMenu1[] =$/;"	v
ReadMenu2	src/m_menu.c	/^menuitem_t ReadMenu2[]=$/;"	v
ReadMetaEvent	src/MUSIC/midifile.c	/^static dboolean ReadMetaEvent(midi_event_t *event, midimem_t *mf)$/;"	f	file:
ReadMultipleBytes	src/MUSIC/midifile.c	/^static dboolean ReadMultipleBytes (void *dest, size_t len, midimem_t *mf)$/;"	f	file:
ReadMusHeader	src/mus2mid.c	/^static dboolean ReadMusHeader(MEMFILE *file, musheader *header)$/;"	f	file:
ReadSysExEvent	src/MUSIC/midifile.c	/^static dboolean ReadSysExEvent(midi_event_t *event, int event_type,$/;"	f	file:
ReadTrack	src/MUSIC/midifile.c	/^static dboolean ReadTrack(midi_track_t *track, midimem_t *mf)$/;"	f	file:
ReadTrackHeader	src/MUSIC/midifile.c	/^static dboolean ReadTrackHeader(midi_track_t *track, midimem_t *mf)$/;"	f	file:
ReadVariableLength	src/MUSIC/midifile.c	/^static dboolean ReadVariableLength(unsigned int *result, midimem_t *mf)$/;"	f	file:
RecalculateDrawnSubsectors	src/g_save.c	/^void RecalculateDrawnSubsectors(void) {$/;"	f
ReduceFraction	src/v_video.c	/^static void ReduceFraction (unsigned *num1, unsigned *num2)$/;"	f	file:
RejectOverrun	src/g_overflow.c	/^void RejectOverrun(int rejectlump, const byte **rejectmatrix, int totallines)$/;"	f
ReleaseVoice	src/MUSIC/oplplayer.c	/^static void ReleaseVoice(opl_voice_t *voice)$/;"	f	file:
RemoveVoiceFromAllocedList	src/MUSIC/oplplayer.c	/^static void RemoveVoiceFromAllocedList(opl_voice_t *voice)$/;"	f	file:
RenderDome	src/gl_sky.c	/^static void RenderDome(SkyBoxParams_t *sky)$/;"	f	file:
Replace	src/PCRELIB/pcrecpp.cc	/^bool RE::Replace(const StringPiece& rewrite,$/;"	f	class:pcrecpp::RE
ReplaceExistingVoice	src/MUSIC/oplplayer.c	/^static opl_voice_t *ReplaceExistingVoice(opl_channel_data_t *channel)$/;"	f	file:
Reserved	src/e6y.h	/^	unsigned int Reserved[2];$/;"	m	struct:__anon66
ResetButtonName	src/m_menu.c	/^char ResetButtonName[2][8] = {"M_BUTT1","M_BUTT2"};$/;"	v
ResetFunc	src/hu_tracers.h	/^  TRACERFUNC ResetFunc;$/;"	m	struct:traceslist_s
ResetFunc	src/hu_tracers.h	/^  TRACERFUNC ResetFunc;$/;"	m	struct:traceslistinit_s
ResolveColormapsHiresConflict	src/e6y.c	/^void ResolveColormapsHiresConflict(dboolean prefer_colormap)$/;"	f
RestartSong	src/MUSIC/oplplayer.c	/^static void RestartSong(void)$/;"	f	file:
Rewrite	src/PCRELIB/pcrecpp.cc	/^bool RE::Rewrite(string *out, const StringPiece &rewrite,$/;"	f	class:pcrecpp::RE
S16_MARKER	src/cmp.c	/^  S16_MARKER             = 0xD1,$/;"	e	enum:__anon5	file:
S32_MARKER	src/cmp.c	/^  S32_MARKER             = 0xD2,$/;"	e	enum:__anon5	file:
S64_MARKER	src/cmp.c	/^  S64_MARKER             = 0xD3,$/;"	e	enum:__anon5	file:
S8_MARKER	src/cmp.c	/^  S8_MARKER              = 0xD0,$/;"	e	enum:__anon5	file:
SAMPLECOUNT	src/SDL/i_sound.c	/^static int SAMPLECOUNT =   512; \/\/ Needed for calling the actual sound output.$/;"	v	file:
SAVEDEAD	src/d_englsh.h	38;"	d
SAVEDESCLEN	src/g_game.h	38;"	d
SAVESTRINGSIZE	src/g_save.c	52;"	d	file:
SAVESTRINGSIZE	src/m_menu.c	92;"	d	file:
SB_X	src/m_menu.c	2568;"	d	file:
SB_Y	src/m_menu.c	2569;"	d	file:
SCREENHEIGHT	src/doomdef.c	/^int SCREENHEIGHT=200;$/;"	v
SCREENPITCH	src/doomdef.c	/^int SCREENPITCH=320;$/;"	v
SCREENSHOT_DIR	src/MAC/config.h	138;"	d
SCREENSHOT_DIR	src/m_misc.c	1481;"	d	file:
SCREENSHOT_EXT	src/m_misc.c	1485;"	d	file:
SCREENSHOT_EXT	src/m_misc.c	1487;"	d	file:
SCREENSHOT_SDL_HICOLOR	src/SDL/i_sshot.c	/^  SCREENSHOT_SDL_HICOLOR,$/;"	e	enum:__anon314	file:
SCREENSHOT_SDL_INDEXED	src/SDL/i_sshot.c	/^  SCREENSHOT_SDL_INDEXED,$/;"	e	enum:__anon314	file:
SCREENSHOT_SDL_MODES	src/SDL/i_sshot.c	/^  SCREENSHOT_SDL_MODES$/;"	e	enum:__anon314	file:
SCREENWIDTH	src/doomdef.c	/^int SCREENWIDTH=320;$/;"	v
SCREEN_320x200	src/doomdef.c	/^int SCREEN_320x200;$/;"	v
SCROLLBAR_HORIZONTAL	src/TEXTSCREEN/txt_scrollpane.c	37;"	d	file:
SCROLLBAR_VERTICAL	src/TEXTSCREEN/txt_scrollpane.c	36;"	d	file:
SCROLL_SHIFT	src/p_spec.c	2900;"	d	file:
SC_Check	src/sc_man.c	/^dboolean SC_Check(void)$/;"	f
SC_Close	src/sc_man.c	/^void SC_Close(void)$/;"	f
SC_Compare	src/sc_man.c	/^dboolean SC_Compare(const char *text)$/;"	f
SC_GetNumber	src/sc_man.c	/^dboolean SC_GetNumber(void)$/;"	f
SC_GetString	src/sc_man.c	/^dboolean SC_GetString(void)$/;"	f
SC_MAN_H__	src/sc_man.h	25;"	d
SC_MatchString	src/sc_man.c	/^int SC_MatchString(const char **strings)$/;"	f
SC_MustGetNumber	src/sc_man.c	/^void SC_MustGetNumber(void)$/;"	f
SC_MustGetString	src/sc_man.c	/^void SC_MustGetString(void)$/;"	f
SC_MustGetStringName	src/sc_man.c	/^void SC_MustGetStringName(const char *name)$/;"	f
SC_MustMatchString	src/sc_man.c	/^int SC_MustMatchString(const char **strings)$/;"	f
SC_OpenLump	src/sc_man.c	/^void SC_OpenLump(const char *name)$/;"	f
SC_OpenLumpByNum	src/sc_man.c	/^void SC_OpenLumpByNum(int lump)$/;"	f
SC_ScriptError	src/sc_man.c	/^void SC_ScriptError(const char *message)$/;"	f
SC_UnGet	src/sc_man.c	/^void SC_UnGet(void)$/;"	f
SDLButtonToTXTButton	src/TEXTSCREEN/txt_sdl.c	/^static int SDLButtonToTXTButton(int button)$/;"	f	file:
SECRET_MASK	src/p_spec.h	73;"	d
SECRET_SHIFT	src/p_spec.h	74;"	d
SECTOR_CLAMPXY	src/gl_intern.h	169;"	d
SECTOR_IS_CLOSED	src/r_defs.h	88;"	d
SERVER	src/n_net.h	36;"	d
SERVER_NO_PEER_SLEEP_TIMEOUT	src/n_main.c	61;"	d	file:
SERVER_ONLY	src/n_proto.c	71;"	d	file:
SERVER_SLEEP_TIMEOUT	src/n_main.c	62;"	d	file:
SHIFT_KEYCODE	src/MUSIC/dbopl.h	/^  SHIFT_KEYCODE = 24,$/;"	e	enum:__anon200
SHIFT_KSLBASE	src/MUSIC/dbopl.h	/^  SHIFT_KSLBASE = 16,$/;"	e	enum:__anon200
SHOWNEXTLOCDELAY	src/wi_stuff.c	291;"	d	file:
SIL_BOTH	src/r_defs.h	50;"	d
SIL_BOTTOM	src/r_defs.h	48;"	d
SIL_NONE	src/r_defs.h	47;"	d
SIL_TOP	src/r_defs.h	49;"	d
SIMPLECHECKS	src/MAC/config.h	63;"	d
SKULLSPEED	src/p_enemy.c	1957;"	d	file:
SKULLXOFF	src/m_menu.c	137;"	d	file:
SKYFLATNAME	src/r_sky.h	34;"	d
SKYSTRETCH_HEIGHT	src/r_sky.h	43;"	d
SKY_CEILING	src/gl_intern.h	462;"	d
SKY_FLOOR	src/gl_intern.h	463;"	d
SKY_NONE	src/gl_intern.h	461;"	d
SLOPEBITS	src/tables.h	47;"	d
SLOPERANGE	src/tables.h	46;"	d
SLOWDARK	src/p_spec.h	67;"	d
SLOWTURNTICS	src/g_game.c	82;"	d	file:
SMALLDELTA	src/gl_intern.h	31;"	d
SMOOTH_PLAYING_MAXFACTOR	src/r_demo.h	37;"	d
SMP_CheckSize	src/i_smp.c	/^static inline void SMP_CheckSize(smp_item_t *item, int size)$/;"	f	file:
SMP_ColFunc	src/i_smp.c	/^void SMP_ColFunc(draw_column_vars_t *data)$/;"	f
SMP_DATA_MAX	src/i_smp.c	/^  SMP_DATA_MAX$/;"	e	enum:__anon139	file:
SMP_DATA_SEGS	src/i_smp.c	/^  SMP_DATA_SEGS,$/;"	e	enum:__anon139	file:
SMP_DATA_SPANS	src/i_smp.c	/^  SMP_DATA_SPANS,$/;"	e	enum:__anon139	file:
SMP_Free	src/i_smp.c	/^void SMP_Free(void)$/;"	f
SMP_FrontEndSleep	src/i_smp.c	/^void SMP_FrontEndSleep(void)$/;"	f
SMP_GetState	src/i_smp.c	/^static int SMP_GetState(void)$/;"	f	file:
SMP_Init	src/i_smp.c	/^void SMP_Init(void)$/;"	f
SMP_RendererSleep	src/i_smp.c	/^void SMP_RendererSleep(void)$/;"	f
SMP_ResetBuffers	src/i_smp.c	/^static void SMP_ResetBuffers(void)$/;"	f	file:
SMP_SetState	src/i_smp.c	/^static void SMP_SetState(int state)$/;"	f	file:
SMP_SpanFunc	src/i_smp.c	/^void SMP_SpanFunc(draw_span_vars_t *data)$/;"	f
SMP_WakeRenderer	src/i_smp.c	/^void SMP_WakeRenderer(void)$/;"	f
SNDINTR	src/i_sound.h	31;"	d
SNDSERV	src/i_sound.h	30;"	d
SOME_MASK	src/e6y.c	1360;"	d	file:
SOME_MASK	src/e6y.c	1363;"	d	file:
SOME_MASK	src/e6y.c	1418;"	d	file:
SOUNDS_H__	src/sounds.h	25;"	d
SOUND_DISABLED	src/s_sound.h	41;"	d
SP	src/PCRELIB/pcre_dfa_exec.c	75;"	d	file:
SPACEWIDTH	src/m_menu.c	4115;"	d	file:
SPR_AMMO	src/info.h	/^  SPR_AMMO,$/;"	e	enum:__anon134
SPR_APBX	src/info.h	/^  SPR_APBX,$/;"	e	enum:__anon134
SPR_APLS	src/info.h	/^  SPR_APLS,$/;"	e	enum:__anon134
SPR_ARM1	src/info.h	/^  SPR_ARM1,$/;"	e	enum:__anon134
SPR_ARM2	src/info.h	/^  SPR_ARM2,$/;"	e	enum:__anon134
SPR_BAL1	src/info.h	/^  SPR_BAL1,$/;"	e	enum:__anon134
SPR_BAL2	src/info.h	/^  SPR_BAL2,$/;"	e	enum:__anon134
SPR_BAL7	src/info.h	/^  SPR_BAL7,$/;"	e	enum:__anon134
SPR_BAR1	src/info.h	/^  SPR_BAR1,$/;"	e	enum:__anon134
SPR_BBRN	src/info.h	/^  SPR_BBRN,$/;"	e	enum:__anon134
SPR_BEXP	src/info.h	/^  SPR_BEXP,$/;"	e	enum:__anon134
SPR_BFE1	src/info.h	/^  SPR_BFE1,$/;"	e	enum:__anon134
SPR_BFE2	src/info.h	/^  SPR_BFE2,$/;"	e	enum:__anon134
SPR_BFGF	src/info.h	/^  SPR_BFGF,$/;"	e	enum:__anon134
SPR_BFGG	src/info.h	/^  SPR_BFGG,$/;"	e	enum:__anon134
SPR_BFS1	src/info.h	/^  SPR_BFS1,$/;"	e	enum:__anon134
SPR_BFUG	src/info.h	/^  SPR_BFUG,$/;"	e	enum:__anon134
SPR_BKEY	src/info.h	/^  SPR_BKEY,$/;"	e	enum:__anon134
SPR_BLUD	src/info.h	/^  SPR_BLUD,$/;"	e	enum:__anon134
SPR_BON1	src/info.h	/^  SPR_BON1,$/;"	e	enum:__anon134
SPR_BON2	src/info.h	/^  SPR_BON2,$/;"	e	enum:__anon134
SPR_BON3	src/info.h	/^  SPR_BON3, \/\/ killough 7\/11\/98: evil sceptre in beta version$/;"	e	enum:__anon134
SPR_BON4	src/info.h	/^  SPR_BON4, \/\/ killough 7\/11\/98: unholy bible in beta version$/;"	e	enum:__anon134
SPR_BOS2	src/info.h	/^  SPR_BOS2,$/;"	e	enum:__anon134
SPR_BOSF	src/info.h	/^  SPR_BOSF,$/;"	e	enum:__anon134
SPR_BOSS	src/info.h	/^  SPR_BOSS,$/;"	e	enum:__anon134
SPR_BPAK	src/info.h	/^  SPR_BPAK,$/;"	e	enum:__anon134
SPR_BROK	src/info.h	/^  SPR_BROK,$/;"	e	enum:__anon134
SPR_BRS1	src/info.h	/^  SPR_BRS1,$/;"	e	enum:__anon134
SPR_BSKU	src/info.h	/^  SPR_BSKU,$/;"	e	enum:__anon134
SPR_BSPI	src/info.h	/^  SPR_BSPI,$/;"	e	enum:__anon134
SPR_CAND	src/info.h	/^  SPR_CAND,$/;"	e	enum:__anon134
SPR_CBRA	src/info.h	/^  SPR_CBRA,$/;"	e	enum:__anon134
SPR_CELL	src/info.h	/^  SPR_CELL,$/;"	e	enum:__anon134
SPR_CELP	src/info.h	/^  SPR_CELP,$/;"	e	enum:__anon134
SPR_CEYE	src/info.h	/^  SPR_CEYE,$/;"	e	enum:__anon134
SPR_CHGF	src/info.h	/^  SPR_CHGF,$/;"	e	enum:__anon134
SPR_CHGG	src/info.h	/^  SPR_CHGG,$/;"	e	enum:__anon134
SPR_CLIP	src/info.h	/^  SPR_CLIP,$/;"	e	enum:__anon134
SPR_COL1	src/info.h	/^  SPR_COL1,$/;"	e	enum:__anon134
SPR_COL2	src/info.h	/^  SPR_COL2,$/;"	e	enum:__anon134
SPR_COL3	src/info.h	/^  SPR_COL3,$/;"	e	enum:__anon134
SPR_COL4	src/info.h	/^  SPR_COL4,$/;"	e	enum:__anon134
SPR_COL5	src/info.h	/^  SPR_COL5,$/;"	e	enum:__anon134
SPR_COL6	src/info.h	/^  SPR_COL6,$/;"	e	enum:__anon134
SPR_COLU	src/info.h	/^  SPR_COLU,$/;"	e	enum:__anon134
SPR_CPOS	src/info.h	/^  SPR_CPOS,$/;"	e	enum:__anon134
SPR_CSAW	src/info.h	/^  SPR_CSAW,$/;"	e	enum:__anon134
SPR_CYBR	src/info.h	/^  SPR_CYBR,$/;"	e	enum:__anon134
SPR_DOGS	src/info.h	/^  SPR_DOGS, \/* killough 7\/19\/98: Marine's best friend :) *\/$/;"	e	enum:__anon134
SPR_ELEC	src/info.h	/^  SPR_ELEC,$/;"	e	enum:__anon134
SPR_FATB	src/info.h	/^  SPR_FATB,$/;"	e	enum:__anon134
SPR_FATT	src/info.h	/^  SPR_FATT,$/;"	e	enum:__anon134
SPR_FBXP	src/info.h	/^  SPR_FBXP,$/;"	e	enum:__anon134
SPR_FCAN	src/info.h	/^  SPR_FCAN,$/;"	e	enum:__anon134
SPR_FIRE	src/info.h	/^  SPR_FIRE,$/;"	e	enum:__anon134
SPR_FSKU	src/info.h	/^  SPR_FSKU,$/;"	e	enum:__anon134
SPR_GOR1	src/info.h	/^  SPR_GOR1,$/;"	e	enum:__anon134
SPR_GOR2	src/info.h	/^  SPR_GOR2,$/;"	e	enum:__anon134
SPR_GOR3	src/info.h	/^  SPR_GOR3,$/;"	e	enum:__anon134
SPR_GOR4	src/info.h	/^  SPR_GOR4,$/;"	e	enum:__anon134
SPR_GOR5	src/info.h	/^  SPR_GOR5,$/;"	e	enum:__anon134
SPR_HDB1	src/info.h	/^  SPR_HDB1,$/;"	e	enum:__anon134
SPR_HDB2	src/info.h	/^  SPR_HDB2,$/;"	e	enum:__anon134
SPR_HDB3	src/info.h	/^  SPR_HDB3,$/;"	e	enum:__anon134
SPR_HDB4	src/info.h	/^  SPR_HDB4,$/;"	e	enum:__anon134
SPR_HDB5	src/info.h	/^  SPR_HDB5,$/;"	e	enum:__anon134
SPR_HDB6	src/info.h	/^  SPR_HDB6,$/;"	e	enum:__anon134
SPR_HEAD	src/info.h	/^  SPR_HEAD,$/;"	e	enum:__anon134
SPR_IFOG	src/info.h	/^  SPR_IFOG,$/;"	e	enum:__anon134
SPR_KEEN	src/info.h	/^  SPR_KEEN,$/;"	e	enum:__anon134
SPR_LAUN	src/info.h	/^  SPR_LAUN,$/;"	e	enum:__anon134
SPR_MANF	src/info.h	/^  SPR_MANF,$/;"	e	enum:__anon134
SPR_MEDI	src/info.h	/^  SPR_MEDI,$/;"	e	enum:__anon134
SPR_MEGA	src/info.h	/^  SPR_MEGA,$/;"	e	enum:__anon134
SPR_MGUN	src/info.h	/^  SPR_MGUN,$/;"	e	enum:__anon134
SPR_MISF	src/info.h	/^  SPR_MISF,$/;"	e	enum:__anon134
SPR_MISG	src/info.h	/^  SPR_MISG,$/;"	e	enum:__anon134
SPR_MISL	src/info.h	/^  SPR_MISL,$/;"	e	enum:__anon134
SPR_PAIN	src/info.h	/^  SPR_PAIN,$/;"	e	enum:__anon134
SPR_PINS	src/info.h	/^  SPR_PINS,$/;"	e	enum:__anon134
SPR_PINV	src/info.h	/^  SPR_PINV,$/;"	e	enum:__anon134
SPR_PISF	src/info.h	/^  SPR_PISF,$/;"	e	enum:__anon134
SPR_PISG	src/info.h	/^  SPR_PISG,$/;"	e	enum:__anon134
SPR_PLAS	src/info.h	/^  SPR_PLAS,$/;"	e	enum:__anon134
SPR_PLAY	src/info.h	/^  SPR_PLAY,$/;"	e	enum:__anon134
SPR_PLS1	src/info.h	/^  SPR_PLS1, \/\/ killough 7\/19\/98: first  of two plasma fireballs in the beta$/;"	e	enum:__anon134
SPR_PLS2	src/info.h	/^  SPR_PLS2, \/\/ killough 7\/19\/98: second of two plasma fireballs in the beta$/;"	e	enum:__anon134
SPR_PLSE	src/info.h	/^  SPR_PLSE,$/;"	e	enum:__anon134
SPR_PLSF	src/info.h	/^  SPR_PLSF,$/;"	e	enum:__anon134
SPR_PLSG	src/info.h	/^  SPR_PLSG,$/;"	e	enum:__anon134
SPR_PLSS	src/info.h	/^  SPR_PLSS,$/;"	e	enum:__anon134
SPR_PMAP	src/info.h	/^  SPR_PMAP,$/;"	e	enum:__anon134
SPR_POB1	src/info.h	/^  SPR_POB1,$/;"	e	enum:__anon134
SPR_POB2	src/info.h	/^  SPR_POB2,$/;"	e	enum:__anon134
SPR_POL1	src/info.h	/^  SPR_POL1,$/;"	e	enum:__anon134
SPR_POL2	src/info.h	/^  SPR_POL2,$/;"	e	enum:__anon134
SPR_POL3	src/info.h	/^  SPR_POL3,$/;"	e	enum:__anon134
SPR_POL4	src/info.h	/^  SPR_POL4,$/;"	e	enum:__anon134
SPR_POL5	src/info.h	/^  SPR_POL5,$/;"	e	enum:__anon134
SPR_POL6	src/info.h	/^  SPR_POL6,$/;"	e	enum:__anon134
SPR_POSS	src/info.h	/^  SPR_POSS,$/;"	e	enum:__anon134
SPR_PSTR	src/info.h	/^  SPR_PSTR,$/;"	e	enum:__anon134
SPR_PUFF	src/info.h	/^  SPR_PUFF,$/;"	e	enum:__anon134
SPR_PUNG	src/info.h	/^  SPR_PUNG,$/;"	e	enum:__anon134
SPR_PVIS	src/info.h	/^  SPR_PVIS,$/;"	e	enum:__anon134
SPR_RKEY	src/info.h	/^  SPR_RKEY,$/;"	e	enum:__anon134
SPR_ROCK	src/info.h	/^  SPR_ROCK,$/;"	e	enum:__anon134
SPR_RSKU	src/info.h	/^  SPR_RSKU,$/;"	e	enum:__anon134
SPR_SARG	src/info.h	/^  SPR_SARG,$/;"	e	enum:__anon134
SPR_SAWG	src/info.h	/^  SPR_SAWG,$/;"	e	enum:__anon134
SPR_SBOX	src/info.h	/^  SPR_SBOX,$/;"	e	enum:__anon134
SPR_SGN2	src/info.h	/^  SPR_SGN2,$/;"	e	enum:__anon134
SPR_SHEL	src/info.h	/^  SPR_SHEL,$/;"	e	enum:__anon134
SPR_SHOT	src/info.h	/^  SPR_SHOT,$/;"	e	enum:__anon134
SPR_SHT2	src/info.h	/^  SPR_SHT2,$/;"	e	enum:__anon134
SPR_SHTF	src/info.h	/^  SPR_SHTF,$/;"	e	enum:__anon134
SPR_SHTG	src/info.h	/^  SPR_SHTG,$/;"	e	enum:__anon134
SPR_SKEL	src/info.h	/^  SPR_SKEL,$/;"	e	enum:__anon134
SPR_SKUL	src/info.h	/^  SPR_SKUL,$/;"	e	enum:__anon134
SPR_SMBT	src/info.h	/^  SPR_SMBT,$/;"	e	enum:__anon134
SPR_SMGT	src/info.h	/^  SPR_SMGT,$/;"	e	enum:__anon134
SPR_SMIT	src/info.h	/^  SPR_SMIT,$/;"	e	enum:__anon134
SPR_SMRT	src/info.h	/^  SPR_SMRT,$/;"	e	enum:__anon134
SPR_SMT2	src/info.h	/^  SPR_SMT2,$/;"	e	enum:__anon134
SPR_SOUL	src/info.h	/^  SPR_SOUL,$/;"	e	enum:__anon134
SPR_SPID	src/info.h	/^  SPR_SPID,$/;"	e	enum:__anon134
SPR_SPOS	src/info.h	/^  SPR_SPOS,$/;"	e	enum:__anon134
SPR_SSWV	src/info.h	/^  SPR_SSWV,$/;"	e	enum:__anon134
SPR_STIM	src/info.h	/^  SPR_STIM,$/;"	e	enum:__anon134
SPR_SUIT	src/info.h	/^  SPR_SUIT,$/;"	e	enum:__anon134
SPR_TBLU	src/info.h	/^  SPR_TBLU,$/;"	e	enum:__anon134
SPR_TFOG	src/info.h	/^  SPR_TFOG,$/;"	e	enum:__anon134
SPR_TGRN	src/info.h	/^  SPR_TGRN,$/;"	e	enum:__anon134
SPR_TLMP	src/info.h	/^  SPR_TLMP,$/;"	e	enum:__anon134
SPR_TLP2	src/info.h	/^  SPR_TLP2,$/;"	e	enum:__anon134
SPR_TNT1	src/info.h	/^  SPR_TNT1, \/* add invisible sprite              phares 3\/8\/98 *\/$/;"	e	enum:__anon134
SPR_TRE1	src/info.h	/^  SPR_TRE1,$/;"	e	enum:__anon134
SPR_TRE2	src/info.h	/^  SPR_TRE2,$/;"	e	enum:__anon134
SPR_TRED	src/info.h	/^  SPR_TRED,$/;"	e	enum:__anon134
SPR_TROO	src/info.h	/^  SPR_TROO,$/;"	e	enum:__anon134
SPR_VILE	src/info.h	/^  SPR_VILE,$/;"	e	enum:__anon134
SPR_YKEY	src/info.h	/^  SPR_YKEY,$/;"	e	enum:__anon134
SPR_YSKU	src/info.h	/^  SPR_YSKU,$/;"	e	enum:__anon134
SP_FRAGS	src/wi_stuff.c	284;"	d	file:
SP_ITEMS	src/wi_stuff.c	282;"	d	file:
SP_KILLS	src/wi_stuff.c	281;"	d	file:
SP_PAR	src/wi_stuff.c	286;"	d	file:
SP_PAUSE	src/wi_stuff.c	288;"	d	file:
SP_SECRET	src/wi_stuff.c	283;"	d	file:
SP_STATSX	src/wi_stuff.c	74;"	d	file:
SP_STATSY	src/wi_stuff.c	75;"	d	file:
SP_TIME	src/wi_stuff.c	285;"	d	file:
SP_TIMEX	src/wi_stuff.c	77;"	d	file:
SP_TIMEY	src/wi_stuff.c	79;"	d	file:
SQUARE_WAVE_AMP	src/PCSOUND/pcsound_sdl.c	20;"	d	file:
SRC_SCR	src/f_wipe.c	45;"	d	file:
STAIRS_UNINITIALIZED_CRUSH_FIELD_VALUE	src/p_floor.c	38;"	d	file:
STARTBONUSPALS	src/st_stuff.c	53;"	d	file:
STARTREDPALS	src/st_stuff.c	52;"	d	file:
STARTUPLEN	src/d_net.h	101;"	d
STDC_HEADERS	src/MAC/config.h	98;"	d
STDERR_FILE	src/SDL/SDL_win32_main.c	85;"	d	file:
STDOUT_FILE	src/SDL/SDL_win32_main.c	84;"	d	file:
STOPSPEED	src/p_mobj.h	383;"	d
STR16_MARKER	src/cmp.c	/^  STR16_MARKER           = 0xDA,$/;"	e	enum:__anon5	file:
STR32_MARKER	src/cmp.c	/^  STR32_MARKER           = 0xDB,$/;"	e	enum:__anon5	file:
STR8_MARKER	src/cmp.c	/^  STR8_MARKER            = 0xD9,$/;"	e	enum:__anon5	file:
STRICT	src/PCRELIB/pcregrep.c	330;"	d	file:
STRING	src/PCRELIB/pcre_version.c	75;"	d	file:
STROBEBRIGHT	src/p_spec.h	65;"	d
STR_DATA_LENGTH_TOO_LONG_ERROR	src/cmp.c	/^  STR_DATA_LENGTH_TOO_LONG_ERROR,$/;"	e	enum:__anon7	file:
STSTR_BEHOLD	src/d_englsh.h	352;"	d
STSTR_BEHOLDX	src/d_englsh.h	353;"	d
STSTR_CHOPPERS	src/d_englsh.h	355;"	d
STSTR_CLEV	src/d_englsh.h	356;"	d
STSTR_COMPOFF	src/d_englsh.h	359;"	d
STSTR_COMPON	src/d_englsh.h	358;"	d
STSTR_DQDOFF	src/d_englsh.h	344;"	d
STSTR_DQDON	src/d_englsh.h	343;"	d
STSTR_FAADDED	src/d_englsh.h	347;"	d
STSTR_KFAADDED	src/d_englsh.h	346;"	d
STSTR_MUS	src/d_englsh.h	341;"	d
STSTR_NCOFF	src/d_englsh.h	350;"	d
STSTR_NCON	src/d_englsh.h	349;"	d
STSTR_NOMUS	src/d_englsh.h	342;"	d
STSTR_SECRETFOUND	src/e6y.h	40;"	d
ST_AMMO0HEIGHT	src/st_stuff.c	185;"	d	file:
ST_AMMO0WIDTH	src/st_stuff.c	184;"	d	file:
ST_AMMO0X	src/st_stuff.c	187;"	d	file:
ST_AMMO0Y	src/st_stuff.c	188;"	d	file:
ST_AMMO1WIDTH	src/st_stuff.c	191;"	d	file:
ST_AMMO1X	src/st_stuff.c	193;"	d	file:
ST_AMMO1Y	src/st_stuff.c	194;"	d	file:
ST_AMMO2WIDTH	src/st_stuff.c	197;"	d	file:
ST_AMMO2X	src/st_stuff.c	199;"	d	file:
ST_AMMO2Y	src/st_stuff.c	200;"	d	file:
ST_AMMO3WIDTH	src/st_stuff.c	203;"	d	file:
ST_AMMO3X	src/st_stuff.c	205;"	d	file:
ST_AMMO3Y	src/st_stuff.c	206;"	d	file:
ST_AMMOWIDTH	src/st_stuff.c	118;"	d	file:
ST_AMMOX	src/st_stuff.c	120;"	d	file:
ST_AMMOY	src/st_stuff.c	121;"	d	file:
ST_ARMORWIDTH	src/st_stuff.c	155;"	d	file:
ST_ARMORX	src/st_stuff.c	157;"	d	file:
ST_ARMORY	src/st_stuff.c	158;"	d	file:
ST_ARMSBGX	src/st_stuff.c	137;"	d	file:
ST_ARMSBGY	src/st_stuff.c	138;"	d	file:
ST_ARMSX	src/st_stuff.c	135;"	d	file:
ST_ARMSXSPACE	src/st_stuff.c	143;"	d	file:
ST_ARMSY	src/st_stuff.c	136;"	d	file:
ST_ARMSYSPACE	src/st_stuff.c	144;"	d	file:
ST_DEADFACE	src/st_stuff.c	92;"	d	file:
ST_Drawer	src/st_stuff.c	/^void ST_Drawer(dboolean statusbaron, dboolean refresh, dboolean fullmenu) {$/;"	f
ST_EVILGRINCOUNT	src/st_stuff.c	100;"	d	file:
ST_EVILGRINOFFSET	src/st_stuff.c	89;"	d	file:
ST_FACESTRIDE	src/st_stuff.c	79;"	d	file:
ST_FACESX	src/st_stuff.c	95;"	d	file:
ST_FACESY	src/st_stuff.c	96;"	d	file:
ST_FRAGSWIDTH	src/st_stuff.c	152;"	d	file:
ST_FRAGSX	src/st_stuff.c	148;"	d	file:
ST_FRAGSY	src/st_stuff.c	149;"	d	file:
ST_FX	src/st_stuff.c	64;"	d	file:
ST_FY	src/st_stuff.c	65;"	d	file:
ST_GODFACE	src/st_stuff.c	91;"	d	file:
ST_HEALTHWIDTH	src/st_stuff.c	126;"	d	file:
ST_HEALTHX	src/st_stuff.c	128;"	d	file:
ST_HEALTHY	src/st_stuff.c	129;"	d	file:
ST_HEIGHT	src/st_stuff.h	35;"	d
ST_HORIZONTAL	src/r_defs.h	/^  ST_HORIZONTAL,$/;"	e	enum:__anon285
ST_Init	src/st_stuff.c	/^void ST_Init(void)$/;"	f
ST_KEY0HEIGHT	src/st_stuff.c	164;"	d	file:
ST_KEY0WIDTH	src/st_stuff.c	163;"	d	file:
ST_KEY0X	src/st_stuff.c	166;"	d	file:
ST_KEY0Y	src/st_stuff.c	167;"	d	file:
ST_KEY1WIDTH	src/st_stuff.c	170;"	d	file:
ST_KEY1X	src/st_stuff.c	172;"	d	file:
ST_KEY1Y	src/st_stuff.c	173;"	d	file:
ST_KEY2WIDTH	src/st_stuff.c	176;"	d	file:
ST_KEY2X	src/st_stuff.c	178;"	d	file:
ST_KEY2Y	src/st_stuff.c	179;"	d	file:
ST_LIB_H__	src/st_lib.h	25;"	d
ST_MAXAMMO0HEIGHT	src/st_stuff.c	213;"	d	file:
ST_MAXAMMO0WIDTH	src/st_stuff.c	212;"	d	file:
ST_MAXAMMO0X	src/st_stuff.c	215;"	d	file:
ST_MAXAMMO0Y	src/st_stuff.c	216;"	d	file:
ST_MAXAMMO1WIDTH	src/st_stuff.c	219;"	d	file:
ST_MAXAMMO1X	src/st_stuff.c	221;"	d	file:
ST_MAXAMMO1Y	src/st_stuff.c	222;"	d	file:
ST_MAXAMMO2WIDTH	src/st_stuff.c	225;"	d	file:
ST_MAXAMMO2X	src/st_stuff.c	227;"	d	file:
ST_MAXAMMO2Y	src/st_stuff.c	228;"	d	file:
ST_MAXAMMO3WIDTH	src/st_stuff.c	231;"	d	file:
ST_MAXAMMO3X	src/st_stuff.c	233;"	d	file:
ST_MAXAMMO3Y	src/st_stuff.c	234;"	d	file:
ST_MUCHPAIN	src/st_stuff.c	106;"	d	file:
ST_NEGATIVE	src/r_defs.h	/^  ST_NEGATIVE$/;"	e	enum:__anon285
ST_NUMEXTRAFACES	src/st_stuff.c	82;"	d	file:
ST_NUMFACES	src/st_stuff.c	84;"	d	file:
ST_NUMPAINFACES	src/st_stuff.c	74;"	d	file:
ST_NUMSPECIALFACES	src/st_stuff.c	77;"	d	file:
ST_NUMSTRAIGHTFACES	src/st_stuff.c	75;"	d	file:
ST_NUMTURNFACES	src/st_stuff.c	76;"	d	file:
ST_OUCHCOUNT	src/st_stuff.c	103;"	d	file:
ST_OUCHOFFSET	src/st_stuff.c	88;"	d	file:
ST_POSITIVE	src/r_defs.h	/^  ST_POSITIVE,$/;"	e	enum:__anon285
ST_RAMPAGEDELAY	src/st_stuff.c	104;"	d	file:
ST_RAMPAGEOFFSET	src/st_stuff.c	90;"	d	file:
ST_Responder	src/st_stuff.c	/^dboolean ST_Responder(event_t *ev)$/;"	f
ST_SCALED_HEIGHT	src/st_stuff.c	/^int ST_SCALED_HEIGHT;$/;"	v
ST_SCALED_WIDTH	src/st_stuff.c	/^int ST_SCALED_WIDTH;$/;"	v
ST_SCALED_Y	src/st_stuff.c	/^int ST_SCALED_Y;$/;"	v
ST_STRAIGHTFACECOUNT	src/st_stuff.c	101;"	d	file:
ST_STUFF_H__	src/st_stuff.h	25;"	d
ST_SetResolution	src/st_stuff.c	/^void ST_SetResolution(void)$/;"	f
ST_Start	src/st_stuff.c	/^void ST_Start(void)$/;"	f
ST_Stop	src/st_stuff.c	/^static void ST_Stop(void)$/;"	f	file:
ST_TALLNUMWIDTH	src/st_stuff.c	71;"	d	file:
ST_TURNCOUNT	src/st_stuff.c	102;"	d	file:
ST_TURNOFFSET	src/st_stuff.c	87;"	d	file:
ST_Ticker	src/st_stuff.c	/^void ST_Ticker(void)$/;"	f
ST_VERTICAL	src/r_defs.h	/^  ST_VERTICAL,$/;"	e	enum:__anon285
ST_WIDTH	src/st_stuff.h	36;"	d
ST_X	src/st_stuff.c	60;"	d	file:
ST_X2	src/st_stuff.c	61;"	d	file:
ST_Y	src/st_stuff.h	37;"	d
ST_calcPainOffset	src/st_stuff.c	/^static int ST_calcPainOffset(void)$/;"	f	file:
ST_createWidgets	src/st_stuff.c	/^static void ST_createWidgets(void)$/;"	f	file:
ST_doPaletteStuff	src/st_stuff.c	/^static void ST_doPaletteStuff(void)$/;"	f	file:
ST_drawWidgets	src/st_stuff.c	/^static void ST_drawWidgets(dboolean refresh)$/;"	f	file:
ST_initData	src/st_stuff.c	/^static void ST_initData(void)$/;"	f	file:
ST_loadData	src/st_stuff.c	/^static void ST_loadData(void)$/;"	f	file:
ST_loadGraphics	src/st_stuff.c	/^static void ST_loadGraphics(dboolean doload)$/;"	f	file:
ST_refreshBackground	src/st_stuff.c	/^static void ST_refreshBackground(void)$/;"	f	file:
ST_updateFaceWidget	src/st_stuff.c	/^static void ST_updateFaceWidget(void)$/;"	f	file:
ST_updateWidgets	src/st_stuff.c	/^static void ST_updateWidgets(void)$/;"	f	file:
STlib_drawNum	src/st_lib.c	/^static void STlib_drawNum$/;"	f	file:
STlib_init	src/st_lib.c	/^void STlib_init(void)$/;"	f
STlib_initBinIcon	src/st_lib.c	/^void STlib_initBinIcon$/;"	f
STlib_initMultIcon	src/st_lib.c	/^void STlib_initMultIcon$/;"	f
STlib_initNum	src/st_lib.c	/^void STlib_initNum$/;"	f
STlib_initPercent	src/st_lib.c	/^void STlib_initPercent$/;"	f
STlib_updateBinIcon	src/st_lib.c	/^void STlib_updateBinIcon$/;"	f
STlib_updateMultIcon	src/st_lib.c	/^void STlib_updateMultIcon$/;"	f
STlib_updateNum	src/st_lib.c	/^void STlib_updateNum$/;"	f
STlib_updatePercent	src/st_lib.c	/^void STlib_updatePercent$/;"	f
SUPPORT_UCP	src/PCRELIB/config.h	175;"	d
SUPPORT_UTF8	src/PCRELIB/config.h	171;"	d
SUSTAIN	src/MUSIC/dbopl.h	/^        SUSTAIN,$/;"	e	enum:__anon202
SV_BroadcastMessage	src/n_proto.c	/^void SV_BroadcastMessage(const char *message) {$/;"	f
SV_BroadcastPlayerAutoaimChanged	src/n_proto.c	/^void SV_BroadcastPlayerAutoaimChanged(short playernum,$/;"	f
SV_BroadcastPlayerBobbingChanged	src/n_proto.c	/^void SV_BroadcastPlayerBobbingChanged(short playernum,$/;"	f
SV_BroadcastPlayerColorChanged	src/n_proto.c	/^void SV_BroadcastPlayerColorChanged(short playernum, byte new_red,$/;"	f
SV_BroadcastPlayerColorIndexChanged	src/n_proto.c	/^void SV_BroadcastPlayerColorIndexChanged(short playernum, int new_color) {$/;"	f
SV_BroadcastPlayerNameChanged	src/n_proto.c	/^void SV_BroadcastPlayerNameChanged(short playernum, const char *new_name) {$/;"	f
SV_BroadcastPlayerPWOChanged	src/n_proto.c	/^void SV_BroadcastPlayerPWOChanged(short playernum) {$/;"	f
SV_BroadcastPlayerSkinChanged	src/n_proto.c	/^void SV_BroadcastPlayerSkinChanged(short playernum) {$/;"	f
SV_BroadcastPlayerTeamChanged	src/n_proto.c	/^void SV_BroadcastPlayerTeamChanged(short playernum, byte new_team) {$/;"	f
SV_BroadcastPlayerWSOPChanged	src/n_proto.c	/^void SV_BroadcastPlayerWSOPChanged(short playernum, byte new_wsop_flags) {$/;"	f
SV_BroadcastPlayerWeaponSpeedChanged	src/n_proto.c	/^void SV_BroadcastPlayerWeaponSpeedChanged(short playernum,$/;"	f
SV_BroadcastPrintf	src/n_proto.c	/^void SV_BroadcastPrintf(const char *fmt, ...) {$/;"	f
SV_GetCommandSync	src/n_proto.c	/^bool SV_GetCommandSync(int playernum1, int playernum2, int *sync_index,$/;"	f
SV_ResyncPeers	src/n_proto.c	/^void SV_ResyncPeers(void) {$/;"	f
SV_SendAuthResponse	src/n_proto.c	/^void SV_SendAuthResponse(short playernum, auth_level_e auth_level) {$/;"	f
SV_SendMessage	src/n_proto.c	/^void SV_SendMessage(short playernum, const char *message) {$/;"	f
SV_SendSetup	src/n_proto.c	/^void SV_SendSetup(short playernum) {$/;"	f
SV_SetupNewPeer	src/n_proto.c	/^void SV_SetupNewPeer(int peernum) {$/;"	f
SWSTRING	src/d_englsh.h	50;"	d
SYSEX_BUFF_SIZE	src/MUSIC/flplayer.c	79;"	d	file:
SYSEX_BUFF_SIZE	src/MUSIC/portmidiplayer.c	85;"	d	file:
S_ADVSOUND_H__	src/s_advsound.h	25;"	d
S_AMMO	src/info.h	/^  S_AMMO,$/;"	e	enum:__anon135
S_ARACH_PLAZ	src/info.h	/^  S_ARACH_PLAZ,$/;"	e	enum:__anon135
S_ARACH_PLAZ2	src/info.h	/^  S_ARACH_PLAZ2,$/;"	e	enum:__anon135
S_ARACH_PLEX	src/info.h	/^  S_ARACH_PLEX,$/;"	e	enum:__anon135
S_ARACH_PLEX2	src/info.h	/^  S_ARACH_PLEX2,$/;"	e	enum:__anon135
S_ARACH_PLEX3	src/info.h	/^  S_ARACH_PLEX3,$/;"	e	enum:__anon135
S_ARACH_PLEX4	src/info.h	/^  S_ARACH_PLEX4,$/;"	e	enum:__anon135
S_ARACH_PLEX5	src/info.h	/^  S_ARACH_PLEX5,$/;"	e	enum:__anon135
S_ARM1	src/info.h	/^  S_ARM1,$/;"	e	enum:__anon135
S_ARM1A	src/info.h	/^  S_ARM1A,$/;"	e	enum:__anon135
S_ARM2	src/info.h	/^  S_ARM2,$/;"	e	enum:__anon135
S_ARM2A	src/info.h	/^  S_ARM2A,$/;"	e	enum:__anon135
S_ATTENUATOR	src/s_sound.c	58;"	d	file:
S_BADVAL	src/m_menu.h	148;"	d
S_BADVID	src/m_menu.h	152;"	d
S_BAR1	src/info.h	/^  S_BAR1,$/;"	e	enum:__anon135
S_BAR2	src/info.h	/^  S_BAR2,$/;"	e	enum:__anon135
S_BBAR1	src/info.h	/^  S_BBAR1,$/;"	e	enum:__anon135
S_BBAR2	src/info.h	/^  S_BBAR2,$/;"	e	enum:__anon135
S_BBAR3	src/info.h	/^  S_BBAR3,$/;"	e	enum:__anon135
S_BEXP	src/info.h	/^  S_BEXP,$/;"	e	enum:__anon135
S_BEXP2	src/info.h	/^  S_BEXP2,$/;"	e	enum:__anon135
S_BEXP3	src/info.h	/^  S_BEXP3,$/;"	e	enum:__anon135
S_BEXP4	src/info.h	/^  S_BEXP4,$/;"	e	enum:__anon135
S_BEXP5	src/info.h	/^  S_BEXP5,$/;"	e	enum:__anon135
S_BFG	src/info.h	/^  S_BFG,$/;"	e	enum:__anon135
S_BFG1	src/info.h	/^  S_BFG1,$/;"	e	enum:__anon135
S_BFG2	src/info.h	/^  S_BFG2,$/;"	e	enum:__anon135
S_BFG3	src/info.h	/^  S_BFG3,$/;"	e	enum:__anon135
S_BFG4	src/info.h	/^  S_BFG4,$/;"	e	enum:__anon135
S_BFGDOWN	src/info.h	/^  S_BFGDOWN,$/;"	e	enum:__anon135
S_BFGEXP	src/info.h	/^  S_BFGEXP,$/;"	e	enum:__anon135
S_BFGEXP2	src/info.h	/^  S_BFGEXP2,$/;"	e	enum:__anon135
S_BFGEXP3	src/info.h	/^  S_BFGEXP3,$/;"	e	enum:__anon135
S_BFGEXP4	src/info.h	/^  S_BFGEXP4,$/;"	e	enum:__anon135
S_BFGFLASH1	src/info.h	/^  S_BFGFLASH1,$/;"	e	enum:__anon135
S_BFGFLASH2	src/info.h	/^  S_BFGFLASH2,$/;"	e	enum:__anon135
S_BFGLAND	src/info.h	/^  S_BFGLAND,$/;"	e	enum:__anon135
S_BFGLAND2	src/info.h	/^  S_BFGLAND2,$/;"	e	enum:__anon135
S_BFGLAND3	src/info.h	/^  S_BFGLAND3,$/;"	e	enum:__anon135
S_BFGLAND4	src/info.h	/^  S_BFGLAND4,$/;"	e	enum:__anon135
S_BFGLAND5	src/info.h	/^  S_BFGLAND5,$/;"	e	enum:__anon135
S_BFGLAND6	src/info.h	/^  S_BFGLAND6,$/;"	e	enum:__anon135
S_BFGSHOT	src/info.h	/^  S_BFGSHOT,$/;"	e	enum:__anon135
S_BFGSHOT2	src/info.h	/^  S_BFGSHOT2,$/;"	e	enum:__anon135
S_BFGUP	src/info.h	/^  S_BFGUP,$/;"	e	enum:__anon135
S_BFUG	src/info.h	/^  S_BFUG,$/;"	e	enum:__anon135
S_BIGTREE	src/info.h	/^  S_BIGTREE,$/;"	e	enum:__anon135
S_BKEY	src/info.h	/^  S_BKEY,$/;"	e	enum:__anon135
S_BKEY2	src/info.h	/^  S_BKEY2,$/;"	e	enum:__anon135
S_BLOOD1	src/info.h	/^  S_BLOOD1,$/;"	e	enum:__anon135
S_BLOOD2	src/info.h	/^  S_BLOOD2,$/;"	e	enum:__anon135
S_BLOOD3	src/info.h	/^  S_BLOOD3,$/;"	e	enum:__anon135
S_BLOODYTWITCH	src/info.h	/^  S_BLOODYTWITCH,$/;"	e	enum:__anon135
S_BLOODYTWITCH2	src/info.h	/^  S_BLOODYTWITCH2,$/;"	e	enum:__anon135
S_BLOODYTWITCH3	src/info.h	/^  S_BLOODYTWITCH3,$/;"	e	enum:__anon135
S_BLOODYTWITCH4	src/info.h	/^  S_BLOODYTWITCH4,$/;"	e	enum:__anon135
S_BLUETORCH	src/info.h	/^  S_BLUETORCH,$/;"	e	enum:__anon135
S_BLUETORCH2	src/info.h	/^  S_BLUETORCH2,$/;"	e	enum:__anon135
S_BLUETORCH3	src/info.h	/^  S_BLUETORCH3,$/;"	e	enum:__anon135
S_BLUETORCH4	src/info.h	/^  S_BLUETORCH4,$/;"	e	enum:__anon135
S_BON1	src/info.h	/^  S_BON1,$/;"	e	enum:__anon135
S_BON1A	src/info.h	/^  S_BON1A,$/;"	e	enum:__anon135
S_BON1B	src/info.h	/^  S_BON1B,$/;"	e	enum:__anon135
S_BON1C	src/info.h	/^  S_BON1C,$/;"	e	enum:__anon135
S_BON1D	src/info.h	/^  S_BON1D,$/;"	e	enum:__anon135
S_BON1E	src/info.h	/^  S_BON1E,$/;"	e	enum:__anon135
S_BON2	src/info.h	/^  S_BON2,$/;"	e	enum:__anon135
S_BON2A	src/info.h	/^  S_BON2A,$/;"	e	enum:__anon135
S_BON2B	src/info.h	/^  S_BON2B,$/;"	e	enum:__anon135
S_BON2C	src/info.h	/^  S_BON2C,$/;"	e	enum:__anon135
S_BON2D	src/info.h	/^  S_BON2D,$/;"	e	enum:__anon135
S_BON2E	src/info.h	/^  S_BON2E,$/;"	e	enum:__anon135
S_BON3	src/info.h	/^  S_BON3, \/\/ killough 7\/11\/98: evil sceptre in beta version$/;"	e	enum:__anon135
S_BON4	src/info.h	/^  S_BON4, \/\/ killough 7\/11\/98: unholy bible in beta version$/;"	e	enum:__anon135
S_BOS2_ATK1	src/info.h	/^  S_BOS2_ATK1,$/;"	e	enum:__anon135
S_BOS2_ATK2	src/info.h	/^  S_BOS2_ATK2,$/;"	e	enum:__anon135
S_BOS2_ATK3	src/info.h	/^  S_BOS2_ATK3,$/;"	e	enum:__anon135
S_BOS2_DIE1	src/info.h	/^  S_BOS2_DIE1,$/;"	e	enum:__anon135
S_BOS2_DIE2	src/info.h	/^  S_BOS2_DIE2,$/;"	e	enum:__anon135
S_BOS2_DIE3	src/info.h	/^  S_BOS2_DIE3,$/;"	e	enum:__anon135
S_BOS2_DIE4	src/info.h	/^  S_BOS2_DIE4,$/;"	e	enum:__anon135
S_BOS2_DIE5	src/info.h	/^  S_BOS2_DIE5,$/;"	e	enum:__anon135
S_BOS2_DIE6	src/info.h	/^  S_BOS2_DIE6,$/;"	e	enum:__anon135
S_BOS2_DIE7	src/info.h	/^  S_BOS2_DIE7,$/;"	e	enum:__anon135
S_BOS2_PAIN	src/info.h	/^  S_BOS2_PAIN,$/;"	e	enum:__anon135
S_BOS2_PAIN2	src/info.h	/^  S_BOS2_PAIN2,$/;"	e	enum:__anon135
S_BOS2_RAISE1	src/info.h	/^  S_BOS2_RAISE1,$/;"	e	enum:__anon135
S_BOS2_RAISE2	src/info.h	/^  S_BOS2_RAISE2,$/;"	e	enum:__anon135
S_BOS2_RAISE3	src/info.h	/^  S_BOS2_RAISE3,$/;"	e	enum:__anon135
S_BOS2_RAISE4	src/info.h	/^  S_BOS2_RAISE4,$/;"	e	enum:__anon135
S_BOS2_RAISE5	src/info.h	/^  S_BOS2_RAISE5,$/;"	e	enum:__anon135
S_BOS2_RAISE6	src/info.h	/^  S_BOS2_RAISE6,$/;"	e	enum:__anon135
S_BOS2_RAISE7	src/info.h	/^  S_BOS2_RAISE7,$/;"	e	enum:__anon135
S_BOS2_RUN1	src/info.h	/^  S_BOS2_RUN1,$/;"	e	enum:__anon135
S_BOS2_RUN2	src/info.h	/^  S_BOS2_RUN2,$/;"	e	enum:__anon135
S_BOS2_RUN3	src/info.h	/^  S_BOS2_RUN3,$/;"	e	enum:__anon135
S_BOS2_RUN4	src/info.h	/^  S_BOS2_RUN4,$/;"	e	enum:__anon135
S_BOS2_RUN5	src/info.h	/^  S_BOS2_RUN5,$/;"	e	enum:__anon135
S_BOS2_RUN6	src/info.h	/^  S_BOS2_RUN6,$/;"	e	enum:__anon135
S_BOS2_RUN7	src/info.h	/^  S_BOS2_RUN7,$/;"	e	enum:__anon135
S_BOS2_RUN8	src/info.h	/^  S_BOS2_RUN8,$/;"	e	enum:__anon135
S_BOS2_STND	src/info.h	/^  S_BOS2_STND,$/;"	e	enum:__anon135
S_BOS2_STND2	src/info.h	/^  S_BOS2_STND2,$/;"	e	enum:__anon135
S_BOSS_ATK1	src/info.h	/^  S_BOSS_ATK1,$/;"	e	enum:__anon135
S_BOSS_ATK2	src/info.h	/^  S_BOSS_ATK2,$/;"	e	enum:__anon135
S_BOSS_ATK3	src/info.h	/^  S_BOSS_ATK3,$/;"	e	enum:__anon135
S_BOSS_DIE1	src/info.h	/^  S_BOSS_DIE1,$/;"	e	enum:__anon135
S_BOSS_DIE2	src/info.h	/^  S_BOSS_DIE2,$/;"	e	enum:__anon135
S_BOSS_DIE3	src/info.h	/^  S_BOSS_DIE3,$/;"	e	enum:__anon135
S_BOSS_DIE4	src/info.h	/^  S_BOSS_DIE4,$/;"	e	enum:__anon135
S_BOSS_DIE5	src/info.h	/^  S_BOSS_DIE5,$/;"	e	enum:__anon135
S_BOSS_DIE6	src/info.h	/^  S_BOSS_DIE6,$/;"	e	enum:__anon135
S_BOSS_DIE7	src/info.h	/^  S_BOSS_DIE7,$/;"	e	enum:__anon135
S_BOSS_PAIN	src/info.h	/^  S_BOSS_PAIN,$/;"	e	enum:__anon135
S_BOSS_PAIN2	src/info.h	/^  S_BOSS_PAIN2,$/;"	e	enum:__anon135
S_BOSS_RAISE1	src/info.h	/^  S_BOSS_RAISE1,$/;"	e	enum:__anon135
S_BOSS_RAISE2	src/info.h	/^  S_BOSS_RAISE2,$/;"	e	enum:__anon135
S_BOSS_RAISE3	src/info.h	/^  S_BOSS_RAISE3,$/;"	e	enum:__anon135
S_BOSS_RAISE4	src/info.h	/^  S_BOSS_RAISE4,$/;"	e	enum:__anon135
S_BOSS_RAISE5	src/info.h	/^  S_BOSS_RAISE5,$/;"	e	enum:__anon135
S_BOSS_RAISE6	src/info.h	/^  S_BOSS_RAISE6,$/;"	e	enum:__anon135
S_BOSS_RAISE7	src/info.h	/^  S_BOSS_RAISE7,$/;"	e	enum:__anon135
S_BOSS_RUN1	src/info.h	/^  S_BOSS_RUN1,$/;"	e	enum:__anon135
S_BOSS_RUN2	src/info.h	/^  S_BOSS_RUN2,$/;"	e	enum:__anon135
S_BOSS_RUN3	src/info.h	/^  S_BOSS_RUN3,$/;"	e	enum:__anon135
S_BOSS_RUN4	src/info.h	/^  S_BOSS_RUN4,$/;"	e	enum:__anon135
S_BOSS_RUN5	src/info.h	/^  S_BOSS_RUN5,$/;"	e	enum:__anon135
S_BOSS_RUN6	src/info.h	/^  S_BOSS_RUN6,$/;"	e	enum:__anon135
S_BOSS_RUN7	src/info.h	/^  S_BOSS_RUN7,$/;"	e	enum:__anon135
S_BOSS_RUN8	src/info.h	/^  S_BOSS_RUN8,$/;"	e	enum:__anon135
S_BOSS_STND	src/info.h	/^  S_BOSS_STND,$/;"	e	enum:__anon135
S_BOSS_STND2	src/info.h	/^  S_BOSS_STND2,$/;"	e	enum:__anon135
S_BPAK	src/info.h	/^  S_BPAK,$/;"	e	enum:__anon135
S_BRAIN	src/info.h	/^  S_BRAIN,$/;"	e	enum:__anon135
S_BRAINEXPLODE1	src/info.h	/^  S_BRAINEXPLODE1,$/;"	e	enum:__anon135
S_BRAINEXPLODE2	src/info.h	/^  S_BRAINEXPLODE2,$/;"	e	enum:__anon135
S_BRAINEXPLODE3	src/info.h	/^  S_BRAINEXPLODE3,$/;"	e	enum:__anon135
S_BRAINEYE	src/info.h	/^  S_BRAINEYE,$/;"	e	enum:__anon135
S_BRAINEYE1	src/info.h	/^  S_BRAINEYE1,$/;"	e	enum:__anon135
S_BRAINEYESEE	src/info.h	/^  S_BRAINEYESEE,$/;"	e	enum:__anon135
S_BRAINSTEM	src/info.h	/^  S_BRAINSTEM,$/;"	e	enum:__anon135
S_BRAIN_DIE1	src/info.h	/^  S_BRAIN_DIE1,$/;"	e	enum:__anon135
S_BRAIN_DIE2	src/info.h	/^  S_BRAIN_DIE2,$/;"	e	enum:__anon135
S_BRAIN_DIE3	src/info.h	/^  S_BRAIN_DIE3,$/;"	e	enum:__anon135
S_BRAIN_DIE4	src/info.h	/^  S_BRAIN_DIE4,$/;"	e	enum:__anon135
S_BRAIN_PAIN	src/info.h	/^  S_BRAIN_PAIN,$/;"	e	enum:__anon135
S_BRBALL1	src/info.h	/^  S_BRBALL1,$/;"	e	enum:__anon135
S_BRBALL2	src/info.h	/^  S_BRBALL2,$/;"	e	enum:__anon135
S_BRBALLX1	src/info.h	/^  S_BRBALLX1,$/;"	e	enum:__anon135
S_BRBALLX2	src/info.h	/^  S_BRBALLX2,$/;"	e	enum:__anon135
S_BRBALLX3	src/info.h	/^  S_BRBALLX3,$/;"	e	enum:__anon135
S_BROK	src/info.h	/^  S_BROK,$/;"	e	enum:__anon135
S_BSKULL	src/info.h	/^  S_BSKULL,$/;"	e	enum:__anon135
S_BSKULL2	src/info.h	/^  S_BSKULL2,$/;"	e	enum:__anon135
S_BSKUL_ATK1	src/info.h	/^  S_BSKUL_ATK1,$/;"	e	enum:__anon135
S_BSKUL_ATK2	src/info.h	/^  S_BSKUL_ATK2,$/;"	e	enum:__anon135
S_BSKUL_ATK3	src/info.h	/^  S_BSKUL_ATK3,$/;"	e	enum:__anon135
S_BSKUL_DIE1	src/info.h	/^  S_BSKUL_DIE1,$/;"	e	enum:__anon135
S_BSKUL_DIE2	src/info.h	/^  S_BSKUL_DIE2,$/;"	e	enum:__anon135
S_BSKUL_DIE3	src/info.h	/^  S_BSKUL_DIE3,$/;"	e	enum:__anon135
S_BSKUL_DIE4	src/info.h	/^  S_BSKUL_DIE4,$/;"	e	enum:__anon135
S_BSKUL_DIE5	src/info.h	/^  S_BSKUL_DIE5,$/;"	e	enum:__anon135
S_BSKUL_DIE6	src/info.h	/^  S_BSKUL_DIE6,$/;"	e	enum:__anon135
S_BSKUL_DIE7	src/info.h	/^  S_BSKUL_DIE7,$/;"	e	enum:__anon135
S_BSKUL_DIE8	src/info.h	/^  S_BSKUL_DIE8,$/;"	e	enum:__anon135
S_BSKUL_PAIN1	src/info.h	/^  S_BSKUL_PAIN1,$/;"	e	enum:__anon135
S_BSKUL_PAIN2	src/info.h	/^  S_BSKUL_PAIN2,$/;"	e	enum:__anon135
S_BSKUL_PAIN3	src/info.h	/^  S_BSKUL_PAIN3,$/;"	e	enum:__anon135
S_BSKUL_RUN1	src/info.h	/^  S_BSKUL_RUN1,$/;"	e	enum:__anon135
S_BSKUL_RUN2	src/info.h	/^  S_BSKUL_RUN2,$/;"	e	enum:__anon135
S_BSKUL_RUN3	src/info.h	/^  S_BSKUL_RUN3,$/;"	e	enum:__anon135
S_BSKUL_RUN4	src/info.h	/^  S_BSKUL_RUN4,$/;"	e	enum:__anon135
S_BSKUL_STND	src/info.h	/^  S_BSKUL_STND,$/;"	e	enum:__anon135
S_BSPI_ATK1	src/info.h	/^  S_BSPI_ATK1,$/;"	e	enum:__anon135
S_BSPI_ATK2	src/info.h	/^  S_BSPI_ATK2,$/;"	e	enum:__anon135
S_BSPI_ATK3	src/info.h	/^  S_BSPI_ATK3,$/;"	e	enum:__anon135
S_BSPI_ATK4	src/info.h	/^  S_BSPI_ATK4,$/;"	e	enum:__anon135
S_BSPI_DIE1	src/info.h	/^  S_BSPI_DIE1,$/;"	e	enum:__anon135
S_BSPI_DIE2	src/info.h	/^  S_BSPI_DIE2,$/;"	e	enum:__anon135
S_BSPI_DIE3	src/info.h	/^  S_BSPI_DIE3,$/;"	e	enum:__anon135
S_BSPI_DIE4	src/info.h	/^  S_BSPI_DIE4,$/;"	e	enum:__anon135
S_BSPI_DIE5	src/info.h	/^  S_BSPI_DIE5,$/;"	e	enum:__anon135
S_BSPI_DIE6	src/info.h	/^  S_BSPI_DIE6,$/;"	e	enum:__anon135
S_BSPI_DIE7	src/info.h	/^  S_BSPI_DIE7,$/;"	e	enum:__anon135
S_BSPI_PAIN	src/info.h	/^  S_BSPI_PAIN,$/;"	e	enum:__anon135
S_BSPI_PAIN2	src/info.h	/^  S_BSPI_PAIN2,$/;"	e	enum:__anon135
S_BSPI_RAISE1	src/info.h	/^  S_BSPI_RAISE1,$/;"	e	enum:__anon135
S_BSPI_RAISE2	src/info.h	/^  S_BSPI_RAISE2,$/;"	e	enum:__anon135
S_BSPI_RAISE3	src/info.h	/^  S_BSPI_RAISE3,$/;"	e	enum:__anon135
S_BSPI_RAISE4	src/info.h	/^  S_BSPI_RAISE4,$/;"	e	enum:__anon135
S_BSPI_RAISE5	src/info.h	/^  S_BSPI_RAISE5,$/;"	e	enum:__anon135
S_BSPI_RAISE6	src/info.h	/^  S_BSPI_RAISE6,$/;"	e	enum:__anon135
S_BSPI_RAISE7	src/info.h	/^  S_BSPI_RAISE7,$/;"	e	enum:__anon135
S_BSPI_RUN1	src/info.h	/^  S_BSPI_RUN1,$/;"	e	enum:__anon135
S_BSPI_RUN10	src/info.h	/^  S_BSPI_RUN10,$/;"	e	enum:__anon135
S_BSPI_RUN11	src/info.h	/^  S_BSPI_RUN11,$/;"	e	enum:__anon135
S_BSPI_RUN12	src/info.h	/^  S_BSPI_RUN12,$/;"	e	enum:__anon135
S_BSPI_RUN2	src/info.h	/^  S_BSPI_RUN2,$/;"	e	enum:__anon135
S_BSPI_RUN3	src/info.h	/^  S_BSPI_RUN3,$/;"	e	enum:__anon135
S_BSPI_RUN4	src/info.h	/^  S_BSPI_RUN4,$/;"	e	enum:__anon135
S_BSPI_RUN5	src/info.h	/^  S_BSPI_RUN5,$/;"	e	enum:__anon135
S_BSPI_RUN6	src/info.h	/^  S_BSPI_RUN6,$/;"	e	enum:__anon135
S_BSPI_RUN7	src/info.h	/^  S_BSPI_RUN7,$/;"	e	enum:__anon135
S_BSPI_RUN8	src/info.h	/^  S_BSPI_RUN8,$/;"	e	enum:__anon135
S_BSPI_RUN9	src/info.h	/^  S_BSPI_RUN9,$/;"	e	enum:__anon135
S_BSPI_SIGHT	src/info.h	/^  S_BSPI_SIGHT,$/;"	e	enum:__anon135
S_BSPI_STND	src/info.h	/^  S_BSPI_STND,$/;"	e	enum:__anon135
S_BSPI_STND2	src/info.h	/^  S_BSPI_STND2,$/;"	e	enum:__anon135
S_BTORCHSHRT	src/info.h	/^  S_BTORCHSHRT,$/;"	e	enum:__anon135
S_BTORCHSHRT2	src/info.h	/^  S_BTORCHSHRT2,$/;"	e	enum:__anon135
S_BTORCHSHRT3	src/info.h	/^  S_BTORCHSHRT3,$/;"	e	enum:__anon135
S_BTORCHSHRT4	src/info.h	/^  S_BTORCHSHRT4,$/;"	e	enum:__anon135
S_CANDELABRA	src/info.h	/^  S_CANDELABRA,$/;"	e	enum:__anon135
S_CANDLESTIK	src/info.h	/^  S_CANDLESTIK,$/;"	e	enum:__anon135
S_CANT_GL_ARB_MULTISAMPLEFACTOR	src/e6y.h	43;"	d
S_CANT_GL_ARB_MULTITEXTURE	src/e6y.h	42;"	d
S_CELL	src/info.h	/^  S_CELL,$/;"	e	enum:__anon135
S_CELP	src/info.h	/^  S_CELP,$/;"	e	enum:__anon135
S_CHAIN	src/info.h	/^  S_CHAIN,$/;"	e	enum:__anon135
S_CHAIN1	src/info.h	/^  S_CHAIN1,$/;"	e	enum:__anon135
S_CHAIN2	src/info.h	/^  S_CHAIN2,$/;"	e	enum:__anon135
S_CHAIN3	src/info.h	/^  S_CHAIN3,$/;"	e	enum:__anon135
S_CHAINDOWN	src/info.h	/^  S_CHAINDOWN,$/;"	e	enum:__anon135
S_CHAINFLASH1	src/info.h	/^  S_CHAINFLASH1,$/;"	e	enum:__anon135
S_CHAINFLASH2	src/info.h	/^  S_CHAINFLASH2,$/;"	e	enum:__anon135
S_CHAINUP	src/info.h	/^  S_CHAINUP,$/;"	e	enum:__anon135
S_CHAT	src/m_menu.h	136;"	d
S_CHOICE	src/m_menu.h	153;"	d
S_CLIP	src/info.h	/^  S_CLIP,$/;"	e	enum:__anon135
S_CLIPPING_DIST	src/s_sound.c	50;"	d	file:
S_CLOSE_DIST	src/s_sound.c	57;"	d	file:
S_COLONGIBS	src/info.h	/^  S_COLONGIBS,$/;"	e	enum:__anon135
S_COLOR	src/m_menu.h	135;"	d
S_COLU	src/info.h	/^  S_COLU,$/;"	e	enum:__anon135
S_COMMKEEN	src/info.h	/^  S_COMMKEEN,$/;"	e	enum:__anon135
S_COMMKEEN10	src/info.h	/^  S_COMMKEEN10,$/;"	e	enum:__anon135
S_COMMKEEN11	src/info.h	/^  S_COMMKEEN11,$/;"	e	enum:__anon135
S_COMMKEEN12	src/info.h	/^  S_COMMKEEN12,$/;"	e	enum:__anon135
S_COMMKEEN2	src/info.h	/^  S_COMMKEEN2,$/;"	e	enum:__anon135
S_COMMKEEN3	src/info.h	/^  S_COMMKEEN3,$/;"	e	enum:__anon135
S_COMMKEEN4	src/info.h	/^  S_COMMKEEN4,$/;"	e	enum:__anon135
S_COMMKEEN5	src/info.h	/^  S_COMMKEEN5,$/;"	e	enum:__anon135
S_COMMKEEN6	src/info.h	/^  S_COMMKEEN6,$/;"	e	enum:__anon135
S_COMMKEEN7	src/info.h	/^  S_COMMKEEN7,$/;"	e	enum:__anon135
S_COMMKEEN8	src/info.h	/^  S_COMMKEEN8,$/;"	e	enum:__anon135
S_COMMKEEN9	src/info.h	/^  S_COMMKEEN9,$/;"	e	enum:__anon135
S_CPOS_ATK1	src/info.h	/^  S_CPOS_ATK1,$/;"	e	enum:__anon135
S_CPOS_ATK2	src/info.h	/^  S_CPOS_ATK2,$/;"	e	enum:__anon135
S_CPOS_ATK3	src/info.h	/^  S_CPOS_ATK3,$/;"	e	enum:__anon135
S_CPOS_ATK4	src/info.h	/^  S_CPOS_ATK4,$/;"	e	enum:__anon135
S_CPOS_DIE1	src/info.h	/^  S_CPOS_DIE1,$/;"	e	enum:__anon135
S_CPOS_DIE2	src/info.h	/^  S_CPOS_DIE2,$/;"	e	enum:__anon135
S_CPOS_DIE3	src/info.h	/^  S_CPOS_DIE3,$/;"	e	enum:__anon135
S_CPOS_DIE4	src/info.h	/^  S_CPOS_DIE4,$/;"	e	enum:__anon135
S_CPOS_DIE5	src/info.h	/^  S_CPOS_DIE5,$/;"	e	enum:__anon135
S_CPOS_DIE6	src/info.h	/^  S_CPOS_DIE6,$/;"	e	enum:__anon135
S_CPOS_DIE7	src/info.h	/^  S_CPOS_DIE7,$/;"	e	enum:__anon135
S_CPOS_PAIN	src/info.h	/^  S_CPOS_PAIN,$/;"	e	enum:__anon135
S_CPOS_PAIN2	src/info.h	/^  S_CPOS_PAIN2,$/;"	e	enum:__anon135
S_CPOS_RAISE1	src/info.h	/^  S_CPOS_RAISE1,$/;"	e	enum:__anon135
S_CPOS_RAISE2	src/info.h	/^  S_CPOS_RAISE2,$/;"	e	enum:__anon135
S_CPOS_RAISE3	src/info.h	/^  S_CPOS_RAISE3,$/;"	e	enum:__anon135
S_CPOS_RAISE4	src/info.h	/^  S_CPOS_RAISE4,$/;"	e	enum:__anon135
S_CPOS_RAISE5	src/info.h	/^  S_CPOS_RAISE5,$/;"	e	enum:__anon135
S_CPOS_RAISE6	src/info.h	/^  S_CPOS_RAISE6,$/;"	e	enum:__anon135
S_CPOS_RAISE7	src/info.h	/^  S_CPOS_RAISE7,$/;"	e	enum:__anon135
S_CPOS_RUN1	src/info.h	/^  S_CPOS_RUN1,$/;"	e	enum:__anon135
S_CPOS_RUN2	src/info.h	/^  S_CPOS_RUN2,$/;"	e	enum:__anon135
S_CPOS_RUN3	src/info.h	/^  S_CPOS_RUN3,$/;"	e	enum:__anon135
S_CPOS_RUN4	src/info.h	/^  S_CPOS_RUN4,$/;"	e	enum:__anon135
S_CPOS_RUN5	src/info.h	/^  S_CPOS_RUN5,$/;"	e	enum:__anon135
S_CPOS_RUN6	src/info.h	/^  S_CPOS_RUN6,$/;"	e	enum:__anon135
S_CPOS_RUN7	src/info.h	/^  S_CPOS_RUN7,$/;"	e	enum:__anon135
S_CPOS_RUN8	src/info.h	/^  S_CPOS_RUN8,$/;"	e	enum:__anon135
S_CPOS_STND	src/info.h	/^  S_CPOS_STND,$/;"	e	enum:__anon135
S_CPOS_STND2	src/info.h	/^  S_CPOS_STND2,$/;"	e	enum:__anon135
S_CPOS_XDIE1	src/info.h	/^  S_CPOS_XDIE1,$/;"	e	enum:__anon135
S_CPOS_XDIE2	src/info.h	/^  S_CPOS_XDIE2,$/;"	e	enum:__anon135
S_CPOS_XDIE3	src/info.h	/^  S_CPOS_XDIE3,$/;"	e	enum:__anon135
S_CPOS_XDIE4	src/info.h	/^  S_CPOS_XDIE4,$/;"	e	enum:__anon135
S_CPOS_XDIE5	src/info.h	/^  S_CPOS_XDIE5,$/;"	e	enum:__anon135
S_CPOS_XDIE6	src/info.h	/^  S_CPOS_XDIE6,$/;"	e	enum:__anon135
S_CREDIT	src/m_menu.h	151;"	d
S_CRITEM	src/m_menu.h	134;"	d
S_CSAW	src/info.h	/^  S_CSAW,$/;"	e	enum:__anon135
S_CYBER_ATK1	src/info.h	/^  S_CYBER_ATK1,$/;"	e	enum:__anon135
S_CYBER_ATK2	src/info.h	/^  S_CYBER_ATK2,$/;"	e	enum:__anon135
S_CYBER_ATK3	src/info.h	/^  S_CYBER_ATK3,$/;"	e	enum:__anon135
S_CYBER_ATK4	src/info.h	/^  S_CYBER_ATK4,$/;"	e	enum:__anon135
S_CYBER_ATK5	src/info.h	/^  S_CYBER_ATK5,$/;"	e	enum:__anon135
S_CYBER_ATK6	src/info.h	/^  S_CYBER_ATK6,$/;"	e	enum:__anon135
S_CYBER_DIE1	src/info.h	/^  S_CYBER_DIE1,$/;"	e	enum:__anon135
S_CYBER_DIE10	src/info.h	/^  S_CYBER_DIE10,$/;"	e	enum:__anon135
S_CYBER_DIE2	src/info.h	/^  S_CYBER_DIE2,$/;"	e	enum:__anon135
S_CYBER_DIE3	src/info.h	/^  S_CYBER_DIE3,$/;"	e	enum:__anon135
S_CYBER_DIE4	src/info.h	/^  S_CYBER_DIE4,$/;"	e	enum:__anon135
S_CYBER_DIE5	src/info.h	/^  S_CYBER_DIE5,$/;"	e	enum:__anon135
S_CYBER_DIE6	src/info.h	/^  S_CYBER_DIE6,$/;"	e	enum:__anon135
S_CYBER_DIE7	src/info.h	/^  S_CYBER_DIE7,$/;"	e	enum:__anon135
S_CYBER_DIE8	src/info.h	/^  S_CYBER_DIE8,$/;"	e	enum:__anon135
S_CYBER_DIE9	src/info.h	/^  S_CYBER_DIE9,$/;"	e	enum:__anon135
S_CYBER_PAIN	src/info.h	/^  S_CYBER_PAIN,$/;"	e	enum:__anon135
S_CYBER_RUN1	src/info.h	/^  S_CYBER_RUN1,$/;"	e	enum:__anon135
S_CYBER_RUN2	src/info.h	/^  S_CYBER_RUN2,$/;"	e	enum:__anon135
S_CYBER_RUN3	src/info.h	/^  S_CYBER_RUN3,$/;"	e	enum:__anon135
S_CYBER_RUN4	src/info.h	/^  S_CYBER_RUN4,$/;"	e	enum:__anon135
S_CYBER_RUN5	src/info.h	/^  S_CYBER_RUN5,$/;"	e	enum:__anon135
S_CYBER_RUN6	src/info.h	/^  S_CYBER_RUN6,$/;"	e	enum:__anon135
S_CYBER_RUN7	src/info.h	/^  S_CYBER_RUN7,$/;"	e	enum:__anon135
S_CYBER_RUN8	src/info.h	/^  S_CYBER_RUN8,$/;"	e	enum:__anon135
S_CYBER_STND	src/info.h	/^  S_CYBER_STND,$/;"	e	enum:__anon135
S_CYBER_STND2	src/info.h	/^  S_CYBER_STND2,$/;"	e	enum:__anon135
S_ChangeMusInfoMusic	src/s_sound.c	/^void S_ChangeMusInfoMusic(int lumpnum, int looping) {$/;"	f
S_ChangeMusic	src/s_sound.c	/^void S_ChangeMusic(int musicnum, int looping) {$/;"	f
S_DEADBOTTOM	src/info.h	/^  S_DEADBOTTOM,$/;"	e	enum:__anon135
S_DEADSTICK	src/info.h	/^  S_DEADSTICK,$/;"	e	enum:__anon135
S_DEADTORSO	src/info.h	/^  S_DEADTORSO,$/;"	e	enum:__anon135
S_DETONATE	src/info.h	/^  S_DETONATE,  \/* killough 8\/9\/98: detonation of objects *\/$/;"	e	enum:__anon135
S_DETONATE2	src/info.h	/^  S_DETONATE2,$/;"	e	enum:__anon135
S_DETONATE3	src/info.h	/^  S_DETONATE3,$/;"	e	enum:__anon135
S_DISABLE	src/m_menu.h	156;"	d
S_DOGS_ATK1	src/info.h	/^  S_DOGS_ATK1,$/;"	e	enum:__anon135
S_DOGS_ATK2	src/info.h	/^  S_DOGS_ATK2,$/;"	e	enum:__anon135
S_DOGS_ATK3	src/info.h	/^  S_DOGS_ATK3,$/;"	e	enum:__anon135
S_DOGS_DIE1	src/info.h	/^  S_DOGS_DIE1,$/;"	e	enum:__anon135
S_DOGS_DIE2	src/info.h	/^  S_DOGS_DIE2,$/;"	e	enum:__anon135
S_DOGS_DIE3	src/info.h	/^  S_DOGS_DIE3,$/;"	e	enum:__anon135
S_DOGS_DIE4	src/info.h	/^  S_DOGS_DIE4,$/;"	e	enum:__anon135
S_DOGS_DIE5	src/info.h	/^  S_DOGS_DIE5,$/;"	e	enum:__anon135
S_DOGS_DIE6	src/info.h	/^  S_DOGS_DIE6,$/;"	e	enum:__anon135
S_DOGS_PAIN	src/info.h	/^  S_DOGS_PAIN,$/;"	e	enum:__anon135
S_DOGS_PAIN2	src/info.h	/^  S_DOGS_PAIN2,$/;"	e	enum:__anon135
S_DOGS_RAISE1	src/info.h	/^  S_DOGS_RAISE1,$/;"	e	enum:__anon135
S_DOGS_RAISE2	src/info.h	/^  S_DOGS_RAISE2,$/;"	e	enum:__anon135
S_DOGS_RAISE3	src/info.h	/^  S_DOGS_RAISE3,$/;"	e	enum:__anon135
S_DOGS_RAISE4	src/info.h	/^  S_DOGS_RAISE4,$/;"	e	enum:__anon135
S_DOGS_RAISE5	src/info.h	/^  S_DOGS_RAISE5,$/;"	e	enum:__anon135
S_DOGS_RAISE6	src/info.h	/^  S_DOGS_RAISE6,$/;"	e	enum:__anon135
S_DOGS_RUN1	src/info.h	/^  S_DOGS_RUN1,$/;"	e	enum:__anon135
S_DOGS_RUN2	src/info.h	/^  S_DOGS_RUN2,$/;"	e	enum:__anon135
S_DOGS_RUN3	src/info.h	/^  S_DOGS_RUN3,$/;"	e	enum:__anon135
S_DOGS_RUN4	src/info.h	/^  S_DOGS_RUN4,$/;"	e	enum:__anon135
S_DOGS_RUN5	src/info.h	/^  S_DOGS_RUN5,$/;"	e	enum:__anon135
S_DOGS_RUN6	src/info.h	/^  S_DOGS_RUN6,$/;"	e	enum:__anon135
S_DOGS_RUN7	src/info.h	/^  S_DOGS_RUN7,$/;"	e	enum:__anon135
S_DOGS_RUN8	src/info.h	/^  S_DOGS_RUN8,$/;"	e	enum:__anon135
S_DOGS_STND	src/info.h	/^  S_DOGS_STND,      \/* killough 7\/19\/98: Marine's best friend :) *\/$/;"	e	enum:__anon135
S_DOGS_STND2	src/info.h	/^  S_DOGS_STND2,$/;"	e	enum:__anon135
S_DSGUN	src/info.h	/^  S_DSGUN,$/;"	e	enum:__anon135
S_DSGUN1	src/info.h	/^  S_DSGUN1,$/;"	e	enum:__anon135
S_DSGUN10	src/info.h	/^  S_DSGUN10,$/;"	e	enum:__anon135
S_DSGUN2	src/info.h	/^  S_DSGUN2,$/;"	e	enum:__anon135
S_DSGUN3	src/info.h	/^  S_DSGUN3,$/;"	e	enum:__anon135
S_DSGUN4	src/info.h	/^  S_DSGUN4,$/;"	e	enum:__anon135
S_DSGUN5	src/info.h	/^  S_DSGUN5,$/;"	e	enum:__anon135
S_DSGUN6	src/info.h	/^  S_DSGUN6,$/;"	e	enum:__anon135
S_DSGUN7	src/info.h	/^  S_DSGUN7,$/;"	e	enum:__anon135
S_DSGUN8	src/info.h	/^  S_DSGUN8,$/;"	e	enum:__anon135
S_DSGUN9	src/info.h	/^  S_DSGUN9,$/;"	e	enum:__anon135
S_DSGUNDOWN	src/info.h	/^  S_DSGUNDOWN,$/;"	e	enum:__anon135
S_DSGUNFLASH1	src/info.h	/^  S_DSGUNFLASH1,$/;"	e	enum:__anon135
S_DSGUNFLASH2	src/info.h	/^  S_DSGUNFLASH2,$/;"	e	enum:__anon135
S_DSGUNUP	src/info.h	/^  S_DSGUNUP,$/;"	e	enum:__anon135
S_DSNR1	src/info.h	/^  S_DSNR1,$/;"	e	enum:__anon135
S_DSNR2	src/info.h	/^  S_DSNR2,$/;"	e	enum:__anon135
S_END	src/m_menu.h	145;"	d
S_EVILEYE	src/info.h	/^  S_EVILEYE,$/;"	e	enum:__anon135
S_EVILEYE2	src/info.h	/^  S_EVILEYE2,$/;"	e	enum:__anon135
S_EVILEYE3	src/info.h	/^  S_EVILEYE3,$/;"	e	enum:__anon135
S_EVILEYE4	src/info.h	/^  S_EVILEYE4,$/;"	e	enum:__anon135
S_EXPLODE1	src/info.h	/^  S_EXPLODE1,$/;"	e	enum:__anon135
S_EXPLODE2	src/info.h	/^  S_EXPLODE2,$/;"	e	enum:__anon135
S_EXPLODE3	src/info.h	/^  S_EXPLODE3,$/;"	e	enum:__anon135
S_FATSHOT1	src/info.h	/^  S_FATSHOT1,$/;"	e	enum:__anon135
S_FATSHOT2	src/info.h	/^  S_FATSHOT2,$/;"	e	enum:__anon135
S_FATSHOTX1	src/info.h	/^  S_FATSHOTX1,$/;"	e	enum:__anon135
S_FATSHOTX2	src/info.h	/^  S_FATSHOTX2,$/;"	e	enum:__anon135
S_FATSHOTX3	src/info.h	/^  S_FATSHOTX3,$/;"	e	enum:__anon135
S_FATT_ATK1	src/info.h	/^  S_FATT_ATK1,$/;"	e	enum:__anon135
S_FATT_ATK10	src/info.h	/^  S_FATT_ATK10,$/;"	e	enum:__anon135
S_FATT_ATK2	src/info.h	/^  S_FATT_ATK2,$/;"	e	enum:__anon135
S_FATT_ATK3	src/info.h	/^  S_FATT_ATK3,$/;"	e	enum:__anon135
S_FATT_ATK4	src/info.h	/^  S_FATT_ATK4,$/;"	e	enum:__anon135
S_FATT_ATK5	src/info.h	/^  S_FATT_ATK5,$/;"	e	enum:__anon135
S_FATT_ATK6	src/info.h	/^  S_FATT_ATK6,$/;"	e	enum:__anon135
S_FATT_ATK7	src/info.h	/^  S_FATT_ATK7,$/;"	e	enum:__anon135
S_FATT_ATK8	src/info.h	/^  S_FATT_ATK8,$/;"	e	enum:__anon135
S_FATT_ATK9	src/info.h	/^  S_FATT_ATK9,$/;"	e	enum:__anon135
S_FATT_DIE1	src/info.h	/^  S_FATT_DIE1,$/;"	e	enum:__anon135
S_FATT_DIE10	src/info.h	/^  S_FATT_DIE10,$/;"	e	enum:__anon135
S_FATT_DIE2	src/info.h	/^  S_FATT_DIE2,$/;"	e	enum:__anon135
S_FATT_DIE3	src/info.h	/^  S_FATT_DIE3,$/;"	e	enum:__anon135
S_FATT_DIE4	src/info.h	/^  S_FATT_DIE4,$/;"	e	enum:__anon135
S_FATT_DIE5	src/info.h	/^  S_FATT_DIE5,$/;"	e	enum:__anon135
S_FATT_DIE6	src/info.h	/^  S_FATT_DIE6,$/;"	e	enum:__anon135
S_FATT_DIE7	src/info.h	/^  S_FATT_DIE7,$/;"	e	enum:__anon135
S_FATT_DIE8	src/info.h	/^  S_FATT_DIE8,$/;"	e	enum:__anon135
S_FATT_DIE9	src/info.h	/^  S_FATT_DIE9,$/;"	e	enum:__anon135
S_FATT_PAIN	src/info.h	/^  S_FATT_PAIN,$/;"	e	enum:__anon135
S_FATT_PAIN2	src/info.h	/^  S_FATT_PAIN2,$/;"	e	enum:__anon135
S_FATT_RAISE1	src/info.h	/^  S_FATT_RAISE1,$/;"	e	enum:__anon135
S_FATT_RAISE2	src/info.h	/^  S_FATT_RAISE2,$/;"	e	enum:__anon135
S_FATT_RAISE3	src/info.h	/^  S_FATT_RAISE3,$/;"	e	enum:__anon135
S_FATT_RAISE4	src/info.h	/^  S_FATT_RAISE4,$/;"	e	enum:__anon135
S_FATT_RAISE5	src/info.h	/^  S_FATT_RAISE5,$/;"	e	enum:__anon135
S_FATT_RAISE6	src/info.h	/^  S_FATT_RAISE6,$/;"	e	enum:__anon135
S_FATT_RAISE7	src/info.h	/^  S_FATT_RAISE7,$/;"	e	enum:__anon135
S_FATT_RAISE8	src/info.h	/^  S_FATT_RAISE8,$/;"	e	enum:__anon135
S_FATT_RUN1	src/info.h	/^  S_FATT_RUN1,$/;"	e	enum:__anon135
S_FATT_RUN10	src/info.h	/^  S_FATT_RUN10,$/;"	e	enum:__anon135
S_FATT_RUN11	src/info.h	/^  S_FATT_RUN11,$/;"	e	enum:__anon135
S_FATT_RUN12	src/info.h	/^  S_FATT_RUN12,$/;"	e	enum:__anon135
S_FATT_RUN2	src/info.h	/^  S_FATT_RUN2,$/;"	e	enum:__anon135
S_FATT_RUN3	src/info.h	/^  S_FATT_RUN3,$/;"	e	enum:__anon135
S_FATT_RUN4	src/info.h	/^  S_FATT_RUN4,$/;"	e	enum:__anon135
S_FATT_RUN5	src/info.h	/^  S_FATT_RUN5,$/;"	e	enum:__anon135
S_FATT_RUN6	src/info.h	/^  S_FATT_RUN6,$/;"	e	enum:__anon135
S_FATT_RUN7	src/info.h	/^  S_FATT_RUN7,$/;"	e	enum:__anon135
S_FATT_RUN8	src/info.h	/^  S_FATT_RUN8,$/;"	e	enum:__anon135
S_FATT_RUN9	src/info.h	/^  S_FATT_RUN9,$/;"	e	enum:__anon135
S_FATT_STND	src/info.h	/^  S_FATT_STND,$/;"	e	enum:__anon135
S_FATT_STND2	src/info.h	/^  S_FATT_STND2,$/;"	e	enum:__anon135
S_FILE	src/m_menu.h	149;"	d
S_FIRE1	src/info.h	/^  S_FIRE1,$/;"	e	enum:__anon135
S_FIRE10	src/info.h	/^  S_FIRE10,$/;"	e	enum:__anon135
S_FIRE11	src/info.h	/^  S_FIRE11,$/;"	e	enum:__anon135
S_FIRE12	src/info.h	/^  S_FIRE12,$/;"	e	enum:__anon135
S_FIRE13	src/info.h	/^  S_FIRE13,$/;"	e	enum:__anon135
S_FIRE14	src/info.h	/^  S_FIRE14,$/;"	e	enum:__anon135
S_FIRE15	src/info.h	/^  S_FIRE15,$/;"	e	enum:__anon135
S_FIRE16	src/info.h	/^  S_FIRE16,$/;"	e	enum:__anon135
S_FIRE17	src/info.h	/^  S_FIRE17,$/;"	e	enum:__anon135
S_FIRE18	src/info.h	/^  S_FIRE18,$/;"	e	enum:__anon135
S_FIRE19	src/info.h	/^  S_FIRE19,$/;"	e	enum:__anon135
S_FIRE2	src/info.h	/^  S_FIRE2,$/;"	e	enum:__anon135
S_FIRE20	src/info.h	/^  S_FIRE20,$/;"	e	enum:__anon135
S_FIRE21	src/info.h	/^  S_FIRE21,$/;"	e	enum:__anon135
S_FIRE22	src/info.h	/^  S_FIRE22,$/;"	e	enum:__anon135
S_FIRE23	src/info.h	/^  S_FIRE23,$/;"	e	enum:__anon135
S_FIRE24	src/info.h	/^  S_FIRE24,$/;"	e	enum:__anon135
S_FIRE25	src/info.h	/^  S_FIRE25,$/;"	e	enum:__anon135
S_FIRE26	src/info.h	/^  S_FIRE26,$/;"	e	enum:__anon135
S_FIRE27	src/info.h	/^  S_FIRE27,$/;"	e	enum:__anon135
S_FIRE28	src/info.h	/^  S_FIRE28,$/;"	e	enum:__anon135
S_FIRE29	src/info.h	/^  S_FIRE29,$/;"	e	enum:__anon135
S_FIRE3	src/info.h	/^  S_FIRE3,$/;"	e	enum:__anon135
S_FIRE30	src/info.h	/^  S_FIRE30,$/;"	e	enum:__anon135
S_FIRE4	src/info.h	/^  S_FIRE4,$/;"	e	enum:__anon135
S_FIRE5	src/info.h	/^  S_FIRE5,$/;"	e	enum:__anon135
S_FIRE6	src/info.h	/^  S_FIRE6,$/;"	e	enum:__anon135
S_FIRE7	src/info.h	/^  S_FIRE7,$/;"	e	enum:__anon135
S_FIRE8	src/info.h	/^  S_FIRE8,$/;"	e	enum:__anon135
S_FIRE9	src/info.h	/^  S_FIRE9,$/;"	e	enum:__anon135
S_FLOATSKULL	src/info.h	/^  S_FLOATSKULL,$/;"	e	enum:__anon135
S_FLOATSKULL2	src/info.h	/^  S_FLOATSKULL2,$/;"	e	enum:__anon135
S_FLOATSKULL3	src/info.h	/^  S_FLOATSKULL3,$/;"	e	enum:__anon135
S_GIBS	src/info.h	/^  S_GIBS,$/;"	e	enum:__anon135
S_GREENTORCH	src/info.h	/^  S_GREENTORCH,$/;"	e	enum:__anon135
S_GREENTORCH2	src/info.h	/^  S_GREENTORCH2,$/;"	e	enum:__anon135
S_GREENTORCH3	src/info.h	/^  S_GREENTORCH3,$/;"	e	enum:__anon135
S_GREENTORCH4	src/info.h	/^  S_GREENTORCH4,$/;"	e	enum:__anon135
S_GRENADE	src/info.h	/^  S_GRENADE,   \/* killough 8\/9\/98: grenade launcher *\/$/;"	e	enum:__anon135
S_GTORCHSHRT	src/info.h	/^  S_GTORCHSHRT,$/;"	e	enum:__anon135
S_GTORCHSHRT2	src/info.h	/^  S_GTORCHSHRT2,$/;"	e	enum:__anon135
S_GTORCHSHRT3	src/info.h	/^  S_GTORCHSHRT3,$/;"	e	enum:__anon135
S_GTORCHSHRT4	src/info.h	/^  S_GTORCHSHRT4,$/;"	e	enum:__anon135
S_HANGBNOBRAIN	src/info.h	/^  S_HANGBNOBRAIN,$/;"	e	enum:__anon135
S_HANGNOGUTS	src/info.h	/^  S_HANGNOGUTS,$/;"	e	enum:__anon135
S_HANGTLOOKDN	src/info.h	/^  S_HANGTLOOKDN,$/;"	e	enum:__anon135
S_HANGTLOOKUP	src/info.h	/^  S_HANGTLOOKUP,$/;"	e	enum:__anon135
S_HANGTNOBRAIN	src/info.h	/^  S_HANGTNOBRAIN,$/;"	e	enum:__anon135
S_HANGTSKULL	src/info.h	/^  S_HANGTSKULL,$/;"	e	enum:__anon135
S_HASDEFPTR	src/m_menu.h	170;"	d
S_HEADCANDLES	src/info.h	/^  S_HEADCANDLES,$/;"	e	enum:__anon135
S_HEADCANDLES2	src/info.h	/^  S_HEADCANDLES2,$/;"	e	enum:__anon135
S_HEADONASTICK	src/info.h	/^  S_HEADONASTICK,$/;"	e	enum:__anon135
S_HEADSONSTICK	src/info.h	/^  S_HEADSONSTICK,$/;"	e	enum:__anon135
S_HEAD_ATK1	src/info.h	/^  S_HEAD_ATK1,$/;"	e	enum:__anon135
S_HEAD_ATK2	src/info.h	/^  S_HEAD_ATK2,$/;"	e	enum:__anon135
S_HEAD_ATK3	src/info.h	/^  S_HEAD_ATK3,$/;"	e	enum:__anon135
S_HEAD_DIE1	src/info.h	/^  S_HEAD_DIE1,$/;"	e	enum:__anon135
S_HEAD_DIE2	src/info.h	/^  S_HEAD_DIE2,$/;"	e	enum:__anon135
S_HEAD_DIE3	src/info.h	/^  S_HEAD_DIE3,$/;"	e	enum:__anon135
S_HEAD_DIE4	src/info.h	/^  S_HEAD_DIE4,$/;"	e	enum:__anon135
S_HEAD_DIE5	src/info.h	/^  S_HEAD_DIE5,$/;"	e	enum:__anon135
S_HEAD_DIE6	src/info.h	/^  S_HEAD_DIE6,$/;"	e	enum:__anon135
S_HEAD_PAIN	src/info.h	/^  S_HEAD_PAIN,$/;"	e	enum:__anon135
S_HEAD_PAIN2	src/info.h	/^  S_HEAD_PAIN2,$/;"	e	enum:__anon135
S_HEAD_PAIN3	src/info.h	/^  S_HEAD_PAIN3,$/;"	e	enum:__anon135
S_HEAD_RAISE1	src/info.h	/^  S_HEAD_RAISE1,$/;"	e	enum:__anon135
S_HEAD_RAISE2	src/info.h	/^  S_HEAD_RAISE2,$/;"	e	enum:__anon135
S_HEAD_RAISE3	src/info.h	/^  S_HEAD_RAISE3,$/;"	e	enum:__anon135
S_HEAD_RAISE4	src/info.h	/^  S_HEAD_RAISE4,$/;"	e	enum:__anon135
S_HEAD_RAISE5	src/info.h	/^  S_HEAD_RAISE5,$/;"	e	enum:__anon135
S_HEAD_RAISE6	src/info.h	/^  S_HEAD_RAISE6,$/;"	e	enum:__anon135
S_HEAD_RUN1	src/info.h	/^  S_HEAD_RUN1,$/;"	e	enum:__anon135
S_HEAD_STND	src/info.h	/^  S_HEAD_STND,$/;"	e	enum:__anon135
S_HEARTCOL	src/info.h	/^  S_HEARTCOL,$/;"	e	enum:__anon135
S_HEARTCOL2	src/info.h	/^  S_HEARTCOL2,$/;"	e	enum:__anon135
S_HILITE	src/m_menu.h	130;"	d
S_IFOG	src/info.h	/^  S_IFOG,$/;"	e	enum:__anon135
S_IFOG01	src/info.h	/^  S_IFOG01,$/;"	e	enum:__anon135
S_IFOG02	src/info.h	/^  S_IFOG02,$/;"	e	enum:__anon135
S_IFOG2	src/info.h	/^  S_IFOG2,$/;"	e	enum:__anon135
S_IFOG3	src/info.h	/^  S_IFOG3,$/;"	e	enum:__anon135
S_IFOG4	src/info.h	/^  S_IFOG4,$/;"	e	enum:__anon135
S_IFOG5	src/info.h	/^  S_IFOG5,$/;"	e	enum:__anon135
S_ISDIR	src/doomtype.h	74;"	d
S_Init	src/s_sound.c	/^void S_Init(int sfxVolume, int musicVolume) {$/;"	f
S_KEENPAIN	src/info.h	/^  S_KEENPAIN,$/;"	e	enum:__anon135
S_KEENPAIN2	src/info.h	/^  S_KEENPAIN2,$/;"	e	enum:__anon135
S_KEENSTND	src/info.h	/^  S_KEENSTND,$/;"	e	enum:__anon135
S_KEEP	src/m_menu.h	144;"	d
S_KEY	src/m_menu.h	140;"	d
S_LAUN	src/info.h	/^  S_LAUN,$/;"	e	enum:__anon135
S_LEFTJUST	src/m_menu.h	150;"	d
S_LEVWARN	src/m_menu.h	146;"	d
S_LIGHTDONE	src/info.h	/^  S_LIGHTDONE,$/;"	e	enum:__anon135
S_LIVESTICK	src/info.h	/^  S_LIVESTICK,$/;"	e	enum:__anon135
S_LIVESTICK2	src/info.h	/^  S_LIVESTICK2,$/;"	e	enum:__anon135
S_MEAT2	src/info.h	/^  S_MEAT2,$/;"	e	enum:__anon135
S_MEAT3	src/info.h	/^  S_MEAT3,$/;"	e	enum:__anon135
S_MEAT4	src/info.h	/^  S_MEAT4,$/;"	e	enum:__anon135
S_MEAT5	src/info.h	/^  S_MEAT5,$/;"	e	enum:__anon135
S_MEDI	src/info.h	/^  S_MEDI,$/;"	e	enum:__anon135
S_MEGA	src/info.h	/^  S_MEGA,$/;"	e	enum:__anon135
S_MEGA2	src/info.h	/^  S_MEGA2,$/;"	e	enum:__anon135
S_MEGA3	src/info.h	/^  S_MEGA3,$/;"	e	enum:__anon135
S_MEGA4	src/info.h	/^  S_MEGA4,$/;"	e	enum:__anon135
S_MGUN	src/info.h	/^  S_MGUN,$/;"	e	enum:__anon135
S_MISSILE	src/info.h	/^  S_MISSILE,$/;"	e	enum:__anon135
S_MISSILE1	src/info.h	/^  S_MISSILE1,$/;"	e	enum:__anon135
S_MISSILE2	src/info.h	/^  S_MISSILE2,$/;"	e	enum:__anon135
S_MISSILE3	src/info.h	/^  S_MISSILE3,$/;"	e	enum:__anon135
S_MISSILEDOWN	src/info.h	/^  S_MISSILEDOWN,$/;"	e	enum:__anon135
S_MISSILEFLASH1	src/info.h	/^  S_MISSILEFLASH1,$/;"	e	enum:__anon135
S_MISSILEFLASH2	src/info.h	/^  S_MISSILEFLASH2,$/;"	e	enum:__anon135
S_MISSILEFLASH3	src/info.h	/^  S_MISSILEFLASH3,$/;"	e	enum:__anon135
S_MISSILEFLASH4	src/info.h	/^  S_MISSILEFLASH4,$/;"	e	enum:__anon135
S_MISSILEUP	src/info.h	/^  S_MISSILEUP,$/;"	e	enum:__anon135
S_MUSHROOM	src/info.h	/^  S_MUSHROOM,  \/* killough 10\/98: mushroom explosion effect *\/$/;"	e	enum:__anon135
S_MuteSound	src/s_sound.c	/^void S_MuteSound(void) {$/;"	f
S_NEXT	src/m_menu.h	139;"	d
S_NULL	src/info.h	/^  S_NULL,$/;"	e	enum:__anon135
S_NUM	src/m_menu.h	142;"	d
S_OLDBFG1	src/info.h	/^  S_OLDBFG1,  \/\/ killough 7\/11\/98: the old BFG's 43 firing frames$/;"	e	enum:__anon135
S_OLDBFG42	src/info.h	/^  S_OLDBFG42 = S_OLDBFG1+41,$/;"	e	enum:__anon135
S_OLDBFG43	src/info.h	/^  S_OLDBFG43,$/;"	e	enum:__anon135
S_PAIN_ATK1	src/info.h	/^  S_PAIN_ATK1,$/;"	e	enum:__anon135
S_PAIN_ATK2	src/info.h	/^  S_PAIN_ATK2,$/;"	e	enum:__anon135
S_PAIN_ATK3	src/info.h	/^  S_PAIN_ATK3,$/;"	e	enum:__anon135
S_PAIN_ATK4	src/info.h	/^  S_PAIN_ATK4,$/;"	e	enum:__anon135
S_PAIN_DIE1	src/info.h	/^  S_PAIN_DIE1,$/;"	e	enum:__anon135
S_PAIN_DIE2	src/info.h	/^  S_PAIN_DIE2,$/;"	e	enum:__anon135
S_PAIN_DIE3	src/info.h	/^  S_PAIN_DIE3,$/;"	e	enum:__anon135
S_PAIN_DIE4	src/info.h	/^  S_PAIN_DIE4,$/;"	e	enum:__anon135
S_PAIN_DIE5	src/info.h	/^  S_PAIN_DIE5,$/;"	e	enum:__anon135
S_PAIN_DIE6	src/info.h	/^  S_PAIN_DIE6,$/;"	e	enum:__anon135
S_PAIN_PAIN	src/info.h	/^  S_PAIN_PAIN,$/;"	e	enum:__anon135
S_PAIN_PAIN2	src/info.h	/^  S_PAIN_PAIN2,$/;"	e	enum:__anon135
S_PAIN_RAISE1	src/info.h	/^  S_PAIN_RAISE1,$/;"	e	enum:__anon135
S_PAIN_RAISE2	src/info.h	/^  S_PAIN_RAISE2,$/;"	e	enum:__anon135
S_PAIN_RAISE3	src/info.h	/^  S_PAIN_RAISE3,$/;"	e	enum:__anon135
S_PAIN_RAISE4	src/info.h	/^  S_PAIN_RAISE4,$/;"	e	enum:__anon135
S_PAIN_RAISE5	src/info.h	/^  S_PAIN_RAISE5,$/;"	e	enum:__anon135
S_PAIN_RAISE6	src/info.h	/^  S_PAIN_RAISE6,$/;"	e	enum:__anon135
S_PAIN_RUN1	src/info.h	/^  S_PAIN_RUN1,$/;"	e	enum:__anon135
S_PAIN_RUN2	src/info.h	/^  S_PAIN_RUN2,$/;"	e	enum:__anon135
S_PAIN_RUN3	src/info.h	/^  S_PAIN_RUN3,$/;"	e	enum:__anon135
S_PAIN_RUN4	src/info.h	/^  S_PAIN_RUN4,$/;"	e	enum:__anon135
S_PAIN_RUN5	src/info.h	/^  S_PAIN_RUN5,$/;"	e	enum:__anon135
S_PAIN_RUN6	src/info.h	/^  S_PAIN_RUN6,$/;"	e	enum:__anon135
S_PAIN_STND	src/info.h	/^  S_PAIN_STND,$/;"	e	enum:__anon135
S_PINS	src/info.h	/^  S_PINS,$/;"	e	enum:__anon135
S_PINS2	src/info.h	/^  S_PINS2,$/;"	e	enum:__anon135
S_PINS3	src/info.h	/^  S_PINS3,$/;"	e	enum:__anon135
S_PINS4	src/info.h	/^  S_PINS4,$/;"	e	enum:__anon135
S_PINV	src/info.h	/^  S_PINV,$/;"	e	enum:__anon135
S_PINV2	src/info.h	/^  S_PINV2,$/;"	e	enum:__anon135
S_PINV3	src/info.h	/^  S_PINV3,$/;"	e	enum:__anon135
S_PINV4	src/info.h	/^  S_PINV4,$/;"	e	enum:__anon135
S_PISTOL	src/info.h	/^  S_PISTOL,$/;"	e	enum:__anon135
S_PISTOL1	src/info.h	/^  S_PISTOL1,$/;"	e	enum:__anon135
S_PISTOL2	src/info.h	/^  S_PISTOL2,$/;"	e	enum:__anon135
S_PISTOL3	src/info.h	/^  S_PISTOL3,$/;"	e	enum:__anon135
S_PISTOL4	src/info.h	/^  S_PISTOL4,$/;"	e	enum:__anon135
S_PISTOLDOWN	src/info.h	/^  S_PISTOLDOWN,$/;"	e	enum:__anon135
S_PISTOLFLASH	src/info.h	/^  S_PISTOLFLASH,$/;"	e	enum:__anon135
S_PISTOLUP	src/info.h	/^  S_PISTOLUP,$/;"	e	enum:__anon135
S_PLAS	src/info.h	/^  S_PLAS,$/;"	e	enum:__anon135
S_PLASBALL	src/info.h	/^  S_PLASBALL,$/;"	e	enum:__anon135
S_PLASBALL2	src/info.h	/^  S_PLASBALL2,$/;"	e	enum:__anon135
S_PLASEXP	src/info.h	/^  S_PLASEXP,$/;"	e	enum:__anon135
S_PLASEXP2	src/info.h	/^  S_PLASEXP2,$/;"	e	enum:__anon135
S_PLASEXP3	src/info.h	/^  S_PLASEXP3,$/;"	e	enum:__anon135
S_PLASEXP4	src/info.h	/^  S_PLASEXP4,$/;"	e	enum:__anon135
S_PLASEXP5	src/info.h	/^  S_PLASEXP5,$/;"	e	enum:__anon135
S_PLASMA	src/info.h	/^  S_PLASMA,$/;"	e	enum:__anon135
S_PLASMA1	src/info.h	/^  S_PLASMA1,$/;"	e	enum:__anon135
S_PLASMA2	src/info.h	/^  S_PLASMA2,$/;"	e	enum:__anon135
S_PLASMADOWN	src/info.h	/^  S_PLASMADOWN,$/;"	e	enum:__anon135
S_PLASMAFLASH1	src/info.h	/^  S_PLASMAFLASH1,$/;"	e	enum:__anon135
S_PLASMAFLASH2	src/info.h	/^  S_PLASMAFLASH2,$/;"	e	enum:__anon135
S_PLASMAUP	src/info.h	/^  S_PLASMAUP,$/;"	e	enum:__anon135
S_PLAY	src/info.h	/^  S_PLAY,$/;"	e	enum:__anon135
S_PLAY_ATK1	src/info.h	/^  S_PLAY_ATK1,$/;"	e	enum:__anon135
S_PLAY_ATK2	src/info.h	/^  S_PLAY_ATK2,$/;"	e	enum:__anon135
S_PLAY_DIE1	src/info.h	/^  S_PLAY_DIE1,$/;"	e	enum:__anon135
S_PLAY_DIE2	src/info.h	/^  S_PLAY_DIE2,$/;"	e	enum:__anon135
S_PLAY_DIE3	src/info.h	/^  S_PLAY_DIE3,$/;"	e	enum:__anon135
S_PLAY_DIE4	src/info.h	/^  S_PLAY_DIE4,$/;"	e	enum:__anon135
S_PLAY_DIE5	src/info.h	/^  S_PLAY_DIE5,$/;"	e	enum:__anon135
S_PLAY_DIE6	src/info.h	/^  S_PLAY_DIE6,$/;"	e	enum:__anon135
S_PLAY_DIE7	src/info.h	/^  S_PLAY_DIE7,$/;"	e	enum:__anon135
S_PLAY_GDIE1	src/info.h	/^  S_PLAY_GDIE1,$/;"	e	enum:__anon135
S_PLAY_GDIE2	src/info.h	/^  S_PLAY_GDIE2,$/;"	e	enum:__anon135
S_PLAY_GDIE3	src/info.h	/^  S_PLAY_GDIE3,$/;"	e	enum:__anon135
S_PLAY_GDIE4	src/info.h	/^  S_PLAY_GDIE4,$/;"	e	enum:__anon135
S_PLAY_GDIE5	src/info.h	/^  S_PLAY_GDIE5,$/;"	e	enum:__anon135
S_PLAY_GDIE6	src/info.h	/^  S_PLAY_GDIE6,$/;"	e	enum:__anon135
S_PLAY_GDIE7	src/info.h	/^  S_PLAY_GDIE7,$/;"	e	enum:__anon135
S_PLAY_GDIE8	src/info.h	/^  S_PLAY_GDIE8,$/;"	e	enum:__anon135
S_PLAY_GDIE9	src/info.h	/^  S_PLAY_GDIE9,$/;"	e	enum:__anon135
S_PLAY_PAIN	src/info.h	/^  S_PLAY_PAIN,$/;"	e	enum:__anon135
S_PLAY_PAIN2	src/info.h	/^  S_PLAY_PAIN2,$/;"	e	enum:__anon135
S_PLAY_RUN1	src/info.h	/^  S_PLAY_RUN1,$/;"	e	enum:__anon135
S_PLAY_RUN2	src/info.h	/^  S_PLAY_RUN2,$/;"	e	enum:__anon135
S_PLAY_RUN3	src/info.h	/^  S_PLAY_RUN3,$/;"	e	enum:__anon135
S_PLAY_RUN4	src/info.h	/^  S_PLAY_RUN4,$/;"	e	enum:__anon135
S_PLAY_XDIE1	src/info.h	/^  S_PLAY_XDIE1,$/;"	e	enum:__anon135
S_PLAY_XDIE2	src/info.h	/^  S_PLAY_XDIE2,$/;"	e	enum:__anon135
S_PLAY_XDIE3	src/info.h	/^  S_PLAY_XDIE3,$/;"	e	enum:__anon135
S_PLAY_XDIE4	src/info.h	/^  S_PLAY_XDIE4,$/;"	e	enum:__anon135
S_PLAY_XDIE5	src/info.h	/^  S_PLAY_XDIE5,$/;"	e	enum:__anon135
S_PLAY_XDIE6	src/info.h	/^  S_PLAY_XDIE6,$/;"	e	enum:__anon135
S_PLAY_XDIE7	src/info.h	/^  S_PLAY_XDIE7,$/;"	e	enum:__anon135
S_PLAY_XDIE8	src/info.h	/^  S_PLAY_XDIE8,$/;"	e	enum:__anon135
S_PLAY_XDIE9	src/info.h	/^  S_PLAY_XDIE9,$/;"	e	enum:__anon135
S_PLS1BALL	src/info.h	/^  S_PLS1BALL,      \/\/ killough 7\/19\/98: first plasma fireball in the beta$/;"	e	enum:__anon135
S_PLS1BALL2	src/info.h	/^  S_PLS1BALL2,$/;"	e	enum:__anon135
S_PLS1EXP	src/info.h	/^  S_PLS1EXP,$/;"	e	enum:__anon135
S_PLS1EXP2	src/info.h	/^  S_PLS1EXP2,$/;"	e	enum:__anon135
S_PLS1EXP3	src/info.h	/^  S_PLS1EXP3,$/;"	e	enum:__anon135
S_PLS1EXP4	src/info.h	/^  S_PLS1EXP4,$/;"	e	enum:__anon135
S_PLS1EXP5	src/info.h	/^  S_PLS1EXP5,$/;"	e	enum:__anon135
S_PLS2BALL	src/info.h	/^  S_PLS2BALL,     \/\/ killough 7\/19\/98: second plasma fireball in the beta$/;"	e	enum:__anon135
S_PLS2BALL2	src/info.h	/^  S_PLS2BALL2,$/;"	e	enum:__anon135
S_PLS2BALLX1	src/info.h	/^  S_PLS2BALLX1,$/;"	e	enum:__anon135
S_PLS2BALLX2	src/info.h	/^  S_PLS2BALLX2,$/;"	e	enum:__anon135
S_PLS2BALLX3	src/info.h	/^  S_PLS2BALLX3,$/;"	e	enum:__anon135
S_PMAP	src/info.h	/^  S_PMAP,$/;"	e	enum:__anon135
S_PMAP2	src/info.h	/^  S_PMAP2,$/;"	e	enum:__anon135
S_PMAP3	src/info.h	/^  S_PMAP3,$/;"	e	enum:__anon135
S_PMAP4	src/info.h	/^  S_PMAP4,$/;"	e	enum:__anon135
S_PMAP5	src/info.h	/^  S_PMAP5,$/;"	e	enum:__anon135
S_PMAP6	src/info.h	/^  S_PMAP6,$/;"	e	enum:__anon135
S_POSS_ATK1	src/info.h	/^  S_POSS_ATK1,$/;"	e	enum:__anon135
S_POSS_ATK2	src/info.h	/^  S_POSS_ATK2,$/;"	e	enum:__anon135
S_POSS_ATK3	src/info.h	/^  S_POSS_ATK3,$/;"	e	enum:__anon135
S_POSS_DIE1	src/info.h	/^  S_POSS_DIE1,$/;"	e	enum:__anon135
S_POSS_DIE2	src/info.h	/^  S_POSS_DIE2,$/;"	e	enum:__anon135
S_POSS_DIE3	src/info.h	/^  S_POSS_DIE3,$/;"	e	enum:__anon135
S_POSS_DIE4	src/info.h	/^  S_POSS_DIE4,$/;"	e	enum:__anon135
S_POSS_DIE5	src/info.h	/^  S_POSS_DIE5,$/;"	e	enum:__anon135
S_POSS_PAIN	src/info.h	/^  S_POSS_PAIN,$/;"	e	enum:__anon135
S_POSS_PAIN2	src/info.h	/^  S_POSS_PAIN2,$/;"	e	enum:__anon135
S_POSS_RAISE1	src/info.h	/^  S_POSS_RAISE1,$/;"	e	enum:__anon135
S_POSS_RAISE2	src/info.h	/^  S_POSS_RAISE2,$/;"	e	enum:__anon135
S_POSS_RAISE3	src/info.h	/^  S_POSS_RAISE3,$/;"	e	enum:__anon135
S_POSS_RAISE4	src/info.h	/^  S_POSS_RAISE4,$/;"	e	enum:__anon135
S_POSS_RUN1	src/info.h	/^  S_POSS_RUN1,$/;"	e	enum:__anon135
S_POSS_RUN2	src/info.h	/^  S_POSS_RUN2,$/;"	e	enum:__anon135
S_POSS_RUN3	src/info.h	/^  S_POSS_RUN3,$/;"	e	enum:__anon135
S_POSS_RUN4	src/info.h	/^  S_POSS_RUN4,$/;"	e	enum:__anon135
S_POSS_RUN5	src/info.h	/^  S_POSS_RUN5,$/;"	e	enum:__anon135
S_POSS_RUN6	src/info.h	/^  S_POSS_RUN6,$/;"	e	enum:__anon135
S_POSS_RUN7	src/info.h	/^  S_POSS_RUN7,$/;"	e	enum:__anon135
S_POSS_RUN8	src/info.h	/^  S_POSS_RUN8,$/;"	e	enum:__anon135
S_POSS_STND	src/info.h	/^  S_POSS_STND,$/;"	e	enum:__anon135
S_POSS_STND2	src/info.h	/^  S_POSS_STND2,$/;"	e	enum:__anon135
S_POSS_XDIE1	src/info.h	/^  S_POSS_XDIE1,$/;"	e	enum:__anon135
S_POSS_XDIE2	src/info.h	/^  S_POSS_XDIE2,$/;"	e	enum:__anon135
S_POSS_XDIE3	src/info.h	/^  S_POSS_XDIE3,$/;"	e	enum:__anon135
S_POSS_XDIE4	src/info.h	/^  S_POSS_XDIE4,$/;"	e	enum:__anon135
S_POSS_XDIE5	src/info.h	/^  S_POSS_XDIE5,$/;"	e	enum:__anon135
S_POSS_XDIE6	src/info.h	/^  S_POSS_XDIE6,$/;"	e	enum:__anon135
S_POSS_XDIE7	src/info.h	/^  S_POSS_XDIE7,$/;"	e	enum:__anon135
S_POSS_XDIE8	src/info.h	/^  S_POSS_XDIE8,$/;"	e	enum:__anon135
S_POSS_XDIE9	src/info.h	/^  S_POSS_XDIE9,$/;"	e	enum:__anon135
S_PREV	src/m_menu.h	138;"	d
S_PRGWARN	src/m_menu.h	147;"	d
S_PSTR	src/info.h	/^  S_PSTR,$/;"	e	enum:__anon135
S_PUFF1	src/info.h	/^  S_PUFF1,$/;"	e	enum:__anon135
S_PUFF2	src/info.h	/^  S_PUFF2,$/;"	e	enum:__anon135
S_PUFF3	src/info.h	/^  S_PUFF3,$/;"	e	enum:__anon135
S_PUFF4	src/info.h	/^  S_PUFF4,$/;"	e	enum:__anon135
S_PUNCH	src/info.h	/^  S_PUNCH,$/;"	e	enum:__anon135
S_PUNCH1	src/info.h	/^  S_PUNCH1,$/;"	e	enum:__anon135
S_PUNCH2	src/info.h	/^  S_PUNCH2,$/;"	e	enum:__anon135
S_PUNCH3	src/info.h	/^  S_PUNCH3,$/;"	e	enum:__anon135
S_PUNCH4	src/info.h	/^  S_PUNCH4,$/;"	e	enum:__anon135
S_PUNCH5	src/info.h	/^  S_PUNCH5,$/;"	e	enum:__anon135
S_PUNCHDOWN	src/info.h	/^  S_PUNCHDOWN,$/;"	e	enum:__anon135
S_PUNCHUP	src/info.h	/^  S_PUNCHUP,$/;"	e	enum:__anon135
S_PVIS	src/info.h	/^  S_PVIS,$/;"	e	enum:__anon135
S_PVIS2	src/info.h	/^  S_PVIS2,$/;"	e	enum:__anon135
S_ParseMusInfo	src/s_advsound.c	/^void S_ParseMusInfo(const char *mapid)$/;"	f
S_PauseSound	src/s_sound.c	/^void S_PauseSound(void) {$/;"	f
S_RBALL1	src/info.h	/^  S_RBALL1,$/;"	e	enum:__anon135
S_RBALL2	src/info.h	/^  S_RBALL2,$/;"	e	enum:__anon135
S_RBALLX1	src/info.h	/^  S_RBALLX1,$/;"	e	enum:__anon135
S_RBALLX2	src/info.h	/^  S_RBALLX2,$/;"	e	enum:__anon135
S_RBALLX3	src/info.h	/^  S_RBALLX3,$/;"	e	enum:__anon135
S_REDTORCH	src/info.h	/^  S_REDTORCH,$/;"	e	enum:__anon135
S_REDTORCH2	src/info.h	/^  S_REDTORCH2,$/;"	e	enum:__anon135
S_REDTORCH3	src/info.h	/^  S_REDTORCH3,$/;"	e	enum:__anon135
S_REDTORCH4	src/info.h	/^  S_REDTORCH4,$/;"	e	enum:__anon135
S_RESET	src/m_menu.h	137;"	d
S_RKEY	src/info.h	/^  S_RKEY,$/;"	e	enum:__anon135
S_RKEY2	src/info.h	/^  S_RKEY2,$/;"	e	enum:__anon135
S_ROCK	src/info.h	/^  S_ROCK,$/;"	e	enum:__anon135
S_ROCKET	src/info.h	/^  S_ROCKET,$/;"	e	enum:__anon135
S_RSKULL	src/info.h	/^  S_RSKULL,$/;"	e	enum:__anon135
S_RSKULL2	src/info.h	/^  S_RSKULL2,$/;"	e	enum:__anon135
S_RTORCHSHRT	src/info.h	/^  S_RTORCHSHRT,$/;"	e	enum:__anon135
S_RTORCHSHRT2	src/info.h	/^  S_RTORCHSHRT2,$/;"	e	enum:__anon135
S_RTORCHSHRT3	src/info.h	/^  S_RTORCHSHRT3,$/;"	e	enum:__anon135
S_RTORCHSHRT4	src/info.h	/^  S_RTORCHSHRT4,$/;"	e	enum:__anon135
S_ReloadChannelOrigins	src/s_sound.c	/^void S_ReloadChannelOrigins(void) {$/;"	f
S_RestartMusic	src/s_sound.c	/^void S_RestartMusic(void) {$/;"	f
S_ResumeSound	src/s_sound.c	/^void S_ResumeSound(void) {$/;"	f
S_SARG_ATK1	src/info.h	/^  S_SARG_ATK1,$/;"	e	enum:__anon135
S_SARG_ATK2	src/info.h	/^  S_SARG_ATK2,$/;"	e	enum:__anon135
S_SARG_ATK3	src/info.h	/^  S_SARG_ATK3,$/;"	e	enum:__anon135
S_SARG_DIE1	src/info.h	/^  S_SARG_DIE1,$/;"	e	enum:__anon135
S_SARG_DIE2	src/info.h	/^  S_SARG_DIE2,$/;"	e	enum:__anon135
S_SARG_DIE3	src/info.h	/^  S_SARG_DIE3,$/;"	e	enum:__anon135
S_SARG_DIE4	src/info.h	/^  S_SARG_DIE4,$/;"	e	enum:__anon135
S_SARG_DIE5	src/info.h	/^  S_SARG_DIE5,$/;"	e	enum:__anon135
S_SARG_DIE6	src/info.h	/^  S_SARG_DIE6,$/;"	e	enum:__anon135
S_SARG_PAIN	src/info.h	/^  S_SARG_PAIN,$/;"	e	enum:__anon135
S_SARG_PAIN2	src/info.h	/^  S_SARG_PAIN2,$/;"	e	enum:__anon135
S_SARG_RAISE1	src/info.h	/^  S_SARG_RAISE1,$/;"	e	enum:__anon135
S_SARG_RAISE2	src/info.h	/^  S_SARG_RAISE2,$/;"	e	enum:__anon135
S_SARG_RAISE3	src/info.h	/^  S_SARG_RAISE3,$/;"	e	enum:__anon135
S_SARG_RAISE4	src/info.h	/^  S_SARG_RAISE4,$/;"	e	enum:__anon135
S_SARG_RAISE5	src/info.h	/^  S_SARG_RAISE5,$/;"	e	enum:__anon135
S_SARG_RAISE6	src/info.h	/^  S_SARG_RAISE6,$/;"	e	enum:__anon135
S_SARG_RUN1	src/info.h	/^  S_SARG_RUN1,$/;"	e	enum:__anon135
S_SARG_RUN2	src/info.h	/^  S_SARG_RUN2,$/;"	e	enum:__anon135
S_SARG_RUN3	src/info.h	/^  S_SARG_RUN3,$/;"	e	enum:__anon135
S_SARG_RUN4	src/info.h	/^  S_SARG_RUN4,$/;"	e	enum:__anon135
S_SARG_RUN5	src/info.h	/^  S_SARG_RUN5,$/;"	e	enum:__anon135
S_SARG_RUN6	src/info.h	/^  S_SARG_RUN6,$/;"	e	enum:__anon135
S_SARG_RUN7	src/info.h	/^  S_SARG_RUN7,$/;"	e	enum:__anon135
S_SARG_RUN8	src/info.h	/^  S_SARG_RUN8,$/;"	e	enum:__anon135
S_SARG_STND	src/info.h	/^  S_SARG_STND,$/;"	e	enum:__anon135
S_SARG_STND2	src/info.h	/^  S_SARG_STND2,$/;"	e	enum:__anon135
S_SAW	src/info.h	/^  S_SAW,$/;"	e	enum:__anon135
S_SAW1	src/info.h	/^  S_SAW1,$/;"	e	enum:__anon135
S_SAW2	src/info.h	/^  S_SAW2,$/;"	e	enum:__anon135
S_SAW3	src/info.h	/^  S_SAW3,$/;"	e	enum:__anon135
S_SAWB	src/info.h	/^  S_SAWB,$/;"	e	enum:__anon135
S_SAWDOWN	src/info.h	/^  S_SAWDOWN,$/;"	e	enum:__anon135
S_SAWUP	src/info.h	/^  S_SAWUP,$/;"	e	enum:__anon135
S_SBOX	src/info.h	/^  S_SBOX,$/;"	e	enum:__anon135
S_SELECT	src/m_menu.h	131;"	d
S_SGUN	src/info.h	/^  S_SGUN,$/;"	e	enum:__anon135
S_SGUN1	src/info.h	/^  S_SGUN1,$/;"	e	enum:__anon135
S_SGUN2	src/info.h	/^  S_SGUN2,$/;"	e	enum:__anon135
S_SGUN3	src/info.h	/^  S_SGUN3,$/;"	e	enum:__anon135
S_SGUN4	src/info.h	/^  S_SGUN4,$/;"	e	enum:__anon135
S_SGUN5	src/info.h	/^  S_SGUN5,$/;"	e	enum:__anon135
S_SGUN6	src/info.h	/^  S_SGUN6,$/;"	e	enum:__anon135
S_SGUN7	src/info.h	/^  S_SGUN7,$/;"	e	enum:__anon135
S_SGUN8	src/info.h	/^  S_SGUN8,$/;"	e	enum:__anon135
S_SGUN9	src/info.h	/^  S_SGUN9,$/;"	e	enum:__anon135
S_SGUNDOWN	src/info.h	/^  S_SGUNDOWN,$/;"	e	enum:__anon135
S_SGUNFLASH1	src/info.h	/^  S_SGUNFLASH1,$/;"	e	enum:__anon135
S_SGUNFLASH2	src/info.h	/^  S_SGUNFLASH2,$/;"	e	enum:__anon135
S_SGUNUP	src/info.h	/^  S_SGUNUP,$/;"	e	enum:__anon135
S_SHEL	src/info.h	/^  S_SHEL,$/;"	e	enum:__anon135
S_SHOT	src/info.h	/^  S_SHOT,$/;"	e	enum:__anon135
S_SHOT2	src/info.h	/^  S_SHOT2,$/;"	e	enum:__anon135
S_SHOWDESC	src/m_menu.h	164;"	d
S_SHOWSET	src/m_menu.h	166;"	d
S_SHRTGRNCOL	src/info.h	/^  S_SHRTGRNCOL,$/;"	e	enum:__anon135
S_SHRTREDCOL	src/info.h	/^  S_SHRTREDCOL,$/;"	e	enum:__anon135
S_SKEL_DIE1	src/info.h	/^  S_SKEL_DIE1,$/;"	e	enum:__anon135
S_SKEL_DIE2	src/info.h	/^  S_SKEL_DIE2,$/;"	e	enum:__anon135
S_SKEL_DIE3	src/info.h	/^  S_SKEL_DIE3,$/;"	e	enum:__anon135
S_SKEL_DIE4	src/info.h	/^  S_SKEL_DIE4,$/;"	e	enum:__anon135
S_SKEL_DIE5	src/info.h	/^  S_SKEL_DIE5,$/;"	e	enum:__anon135
S_SKEL_DIE6	src/info.h	/^  S_SKEL_DIE6,$/;"	e	enum:__anon135
S_SKEL_FIST1	src/info.h	/^  S_SKEL_FIST1,$/;"	e	enum:__anon135
S_SKEL_FIST2	src/info.h	/^  S_SKEL_FIST2,$/;"	e	enum:__anon135
S_SKEL_FIST3	src/info.h	/^  S_SKEL_FIST3,$/;"	e	enum:__anon135
S_SKEL_FIST4	src/info.h	/^  S_SKEL_FIST4,$/;"	e	enum:__anon135
S_SKEL_MISS1	src/info.h	/^  S_SKEL_MISS1,$/;"	e	enum:__anon135
S_SKEL_MISS2	src/info.h	/^  S_SKEL_MISS2,$/;"	e	enum:__anon135
S_SKEL_MISS3	src/info.h	/^  S_SKEL_MISS3,$/;"	e	enum:__anon135
S_SKEL_MISS4	src/info.h	/^  S_SKEL_MISS4,$/;"	e	enum:__anon135
S_SKEL_PAIN	src/info.h	/^  S_SKEL_PAIN,$/;"	e	enum:__anon135
S_SKEL_PAIN2	src/info.h	/^  S_SKEL_PAIN2,$/;"	e	enum:__anon135
S_SKEL_RAISE1	src/info.h	/^  S_SKEL_RAISE1,$/;"	e	enum:__anon135
S_SKEL_RAISE2	src/info.h	/^  S_SKEL_RAISE2,$/;"	e	enum:__anon135
S_SKEL_RAISE3	src/info.h	/^  S_SKEL_RAISE3,$/;"	e	enum:__anon135
S_SKEL_RAISE4	src/info.h	/^  S_SKEL_RAISE4,$/;"	e	enum:__anon135
S_SKEL_RAISE5	src/info.h	/^  S_SKEL_RAISE5,$/;"	e	enum:__anon135
S_SKEL_RAISE6	src/info.h	/^  S_SKEL_RAISE6,$/;"	e	enum:__anon135
S_SKEL_RUN1	src/info.h	/^  S_SKEL_RUN1,$/;"	e	enum:__anon135
S_SKEL_RUN10	src/info.h	/^  S_SKEL_RUN10,$/;"	e	enum:__anon135
S_SKEL_RUN11	src/info.h	/^  S_SKEL_RUN11,$/;"	e	enum:__anon135
S_SKEL_RUN12	src/info.h	/^  S_SKEL_RUN12,$/;"	e	enum:__anon135
S_SKEL_RUN2	src/info.h	/^  S_SKEL_RUN2,$/;"	e	enum:__anon135
S_SKEL_RUN3	src/info.h	/^  S_SKEL_RUN3,$/;"	e	enum:__anon135
S_SKEL_RUN4	src/info.h	/^  S_SKEL_RUN4,$/;"	e	enum:__anon135
S_SKEL_RUN5	src/info.h	/^  S_SKEL_RUN5,$/;"	e	enum:__anon135
S_SKEL_RUN6	src/info.h	/^  S_SKEL_RUN6,$/;"	e	enum:__anon135
S_SKEL_RUN7	src/info.h	/^  S_SKEL_RUN7,$/;"	e	enum:__anon135
S_SKEL_RUN8	src/info.h	/^  S_SKEL_RUN8,$/;"	e	enum:__anon135
S_SKEL_RUN9	src/info.h	/^  S_SKEL_RUN9,$/;"	e	enum:__anon135
S_SKEL_STND	src/info.h	/^  S_SKEL_STND,$/;"	e	enum:__anon135
S_SKEL_STND2	src/info.h	/^  S_SKEL_STND2,$/;"	e	enum:__anon135
S_SKIP	src/m_menu.h	143;"	d
S_SKULLCOL	src/info.h	/^  S_SKULLCOL,$/;"	e	enum:__anon135
S_SKULL_ATK1	src/info.h	/^  S_SKULL_ATK1,$/;"	e	enum:__anon135
S_SKULL_ATK2	src/info.h	/^  S_SKULL_ATK2,$/;"	e	enum:__anon135
S_SKULL_ATK3	src/info.h	/^  S_SKULL_ATK3,$/;"	e	enum:__anon135
S_SKULL_ATK4	src/info.h	/^  S_SKULL_ATK4,$/;"	e	enum:__anon135
S_SKULL_DIE1	src/info.h	/^  S_SKULL_DIE1,$/;"	e	enum:__anon135
S_SKULL_DIE2	src/info.h	/^  S_SKULL_DIE2,$/;"	e	enum:__anon135
S_SKULL_DIE3	src/info.h	/^  S_SKULL_DIE3,$/;"	e	enum:__anon135
S_SKULL_DIE4	src/info.h	/^  S_SKULL_DIE4,$/;"	e	enum:__anon135
S_SKULL_DIE5	src/info.h	/^  S_SKULL_DIE5,$/;"	e	enum:__anon135
S_SKULL_DIE6	src/info.h	/^  S_SKULL_DIE6,$/;"	e	enum:__anon135
S_SKULL_PAIN	src/info.h	/^  S_SKULL_PAIN,$/;"	e	enum:__anon135
S_SKULL_PAIN2	src/info.h	/^  S_SKULL_PAIN2,$/;"	e	enum:__anon135
S_SKULL_RUN1	src/info.h	/^  S_SKULL_RUN1,$/;"	e	enum:__anon135
S_SKULL_RUN2	src/info.h	/^  S_SKULL_RUN2,$/;"	e	enum:__anon135
S_SKULL_STND	src/info.h	/^  S_SKULL_STND,$/;"	e	enum:__anon135
S_SKULL_STND2	src/info.h	/^  S_SKULL_STND2,$/;"	e	enum:__anon135
S_SMALLPOOL	src/info.h	/^  S_SMALLPOOL,$/;"	e	enum:__anon135
S_SMOKE1	src/info.h	/^  S_SMOKE1,$/;"	e	enum:__anon135
S_SMOKE2	src/info.h	/^  S_SMOKE2,$/;"	e	enum:__anon135
S_SMOKE3	src/info.h	/^  S_SMOKE3,$/;"	e	enum:__anon135
S_SMOKE4	src/info.h	/^  S_SMOKE4,$/;"	e	enum:__anon135
S_SMOKE5	src/info.h	/^  S_SMOKE5,$/;"	e	enum:__anon135
S_SOUL	src/info.h	/^  S_SOUL,$/;"	e	enum:__anon135
S_SOUL2	src/info.h	/^  S_SOUL2,$/;"	e	enum:__anon135
S_SOUL3	src/info.h	/^  S_SOUL3,$/;"	e	enum:__anon135
S_SOUL4	src/info.h	/^  S_SOUL4,$/;"	e	enum:__anon135
S_SOUL5	src/info.h	/^  S_SOUL5,$/;"	e	enum:__anon135
S_SOUL6	src/info.h	/^  S_SOUL6,$/;"	e	enum:__anon135
S_SOUND_H__	src/s_sound.h	25;"	d
S_SPAWN1	src/info.h	/^  S_SPAWN1,$/;"	e	enum:__anon135
S_SPAWN2	src/info.h	/^  S_SPAWN2,$/;"	e	enum:__anon135
S_SPAWN3	src/info.h	/^  S_SPAWN3,$/;"	e	enum:__anon135
S_SPAWN4	src/info.h	/^  S_SPAWN4,$/;"	e	enum:__anon135
S_SPAWNFIRE1	src/info.h	/^  S_SPAWNFIRE1,$/;"	e	enum:__anon135
S_SPAWNFIRE2	src/info.h	/^  S_SPAWNFIRE2,$/;"	e	enum:__anon135
S_SPAWNFIRE3	src/info.h	/^  S_SPAWNFIRE3,$/;"	e	enum:__anon135
S_SPAWNFIRE4	src/info.h	/^  S_SPAWNFIRE4,$/;"	e	enum:__anon135
S_SPAWNFIRE5	src/info.h	/^  S_SPAWNFIRE5,$/;"	e	enum:__anon135
S_SPAWNFIRE6	src/info.h	/^  S_SPAWNFIRE6,$/;"	e	enum:__anon135
S_SPAWNFIRE7	src/info.h	/^  S_SPAWNFIRE7,$/;"	e	enum:__anon135
S_SPAWNFIRE8	src/info.h	/^  S_SPAWNFIRE8,$/;"	e	enum:__anon135
S_SPID_ATK1	src/info.h	/^  S_SPID_ATK1,$/;"	e	enum:__anon135
S_SPID_ATK2	src/info.h	/^  S_SPID_ATK2,$/;"	e	enum:__anon135
S_SPID_ATK3	src/info.h	/^  S_SPID_ATK3,$/;"	e	enum:__anon135
S_SPID_ATK4	src/info.h	/^  S_SPID_ATK4,$/;"	e	enum:__anon135
S_SPID_DIE1	src/info.h	/^  S_SPID_DIE1,$/;"	e	enum:__anon135
S_SPID_DIE10	src/info.h	/^  S_SPID_DIE10,$/;"	e	enum:__anon135
S_SPID_DIE11	src/info.h	/^  S_SPID_DIE11,$/;"	e	enum:__anon135
S_SPID_DIE2	src/info.h	/^  S_SPID_DIE2,$/;"	e	enum:__anon135
S_SPID_DIE3	src/info.h	/^  S_SPID_DIE3,$/;"	e	enum:__anon135
S_SPID_DIE4	src/info.h	/^  S_SPID_DIE4,$/;"	e	enum:__anon135
S_SPID_DIE5	src/info.h	/^  S_SPID_DIE5,$/;"	e	enum:__anon135
S_SPID_DIE6	src/info.h	/^  S_SPID_DIE6,$/;"	e	enum:__anon135
S_SPID_DIE7	src/info.h	/^  S_SPID_DIE7,$/;"	e	enum:__anon135
S_SPID_DIE8	src/info.h	/^  S_SPID_DIE8,$/;"	e	enum:__anon135
S_SPID_DIE9	src/info.h	/^  S_SPID_DIE9,$/;"	e	enum:__anon135
S_SPID_PAIN	src/info.h	/^  S_SPID_PAIN,$/;"	e	enum:__anon135
S_SPID_PAIN2	src/info.h	/^  S_SPID_PAIN2,$/;"	e	enum:__anon135
S_SPID_RUN1	src/info.h	/^  S_SPID_RUN1,$/;"	e	enum:__anon135
S_SPID_RUN10	src/info.h	/^  S_SPID_RUN10,$/;"	e	enum:__anon135
S_SPID_RUN11	src/info.h	/^  S_SPID_RUN11,$/;"	e	enum:__anon135
S_SPID_RUN12	src/info.h	/^  S_SPID_RUN12,$/;"	e	enum:__anon135
S_SPID_RUN2	src/info.h	/^  S_SPID_RUN2,$/;"	e	enum:__anon135
S_SPID_RUN3	src/info.h	/^  S_SPID_RUN3,$/;"	e	enum:__anon135
S_SPID_RUN4	src/info.h	/^  S_SPID_RUN4,$/;"	e	enum:__anon135
S_SPID_RUN5	src/info.h	/^  S_SPID_RUN5,$/;"	e	enum:__anon135
S_SPID_RUN6	src/info.h	/^  S_SPID_RUN6,$/;"	e	enum:__anon135
S_SPID_RUN7	src/info.h	/^  S_SPID_RUN7,$/;"	e	enum:__anon135
S_SPID_RUN8	src/info.h	/^  S_SPID_RUN8,$/;"	e	enum:__anon135
S_SPID_RUN9	src/info.h	/^  S_SPID_RUN9,$/;"	e	enum:__anon135
S_SPID_STND	src/info.h	/^  S_SPID_STND,$/;"	e	enum:__anon135
S_SPID_STND2	src/info.h	/^  S_SPID_STND2,$/;"	e	enum:__anon135
S_SPOS_ATK1	src/info.h	/^  S_SPOS_ATK1,$/;"	e	enum:__anon135
S_SPOS_ATK2	src/info.h	/^  S_SPOS_ATK2,$/;"	e	enum:__anon135
S_SPOS_ATK3	src/info.h	/^  S_SPOS_ATK3,$/;"	e	enum:__anon135
S_SPOS_DIE1	src/info.h	/^  S_SPOS_DIE1,$/;"	e	enum:__anon135
S_SPOS_DIE2	src/info.h	/^  S_SPOS_DIE2,$/;"	e	enum:__anon135
S_SPOS_DIE3	src/info.h	/^  S_SPOS_DIE3,$/;"	e	enum:__anon135
S_SPOS_DIE4	src/info.h	/^  S_SPOS_DIE4,$/;"	e	enum:__anon135
S_SPOS_DIE5	src/info.h	/^  S_SPOS_DIE5,$/;"	e	enum:__anon135
S_SPOS_PAIN	src/info.h	/^  S_SPOS_PAIN,$/;"	e	enum:__anon135
S_SPOS_PAIN2	src/info.h	/^  S_SPOS_PAIN2,$/;"	e	enum:__anon135
S_SPOS_RAISE1	src/info.h	/^  S_SPOS_RAISE1,$/;"	e	enum:__anon135
S_SPOS_RAISE2	src/info.h	/^  S_SPOS_RAISE2,$/;"	e	enum:__anon135
S_SPOS_RAISE3	src/info.h	/^  S_SPOS_RAISE3,$/;"	e	enum:__anon135
S_SPOS_RAISE4	src/info.h	/^  S_SPOS_RAISE4,$/;"	e	enum:__anon135
S_SPOS_RAISE5	src/info.h	/^  S_SPOS_RAISE5,$/;"	e	enum:__anon135
S_SPOS_RUN1	src/info.h	/^  S_SPOS_RUN1,$/;"	e	enum:__anon135
S_SPOS_RUN2	src/info.h	/^  S_SPOS_RUN2,$/;"	e	enum:__anon135
S_SPOS_RUN3	src/info.h	/^  S_SPOS_RUN3,$/;"	e	enum:__anon135
S_SPOS_RUN4	src/info.h	/^  S_SPOS_RUN4,$/;"	e	enum:__anon135
S_SPOS_RUN5	src/info.h	/^  S_SPOS_RUN5,$/;"	e	enum:__anon135
S_SPOS_RUN6	src/info.h	/^  S_SPOS_RUN6,$/;"	e	enum:__anon135
S_SPOS_RUN7	src/info.h	/^  S_SPOS_RUN7,$/;"	e	enum:__anon135
S_SPOS_RUN8	src/info.h	/^  S_SPOS_RUN8,$/;"	e	enum:__anon135
S_SPOS_STND	src/info.h	/^  S_SPOS_STND,$/;"	e	enum:__anon135
S_SPOS_STND2	src/info.h	/^  S_SPOS_STND2,$/;"	e	enum:__anon135
S_SPOS_XDIE1	src/info.h	/^  S_SPOS_XDIE1,$/;"	e	enum:__anon135
S_SPOS_XDIE2	src/info.h	/^  S_SPOS_XDIE2,$/;"	e	enum:__anon135
S_SPOS_XDIE3	src/info.h	/^  S_SPOS_XDIE3,$/;"	e	enum:__anon135
S_SPOS_XDIE4	src/info.h	/^  S_SPOS_XDIE4,$/;"	e	enum:__anon135
S_SPOS_XDIE5	src/info.h	/^  S_SPOS_XDIE5,$/;"	e	enum:__anon135
S_SPOS_XDIE6	src/info.h	/^  S_SPOS_XDIE6,$/;"	e	enum:__anon135
S_SPOS_XDIE7	src/info.h	/^  S_SPOS_XDIE7,$/;"	e	enum:__anon135
S_SPOS_XDIE8	src/info.h	/^  S_SPOS_XDIE8,$/;"	e	enum:__anon135
S_SPOS_XDIE9	src/info.h	/^  S_SPOS_XDIE9,$/;"	e	enum:__anon135
S_SSWV_ATK1	src/info.h	/^  S_SSWV_ATK1,$/;"	e	enum:__anon135
S_SSWV_ATK2	src/info.h	/^  S_SSWV_ATK2,$/;"	e	enum:__anon135
S_SSWV_ATK3	src/info.h	/^  S_SSWV_ATK3,$/;"	e	enum:__anon135
S_SSWV_ATK4	src/info.h	/^  S_SSWV_ATK4,$/;"	e	enum:__anon135
S_SSWV_ATK5	src/info.h	/^  S_SSWV_ATK5,$/;"	e	enum:__anon135
S_SSWV_ATK6	src/info.h	/^  S_SSWV_ATK6,$/;"	e	enum:__anon135
S_SSWV_DIE1	src/info.h	/^  S_SSWV_DIE1,$/;"	e	enum:__anon135
S_SSWV_DIE2	src/info.h	/^  S_SSWV_DIE2,$/;"	e	enum:__anon135
S_SSWV_DIE3	src/info.h	/^  S_SSWV_DIE3,$/;"	e	enum:__anon135
S_SSWV_DIE4	src/info.h	/^  S_SSWV_DIE4,$/;"	e	enum:__anon135
S_SSWV_DIE5	src/info.h	/^  S_SSWV_DIE5,$/;"	e	enum:__anon135
S_SSWV_PAIN	src/info.h	/^  S_SSWV_PAIN,$/;"	e	enum:__anon135
S_SSWV_PAIN2	src/info.h	/^  S_SSWV_PAIN2,$/;"	e	enum:__anon135
S_SSWV_RAISE1	src/info.h	/^  S_SSWV_RAISE1,$/;"	e	enum:__anon135
S_SSWV_RAISE2	src/info.h	/^  S_SSWV_RAISE2,$/;"	e	enum:__anon135
S_SSWV_RAISE3	src/info.h	/^  S_SSWV_RAISE3,$/;"	e	enum:__anon135
S_SSWV_RAISE4	src/info.h	/^  S_SSWV_RAISE4,$/;"	e	enum:__anon135
S_SSWV_RAISE5	src/info.h	/^  S_SSWV_RAISE5,$/;"	e	enum:__anon135
S_SSWV_RUN1	src/info.h	/^  S_SSWV_RUN1,$/;"	e	enum:__anon135
S_SSWV_RUN2	src/info.h	/^  S_SSWV_RUN2,$/;"	e	enum:__anon135
S_SSWV_RUN3	src/info.h	/^  S_SSWV_RUN3,$/;"	e	enum:__anon135
S_SSWV_RUN4	src/info.h	/^  S_SSWV_RUN4,$/;"	e	enum:__anon135
S_SSWV_RUN5	src/info.h	/^  S_SSWV_RUN5,$/;"	e	enum:__anon135
S_SSWV_RUN6	src/info.h	/^  S_SSWV_RUN6,$/;"	e	enum:__anon135
S_SSWV_RUN7	src/info.h	/^  S_SSWV_RUN7,$/;"	e	enum:__anon135
S_SSWV_RUN8	src/info.h	/^  S_SSWV_RUN8,$/;"	e	enum:__anon135
S_SSWV_STND	src/info.h	/^  S_SSWV_STND,$/;"	e	enum:__anon135
S_SSWV_STND2	src/info.h	/^  S_SSWV_STND2,$/;"	e	enum:__anon135
S_SSWV_XDIE1	src/info.h	/^  S_SSWV_XDIE1,$/;"	e	enum:__anon135
S_SSWV_XDIE2	src/info.h	/^  S_SSWV_XDIE2,$/;"	e	enum:__anon135
S_SSWV_XDIE3	src/info.h	/^  S_SSWV_XDIE3,$/;"	e	enum:__anon135
S_SSWV_XDIE4	src/info.h	/^  S_SSWV_XDIE4,$/;"	e	enum:__anon135
S_SSWV_XDIE5	src/info.h	/^  S_SSWV_XDIE5,$/;"	e	enum:__anon135
S_SSWV_XDIE6	src/info.h	/^  S_SSWV_XDIE6,$/;"	e	enum:__anon135
S_SSWV_XDIE7	src/info.h	/^  S_SSWV_XDIE7,$/;"	e	enum:__anon135
S_SSWV_XDIE8	src/info.h	/^  S_SSWV_XDIE8,$/;"	e	enum:__anon135
S_SSWV_XDIE9	src/info.h	/^  S_SSWV_XDIE9,$/;"	e	enum:__anon135
S_STALAG	src/info.h	/^  S_STALAG,$/;"	e	enum:__anon135
S_STALAGTITE	src/info.h	/^  S_STALAGTITE,$/;"	e	enum:__anon135
S_STEREO_SWING	src/s_sound.c	64;"	d	file:
S_STIM	src/info.h	/^  S_STIM,$/;"	e	enum:__anon135
S_STRING	src/m_menu.h	168;"	d
S_SUIT	src/info.h	/^  S_SUIT,$/;"	e	enum:__anon135
S_SetMusicVolume	src/s_sound.c	/^void S_SetMusicVolume(int volume) {$/;"	f
S_SetSfxVolume	src/s_sound.c	/^void S_SetSfxVolume(int volume) {$/;"	f
S_Start	src/s_sound.c	/^void S_Start(void) {$/;"	f
S_StartMusic	src/s_sound.c	/^void S_StartMusic(int m_id) {$/;"	f
S_StartSound	src/s_sound.c	/^void S_StartSound(mobj_t *mobj, int sfx_id) {$/;"	f
S_Stop	src/s_sound.c	/^void S_Stop(void) {$/;"	f
S_StopMusic	src/s_sound.c	/^void S_StopMusic(void) {$/;"	f
S_StopSound	src/s_sound.c	/^void S_StopSound(mobj_t *mobj) {$/;"	f
S_TALLGRNCOL	src/info.h	/^  S_TALLGRNCOL,$/;"	e	enum:__anon135
S_TALLREDCOL	src/info.h	/^  S_TALLREDCOL,$/;"	e	enum:__anon135
S_TBALL1	src/info.h	/^  S_TBALL1,$/;"	e	enum:__anon135
S_TBALL2	src/info.h	/^  S_TBALL2,$/;"	e	enum:__anon135
S_TBALLX1	src/info.h	/^  S_TBALLX1,$/;"	e	enum:__anon135
S_TBALLX2	src/info.h	/^  S_TBALLX2,$/;"	e	enum:__anon135
S_TBALLX3	src/info.h	/^  S_TBALLX3,$/;"	e	enum:__anon135
S_TECH2LAMP	src/info.h	/^  S_TECH2LAMP,$/;"	e	enum:__anon135
S_TECH2LAMP2	src/info.h	/^  S_TECH2LAMP2,$/;"	e	enum:__anon135
S_TECH2LAMP3	src/info.h	/^  S_TECH2LAMP3,$/;"	e	enum:__anon135
S_TECH2LAMP4	src/info.h	/^  S_TECH2LAMP4,$/;"	e	enum:__anon135
S_TECHLAMP	src/info.h	/^  S_TECHLAMP,$/;"	e	enum:__anon135
S_TECHLAMP2	src/info.h	/^  S_TECHLAMP2,$/;"	e	enum:__anon135
S_TECHLAMP3	src/info.h	/^  S_TECHLAMP3,$/;"	e	enum:__anon135
S_TECHLAMP4	src/info.h	/^  S_TECHLAMP4,$/;"	e	enum:__anon135
S_TECHPILLAR	src/info.h	/^  S_TECHPILLAR,$/;"	e	enum:__anon135
S_TFOG	src/info.h	/^  S_TFOG,$/;"	e	enum:__anon135
S_TFOG01	src/info.h	/^  S_TFOG01,$/;"	e	enum:__anon135
S_TFOG02	src/info.h	/^  S_TFOG02,$/;"	e	enum:__anon135
S_TFOG10	src/info.h	/^  S_TFOG10,$/;"	e	enum:__anon135
S_TFOG2	src/info.h	/^  S_TFOG2,$/;"	e	enum:__anon135
S_TFOG3	src/info.h	/^  S_TFOG3,$/;"	e	enum:__anon135
S_TFOG4	src/info.h	/^  S_TFOG4,$/;"	e	enum:__anon135
S_TFOG5	src/info.h	/^  S_TFOG5,$/;"	e	enum:__anon135
S_TFOG6	src/info.h	/^  S_TFOG6,$/;"	e	enum:__anon135
S_TFOG7	src/info.h	/^  S_TFOG7,$/;"	e	enum:__anon135
S_TFOG8	src/info.h	/^  S_TFOG8,$/;"	e	enum:__anon135
S_TFOG9	src/info.h	/^  S_TFOG9,$/;"	e	enum:__anon135
S_TITLE	src/m_menu.h	132;"	d
S_TNT1	src/info.h	/^  S_TNT1, \/* add state for invisible sprite          phares 3\/8\/98  *\/$/;"	e	enum:__anon135
S_TORCHTREE	src/info.h	/^  S_TORCHTREE,$/;"	e	enum:__anon135
S_TRACEEXP1	src/info.h	/^  S_TRACEEXP1,$/;"	e	enum:__anon135
S_TRACEEXP2	src/info.h	/^  S_TRACEEXP2,$/;"	e	enum:__anon135
S_TRACEEXP3	src/info.h	/^  S_TRACEEXP3,$/;"	e	enum:__anon135
S_TRACER	src/info.h	/^  S_TRACER,$/;"	e	enum:__anon135
S_TRACER2	src/info.h	/^  S_TRACER2,$/;"	e	enum:__anon135
S_TROO_ATK1	src/info.h	/^  S_TROO_ATK1,$/;"	e	enum:__anon135
S_TROO_ATK2	src/info.h	/^  S_TROO_ATK2,$/;"	e	enum:__anon135
S_TROO_ATK3	src/info.h	/^  S_TROO_ATK3,$/;"	e	enum:__anon135
S_TROO_DIE1	src/info.h	/^  S_TROO_DIE1,$/;"	e	enum:__anon135
S_TROO_DIE2	src/info.h	/^  S_TROO_DIE2,$/;"	e	enum:__anon135
S_TROO_DIE3	src/info.h	/^  S_TROO_DIE3,$/;"	e	enum:__anon135
S_TROO_DIE4	src/info.h	/^  S_TROO_DIE4,$/;"	e	enum:__anon135
S_TROO_DIE5	src/info.h	/^  S_TROO_DIE5,$/;"	e	enum:__anon135
S_TROO_PAIN	src/info.h	/^  S_TROO_PAIN,$/;"	e	enum:__anon135
S_TROO_PAIN2	src/info.h	/^  S_TROO_PAIN2,$/;"	e	enum:__anon135
S_TROO_RAISE1	src/info.h	/^  S_TROO_RAISE1,$/;"	e	enum:__anon135
S_TROO_RAISE2	src/info.h	/^  S_TROO_RAISE2,$/;"	e	enum:__anon135
S_TROO_RAISE3	src/info.h	/^  S_TROO_RAISE3,$/;"	e	enum:__anon135
S_TROO_RAISE4	src/info.h	/^  S_TROO_RAISE4,$/;"	e	enum:__anon135
S_TROO_RAISE5	src/info.h	/^  S_TROO_RAISE5,$/;"	e	enum:__anon135
S_TROO_RUN1	src/info.h	/^  S_TROO_RUN1,$/;"	e	enum:__anon135
S_TROO_RUN2	src/info.h	/^  S_TROO_RUN2,$/;"	e	enum:__anon135
S_TROO_RUN3	src/info.h	/^  S_TROO_RUN3,$/;"	e	enum:__anon135
S_TROO_RUN4	src/info.h	/^  S_TROO_RUN4,$/;"	e	enum:__anon135
S_TROO_RUN5	src/info.h	/^  S_TROO_RUN5,$/;"	e	enum:__anon135
S_TROO_RUN6	src/info.h	/^  S_TROO_RUN6,$/;"	e	enum:__anon135
S_TROO_RUN7	src/info.h	/^  S_TROO_RUN7,$/;"	e	enum:__anon135
S_TROO_RUN8	src/info.h	/^  S_TROO_RUN8,$/;"	e	enum:__anon135
S_TROO_STND	src/info.h	/^  S_TROO_STND,$/;"	e	enum:__anon135
S_TROO_STND2	src/info.h	/^  S_TROO_STND2,$/;"	e	enum:__anon135
S_TROO_XDIE1	src/info.h	/^  S_TROO_XDIE1,$/;"	e	enum:__anon135
S_TROO_XDIE2	src/info.h	/^  S_TROO_XDIE2,$/;"	e	enum:__anon135
S_TROO_XDIE3	src/info.h	/^  S_TROO_XDIE3,$/;"	e	enum:__anon135
S_TROO_XDIE4	src/info.h	/^  S_TROO_XDIE4,$/;"	e	enum:__anon135
S_TROO_XDIE5	src/info.h	/^  S_TROO_XDIE5,$/;"	e	enum:__anon135
S_TROO_XDIE6	src/info.h	/^  S_TROO_XDIE6,$/;"	e	enum:__anon135
S_TROO_XDIE7	src/info.h	/^  S_TROO_XDIE7,$/;"	e	enum:__anon135
S_TROO_XDIE8	src/info.h	/^  S_TROO_XDIE8,$/;"	e	enum:__anon135
S_UnMuteSound	src/s_sound.c	/^void S_UnMuteSound(void) {$/;"	f
S_UpdateSounds	src/s_sound.c	/^void S_UpdateSounds(mobj_t *listener) {$/;"	f
S_VILE_ATK1	src/info.h	/^  S_VILE_ATK1,$/;"	e	enum:__anon135
S_VILE_ATK10	src/info.h	/^  S_VILE_ATK10,$/;"	e	enum:__anon135
S_VILE_ATK11	src/info.h	/^  S_VILE_ATK11,$/;"	e	enum:__anon135
S_VILE_ATK2	src/info.h	/^  S_VILE_ATK2,$/;"	e	enum:__anon135
S_VILE_ATK3	src/info.h	/^  S_VILE_ATK3,$/;"	e	enum:__anon135
S_VILE_ATK4	src/info.h	/^  S_VILE_ATK4,$/;"	e	enum:__anon135
S_VILE_ATK5	src/info.h	/^  S_VILE_ATK5,$/;"	e	enum:__anon135
S_VILE_ATK6	src/info.h	/^  S_VILE_ATK6,$/;"	e	enum:__anon135
S_VILE_ATK7	src/info.h	/^  S_VILE_ATK7,$/;"	e	enum:__anon135
S_VILE_ATK8	src/info.h	/^  S_VILE_ATK8,$/;"	e	enum:__anon135
S_VILE_ATK9	src/info.h	/^  S_VILE_ATK9,$/;"	e	enum:__anon135
S_VILE_DIE1	src/info.h	/^  S_VILE_DIE1,$/;"	e	enum:__anon135
S_VILE_DIE10	src/info.h	/^  S_VILE_DIE10,$/;"	e	enum:__anon135
S_VILE_DIE2	src/info.h	/^  S_VILE_DIE2,$/;"	e	enum:__anon135
S_VILE_DIE3	src/info.h	/^  S_VILE_DIE3,$/;"	e	enum:__anon135
S_VILE_DIE4	src/info.h	/^  S_VILE_DIE4,$/;"	e	enum:__anon135
S_VILE_DIE5	src/info.h	/^  S_VILE_DIE5,$/;"	e	enum:__anon135
S_VILE_DIE6	src/info.h	/^  S_VILE_DIE6,$/;"	e	enum:__anon135
S_VILE_DIE7	src/info.h	/^  S_VILE_DIE7,$/;"	e	enum:__anon135
S_VILE_DIE8	src/info.h	/^  S_VILE_DIE8,$/;"	e	enum:__anon135
S_VILE_DIE9	src/info.h	/^  S_VILE_DIE9,$/;"	e	enum:__anon135
S_VILE_HEAL1	src/info.h	/^  S_VILE_HEAL1,$/;"	e	enum:__anon135
S_VILE_HEAL2	src/info.h	/^  S_VILE_HEAL2,$/;"	e	enum:__anon135
S_VILE_HEAL3	src/info.h	/^  S_VILE_HEAL3,$/;"	e	enum:__anon135
S_VILE_PAIN	src/info.h	/^  S_VILE_PAIN,$/;"	e	enum:__anon135
S_VILE_PAIN2	src/info.h	/^  S_VILE_PAIN2,$/;"	e	enum:__anon135
S_VILE_RUN1	src/info.h	/^  S_VILE_RUN1,$/;"	e	enum:__anon135
S_VILE_RUN10	src/info.h	/^  S_VILE_RUN10,$/;"	e	enum:__anon135
S_VILE_RUN11	src/info.h	/^  S_VILE_RUN11,$/;"	e	enum:__anon135
S_VILE_RUN12	src/info.h	/^  S_VILE_RUN12,$/;"	e	enum:__anon135
S_VILE_RUN2	src/info.h	/^  S_VILE_RUN2,$/;"	e	enum:__anon135
S_VILE_RUN3	src/info.h	/^  S_VILE_RUN3,$/;"	e	enum:__anon135
S_VILE_RUN4	src/info.h	/^  S_VILE_RUN4,$/;"	e	enum:__anon135
S_VILE_RUN5	src/info.h	/^  S_VILE_RUN5,$/;"	e	enum:__anon135
S_VILE_RUN6	src/info.h	/^  S_VILE_RUN6,$/;"	e	enum:__anon135
S_VILE_RUN7	src/info.h	/^  S_VILE_RUN7,$/;"	e	enum:__anon135
S_VILE_RUN8	src/info.h	/^  S_VILE_RUN8,$/;"	e	enum:__anon135
S_VILE_RUN9	src/info.h	/^  S_VILE_RUN9,$/;"	e	enum:__anon135
S_VILE_STND	src/info.h	/^  S_VILE_STND,$/;"	e	enum:__anon135
S_VILE_STND2	src/info.h	/^  S_VILE_STND2,$/;"	e	enum:__anon135
S_WEAP	src/m_menu.h	141;"	d
S_YESNO	src/m_menu.h	133;"	d
S_YKEY	src/info.h	/^  S_YKEY,$/;"	e	enum:__anon135
S_YKEY2	src/info.h	/^  S_YKEY2,$/;"	e	enum:__anon135
S_YSKULL	src/info.h	/^  S_YSKULL,$/;"	e	enum:__anon135
S_YSKULL2	src/info.h	/^  S_YSKULL2,$/;"	e	enum:__anon135
S_arg	src/PCRELIB/pcregrep.c	/^static int S_arg = -1;$/;"	v	file:
S_music	src/sounds.c	/^musicinfo_t S_music[] = {$/;"	v
S_music_files	src/s_sound.c	/^const char* S_music_files[NUMMUSIC]; \/\/ cournia - stores music file names$/;"	v
S_sfx	src/sounds.c	/^sfxinfo_t S_sfx[] = {$/;"	v
SanityCheckScrollbars	src/TEXTSCREEN/txt_scrollpane.c	/^static void SanityCheckScrollbars(txt_scrollpane_t *scrollpane)$/;"	f	file:
SaveDef	src/m_menu.c	/^menu_t SaveDef =$/;"	v
SaveMenu	src/m_menu.c	/^menuitem_t SaveMenu[]=$/;"	v
Scanner	src/PCRELIB/pcre_scanner.cc	/^Scanner::Scanner()$/;"	f	class:pcrecpp::Scanner
Scanner	src/PCRELIB/pcre_scanner.cc	/^Scanner::Scanner(const string& in)$/;"	f	class:pcrecpp::Scanner
Scanner	src/PCRELIB/pcre_scanner.h	/^class Scanner {$/;"	c	namespace:pcrecpp
SceneInTexture	src/gl_fbo.c	/^int SceneInTexture = false;$/;"	v
ScheduleTrack	src/MUSIC/oplplayer.c	/^static void ScheduleTrack(opl_track_data_t *track)$/;"	f	file:
ScriptBuffer	src/sc_man.c	/^static const char *ScriptBuffer;$/;"	v	file:
ScriptEndPtr	src/sc_man.c	/^static const char *ScriptEndPtr;$/;"	v	file:
ScriptLump	src/sc_man.c	/^static int ScriptLump;$/;"	v	file:
ScriptName	src/sc_man.c	/^static char ScriptName[16];$/;"	v	file:
ScriptOpen	src/sc_man.c	/^static dboolean ScriptOpen = false;$/;"	v	file:
ScriptPtr	src/sc_man.c	/^static const char *ScriptPtr;$/;"	v	file:
ScriptSize	src/sc_man.c	/^static int ScriptSize;$/;"	v	file:
ScrollingMenu	src/TEXTSCREEN/examples/guitest.c	/^void ScrollingMenu(void)$/;"	f
SelectableWidget	src/TEXTSCREEN/txt_table.c	/^static int SelectableWidget(txt_table_t *table, int x, int y)$/;"	f	file:
SelectorWindowListener	src/TEXTSCREEN/txt_dropdown.c	/^static int SelectorWindowListener(txt_window_t *window, int key, void *user_data)$/;"	f	file:
SelectorWindowY	src/TEXTSCREEN/txt_dropdown.c	/^static int SelectorWindowY(txt_dropdown_list_t *list)$/;"	f	file:
SetAffinityFunc	src/SDL/i_main.c	/^typedef BOOL (WINAPI *SetAffinityFunc)(HANDLE hProcess, DWORD mask);$/;"	t	file:
SetBuffer	src/TEXTSCREEN/txt_spinctrl.c	/^static void SetBuffer(txt_spincontrol_t *spincontrol)$/;"	f	file:
SetBufferFromValue	src/TEXTSCREEN/txt_inputbox.c	/^static void SetBufferFromValue(txt_inputbox_t *inputbox)$/;"	f	file:
SetChannelVolume	src/MUSIC/oplplayer.c	/^static void SetChannelVolume(opl_channel_data_t *channel, unsigned int volume)$/;"	f	file:
SetCrosshairTarget	src/hu_stuff.c	/^void SetCrosshairTarget(void)$/;"	f
SetCustomMessage	src/hu_stuff.c	/^int SetCustomMessage(int plr, const char *msg, int delay, int ticks, int cm, int sfx) {$/;"	f
SetFrameTextureMode	src/gl_main.c	/^void SetFrameTextureMode(void)$/;"	f
SetRatio	src/v_video.c	/^void SetRatio(int width, int height)$/;"	f
SetTextureMode	src/gl_opengl.c	/^void SetTextureMode(tex_mode_e type)$/;"	f
SetVoiceInstrument	src/MUSIC/oplplayer.c	/^static void SetVoiceInstrument(opl_voice_t *voice,$/;"	f	file:
SetVoiceVolume	src/MUSIC/oplplayer.c	/^static void SetVoiceVolume(opl_voice_t *voice, unsigned int volume)$/;"	f	file:
SetupDef	src/m_menu.c	/^menu_t  SetupDef =$/;"	v
SetupMenu	src/m_menu.c	/^menuitem_t SetupMenu[]=$/;"	v
SetupWindow	src/TEXTSCREEN/examples/guitest.c	/^void SetupWindow(void)$/;"	f
ShowError	src/SDL/SDL_win32_main.c	/^static void ShowError(const char *title, const char *message)$/;"	f	file:
ShowNextLoc	src/wi_stuff.h	/^  ShowNextLoc$/;"	e	enum:__anon349
ShowOverflowWarning	src/g_overflow.c	/^static void ShowOverflowWarning(overrun_list_t overflow, int fatal, const char *params, ...)$/;"	f	file:
ShowSelectedWidget	src/TEXTSCREEN/txt_scrollpane.c	/^static void ShowSelectedWidget(txt_scrollpane_t *scrollpane)$/;"	f	file:
SinTable	src/MUSIC/dbopl.c	/^static Bit16u SinTable[ 512 ];$/;"	v	file:
Size	src/e6y.h	/^	unsigned int Size[2];$/;"	m	struct:__anon66
Skip	src/PCRELIB/pcre_scanner.cc	/^void Scanner::Skip(const char* re) {$/;"	f	class:pcrecpp::Scanner
SkipCXXComments	src/PCRELIB/pcre_scanner.h	/^  void SkipCXXComments() {$/;"	f	class:pcrecpp::Scanner
SkyBox	src/gl_sky.c	/^SkyBoxParams_t SkyBox;$/;"	v
SkyBoxParams_s	src/gl_intern.h	/^typedef struct SkyBoxParams_s$/;"	s
SkyBoxParams_t	src/gl_intern.h	/^} SkyBoxParams_t;$/;"	t	typeref:struct:SkyBoxParams_s
SkyColor	src/gl_sky.c	/^static PalEntry_t *SkyColor;$/;"	v	file:
SkyVertex	src/gl_sky.c	/^static void SkyVertex(vbo_vertex_t *vbo, int r, int c)$/;"	f	file:
SlopeDiv	src/tables.c	/^int SlopeDiv(unsigned num, unsigned den)$/;"	f
SmoothEdges	src/e6y.c	/^dboolean SmoothEdges(unsigned char * buffer,int w, int h)$/;"	f
SoundDef	src/m_menu.c	/^menu_t SoundDef =$/;"	v
SoundMenu	src/m_menu.c	/^menuitem_t SoundMenu[]=$/;"	v
SoundThread	src/PCSOUND/pcsound_linux.c	/^static int SoundThread(void *unused)$/;"	f	file:
SoundThread	src/PCSOUND/pcsound_win32.c	/^static int SoundThread(void *unused)$/;"	f	file:
SpechitOverrun	src/g_overflow.c	/^void SpechitOverrun(spechit_overrun_param_t *params)$/;"	f
SpecialKeyName	src/TEXTSCREEN/txt_sdl.c	/^static const char *SpecialKeyName(int key)$/;"	f	file:
SpeedFast	src/p_spec.h	/^  SpeedFast,$/;"	e	enum:__anon239
SpeedNormal	src/p_spec.h	/^  SpeedNormal,$/;"	e	enum:__anon239
SpeedSlow	src/p_spec.h	/^  SpeedSlow,$/;"	e	enum:__anon239
SpeedTurbo	src/p_spec.h	/^  SpeedTurbo,$/;"	e	enum:__anon239
SpinControlWidth	src/TEXTSCREEN/txt_spinctrl.c	/^static unsigned int SpinControlWidth(txt_spincontrol_t *spincontrol)$/;"	f	file:
StairDirection	src/p_spec.h	142;"	d
StairDirectionShift	src/p_spec.h	148;"	d
StairIgnore	src/p_spec.h	141;"	d
StairIgnoreShift	src/p_spec.h	147;"	d
StairMonster	src/p_spec.h	144;"	d
StairMonsterShift	src/p_spec.h	150;"	d
StairSpeed	src/p_spec.h	145;"	d
StairSpeedShift	src/p_spec.h	151;"	d
StairStep	src/p_spec.h	143;"	d
StairStepShift	src/p_spec.h	149;"	d
StartChatState	src/st_stuff.h	/^  StartChatState,$/;"	e	enum:__anon325
StartTrack	src/MUSIC/oplplayer.c	/^static void StartTrack(const midi_file_t *file, unsigned int track_num)$/;"	f	file:
StatCount	src/wi_stuff.h	/^  StatCount,$/;"	e	enum:__anon349
StatusHUDDef	src/m_menu.c	/^menu_t StatusHUDDef =$/;"	v
StepwiseSum	src/e6y.c	/^int StepwiseSum(int value, int direction, int step, int minval, int maxval, int defval)$/;"	f
Stream	src/MUSIC/madplayer.c	/^static struct mad_stream Stream;$/;"	v	typeref:struct:mad_stream	file:
StringBuffer	src/sc_man.c	/^static char StringBuffer[MAX_STRING_SIZE];$/;"	v	file:
SwitchMany	src/p_spec.h	/^  SwitchMany,$/;"	e	enum:__anon238
SwitchOnce	src/p_spec.h	/^  SwitchOnce,$/;"	e	enum:__anon238
Synth	src/MUSIC/madplayer.c	/^static struct mad_synth  Synth;$/;"	v	typeref:struct:mad_synth	file:
SynthHandler	src/MUSIC/dbopl.h	/^typedef Channel* (*SynthHandler)(Channel *self, Chip* chip, Bit32u samples, Bit32s* output );$/;"	t
SynthMode	src/MUSIC/dbopl.h	/^} SynthMode;$/;"	t	typeref:enum:__anon199
T1TEXT	src/d_englsh.h	604;"	d
T2TEXT	src/d_englsh.h	619;"	d
T3TEXT	src/d_englsh.h	631;"	d
T4TEXT	src/d_englsh.h	641;"	d
T5TEXT	src/d_englsh.h	655;"	d
T6TEXT	src/d_englsh.h	663;"	d
TABLES_H__	src/tables.h	25;"	d
TAG_DETAIL	src/gl_main.c	/^  TAG_DETAIL,$/;"	e	enum:__anon107	file:
TAG_DETAIL_FLAT	src/gl_detail.c	/^  TAG_DETAIL_FLAT,$/;"	e	enum:__anon72	file:
TAG_DETAIL_MAX	src/gl_detail.c	/^  TAG_DETAIL_MAX,$/;"	e	enum:__anon72	file:
TAG_DETAIL_WALL	src/gl_detail.c	/^  TAG_DETAIL_WALL,$/;"	e	enum:__anon72	file:
TAG_MAX	src/gl_main.c	/^  TAG_MAX$/;"	e	enum:__anon107	file:
TAG_SKYBOX	src/gl_main.c	/^  TAG_SKYBOX,$/;"	e	enum:__anon107	file:
TAnimItemParam	src/p_spec.h	/^} TAnimItemParam;$/;"	t	typeref:struct:__anon237
TEMPLATE_VOLUME	src/MUSIC/dbopl.c	474;"	d	file:
TEXTSCREEN_H	src/TEXTSCREEN/textscreen.h	23;"	d
TEXTSPEED	src/f_finale.c	45;"	d	file:
TEXTWAIT	src/f_finale.c	46;"	d	file:
THUSTR_1	src/d_englsh.h	251;"	d
THUSTR_10	src/d_englsh.h	260;"	d
THUSTR_11	src/d_englsh.h	261;"	d
THUSTR_12	src/d_englsh.h	263;"	d
THUSTR_13	src/d_englsh.h	264;"	d
THUSTR_14	src/d_englsh.h	265;"	d
THUSTR_15	src/d_englsh.h	266;"	d
THUSTR_16	src/d_englsh.h	267;"	d
THUSTR_17	src/d_englsh.h	268;"	d
THUSTR_18	src/d_englsh.h	269;"	d
THUSTR_19	src/d_englsh.h	270;"	d
THUSTR_2	src/d_englsh.h	252;"	d
THUSTR_20	src/d_englsh.h	271;"	d
THUSTR_21	src/d_englsh.h	273;"	d
THUSTR_22	src/d_englsh.h	274;"	d
THUSTR_23	src/d_englsh.h	275;"	d
THUSTR_24	src/d_englsh.h	276;"	d
THUSTR_25	src/d_englsh.h	277;"	d
THUSTR_26	src/d_englsh.h	278;"	d
THUSTR_27	src/d_englsh.h	279;"	d
THUSTR_28	src/d_englsh.h	280;"	d
THUSTR_29	src/d_englsh.h	281;"	d
THUSTR_3	src/d_englsh.h	253;"	d
THUSTR_30	src/d_englsh.h	282;"	d
THUSTR_31	src/d_englsh.h	284;"	d
THUSTR_32	src/d_englsh.h	285;"	d
THUSTR_4	src/d_englsh.h	254;"	d
THUSTR_5	src/d_englsh.h	255;"	d
THUSTR_6	src/d_englsh.h	256;"	d
THUSTR_7	src/d_englsh.h	257;"	d
THUSTR_8	src/d_englsh.h	258;"	d
THUSTR_9	src/d_englsh.h	259;"	d
TICRATE	src/doomdef.h	129;"	d
TIDNUM	src/s_advsound.c	40;"	d	file:
TIMEDIAG	src/MAC/config.h	67;"	d
TMF_INVERTBIT	src/gl_opengl.h	/^  TMF_INVERTBIT = 4,$/;"	e	enum:__anon110
TMF_MASKBIT	src/gl_opengl.h	/^  TMF_MASKBIT = 1,$/;"	e	enum:__anon110
TMF_OPAQUEBIT	src/gl_opengl.h	/^  TMF_OPAQUEBIT = 2,$/;"	e	enum:__anon110
TM_INVERT	src/gl_opengl.h	/^  TM_INVERT = TMF_INVERTBIT,$/;"	e	enum:__anon110
TM_INVERTOPAQUE	src/gl_opengl.h	/^  TM_INVERTOPAQUE = TMF_INVERTBIT | TMF_OPAQUEBIT,$/;"	e	enum:__anon110
TM_MASK	src/gl_opengl.h	/^  TM_MASK = TMF_MASKBIT,$/;"	e	enum:__anon110
TM_MODULATE	src/gl_opengl.h	/^  TM_MODULATE = 0,$/;"	e	enum:__anon110
TM_OPAQUE	src/gl_opengl.h	/^  TM_OPAQUE = TMF_OPAQUEBIT,$/;"	e	enum:__anon110
TRACEANGLE	src/p_enemy.c	/^int     TRACEANGLE = 0xc000000;$/;"	v
TRACERFUNC	src/hu_tracers.h	/^typedef void (*TRACERFUNC)(tracertype_t index);$/;"	t
TRACE_CROSS	src/hu_tracers.h	/^  TRACE_CROSS,$/;"	e	enum:__anon126
TRACE_DAMAGE	src/hu_tracers.h	/^  TRACE_DAMAGE,$/;"	e	enum:__anon126
TRACE_HEALTH	src/hu_tracers.h	/^  TRACE_HEALTH,$/;"	e	enum:__anon126
TRACE_PICKUP	src/hu_tracers.h	/^  TRACE_PICKUP,$/;"	e	enum:__anon126
TRACK_CHUNK_ID	src/MUSIC/midifile.c	43;"	d	file:
TREMOLO_TABLE	src/MUSIC/dbopl.c	67;"	d	file:
TRUE	src/MUSIC/dbopl.c	59;"	d	file:
TRUE	src/PCRELIB/pcre_internal.h	469;"	d
TRUE	src/PCRELIB/pcregrep.c	78;"	d	file:
TRUE_MARKER	src/cmp.c	/^  TRUE_MARKER            = 0xC3,$/;"	e	enum:__anon5	file:
TSC	src/r_data.c	415;"	d	file:
TT_ALLITEM	src/e6y.h	/^  TT_ALLITEM,$/;"	e	enum:__anon65
TT_ALLKILL	src/e6y.h	/^  TT_ALLKILL,$/;"	e	enum:__anon65
TT_ALLSECRET	src/e6y.h	/^  TT_ALLSECRET,$/;"	e	enum:__anon65
TT_MAX	src/e6y.h	/^  TT_MAX$/;"	e	enum:__anon65
TT_TIME	src/e6y.h	/^  TT_TIME,$/;"	e	enum:__anon65
TT_TOTALITEM	src/e6y.h	/^  TT_TOTALITEM,$/;"	e	enum:__anon65
TT_TOTALKILL	src/e6y.h	/^  TT_TOTALKILL,$/;"	e	enum:__anon65
TT_TOTALSECRET	src/e6y.h	/^  TT_TOTALSECRET,$/;"	e	enum:__anon65
TT_TOTALTIME	src/e6y.h	/^  TT_TOTALTIME,$/;"	e	enum:__anon65
TURBOTHRESHOLD	src/g_game.c	81;"	d	file:
TXT_AddDesktopWindow	src/TEXTSCREEN/txt_desktop.c	/^void TXT_AddDesktopWindow(txt_window_t *win)$/;"	f
TXT_BGColor	src/TEXTSCREEN/txt_io.c	/^void TXT_BGColor(int color, int blinking)$/;"	f
TXT_BUTTON_H	src/TEXTSCREEN/txt_button.h	23;"	d
TXT_BaseSpinControl	src/TEXTSCREEN/txt_spinctrl.c	/^static txt_spincontrol_t *TXT_BaseSpinControl(void)$/;"	f	file:
TXT_CAST_ARG	src/TEXTSCREEN/txt_widget.h	35;"	d
TXT_CHECKBOX_H	src/TEXTSCREEN/txt_checkbox.h	23;"	d
TXT_COLOR_BLACK	src/TEXTSCREEN/txt_main.h	/^    TXT_COLOR_BLACK,$/;"	e	enum:__anon336
TXT_COLOR_BLINKING	src/TEXTSCREEN/txt_main.h	48;"	d
TXT_COLOR_BLUE	src/TEXTSCREEN/txt_main.h	/^    TXT_COLOR_BLUE,$/;"	e	enum:__anon336
TXT_COLOR_BRIGHT_BLUE	src/TEXTSCREEN/txt_main.h	/^    TXT_COLOR_BRIGHT_BLUE,$/;"	e	enum:__anon336
TXT_COLOR_BRIGHT_CYAN	src/TEXTSCREEN/txt_main.h	/^    TXT_COLOR_BRIGHT_CYAN,$/;"	e	enum:__anon336
TXT_COLOR_BRIGHT_GREEN	src/TEXTSCREEN/txt_main.h	/^    TXT_COLOR_BRIGHT_GREEN,$/;"	e	enum:__anon336
TXT_COLOR_BRIGHT_MAGENTA	src/TEXTSCREEN/txt_main.h	/^    TXT_COLOR_BRIGHT_MAGENTA,$/;"	e	enum:__anon336
TXT_COLOR_BRIGHT_RED	src/TEXTSCREEN/txt_main.h	/^    TXT_COLOR_BRIGHT_RED,$/;"	e	enum:__anon336
TXT_COLOR_BRIGHT_WHITE	src/TEXTSCREEN/txt_main.h	/^    TXT_COLOR_BRIGHT_WHITE,$/;"	e	enum:__anon336
TXT_COLOR_BROWN	src/TEXTSCREEN/txt_main.h	/^    TXT_COLOR_BROWN,$/;"	e	enum:__anon336
TXT_COLOR_CYAN	src/TEXTSCREEN/txt_main.h	/^    TXT_COLOR_CYAN,$/;"	e	enum:__anon336
TXT_COLOR_DARK_GREY	src/TEXTSCREEN/txt_main.h	/^    TXT_COLOR_DARK_GREY,$/;"	e	enum:__anon336
TXT_COLOR_GREEN	src/TEXTSCREEN/txt_main.h	/^    TXT_COLOR_GREEN,$/;"	e	enum:__anon336
TXT_COLOR_GREY	src/TEXTSCREEN/txt_main.h	/^    TXT_COLOR_GREY,$/;"	e	enum:__anon336
TXT_COLOR_MAGENTA	src/TEXTSCREEN/txt_main.h	/^    TXT_COLOR_MAGENTA,$/;"	e	enum:__anon336
TXT_COLOR_RED	src/TEXTSCREEN/txt_main.h	/^    TXT_COLOR_RED,$/;"	e	enum:__anon336
TXT_COLOR_YELLOW	src/TEXTSCREEN/txt_main.h	/^    TXT_COLOR_YELLOW,$/;"	e	enum:__anon336
TXT_ClearScreen	src/TEXTSCREEN/txt_io.c	/^void TXT_ClearScreen(void)$/;"	f
TXT_CloseWindow	src/TEXTSCREEN/txt_window.c	/^void TXT_CloseWindow(txt_window_t *window)$/;"	f
TXT_DESKTOP_H	src/TEXTSCREEN/txt_desktop.h	23;"	d
TXT_DROPDOWN_H	src/TEXTSCREEN/txt_dropdown.h	23;"	d
TXT_DispatchEvents	src/TEXTSCREEN/txt_desktop.c	/^void TXT_DispatchEvents(void)$/;"	f
TXT_DrawASCIITable	src/TEXTSCREEN/txt_desktop.c	/^void TXT_DrawASCIITable(void)$/;"	f
TXT_DrawDesktop	src/TEXTSCREEN/txt_desktop.c	/^void TXT_DrawDesktop(void)$/;"	f
TXT_DrawDesktopBackground	src/TEXTSCREEN/txt_gui.c	/^void TXT_DrawDesktopBackground(const char *title)$/;"	f
TXT_DrawHorizScrollbar	src/TEXTSCREEN/txt_gui.c	/^void TXT_DrawHorizScrollbar(int x, int y, int w, int cursor, int range)$/;"	f
TXT_DrawSeparator	src/TEXTSCREEN/txt_gui.c	/^void TXT_DrawSeparator(int x, int y, int w)$/;"	f
TXT_DrawShadow	src/TEXTSCREEN/txt_gui.c	/^void TXT_DrawShadow(int x, int y, int w, int h)$/;"	f
TXT_DrawString	src/TEXTSCREEN/txt_gui.c	/^void TXT_DrawString(const char *s)$/;"	f
TXT_DrawVertScrollbar	src/TEXTSCREEN/txt_gui.c	/^void TXT_DrawVertScrollbar(int x, int y, int h, int cursor, int range)$/;"	f
TXT_DrawWindow	src/TEXTSCREEN/txt_window.c	/^void TXT_DrawWindow(txt_window_t *window, int selected)$/;"	f
TXT_DrawWindowFrame	src/TEXTSCREEN/txt_gui.c	/^void TXT_DrawWindowFrame(const char *title, int x, int y, int w, int h)$/;"	f
TXT_EnableKeyMapping	src/TEXTSCREEN/txt_sdl.c	/^void TXT_EnableKeyMapping(int enable)$/;"	f
TXT_ExitMainLoop	src/TEXTSCREEN/txt_desktop.c	/^void TXT_ExitMainLoop(void)$/;"	f
TXT_FGColor	src/TEXTSCREEN/txt_io.c	/^void TXT_FGColor(txt_color_t color)$/;"	f
TXT_GUIMainLoop	src/TEXTSCREEN/txt_desktop.c	/^void TXT_GUIMainLoop(void)$/;"	f
TXT_GUI_H	src/TEXTSCREEN/txt_gui.h	28;"	d
TXT_GetChar	src/TEXTSCREEN/txt_sdl.c	/^signed int TXT_GetChar(void)$/;"	f
TXT_GetKeyDescription	src/TEXTSCREEN/txt_sdl.c	/^void TXT_GetKeyDescription(int key, char *buf)$/;"	f
TXT_GetMousePosition	src/TEXTSCREEN/txt_sdl.c	/^void TXT_GetMousePosition(int *x, int *y)$/;"	f
TXT_GetScreenData	src/TEXTSCREEN/txt_sdl.c	/^unsigned char *TXT_GetScreenData(void)$/;"	f
TXT_GetXY	src/TEXTSCREEN/txt_io.c	/^void TXT_GetXY(int *x, int *y)$/;"	f
TXT_GotoXY	src/TEXTSCREEN/txt_io.c	/^void TXT_GotoXY(int x, int y)$/;"	f
TXT_HORIZ_CENTER	src/TEXTSCREEN/txt_widget.h	/^    TXT_HORIZ_CENTER,$/;"	e	enum:__anon330
TXT_HORIZ_LEFT	src/TEXTSCREEN/txt_widget.h	/^    TXT_HORIZ_LEFT,$/;"	e	enum:__anon330
TXT_HORIZ_RIGHT	src/TEXTSCREEN/txt_widget.h	/^    TXT_HORIZ_RIGHT,$/;"	e	enum:__anon330
TXT_INPUTBOX_H	src/TEXTSCREEN/txt_inputbox.h	23;"	d
TXT_IO_H	src/TEXTSCREEN/txt_io.h	28;"	d
TXT_Init	src/TEXTSCREEN/txt_sdl.c	/^int TXT_Init(void)$/;"	f
TXT_InitClipArea	src/TEXTSCREEN/txt_gui.c	/^void TXT_InitClipArea(void)$/;"	f
TXT_InitTable	src/TEXTSCREEN/txt_table.c	/^void TXT_InitTable(txt_table_t *table, int columns)$/;"	f
TXT_LABEL_H	src/TEXTSCREEN/txt_label.h	23;"	d
TXT_LayoutWindow	src/TEXTSCREEN/txt_window.c	/^void TXT_LayoutWindow(txt_window_t *window)$/;"	f
TXT_MAIN_H	src/TEXTSCREEN/txt_main.h	28;"	d
TXT_MAX_MOUSE_BUTTONS	src/TEXTSCREEN/txt_main.h	41;"	d
TXT_MOUSE_BASE	src/TEXTSCREEN/txt_main.h	37;"	d
TXT_MOUSE_LEFT	src/TEXTSCREEN/txt_main.h	38;"	d
TXT_MOUSE_MIDDLE	src/TEXTSCREEN/txt_main.h	40;"	d
TXT_MOUSE_RIGHT	src/TEXTSCREEN/txt_main.h	39;"	d
TXT_NewButton	src/TEXTSCREEN/txt_button.c	/^txt_button_t *TXT_NewButton(char *label)$/;"	f
TXT_NewButton2	src/TEXTSCREEN/txt_button.c	/^txt_button_t *TXT_NewButton2(char *label, TxtWidgetSignalFunc func,$/;"	f
TXT_NewCallbackTable	src/TEXTSCREEN/txt_widget.c	/^txt_callback_table_t *TXT_NewCallbackTable(void)$/;"	f
TXT_NewCheckBox	src/TEXTSCREEN/txt_checkbox.c	/^txt_checkbox_t *TXT_NewCheckBox(char *label, int *variable)$/;"	f
TXT_NewDropdownList	src/TEXTSCREEN/txt_dropdown.c	/^txt_dropdown_list_t *TXT_NewDropdownList(int *variable, char **values, $/;"	f
TXT_NewFloatSpinControl	src/TEXTSCREEN/txt_spinctrl.c	/^txt_spincontrol_t *TXT_NewFloatSpinControl(float *value, float min, float max)$/;"	f
TXT_NewInputBox	src/TEXTSCREEN/txt_inputbox.c	/^txt_inputbox_t *TXT_NewInputBox(char **value, int size)$/;"	f
TXT_NewIntInputBox	src/TEXTSCREEN/txt_inputbox.c	/^txt_inputbox_t *TXT_NewIntInputBox(int *value, int size)$/;"	f
TXT_NewInvertedCheckBox	src/TEXTSCREEN/txt_checkbox.c	/^txt_checkbox_t *TXT_NewInvertedCheckBox(char *label, int *variable)$/;"	f
TXT_NewLabel	src/TEXTSCREEN/txt_label.c	/^txt_label_t *TXT_NewLabel(char *text)$/;"	f
TXT_NewRadioButton	src/TEXTSCREEN/txt_radiobutton.c	/^txt_radiobutton_t *TXT_NewRadioButton(char *label, int *variable, int value)$/;"	f
TXT_NewScrollPane	src/TEXTSCREEN/txt_scrollpane.c	/^txt_scrollpane_t *TXT_NewScrollPane(int w, int h, TXT_UNCAST_ARG(target))$/;"	f
TXT_NewSeparator	src/TEXTSCREEN/txt_separator.c	/^txt_separator_t *TXT_NewSeparator(char *label)$/;"	f
TXT_NewSpinControl	src/TEXTSCREEN/txt_spinctrl.c	/^txt_spincontrol_t *TXT_NewSpinControl(int *value, int min, int max)$/;"	f
TXT_NewStrut	src/TEXTSCREEN/txt_strut.c	/^txt_strut_t *TXT_NewStrut(int width, int height)$/;"	f
TXT_NewTable	src/TEXTSCREEN/txt_table.c	/^txt_table_t *TXT_NewTable(int columns)$/;"	f
TXT_NewWindow	src/TEXTSCREEN/txt_window.c	/^txt_window_t *TXT_NewWindow(char *title)$/;"	f
TXT_NewWindowAbortAction	src/TEXTSCREEN/txt_window_action.c	/^txt_window_action_t *TXT_NewWindowAbortAction(txt_window_t *window)$/;"	f
TXT_NewWindowAction	src/TEXTSCREEN/txt_window_action.c	/^txt_window_action_t *TXT_NewWindowAction(int key, const char *label)$/;"	f
TXT_NewWindowEscapeAction	src/TEXTSCREEN/txt_window_action.c	/^txt_window_action_t *TXT_NewWindowEscapeAction(txt_window_t *window)$/;"	f
TXT_NewWindowSelectAction	src/TEXTSCREEN/txt_window_action.c	/^txt_window_action_t *TXT_NewWindowSelectAction(txt_window_t *window)$/;"	f
TXT_PopClipArea	src/TEXTSCREEN/txt_gui.c	/^void TXT_PopClipArea(void)$/;"	f
TXT_PushClipArea	src/TEXTSCREEN/txt_gui.c	/^void TXT_PushClipArea(int x1, int x2, int y1, int y2)$/;"	f
TXT_PutChar	src/TEXTSCREEN/txt_io.c	/^void TXT_PutChar(int c)$/;"	f
TXT_Puts	src/TEXTSCREEN/txt_io.c	/^void TXT_Puts(const char *s)$/;"	f
TXT_RADIOBUTTON_H	src/TEXTSCREEN/txt_radiobutton.h	23;"	d
TXT_RefCallbackTable	src/TEXTSCREEN/txt_widget.c	/^void TXT_RefCallbackTable(txt_callback_table_t *table)$/;"	f
TXT_RemoveDesktopWindow	src/TEXTSCREEN/txt_desktop.c	/^void TXT_RemoveDesktopWindow(txt_window_t *win)$/;"	f
TXT_SCREEN_H	src/TEXTSCREEN/txt_main.h	46;"	d
TXT_SCREEN_W	src/TEXTSCREEN/txt_main.h	45;"	d
TXT_SCROLLPANE_H	src/TEXTSCREEN/txt_scrollpane.h	23;"	d
TXT_SDL_H	src/TEXTSCREEN/txt_sdl.h	28;"	d
TXT_SDL_SetEventCallback	src/TEXTSCREEN/txt_sdl.c	/^void TXT_SDL_SetEventCallback(TxtSDLEventCallbackFunc callback, void *user_data)$/;"	f
TXT_SEPARATOR_H	src/TEXTSCREEN/txt_separator.h	23;"	d
TXT_SPINCONTROL_FLOAT	src/TEXTSCREEN/txt_spinctrl.h	/^    TXT_SPINCONTROL_FLOAT,$/;"	e	enum:__anon334
TXT_SPINCONTROL_H	src/TEXTSCREEN/txt_spinctrl.h	23;"	d
TXT_SPINCONTROL_INT	src/TEXTSCREEN/txt_spinctrl.h	/^    TXT_SPINCONTROL_INT,$/;"	e	enum:__anon334
TXT_STRUT_H	src/TEXTSCREEN/txt_strut.h	23;"	d
TXT_ScreenHasBlinkingChars	src/TEXTSCREEN/txt_sdl.c	/^int TXT_ScreenHasBlinkingChars(void)$/;"	f
TXT_SetBGColor	src/TEXTSCREEN/txt_label.c	/^void TXT_SetBGColor(txt_label_t *label, txt_color_t color)$/;"	f
TXT_SetButtonLabel	src/TEXTSCREEN/txt_button.c	/^void TXT_SetButtonLabel(txt_button_t *button, char *label)$/;"	f
TXT_SetDesktopTitle	src/TEXTSCREEN/txt_desktop.c	/^void TXT_SetDesktopTitle(char *title)$/;"	f
TXT_SetFGColor	src/TEXTSCREEN/txt_label.c	/^void TXT_SetFGColor(txt_label_t *label, txt_color_t color)$/;"	f
TXT_SetKeyListener	src/TEXTSCREEN/txt_window.c	/^void TXT_SetKeyListener(txt_window_t *window, TxtWindowKeyPress key_listener, $/;"	f
TXT_SetLabel	src/TEXTSCREEN/txt_label.c	/^void TXT_SetLabel(txt_label_t *label, char *value)$/;"	f
TXT_SetMouseListener	src/TEXTSCREEN/txt_window.c	/^void TXT_SetMouseListener(txt_window_t *window, $/;"	f
TXT_SetRadioButtonLabel	src/TEXTSCREEN/txt_radiobutton.c	/^void TXT_SetRadioButtonLabel(txt_radiobutton_t *radiobutton, char *value)$/;"	f
TXT_SetWindowAction	src/TEXTSCREEN/txt_window.c	/^void TXT_SetWindowAction(txt_window_t *window,$/;"	f
TXT_SetWindowPosition	src/TEXTSCREEN/txt_window.c	/^void TXT_SetWindowPosition(txt_window_t *window,$/;"	f
TXT_SetWindowTitle	src/TEXTSCREEN/txt_sdl.c	/^void TXT_SetWindowTitle(char *title)$/;"	f
TXT_Shutdown	src/TEXTSCREEN/txt_sdl.c	/^void TXT_Shutdown(void)$/;"	f
TXT_Sleep	src/TEXTSCREEN/txt_sdl.c	/^void TXT_Sleep(int timeout)$/;"	f
TXT_TABLE_H	src/TEXTSCREEN/txt_table.h	23;"	d
TXT_UNCAST_ARG	src/TEXTSCREEN/examples/calculator.c	/^void InsertNumber(TXT_UNCAST_ARG(button), TXT_UNCAST_ARG(value))$/;"	f
TXT_UNCAST_ARG	src/TEXTSCREEN/examples/calculator.c	/^void Operator(TXT_UNCAST_ARG(button), TXT_UNCAST_ARG(op))$/;"	f
TXT_UNCAST_ARG	src/TEXTSCREEN/examples/guitest.c	/^void ClosePwnBox(TXT_UNCAST_ARG(widget), TXT_UNCAST_ARG(window))$/;"	f
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_button.c	/^static void TXT_ButtonDestructor(TXT_UNCAST_ARG(button))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_button.c	/^static void TXT_ButtonSizeCalc(TXT_UNCAST_ARG(button))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_checkbox.c	/^static void TXT_CheckBoxDestructor(TXT_UNCAST_ARG(checkbox))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_checkbox.c	/^static void TXT_CheckBoxSizeCalc(TXT_UNCAST_ARG(checkbox))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_dropdown.c	/^                             TXT_UNCAST_ARG(callback_data))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_dropdown.c	/^static void ItemSelected(TXT_UNCAST_ARG(button), TXT_UNCAST_ARG(callback_data))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_dropdown.c	/^static void TXT_DropdownListDestructor(TXT_UNCAST_ARG(list))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_dropdown.c	/^static void TXT_DropdownListSizeCalc(TXT_UNCAST_ARG(list))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_inputbox.c	/^static void TXT_InputBoxDestructor(TXT_UNCAST_ARG(inputbox))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_inputbox.c	/^static void TXT_InputBoxSizeCalc(TXT_UNCAST_ARG(inputbox))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_label.c	/^static void TXT_LabelDestructor(TXT_UNCAST_ARG(label))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_label.c	/^static void TXT_LabelSizeCalc(TXT_UNCAST_ARG(label))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_radiobutton.c	/^static void TXT_RadioButtonDestructor(TXT_UNCAST_ARG(radiobutton))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_radiobutton.c	/^static void TXT_RadioButtonSizeCalc(TXT_UNCAST_ARG(radiobutton))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_scrollpane.c	/^static void TXT_ScrollPaneDestructor(TXT_UNCAST_ARG(scrollpane))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_scrollpane.c	/^static void TXT_ScrollPaneLayout(TXT_UNCAST_ARG(scrollpane))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_scrollpane.c	/^static void TXT_ScrollPaneSizeCalc(TXT_UNCAST_ARG(scrollpane))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_separator.c	/^static void TXT_SeparatorDestructor(TXT_UNCAST_ARG(separator))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_separator.c	/^static void TXT_SeparatorSizeCalc(TXT_UNCAST_ARG(separator))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_spinctrl.c	/^static void TXT_SpinControlDestructor(TXT_UNCAST_ARG(spincontrol))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_spinctrl.c	/^static void TXT_SpinControlSizeCalc(TXT_UNCAST_ARG(spincontrol))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_strut.c	/^static void TXT_StrutDestructor(TXT_UNCAST_ARG(strut))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_strut.c	/^static void TXT_StrutSizeCalc(TXT_UNCAST_ARG(strut))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_table.c	/^int TXT_SelectWidget(TXT_UNCAST_ARG(table), TXT_UNCAST_ARG(widget))$/;"	f
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_table.c	/^static void TXT_CalcTableSize(TXT_UNCAST_ARG(table))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_table.c	/^static void TXT_TableDestructor(TXT_UNCAST_ARG(table))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_table.c	/^static void TXT_TableLayout(TXT_UNCAST_ARG(table))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_table.c	/^txt_widget_t *TXT_GetSelectedWidget(TXT_UNCAST_ARG(table))$/;"	f
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_table.c	/^void TXT_AddWidget(TXT_UNCAST_ARG(table), TXT_UNCAST_ARG(widget))$/;"	f
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_table.c	/^void TXT_ClearTable(TXT_UNCAST_ARG(table))$/;"	f
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_widget.c	/^void TXT_CalcWidgetSize(TXT_UNCAST_ARG(widget))$/;"	f
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_widget.c	/^void TXT_DestroyWidget(TXT_UNCAST_ARG(widget))$/;"	f
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_widget.c	/^void TXT_LayoutWidget(TXT_UNCAST_ARG(widget))$/;"	f
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_widget.h	34;"	d
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_widget.h	39;"	d
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_window_action.c	/^static void TXT_WindowActionDestructor(TXT_UNCAST_ARG(action))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_window_action.c	/^static void TXT_WindowActionSizeCalc(TXT_UNCAST_ARG(action))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_window_action.c	/^static void WindowCloseCallback(TXT_UNCAST_ARG(widget), TXT_UNCAST_ARG(window))$/;"	f	file:
TXT_UNCAST_ARG	src/TEXTSCREEN/txt_window_action.c	/^static void WindowSelectCallback(TXT_UNCAST_ARG(widget), TXT_UNCAST_ARG(window))$/;"	f	file:
TXT_UNCAST_ARG_NAME	src/TEXTSCREEN/txt_widget.h	33;"	d
TXT_UnrefCallbackTable	src/TEXTSCREEN/txt_widget.c	/^void TXT_UnrefCallbackTable(txt_callback_table_t *table)$/;"	f
TXT_UpdateScreen	src/TEXTSCREEN/txt_sdl.c	/^void TXT_UpdateScreen(void)$/;"	f
TXT_UpdateScreenArea	src/TEXTSCREEN/txt_sdl.c	/^void TXT_UpdateScreenArea(int x, int y, int w, int h)$/;"	f
TXT_VERT_BOTTOM	src/TEXTSCREEN/txt_widget.h	/^    TXT_VERT_BOTTOM,$/;"	e	enum:__anon329
TXT_VERT_CENTER	src/TEXTSCREEN/txt_widget.h	/^    TXT_VERT_CENTER,$/;"	e	enum:__anon329
TXT_VERT_TOP	src/TEXTSCREEN/txt_widget.h	/^    TXT_VERT_TOP,$/;"	e	enum:__anon329
TXT_WIDGET_H	src/TEXTSCREEN/txt_widget.h	23;"	d
TXT_WINDOW_ACTION_H	src/TEXTSCREEN/txt_window_action.h	23;"	d
TXT_WINDOW_H	src/TEXTSCREEN/txt_window.h	23;"	d
TXT_WindowKeyPress	src/TEXTSCREEN/txt_window.c	/^void TXT_WindowKeyPress(txt_window_t *window, int c)$/;"	f
TYPE_MARKER_READING_ERROR	src/cmp.c	/^  TYPE_MARKER_READING_ERROR,$/;"	e	enum:__anon7	file:
TYPE_MARKER_WRITING_ERROR	src/cmp.c	/^  TYPE_MARKER_WRITING_ERROR,$/;"	e	enum:__anon7	file:
T_FireFlicker	src/p_lights.c	/^void T_FireFlicker (fireflicker_t* flick)$/;"	f
T_Friction	src/p_spec.c	/^void T_Friction(friction_t *f)$/;"	f
T_Glow	src/p_lights.c	/^void T_Glow(glow_t* g)$/;"	f
T_LightFlash	src/p_lights.c	/^void T_LightFlash (lightflash_t* flash)$/;"	f
T_MAPMusic	src/s_advsound.c	/^void T_MAPMusic(void)$/;"	f
T_MoveCeiling	src/p_ceilng.c	/^void T_MoveCeiling (ceiling_t* ceiling)$/;"	f
T_MoveElevator	src/p_floor.c	/^void T_MoveElevator(elevator_t* elevator)$/;"	f
T_MoveFloor	src/p_floor.c	/^void T_MoveFloor(floormove_t* floor)$/;"	f
T_MovePlane	src/p_floor.c	/^result_e T_MovePlane$/;"	f
T_PlatRaise	src/p_plats.c	/^void T_PlatRaise(plat_t* plat)$/;"	f
T_Pusher	src/p_spec.c	/^void T_Pusher(pusher_t *p)$/;"	f
T_Scroll	src/p_spec.c	/^void T_Scroll(scroll_t *s)$/;"	f
T_ShowMessage	src/hu_stuff.c	/^void T_ShowMessage(message_thinker_t* message) {$/;"	f
T_StrobeFlash	src/p_lights.c	/^void T_StrobeFlash (strobe_t*   flash)$/;"	f
T_VerticalDoor	src/p_doors.c	/^void T_VerticalDoor (vldoor_t* door)$/;"	f
TableRows	src/TEXTSCREEN/txt_table.c	/^static int TableRows(txt_table_t *table)$/;"	f	file:
TerminateNumber	src/PCRELIB/pcrecpp.cc	/^static const char* TerminateNumber(char* buf, const char* str, int n) {$/;"	f	namespace:pcrecpp
TestConsume	src/PCRELIB/pcrecpp_unittest.cc	/^static void TestConsume() {$/;"	f	file:
TestExtract	src/PCRELIB/pcrecpp_unittest.cc	/^static void TestExtract() {$/;"	f	file:
TestFindAndConsume	src/PCRELIB/pcrecpp_unittest.cc	/^static void TestFindAndConsume() {$/;"	f	file:
TestMatchNumberPeculiarity	src/PCRELIB/pcrecpp_unittest.cc	/^static void TestMatchNumberPeculiarity() {$/;"	f	file:
TestOneOption	src/PCRELIB/pcrecpp_unittest.cc	/^static void TestOneOption($/;"	f	file:
TestOptions	src/PCRELIB/pcrecpp_unittest.cc	/^static void TestOptions() {$/;"	f	file:
TestRecursion	src/PCRELIB/pcrecpp_unittest.cc	/^static void TestRecursion() {$/;"	f	file:
TestReplace	src/PCRELIB/pcrecpp_unittest.cc	/^static void TestReplace() {$/;"	f	file:
TestScanner	src/PCRELIB/pcre_scanner_unittest.cc	/^static void TestScanner() {$/;"	f	file:
Test_CASELESS	src/PCRELIB/pcrecpp_unittest.cc	/^static void Test_CASELESS() {$/;"	f	file:
Test_DOLLAR_ENDONLY	src/PCRELIB/pcrecpp_unittest.cc	/^static void Test_DOLLAR_ENDONLY() {$/;"	f	file:
Test_DOTALL	src/PCRELIB/pcrecpp_unittest.cc	/^static void Test_DOTALL() {$/;"	f	file:
Test_EXTENDED	src/PCRELIB/pcrecpp_unittest.cc	/^static void Test_EXTENDED() {$/;"	f	file:
Test_EXTRA	src/PCRELIB/pcrecpp_unittest.cc	/^static void Test_EXTRA() {$/;"	f	file:
Test_MULTILINE	src/PCRELIB/pcrecpp_unittest.cc	/^static void Test_MULTILINE() {$/;"	f	file:
Test_NO_AUTO_CAPTURE	src/PCRELIB/pcrecpp_unittest.cc	/^static void Test_NO_AUTO_CAPTURE() {$/;"	f	file:
Test_UNGREEDY	src/PCRELIB/pcrecpp_unittest.cc	/^static void Test_UNGREEDY() {$/;"	f	file:
Test_all_options	src/PCRELIB/pcrecpp_unittest.cc	/^static void Test_all_options() {$/;"	f	file:
TicToRaw	src/protocol.h	/^inline static void TicToRaw(void* dst, const ticcmd_t* src)$/;"	f
Times	src/e6y.h	/^	unsigned int Times[3*2];$/;"	m	struct:__anon66
Timing1	src/PCRELIB/pcrecpp_unittest.cc	/^static void Timing1(int num_iters) {$/;"	f	file:
Timing2	src/PCRELIB/pcrecpp_unittest.cc	/^static void Timing2(int num_iters) {$/;"	f	file:
Timing3	src/PCRELIB/pcrecpp_unittest.cc	/^static void Timing3(int num_iters) {$/;"	f	file:
TracerAddDeathmatchStart	src/hu_tracers.c	/^void TracerAddDeathmatchStart(int num, int index)$/;"	f
TracerAddPlayerStart	src/hu_tracers.c	/^void TracerAddPlayerStart(int num, int index)$/;"	f
TracerApply	src/hu_tracers.c	/^void TracerApply(tracertype_t index)$/;"	f
TracerClearStarts	src/hu_tracers.c	/^void TracerClearStarts(void)$/;"	f
TracerGetDeathmatchStart	src/hu_tracers.c	/^int TracerGetDeathmatchStart(int index)$/;"	f
TracerGetPlayerStart	src/hu_tracers.c	/^int TracerGetPlayerStart(int index)$/;"	f
TrackTimerCallback	src/MUSIC/oplplayer.c	/^static void TrackTimerCallback(void *arg)$/;"	f	file:
TranslateKey	src/TEXTSCREEN/txt_sdl.c	/^static int TranslateKey(SDL_keysym *sym)$/;"	f	file:
TremoloTable	src/MUSIC/dbopl.c	/^static Bit8u TremoloTable[ TREMOLO_TABLE ];$/;"	v	file:
TriggerType	src/p_spec.h	92;"	d
TriggerTypeShift	src/p_spec.h	93;"	d
TryMatch	src/PCRELIB/pcrecpp.cc	/^int RE::TryMatch(const StringPiece& text,$/;"	f	class:pcrecpp::RE
TxtMousePressFunc	src/TEXTSCREEN/txt_widget.h	/^typedef void (*TxtMousePressFunc)(TXT_UNCAST_ARG(widget), int x, int y, int b);$/;"	t
TxtSDLEventCallbackFunc	src/TEXTSCREEN/txt_sdl.h	/^typedef int (*TxtSDLEventCallbackFunc)(SDL_Event *event, void *user_data);$/;"	t
TxtWidgetDestroy	src/TEXTSCREEN/txt_widget.h	/^typedef void (*TxtWidgetDestroy)(TXT_UNCAST_ARG(widget));$/;"	t
TxtWidgetDrawer	src/TEXTSCREEN/txt_widget.h	/^typedef void (*TxtWidgetDrawer)(TXT_UNCAST_ARG(widget), int selected);$/;"	t
TxtWidgetKeyPress	src/TEXTSCREEN/txt_widget.h	/^typedef int (*TxtWidgetKeyPress)(TXT_UNCAST_ARG(widget), int key);$/;"	t
TxtWidgetLayoutFunc	src/TEXTSCREEN/txt_widget.h	/^typedef void (*TxtWidgetLayoutFunc)(TXT_UNCAST_ARG(widget));$/;"	t
TxtWidgetSignalFunc	src/TEXTSCREEN/txt_widget.h	/^typedef void (*TxtWidgetSignalFunc)(TXT_UNCAST_ARG(widget), void *user_data);$/;"	t
TxtWidgetSizeCalc	src/TEXTSCREEN/txt_widget.h	/^typedef void (*TxtWidgetSizeCalc)(TXT_UNCAST_ARG(widget));$/;"	t
TxtWindowKeyPress	src/TEXTSCREEN/txt_window.h	/^typedef int (*TxtWindowKeyPress)(txt_window_t *window, int key, void *user_data);$/;"	t
TxtWindowMousePress	src/TEXTSCREEN/txt_window.h	/^typedef int (*TxtWindowMousePress)(txt_window_t *window, $/;"	t
U16_MARKER	src/cmp.c	/^  U16_MARKER             = 0xCD,$/;"	e	enum:__anon5	file:
U32_MARKER	src/cmp.c	/^  U32_MARKER             = 0xCE,$/;"	e	enum:__anon5	file:
U64_MARKER	src/cmp.c	/^  U64_MARKER             = 0xCF,$/;"	e	enum:__anon5	file:
U8_MARKER	src/cmp.c	/^  U8_MARKER              = 0xCC,$/;"	e	enum:__anon5	file:
UDP_CHANNEL	src/i_network.h	36;"	d
UDP_CHANNEL	src/i_network.h	39;"	d
UDP_PACKET	src/i_network.h	34;"	d
UDP_SOCKET	src/i_network.h	33;"	d
UKFileWatcherAccessRevocationNotification	src/MAC/UKFileWatcher.h	79;"	d
UKFileWatcherAttributeChangeNotification	src/MAC/UKFileWatcher.h	76;"	d
UKFileWatcherDeleteNotification	src/MAC/UKFileWatcher.h	75;"	d
UKFileWatcherLinkCountChangeNotification	src/MAC/UKFileWatcher.h	78;"	d
UKFileWatcherRenameNotification	src/MAC/UKFileWatcher.h	73;"	d
UKFileWatcherSizeIncreaseNotification	src/MAC/UKFileWatcher.h	77;"	d
UKFileWatcherWriteNotification	src/MAC/UKFileWatcher.h	74;"	d
UKKQUEUE_BACKWARDS_COMPATIBLE	src/MAC/UKKQueue.h	53;"	d
UKKQueueFileAccessRevocationNotification	src/MAC/UKKQueue.h	74;"	d
UKKQueueFileAttributesChangedNotification	src/MAC/UKKQueue.h	71;"	d
UKKQueueFileDeletedNotification	src/MAC/UKKQueue.h	70;"	d
UKKQueueFileLinkCountChangedNotification	src/MAC/UKKQueue.h	73;"	d
UKKQueueFileRenamedNotification	src/MAC/UKKQueue.h	68;"	d
UKKQueueFileSizeIncreasedNotification	src/MAC/UKKQueue.h	72;"	d
UKKQueueFileWrittenToNotification	src/MAC/UKKQueue.h	69;"	d
UKKQueueNotifyAboutAccessRevocation	src/MAC/UKKQueue.h	63;"	d
UKKQueueNotifyAboutAttributeChange	src/MAC/UKKQueue.h	60;"	d
UKKQueueNotifyAboutDelete	src/MAC/UKKQueue.h	59;"	d
UKKQueueNotifyAboutLinkCountChanged	src/MAC/UKKQueue.h	62;"	d
UKKQueueNotifyAboutRename	src/MAC/UKKQueue.h	57;"	d
UKKQueueNotifyAboutSizeIncrease	src/MAC/UKKQueue.h	61;"	d
UKKQueueNotifyAboutWrite	src/MAC/UKKQueue.h	58;"	d
UL	src/m_misc.h	101;"	d
UNANCHORED	src/PCRELIB/pcrecpp.h	/^    UNANCHORED,         \/\/ No anchoring$/;"	e	enum:pcrecpp::RE::Anchor
UNICODE	src/z_zone.h	50;"	d
UPDATE_MUSIC	src/MAC/config.h	137;"	d
URUL	src/gl_main.c	1549;"	d	file:
USERANGE	src/p_map.h	30;"	d
USE_BLOCK_MEMORY_ALLOCATOR	src/p_map.c	2080;"	d	file:
USE_FBO_TECHNIQUE	src/MAC/config.h	84;"	d
USE_GLU_IMAGESCALE	src/MAC/config.h	93;"	d
USE_GLU_IMAGESCALE	src/gl_opengl.h	43;"	d
USE_GLU_MIPMAP	src/MAC/config.h	94;"	d
USE_GLU_MIPMAP	src/gl_opengl.h	41;"	d
USE_GLU_TESS	src/MAC/config.h	92;"	d
USE_GLU_TESS	src/gl_opengl.h	42;"	d
USE_RANGE_CODER	src/n_net.c	47;"	d	file:
USE_RWOPS	src/SDL/i_emusic.c	47;"	d	file:
USE_RWOPS	src/SDL/i_music.c	45;"	d	file:
USE_RWOPS	src/SDL/i_sound.c	39;"	d	file:
USE_SDL_NET	src/MAC/config.h	78;"	d
USE_SHADERS	src/MAC/config.h	87;"	d
USE_SHADERS	src/gl_opengl.h	34;"	d
USE_VBO	src/gl_opengl.h	33;"	d
USE_VERTEX_ARRAYS	src/gl_opengl.h	32;"	d
USPTR	src/PCRELIB/pcre_internal.h	159;"	d
USPTR	src/PCRELIB/pcre_internal.h	162;"	d
UTF8	src/PCRELIB/pcrecpp.h	/^static inline RE_Options UTF8() {$/;"	f	namespace:pcrecpp
UWORD32	src/md5.h	52;"	d
UWORD32	src/md5.h	55;"	d
UpdateCharacter	src/TEXTSCREEN/txt_sdl.c	/^static inline void UpdateCharacter(int x, int y)$/;"	f	file:
UpdateFocus	src/SDL/i_video.c	/^static void UpdateFocus(void)$/;"	f	file:
UpdateGrab	src/SDL/i_video.c	/^void UpdateGrab(void) {$/;"	f
UpdateInputBox	src/TEXTSCREEN/examples/calculator.c	/^void UpdateInputBox(void)$/;"	f
UpdatePixels	src/gl_soft2gl.c	/^void UpdatePixels(unsigned char* dst)$/;"	f
UpdateVoiceFrequency	src/MUSIC/oplplayer.c	/^static void UpdateVoiceFrequency(opl_voice_t *voice)$/;"	f	file:
VALID_X	src/TEXTSCREEN/txt_gui.c	55;"	d	file:
VALID_Y	src/TEXTSCREEN/txt_gui.c	56;"	d	file:
VDOORSPEED	src/p_spec.h	45;"	d
VDOORWAIT	src/p_spec.h	46;"	d
VERBOSE_TEST	src/PCRELIB/pcrecpp_unittest.cc	/^static bool VERBOSE_TEST  = false;$/;"	v	file:
VERIFYBOXXORG	src/m_menu.c	2064;"	d	file:
VERIFYBOXYORG	src/m_menu.c	2065;"	d	file:
VERSION	src/PCRELIB/pcregrep.c	82;"	d	file:
VERSIONSIZE	src/g_save.c	51;"	d	file:
VERSION_H___	src/version.h	25;"	d
VID_COLORWEIGHTBITS	src/v_video.h	145;"	d
VID_COLORWEIGHTMASK	src/v_video.h	144;"	d
VID_MODE32	src/v_video.h	/^  VID_MODE32,$/;"	e	enum:__anon343
VID_MODEGL	src/v_video.h	/^  VID_MODEGL,$/;"	e	enum:__anon343
VID_MODEMAX	src/v_video.h	/^  VID_MODEMAX$/;"	e	enum:__anon343
VID_NUMCOLORWEIGHTS	src/v_video.h	143;"	d
VID_PAL15	src/v_video.h	154;"	d
VID_PAL16	src/v_video.h	155;"	d
VID_PAL32	src/v_video.h	156;"	d
VIEWHEIGHT	src/p_mobj.h	371;"	d
VORBISPLAYER_H__	src/MUSIC/vorbisplayer.h	25;"	d
VPT_ALIGN_BOTTOM	src/doomtype.h	/^  VPT_ALIGN_BOTTOM       = 6,$/;"	e	enum:patch_translation_e
VPT_ALIGN_LEFT	src/doomtype.h	/^  VPT_ALIGN_LEFT         = 1,$/;"	e	enum:patch_translation_e
VPT_ALIGN_LEFT_BOTTOM	src/doomtype.h	/^  VPT_ALIGN_LEFT_BOTTOM  = 8,$/;"	e	enum:patch_translation_e
VPT_ALIGN_LEFT_TOP	src/doomtype.h	/^  VPT_ALIGN_LEFT_TOP     = 4,$/;"	e	enum:patch_translation_e
VPT_ALIGN_MASK	src/doomtype.h	127;"	d
VPT_ALIGN_MAX	src/doomtype.h	/^  VPT_ALIGN_MAX          = 10,$/;"	e	enum:patch_translation_e
VPT_ALIGN_RIGHT	src/doomtype.h	/^  VPT_ALIGN_RIGHT        = 2,$/;"	e	enum:patch_translation_e
VPT_ALIGN_RIGHT_BOTTOM	src/doomtype.h	/^  VPT_ALIGN_RIGHT_BOTTOM = 9,$/;"	e	enum:patch_translation_e
VPT_ALIGN_RIGHT_TOP	src/doomtype.h	/^  VPT_ALIGN_RIGHT_TOP    = 5,$/;"	e	enum:patch_translation_e
VPT_ALIGN_TOP	src/doomtype.h	/^  VPT_ALIGN_TOP          = 3,$/;"	e	enum:patch_translation_e
VPT_ALIGN_WIDE	src/doomtype.h	/^  VPT_ALIGN_WIDE         = 7,$/;"	e	enum:patch_translation_e
VPT_FLIP	src/doomtype.h	/^  VPT_FLIP    = 256, \/\/ Flip image horizontally$/;"	e	enum:patch_translation_e
VPT_NONE	src/doomtype.h	/^  VPT_NONE    = 128, \/\/ Normal$/;"	e	enum:patch_translation_e
VPT_NOOFFSET	src/doomtype.h	/^  VPT_NOOFFSET = 1024,$/;"	e	enum:patch_translation_e
VPT_STRETCH	src/doomtype.h	/^  VPT_STRETCH            = 16, \/\/ Stretch to compensate for high-res$/;"	e	enum:patch_translation_e
VPT_STRETCH_MASK	src/doomtype.h	128;"	d
VPT_TRANS	src/doomtype.h	/^  VPT_TRANS   = 512, \/\/ Translate image via a translation table$/;"	e	enum:patch_translation_e
V_AllocScreen	src/v_video.c	/^void V_AllocScreen(screeninfo_t *scrn) {$/;"	f
V_AllocScreens	src/v_video.c	/^void V_AllocScreens(void) {$/;"	f
V_BestColor	src/v_video.c	/^int V_BestColor(const unsigned char *palette, int r, int g, int b)$/;"	f
V_ChangeScreenResolution	src/v_video.c	/^void V_ChangeScreenResolution(void) {$/;"	f
V_CopyRect	src/v_video.c	/^V_CopyRect_f V_CopyRect = NULL_CopyRect;$/;"	v
V_CopyRect_f	src/v_video.h	/^typedef void (*V_CopyRect_f)(int srcscrn, int destscrn,$/;"	t
V_DestroyTrueColorPalette	src/v_video.c	/^static void V_DestroyTrueColorPalette(video_mode_t mode) {$/;"	f	file:
V_DestroyUnusedTrueColorPalettes	src/v_video.c	/^void V_DestroyUnusedTrueColorPalettes(void) {$/;"	f
V_DrawBackground	src/v_video.c	/^V_DrawBackground_f V_DrawBackground = NULL_DrawBackground;$/;"	v
V_DrawBackground_f	src/v_video.h	/^typedef void (*V_DrawBackground_f)(const char* flatname, int scrn);$/;"	t
V_DrawLine	src/v_video.c	/^V_DrawLine_f V_DrawLine = NULL_DrawLine;$/;"	v
V_DrawLineWu	src/v_video.c	/^V_DrawLineWu_f V_DrawLineWu = NULL_DrawLineWu;$/;"	v
V_DrawLineWu_f	src/v_video.h	/^typedef void (*V_DrawLineWu_f)(fline_t* fl, int color);$/;"	t
V_DrawLine_f	src/v_video.h	/^typedef void (*V_DrawLine_f)(fline_t* fl, int color);$/;"	t
V_DrawMemPatch	src/v_video.c	/^static void V_DrawMemPatch(int x, int y, int scrn, const rpatch_t *patch,$/;"	f	file:
V_DrawNamePatch	src/v_video.h	215;"	d
V_DrawNamePatchPrecise	src/v_video.h	216;"	d
V_DrawNumPatch	src/v_video.c	/^V_DrawNumPatch_f V_DrawNumPatch = NULL_DrawNumPatch;$/;"	v
V_DrawNumPatchPrecise	src/v_video.c	/^V_DrawNumPatchPrecise_f V_DrawNumPatchPrecise = NULL_DrawNumPatchPrecise;$/;"	v
V_DrawNumPatchPrecise_f	src/v_video.h	/^typedef void (*V_DrawNumPatchPrecise_f)(float x, float y, int scrn,$/;"	t
V_DrawNumPatch_f	src/v_video.h	/^typedef void (*V_DrawNumPatch_f)(int x, int y, int scrn,$/;"	t
V_FillBorder	src/v_video.c	/^void V_FillBorder(int lump, byte color)$/;"	f
V_FillFlat	src/v_video.c	/^V_FillFlat_f V_FillFlat = NULL_FillFlat;$/;"	v
V_FillFlatName	src/v_video.h	229;"	d
V_FillFlat_f	src/v_video.h	/^typedef void (*V_FillFlat_f)(int lump, int scrn, int x, int y, int width, int height, enum patch_translation_e flags);$/;"	t
V_FillPatch	src/v_video.c	/^V_FillPatch_f V_FillPatch = NULL_FillPatch;$/;"	v
V_FillPatchName	src/v_video.h	234;"	d
V_FillPatch_f	src/v_video.h	/^typedef void (*V_FillPatch_f)(int lump, int scrn, int x, int y, int width, int height, enum patch_translation_e flags);$/;"	t
V_FillRect	src/v_video.c	/^V_FillRect_f V_FillRect = NULL_FillRect;$/;"	v
V_FillRect32	src/v_video.c	/^static void V_FillRect32(int scrn, int x, int y, int width, int height, byte colour)$/;"	f	file:
V_FillRect_f	src/v_video.h	/^typedef void (*V_FillRect_f)(int scrn, int x, int y,$/;"	t
V_FreePlaypal	src/v_video.c	/^void V_FreePlaypal(void)$/;"	f
V_FreeScreen	src/v_video.c	/^void V_FreeScreen(screeninfo_t *scrn) {$/;"	f
V_FreeScreens	src/v_video.c	/^void V_FreeScreens(void) {$/;"	f
V_GetMode	src/v_video.c	/^video_mode_t V_GetMode(void) {$/;"	f
V_GetModePixelDepth	src/v_video.c	/^int V_GetModePixelDepth(video_mode_t mode) {$/;"	f
V_GetNumPixelBits	src/v_video.c	/^int V_GetNumPixelBits(void) {$/;"	f
V_GetPixelDepth	src/v_video.c	/^int V_GetPixelDepth(void) {$/;"	f
V_GetPlaypal	src/v_video.c	/^const unsigned char* V_GetPlaypal(void)$/;"	f
V_GetWideRect	src/v_video.c	/^void V_GetWideRect(int *x, int *y, int *w, int *h, enum patch_translation_e flags)$/;"	f
V_Init	src/v_video.c	/^void V_Init (void) {$/;"	f
V_InitColorTranslation	src/v_video.c	/^void V_InitColorTranslation(void)$/;"	f
V_InitFlexTranTable	src/v_video.c	/^void V_InitFlexTranTable(void)$/;"	f
V_InitMode	src/v_video.c	/^void V_InitMode(video_mode_t mode) {$/;"	f
V_NamePatchHeight	src/v_video.h	224;"	d
V_NamePatchWidth	src/v_video.h	223;"	d
V_Palette15	src/v_video.c	/^unsigned short *V_Palette15 = NULL;$/;"	v
V_Palette16	src/v_video.c	/^unsigned short *V_Palette16 = NULL;$/;"	v
V_Palette32	src/v_video.c	/^unsigned int *V_Palette32 = NULL;$/;"	v
V_PlotPixel	src/v_video.c	/^V_PlotPixel_f V_PlotPixel = NULL_PlotPixel;$/;"	v
V_PlotPixel32	src/v_video.c	/^static void V_PlotPixel32(int scrn, int x, int y, byte color) {$/;"	f	file:
V_PlotPixelGL	src/v_video.c	/^static void V_PlotPixelGL(int scrn, int x, int y, byte color) {$/;"	f	file:
V_PlotPixelWu	src/v_video.c	/^V_PlotPixelWu_f V_PlotPixelWu = NULL_PlotPixelWu;$/;"	v
V_PlotPixelWu32	src/v_video.c	/^static void V_PlotPixelWu32(int scrn, int x, int y, byte color, int weight)$/;"	f	file:
V_PlotPixelWuGL	src/v_video.c	/^static void V_PlotPixelWuGL(int scrn, int x, int y, byte color, int weight) {$/;"	f	file:
V_PlotPixelWu_f	src/v_video.h	/^typedef void (*V_PlotPixelWu_f)(int scrn, int x, int y, byte color, int weight);$/;"	t
V_PlotPixel_f	src/v_video.h	/^typedef void (*V_PlotPixel_f)(int,int,int,byte);$/;"	t
V_SetPalette	src/v_video.c	/^void V_SetPalette(int pal)$/;"	f
V_ToggleFullscreen	src/v_video.c	/^void V_ToggleFullscreen(void) {$/;"	f
V_UpdateTrueColorPalette	src/v_video.c	/^void V_UpdateTrueColorPalette(video_mode_t mode) {$/;"	f
V_VIDEO_H__	src/v_video.h	25;"	d
ValidSelection	src/TEXTSCREEN/txt_dropdown.c	/^static int ValidSelection(txt_dropdown_list_t *list)$/;"	f	file:
VibratoTable	src/MUSIC/dbopl.c	/^static const Bit8s VibratoTable[ 8 ] = {$/;"	v	file:
VoiceKeyOff	src/MUSIC/oplplayer.c	/^static void VoiceKeyOff(opl_voice_t *voice)$/;"	f	file:
VoiceKeyOn	src/MUSIC/oplplayer.c	/^static void VoiceKeyOn(opl_channel_data_t *channel,$/;"	f	file:
VolumeHandler	src/MUSIC/dbopl.h	/^typedef Bits (*VolumeHandler)(Operator *self);$/;"	t
VolumeHandlerTable	src/MUSIC/dbopl.c	/^static const VolumeHandler VolumeHandlerTable[5] = {$/;"	v	file:
WAVE_BITS	src/MUSIC/dbopl.c	75;"	d	file:
WAVE_BITS	src/MUSIC/dbopl.c	80;"	d	file:
WAVE_HANDLER	src/MUSIC/dbopl.h	30;"	d
WAVE_MASK	src/MUSIC/dbopl.c	83;"	d	file:
WAVE_SH	src/MUSIC/dbopl.c	82;"	d	file:
WAVE_TABLELOG	src/MUSIC/dbopl.h	32;"	d
WAVE_TABLEMUL	src/MUSIC/dbopl.h	34;"	d
WEAPONBOTTOM	src/p_pspr.c	45;"	d	file:
WEAPONTOP	src/p_pspr.c	46;"	d	file:
WIDE_SCREENHEIGHT	src/doomdef.c	/^int WIDE_SCREENHEIGHT = 200;$/;"	v
WIDE_SCREENWIDTH	src/doomdef.c	/^int WIDE_SCREENWIDTH = 320;$/;"	v
WIN32_GetHWND	src/e6y.c	/^HWND WIN32_GetHWND(void)$/;"	f
WIN32_LEAN_AND_MEAN	src/MUSIC/vorbisplayer.c	217;"	d	file:
WIN32_LEAN_AND_MEAN	src/PCRELIB/pcregrep.c	333;"	d	file:
WIN32_LEAN_AND_MEAN	src/SDL/SDL_win32_main.c	27;"	d	file:
WIN32_LEAN_AND_MEAN	src/SDL/i_main.c	27;"	d	file:
WIN32_LEAN_AND_MEAN	src/i_capture.c	131;"	d	file:
WIN32_LEAN_AND_MEAN	src/i_system.h	28;"	d
WIN32_LEAN_AND_MEAN	src/md5.h	50;"	d
WIN32_LEAN_AND_MEAN	src/z_zone.h	49;"	d
WINError	src/e6y.c	/^const char* WINError(void)$/;"	f
WI_Drawer	src/wi_stuff.c	/^void WI_Drawer (void)$/;"	f
WI_End	src/wi_stuff.c	/^void WI_End(void)$/;"	f
WI_Responder	src/wi_stuff.c	/^dboolean WI_Responder(event_t* ev)$/;"	f
WI_SPACINGY	src/wi_stuff.c	71;"	d	file:
WI_STUFF_H__	src/wi_stuff.h	25;"	d
WI_Start	src/wi_stuff.c	/^void WI_Start(wbstartstruct_t* wbstartstruct)$/;"	f
WI_TITLEY	src/wi_stuff.c	70;"	d	file:
WI_Ticker	src/wi_stuff.c	/^void WI_Ticker(void) {$/;"	f
WI_checkForAccelerate	src/wi_stuff.c	/^void WI_checkForAccelerate(void) {$/;"	f
WI_drawAnimatedBack	src/wi_stuff.c	/^void WI_drawAnimatedBack(void)$/;"	f
WI_drawDeathmatchStats	src/wi_stuff.c	/^void WI_drawDeathmatchStats(void)$/;"	f
WI_drawEL	src/wi_stuff.c	/^void WI_drawEL(void)$/;"	f
WI_drawLF	src/wi_stuff.c	/^void WI_drawLF(void)$/;"	f
WI_drawNetgameStats	src/wi_stuff.c	/^void WI_drawNetgameStats(void)$/;"	f
WI_drawNoState	src/wi_stuff.c	/^void WI_drawNoState(void)$/;"	f
WI_drawNum	src/wi_stuff.c	/^static int WI_drawNum (int x, int y, int n, int digits)$/;"	f	file:
WI_drawOnLnode	src/wi_stuff.c	/^WI_drawOnLnode  \/\/ draw stuff at a location by episode\/map#$/;"	f
WI_drawPercent	src/wi_stuff.c	/^static void WI_drawPercent(int x, int y, int p)$/;"	f	file:
WI_drawShowNextLoc	src/wi_stuff.c	/^void WI_drawShowNextLoc(void)$/;"	f
WI_drawStats	src/wi_stuff.c	/^void WI_drawStats(void)$/;"	f
WI_drawTime	src/wi_stuff.c	/^static void WI_drawTime(int x, int y, int t)$/;"	f	file:
WI_drawTimeStats	src/wi_stuff.c	/^static void WI_drawTimeStats(int cnt_time, int cnt_total_time, int cnt_par)$/;"	f	file:
WI_endDeathmatchStats	src/wi_stuff.c	/^void WI_endDeathmatchStats(void)$/;"	f
WI_endNetgameStats	src/wi_stuff.c	/^static void WI_endNetgameStats(void)$/;"	f	file:
WI_endStats	src/wi_stuff.c	381;"	d	file:
WI_fragSum	src/wi_stuff.c	/^int WI_fragSum(int playernum)$/;"	f
WI_initAnimatedBack	src/wi_stuff.c	/^void WI_initAnimatedBack(void)$/;"	f
WI_initDeathmatchStats	src/wi_stuff.c	/^void WI_initDeathmatchStats(void)$/;"	f
WI_initNetgameStats	src/wi_stuff.c	/^void WI_initNetgameStats(void)$/;"	f
WI_initNoState	src/wi_stuff.c	/^void WI_initNoState(void)$/;"	f
WI_initShowNextLoc	src/wi_stuff.c	/^void WI_initShowNextLoc(void)$/;"	f
WI_initStats	src/wi_stuff.c	/^void WI_initStats(void)$/;"	f
WI_initVariables	src/wi_stuff.c	/^void WI_initVariables(wbstartstruct_t* wbstartstruct)$/;"	f
WI_levelNameLump	src/wi_stuff.c	/^void WI_levelNameLump(int epis, int map, char* buf)$/;"	f
WI_loadData	src/wi_stuff.c	/^void WI_loadData(void)$/;"	f
WI_slamBackground	src/wi_stuff.c	/^static void WI_slamBackground(void)$/;"	f	file:
WI_updateAnimatedBack	src/wi_stuff.c	/^void WI_updateAnimatedBack(void)$/;"	f
WI_updateDeathmatchStats	src/wi_stuff.c	/^void WI_updateDeathmatchStats(void)$/;"	f
WI_updateNetgameStats	src/wi_stuff.c	/^void WI_updateNetgameStats(void)$/;"	f
WI_updateNoState	src/wi_stuff.c	/^void WI_updateNoState(void)$/;"	f
WI_updateShowNextLoc	src/wi_stuff.c	/^void WI_updateShowNextLoc(void)$/;"	f
WI_updateStats	src/wi_stuff.c	/^void WI_updateStats(void)$/;"	f
WORDS_BIGENDIAN	src/MAC/config.h	125;"	d
WP_X	src/m_menu.c	2458;"	d	file:
WP_Y	src/m_menu.c	2459;"	d	file:
WRAPANGLE	src/gl_sky.c	483;"	d	file:
WRAP_V_DrawLine	src/v_video.c	/^static void WRAP_V_DrawLine(fline_t* fl, int color)$/;"	f	file:
WRAP_V_DrawLineWu	src/v_video.c	/^void WRAP_V_DrawLineWu(fline_t *fl, int color)$/;"	f
WRAP_gld_CopyRect	src/v_video.c	/^static void WRAP_gld_CopyRect(int srcscrn, int destscrn, int x, int y, int width, int height, enum patch_translation_e flags)$/;"	f	file:
WRAP_gld_DrawBackground	src/v_video.c	/^static void WRAP_gld_DrawBackground(const char *flatname, int n)$/;"	f	file:
WRAP_gld_DrawLine	src/v_video.c	/^static void WRAP_gld_DrawLine(fline_t* fl, int color)$/;"	f	file:
WRAP_gld_DrawNumPatch	src/v_video.c	/^static void WRAP_gld_DrawNumPatch(int x, int y, int scrn, int lump, int cm, enum patch_translation_e flags)$/;"	f	file:
WRAP_gld_DrawNumPatchPrecise	src/v_video.c	/^static void WRAP_gld_DrawNumPatchPrecise(float x, float y, int scrn, int lump, int cm, enum patch_translation_e flags)$/;"	f	file:
WRAP_gld_FillFlat	src/v_video.c	/^static void WRAP_gld_FillFlat(int lump, int n, int x, int y, int width, int height, enum patch_translation_e flags)$/;"	f	file:
WRAP_gld_FillPatch	src/v_video.c	/^static void WRAP_gld_FillPatch(int lump, int n, int x, int y, int width, int height, enum patch_translation_e flags)$/;"	f	file:
WRAP_gld_FillRect	src/v_video.c	/^static void WRAP_gld_FillRect(int scrn, int x, int y, int width, int height, byte colour)$/;"	f	file:
WSOP_AMMO	src/p_pspr.h	/^  WSOP_AMMO   = 0x2,$/;"	e	enum:__anon227
WSOP_MAX	src/p_pspr.h	/^  WSOP_MAX    = 0x4,$/;"	e	enum:__anon227
WSOP_NONE	src/p_pspr.h	/^  WSOP_NONE   = 0x0,$/;"	e	enum:__anon227
WSOP_WEAPON	src/p_pspr.h	/^  WSOP_WEAPON = 0x1,$/;"	e	enum:__anon227
W_AddFile	src/w_wad.c	/^static void W_AddFile(size_t wadfile_index) {$/;"	f	file:
W_AddLump	src/r_demo.c	/^void W_AddLump(wadtbl_t *wadtbl, const char *name, const byte* data, size_t size)$/;"	f
W_CacheLumpName	src/w_wad.h	149;"	d
W_CacheLumpNum	src/w_memcache.c	/^const void *W_CacheLumpNum(int lump)$/;"	f
W_CacheLumpNum	src/w_mmap.c	/^const void* W_CacheLumpNum(int lump) {$/;"	f
W_CheckNumForName	src/w_wad.h	/^int     (W_CheckNumForName)(const char *name, int ns)$/;"	f
W_CheckNumForName	src/w_wad.h	133;"	d
W_CheckNumForNameInternal	src/w_wad.c	/^int W_CheckNumForNameInternal(const char *name) {$/;"	f
W_CoalesceMarkedResource	src/w_wad.c	/^static int W_CoalesceMarkedResource(const char *start_marker,$/;"	f	file:
W_DoneCache	src/w_memcache.c	/^void W_DoneCache(void)$/;"	f
W_DoneCache	src/w_mmap.c	/^void W_DoneCache(void) {$/;"	f
W_FindNumFromName	src/w_wad.c	/^int (W_FindNumFromName)(const char *name, int li_namespace, int i) {$/;"	f
W_FindNumFromName	src/w_wad.h	129;"	d
W_FreePWADTable	src/r_demo.c	/^void W_FreePWADTable(wadtbl_t *wadtbl)$/;"	f
W_GetLumpInfoByNum	src/w_wad.c	/^const lumpinfo_t* W_GetLumpInfoByNum(int lump) {$/;"	f
W_GetNumForName	src/w_wad.c	/^int W_GetNumForName(const char* name) {   \/\/ killough -- const added$/;"	f
W_HashLumps	src/w_wad.c	/^void W_HashLumps(void) {$/;"	f
W_Init	src/w_wad.c	/^void W_Init(void) {$/;"	f
W_InitCache	src/w_memcache.c	/^void W_InitCache(void)$/;"	f
W_InitCache	src/w_mmap.c	/^void W_InitCache(void) {$/;"	f
W_InitPWADTable	src/r_demo.c	/^void W_InitPWADTable(wadtbl_t *wadtbl)$/;"	f
W_ListNumFromName	src/w_wad.c	/^int W_ListNumFromName(const char *name, int lump) {$/;"	f
W_LockLumpNum	src/w_memcache.c	/^const void *W_LockLumpNum(int lump)$/;"	f
W_LockLumpNum	src/w_mmap.c	/^const void* W_LockLumpNum(int lump) {$/;"	f
W_LumpLength	src/w_wad.c	/^int W_LumpLength (int lump) {$/;"	f
W_LumpNameHash	src/w_wad.c	/^unsigned W_LumpNameHash(const char *s)$/;"	f
W_OK	src/i_system.h	40;"	d
W_OK	src/z_zone.h	61;"	d
W_PrintLump	src/w_memcache.c	/^void W_PrintLump(FILE* fp, void* p) {$/;"	f
W_PrintLump	src/w_mmap.c	/^void W_PrintLump(FILE *fp, void *p) {$/;"	f
W_ReadLump	src/w_wad.c	/^void W_ReadLump(int lump, void *dest) {$/;"	f
W_ReleaseAllWads	src/w_wad.c	/^void W_ReleaseAllWads(void) {$/;"	f
W_ReportLocks	src/w_memcache.c	/^static void W_ReportLocks(void)$/;"	f	file:
W_ReportLocks	src/w_mmap.c	/^static void W_ReportLocks(void) {$/;"	f	file:
W_SafeGetNumForName	src/w_wad.c	/^int W_SafeGetNumForName(const char *name) {$/;"	f
W_UnlockLumpName	src/w_wad.h	152;"	d
W_UnlockLumpNum	src/w_memcache.c	/^void W_UnlockLumpNum(int lump)$/;"	f
W_UnlockLumpNum	src/w_mmap.c	/^void W_UnlockLumpNum(int lump) {$/;"	f
W_WAD_H__	src/w_wad.h	25;"	d
WadDataAddItem	src/r_demo.c	/^int WadDataAddItem(waddata_t *waddata, const char *filename,$/;"	f
WadDataFree	src/r_demo.c	/^void WadDataFree(waddata_t *waddata)$/;"	f
WadDataInit	src/r_demo.c	/^int WadDataInit(waddata_t *waddata)$/;"	f
WadDataToWadFiles	src/r_demo.c	/^void WadDataToWadFiles(waddata_t *waddata) {$/;"	f
WadFilesToWadData	src/r_demo.c	/^void WadFilesToWadData(waddata_t *waddata) {$/;"	f
WaitDestState	src/st_stuff.h	/^  WaitDestState,$/;"	e	enum:__anon325
WalkMany	src/p_spec.h	/^  WalkMany,$/;"	e	enum:__anon238
WalkOnce	src/p_spec.h	/^  WalkOnce,$/;"	e	enum:__anon238
WaveBaseTable	src/MUSIC/dbopl.c	/^static const Bit16u WaveBaseTable[8] = {$/;"	v	file:
WaveForm0	src/MUSIC/dbopl.c	/^static Bits DB_FASTCALL WaveForm0( Bitu i, Bitu volume ) {$/;"	f	file:
WaveForm1	src/MUSIC/dbopl.c	/^static Bits DB_FASTCALL WaveForm1( Bitu i, Bitu volume ) {$/;"	f	file:
WaveForm2	src/MUSIC/dbopl.c	/^static Bits DB_FASTCALL WaveForm2( Bitu i, Bitu volume ) {$/;"	f	file:
WaveForm3	src/MUSIC/dbopl.c	/^static Bits DB_FASTCALL WaveForm3( Bitu i, Bitu volume ) {$/;"	f	file:
WaveForm4	src/MUSIC/dbopl.c	/^static Bits DB_FASTCALL WaveForm4( Bitu i, Bitu volume ) {$/;"	f	file:
WaveForm5	src/MUSIC/dbopl.c	/^static Bits DB_FASTCALL WaveForm5( Bitu i, Bitu volume ) {$/;"	f	file:
WaveForm6	src/MUSIC/dbopl.c	/^static Bits DB_FASTCALL WaveForm6( Bitu i, Bitu volume ) {$/;"	f	file:
WaveForm7	src/MUSIC/dbopl.c	/^static Bits DB_FASTCALL WaveForm7( Bitu i, Bitu volume ) {$/;"	f	file:
WaveHandler	src/MUSIC/dbopl.h	/^typedef Bits ( DB_FASTCALL *WaveHandler) ( Bitu i, Bitu volume );$/;"	t
WaveHandlerTable	src/MUSIC/dbopl.c	/^static const WaveHandler WaveHandlerTable[8] = {$/;"	v	file:
WaveMaskTable	src/MUSIC/dbopl.c	/^static const Bit16u WaveMaskTable[8] = {$/;"	v	file:
WaveStartTable	src/MUSIC/dbopl.c	/^static const Bit16u WaveStartTable[8] = {$/;"	v	file:
WaveTable	src/MUSIC/dbopl.c	/^static Bit16s WaveTable[ 8 * 512 ];$/;"	v	file:
WeaponDef	src/m_menu.c	/^menu_t WeaponDef =$/;"	v
WeaponSelectable	src/g_game.c	/^static dboolean WeaponSelectable(weapontype_t weapon) {$/;"	f	file:
WinMain	src/SDL/SDL_win32_main.c	/^int WINAPI WinMain(HINSTANCE hInst, HINSTANCE hPrev, LPWSTR szCmdLine, int sw)$/;"	f
Window2	src/TEXTSCREEN/examples/guitest.c	/^void Window2(void)$/;"	f
WriteChangeController_Valued	src/mus2mid.c	/^static dboolean WriteChangeController_Valued(byte channel,$/;"	f	file:
WriteChangeController_Valueless	src/mus2mid.c	/^static dboolean WriteChangeController_Valueless(byte channel,$/;"	f	file:
WriteChangePatch	src/mus2mid.c	/^static dboolean WriteChangePatch(byte channel, byte patch,$/;"	f	file:
WriteEndTrack	src/mus2mid.c	/^static dboolean WriteEndTrack(MEMFILE *midioutput)$/;"	f	file:
WritePitchWheel	src/mus2mid.c	/^static dboolean WritePitchWheel(byte channel, short wheel,$/;"	f	file:
WritePressKey	src/mus2mid.c	/^static dboolean WritePressKey(byte channel, byte key,$/;"	f	file:
WriteRegister	src/MUSIC/opl.c	/^static void WriteRegister(unsigned int reg_num, unsigned int value)$/;"	f	file:
WriteReleaseKey	src/mus2mid.c	/^static dboolean WriteReleaseKey(byte channel, byte key,$/;"	f	file:
WriteTime	src/mus2mid.c	/^static dboolean WriteTime(unsigned int time, MEMFILE *midioutput)$/;"	f	file:
XCL_END	src/PCRELIB/pcre_internal.h	512;"	d
XCL_MAP	src/PCRELIB/pcre_internal.h	510;"	d
XCL_NOT	src/PCRELIB/pcre_internal.h	509;"	d
XCL_NOTPROP	src/PCRELIB/pcre_internal.h	516;"	d
XCL_PROP	src/PCRELIB/pcre_internal.h	515;"	d
XCL_RANGE	src/PCRELIB/pcre_internal.h	514;"	d
XCL_SINGLE	src/PCRELIB/pcre_internal.h	513;"	d
XF_Echo	src/c_main.c	/^int XF_Echo(lua_State *L) {$/;"	f
XF_MEcho	src/c_main.c	/^int XF_MEcho(lua_State *L) {$/;"	f
XF_Name	src/p_user.c	/^int XF_Name(lua_State *L) {$/;"	f
XF_Quit	src/x_main.c	/^int XF_Quit(lua_State *L) {$/;"	f
XF_Say	src/p_user.c	/^int XF_Say(lua_State *L) {$/;"	f
XSTRING	src/PCRELIB/pcre_version.c	76;"	d	file:
X_BUTTON	src/m_menu.c	2162;"	d	file:
X_Close	src/x_main.c	/^static void X_Close(void) {$/;"	f	file:
X_GetError	src/x_main.c	/^const char* X_GetError(void) {$/;"	f
X_Init	src/x_main.c	/^void X_Init(void) {$/;"	f
X_MAIN_H__	src/x_main.h	25;"	d
X_NAMESPACE	src/x_main.h	31;"	d
X_RegisterFunc	src/x_main.c	/^void X_RegisterFunc(const char *name, lua_CFunction func) {$/;"	f
X_RunCode	src/x_main.c	/^bool X_RunCode(const char *code) {$/;"	f
Xcallpat	src/PCRELIB/pcre_exec.c	/^  const uschar *Xcallpat;$/;"	m	struct:heapframe	file:
Xcharptr	src/PCRELIB/pcre_exec.c	/^  const uschar *Xcharptr;$/;"	m	struct:heapframe	file:
Xcondition	src/PCRELIB/pcre_exec.c	/^  BOOL Xcondition;$/;"	m	struct:heapframe	file:
Xctype	src/PCRELIB/pcre_exec.c	/^  int Xctype;$/;"	m	struct:heapframe	file:
Xcur_is_word	src/PCRELIB/pcre_exec.c	/^  BOOL Xcur_is_word;$/;"	m	struct:heapframe	file:
Xdata	src/PCRELIB/pcre_exec.c	/^  const uschar *Xdata;$/;"	m	struct:heapframe	file:
Xecode	src/PCRELIB/pcre_exec.c	/^  const uschar *Xecode;$/;"	m	struct:heapframe	file:
Xeptr	src/PCRELIB/pcre_exec.c	/^  const uschar *Xeptr;$/;"	m	struct:heapframe	file:
Xeptrb	src/PCRELIB/pcre_exec.c	/^  eptrblock *Xeptrb;$/;"	m	struct:heapframe	file:
Xfc	src/PCRELIB/pcre_exec.c	/^  int Xfc;$/;"	m	struct:heapframe	file:
Xfi	src/PCRELIB/pcre_exec.c	/^  int Xfi;$/;"	m	struct:heapframe	file:
Xflags	src/PCRELIB/pcre_exec.c	/^  int Xflags;$/;"	m	struct:heapframe	file:
Xims	src/PCRELIB/pcre_exec.c	/^  long int Xims;$/;"	m	struct:heapframe	file:
Xlength	src/PCRELIB/pcre_exec.c	/^  int Xlength;$/;"	m	struct:heapframe	file:
Xmax	src/PCRELIB/pcre_exec.c	/^  int Xmax;$/;"	m	struct:heapframe	file:
Xmin	src/PCRELIB/pcre_exec.c	/^  int Xmin;$/;"	m	struct:heapframe	file:
Xminimize	src/PCRELIB/pcre_exec.c	/^  BOOL Xminimize;$/;"	m	struct:heapframe	file:
Xnew_recursive	src/PCRELIB/pcre_exec.c	/^  recursion_info Xnew_recursive;$/;"	m	struct:heapframe	file:
Xnewptrb	src/PCRELIB/pcre_exec.c	/^  eptrblock Xnewptrb;$/;"	m	struct:heapframe	file:
Xnext	src/PCRELIB/pcre_exec.c	/^  const uschar *Xnext;$/;"	m	struct:heapframe	file:
Xnumber	src/PCRELIB/pcre_exec.c	/^  int Xnumber;$/;"	m	struct:heapframe	file:
Xoffset	src/PCRELIB/pcre_exec.c	/^  int Xoffset;$/;"	m	struct:heapframe	file:
Xoffset_top	src/PCRELIB/pcre_exec.c	/^  int Xoffset_top;$/;"	m	struct:heapframe	file:
Xop	src/PCRELIB/pcre_exec.c	/^  int Xop;$/;"	m	struct:heapframe	file:
Xoriginal_ims	src/PCRELIB/pcre_exec.c	/^  unsigned long int Xoriginal_ims;$/;"	m	struct:heapframe	file:
Xpp	src/PCRELIB/pcre_exec.c	/^  const uschar *Xpp;$/;"	m	struct:heapframe	file:
Xprev	src/PCRELIB/pcre_exec.c	/^  const uschar *Xprev;$/;"	m	struct:heapframe	file:
Xprev_is_word	src/PCRELIB/pcre_exec.c	/^  BOOL Xprev_is_word;$/;"	m	struct:heapframe	file:
Xprevframe	src/PCRELIB/pcre_exec.c	/^  struct heapframe *Xprevframe;$/;"	m	struct:heapframe	typeref:struct:heapframe::heapframe	file:
Xprop_category	src/PCRELIB/pcre_exec.c	/^  int Xprop_category;$/;"	m	struct:heapframe	file:
Xprop_chartype	src/PCRELIB/pcre_exec.c	/^  int Xprop_chartype;$/;"	m	struct:heapframe	file:
Xprop_fail_result	src/PCRELIB/pcre_exec.c	/^  int Xprop_fail_result;$/;"	m	struct:heapframe	file:
Xprop_script	src/PCRELIB/pcre_exec.c	/^  int Xprop_script;$/;"	m	struct:heapframe	file:
Xprop_test_variable	src/PCRELIB/pcre_exec.c	/^  int *Xprop_test_variable;$/;"	m	struct:heapframe	file:
Xprop_type	src/PCRELIB/pcre_exec.c	/^  int Xprop_type;$/;"	m	struct:heapframe	file:
Xprop_value	src/PCRELIB/pcre_exec.c	/^  int Xprop_value;$/;"	m	struct:heapframe	file:
Xrdepth	src/PCRELIB/pcre_exec.c	/^  unsigned int Xrdepth;$/;"	m	struct:heapframe	file:
Xresult	src/PCRELIB/pcre_exec.c	/^  int  Xresult;$/;"	m	struct:heapframe	file:
Xsave_capture_last	src/PCRELIB/pcre_exec.c	/^  int Xsave_capture_last;$/;"	m	struct:heapframe	file:
Xsave_offset1	src/PCRELIB/pcre_exec.c	/^  int Xsave_offset1, Xsave_offset2, Xsave_offset3;$/;"	m	struct:heapframe	file:
Xsave_offset2	src/PCRELIB/pcre_exec.c	/^  int Xsave_offset1, Xsave_offset2, Xsave_offset3;$/;"	m	struct:heapframe	file:
Xsave_offset3	src/PCRELIB/pcre_exec.c	/^  int Xsave_offset1, Xsave_offset2, Xsave_offset3;$/;"	m	struct:heapframe	file:
Xsaved_eptr	src/PCRELIB/pcre_exec.c	/^  const uschar *Xsaved_eptr;$/;"	m	struct:heapframe	file:
Xstacksave	src/PCRELIB/pcre_exec.c	/^  int Xstacksave[REC_STACK_SAVE_MAX];$/;"	m	struct:heapframe	file:
Xwhere	src/PCRELIB/pcre_exec.c	/^  jmp_buf Xwhere;$/;"	m	struct:heapframe	file:
YCard	src/p_spec.h	/^  YCard,$/;"	e	enum:__anon248
YSkull	src/p_spec.h	/^  YSkull,$/;"	e	enum:__anon248
Y_BUTTON	src/m_menu.c	2163;"	d	file:
ZDOOM_AUDIO_LOOP	src/MUSIC/vorbisplayer.c	70;"	d	file:
ZGLN	src/p_setup.c	90;"	d	file:
ZNOD	src/p_setup.c	89;"	d	file:
ZONEID	src/z_zone.c	56;"	d	file:
ZONEIDCHECK	src/MAC/config.h	58;"	d
ZONE_HISTORY	src/z_zone.c	59;"	d	file:
Z_BCalloc	src/z_bmalloc.h	/^inline static void* Z_BCalloc(struct block_memory_alloc_s *pzone)$/;"	f
Z_BFree	src/z_bmalloc.c	/^void Z_BFree(struct block_memory_alloc_s *pzone, void* p) {$/;"	f
Z_BMALLOC_H__	src/z_bmalloc.h	25;"	d
Z_BMalloc	src/z_bmalloc.c	/^void* Z_BMalloc(struct block_memory_alloc_s *pzone) {$/;"	f
Z_Calloc	src/z_zone.c	/^void *(Z_Calloc)(size_t n1, size_t n2, int tag, void **user$/;"	f
Z_Calloc	src/z_zone.h	156;"	d
Z_ChangeTag	src/z_zone.c	/^void (Z_ChangeTag)(void *ptr, int tag$/;"	f
Z_ChangeTag	src/z_zone.h	153;"	d
Z_CheckHeap	src/z_zone.c	/^void (Z_CheckHeap)($/;"	f
Z_CheckHeap	src/z_zone.h	158;"	d
Z_Close	src/z_zone.c	/^void Z_Close(void)$/;"	f
Z_DrawStats	src/z_zone.c	/^static void Z_DrawStats(void)            \/\/ Print allocation statistics$/;"	f	file:
Z_DumpHistory	src/z_zone.c	/^void Z_DumpHistory(char *buf)$/;"	f
Z_DumpMemory	src/z_zone.c	/^void Z_DumpMemory(void)$/;"	f
Z_Free	src/z_zone.c	/^void (Z_Free)(void *p$/;"	f
Z_Free	src/z_zone.h	151;"	d
Z_FreeTags	src/z_zone.c	/^void (Z_FreeTags)(int lowtag, int hightag$/;"	f
Z_FreeTags	src/z_zone.h	152;"	d
Z_Init	src/z_zone.c	/^void Z_Init(void)$/;"	f
Z_Malloc	src/z_zone.c	/^void *(Z_Malloc)(size_t size, int tag, void **user$/;"	f
Z_Malloc	src/z_zone.h	154;"	d
Z_Realloc	src/z_zone.c	/^void *(Z_Realloc)(void *ptr, size_t n, int tag, void **user$/;"	f
Z_Realloc	src/z_zone.h	157;"	d
Z_Strdup	src/z_zone.c	/^char *(Z_Strdup)(const char *s, int tag, void **user$/;"	f
Z_Strdup	src/z_zone.h	155;"	d
Z_ZONE_H__	src/z_zone.h	25;"	d
_CRT_NONSTDC_NO_DEPRECATE	src/PCRELIB/config.h	187;"	d
_CRT_SECURE_NO_DEPRECATE	src/PCRELIB/config.h	183;"	d
_Channel	src/MUSIC/dbopl.h	/^struct _Channel {$/;"	s
_Chip	src/MUSIC/dbopl.h	/^struct _Chip {$/;"	s
_DDRAW_H_DDCOLORKEY	src/gl_hires.c	/^typedef struct _DDRAW_H_DDCOLORKEY$/;"	s	file:
_DDRAW_H_DDPIXELFORMAT	src/gl_hires.c	/^typedef struct _DDRAW_H_DDPIXELFORMAT$/;"	s	file:
_DDRAW_H_DDSCAPS2	src/gl_hires.c	/^typedef struct _DDRAW_H_DDSCAPS2$/;"	s	file:
_DDRAW_H_DDSURFACEDESC2	src/gl_hires.c	/^typedef struct _DDRAW_H_DDSURFACEDESC2$/;"	s	file:
_MEMFILE	src/memio.c	/^struct _MEMFILE {$/;"	s	file:
_Operator	src/MUSIC/dbopl.h	/^struct _Operator {$/;"	s
_PCRECPP_H	src/PCRELIB/pcrecpp.h	57;"	d
_PCREPOSIX_H	src/PCRELIB/pcreposix.h	29;"	d
_PCRE_H	src/PCRELIB/pcre.h	63;"	d
_PCRE_SCANNER_H	src/PCRELIB/pcre_scanner.h	68;"	d
_UCP_H	src/PCRELIB/ucp.h	29;"	d
_UNICODE	src/z_zone.h	51;"	d
__BYTEBOOL__	src/MAC/config.h	142;"	d
__DOOMKEYS__	src/TEXTSCREEN/doomkeys.h	28;"	d
__FONT_H__	src/TEXTSCREEN/txt_font.h	29;"	d
__PROTOCOL__	src/protocol.h	25;"	d
__STDC_FORMAT_MACROS	src/z_zone.h	46;"	d
__attribute__	src/z_zone.h	35;"	d
__glPi	src/gl_main.c	1084;"	d	file:
__progname	src/d_server.c	/^char *__progname="prboom_server";$/;"	v
_getcwd	src/SDL/SDL_win32_main.c	32;"	d	file:
_getcwd	src/SDL/SDL_win32_main.c	33;"	d	file:
_i	src/cmp.c	/^static const int32_t _i = 1;$/;"	v	file:
_pcre_OP_lengths	src/PCRELIB/pcre_tables.c	/^const uschar _pcre_OP_lengths[] = { OP_LENGTHS };$/;"	v
_pcre_OP_lengths	src/PCRELIB/pcretest.c	94;"	d	file:
_pcre_default_tables	src/PCRELIB/pcre_chartables.c	/^const unsigned char _pcre_default_tables[] = {$/;"	v
_pcre_ord2utf8	src/PCRELIB/pcre_ord2utf8.c	/^_pcre_ord2utf8(int cvalue, uschar *buffer)$/;"	f
_pcre_try_flipped	src/PCRELIB/pcre_try_flipped.c	/^_pcre_try_flipped(const real_pcre *re, real_pcre *internal_re,$/;"	f
_pcre_ucp_findprop	src/PCRELIB/pcre_ucp_searchfuncs.c	/^_pcre_ucp_findprop(const unsigned int c, int *type_ptr, int *script_ptr)$/;"	f
_pcre_ucp_othercase	src/PCRELIB/pcre_ucp_searchfuncs.c	/^_pcre_ucp_othercase(const int c)$/;"	f
_pcre_utf8_table1	src/PCRELIB/pcre_tables.c	/^const int _pcre_utf8_table1[] =$/;"	v
_pcre_utf8_table1	src/PCRELIB/pcretest.c	87;"	d	file:
_pcre_utf8_table1_size	src/PCRELIB/pcre_tables.c	/^const int _pcre_utf8_table1_size = sizeof(_pcre_utf8_table1)\/sizeof(int);$/;"	v
_pcre_utf8_table1_size	src/PCRELIB/pcretest.c	88;"	d	file:
_pcre_utf8_table2	src/PCRELIB/pcre_tables.c	/^const int _pcre_utf8_table2[] = { 0,    0xc0, 0xe0, 0xf0, 0xf8, 0xfc};$/;"	v
_pcre_utf8_table2	src/PCRELIB/pcretest.c	89;"	d	file:
_pcre_utf8_table3	src/PCRELIB/pcre_tables.c	/^const int _pcre_utf8_table3[] = { 0xff, 0x1f, 0x0f, 0x07, 0x03, 0x01};$/;"	v
_pcre_utf8_table3	src/PCRELIB/pcretest.c	90;"	d	file:
_pcre_utf8_table4	src/PCRELIB/pcre_tables.c	/^const uschar _pcre_utf8_table4[] = {$/;"	v
_pcre_utf8_table4	src/PCRELIB/pcretest.c	91;"	d	file:
_pcre_utt	src/PCRELIB/pcre_tables.c	/^const ucp_type_table _pcre_utt[] = {$/;"	v
_pcre_utt	src/PCRELIB/pcretest.c	92;"	d	file:
_pcre_utt_size	src/PCRELIB/pcre_tables.c	/^const int _pcre_utt_size = sizeof(_pcre_utt)\/sizeof(ucp_type_table);$/;"	v
_pcre_utt_size	src/PCRELIB/pcretest.c	93;"	d	file:
_pcre_valid_utf8	src/PCRELIB/pcre_valid_utf8.c	/^_pcre_valid_utf8(const uschar *string, int length)$/;"	f
_pcre_xclass	src/PCRELIB/pcre_xclass.c	/^_pcre_xclass(int c, const uschar *data)$/;"	f
a	src/am_map.c	/^    mpoint_t a, b;$/;"	m	struct:__anon1	file:
a	src/am_map.h	/^  unsigned char r, g, b, a;$/;"	m	struct:map_point_s
a	src/d_ipxgate.c	/^a$/;"	s	file:
a	src/gl_intern.h	/^  unsigned char r, g, b, a;$/;"	m	struct:vbo_vertex_s
a	src/gl_intern.h	/^  unsigned char r, g, b, a;$/;"	m	struct:vbo_xy_uv_rgba_s
a	src/hu_lib.h	/^  float a;$/;"	m	struct:hu_color_s
a	src/v_video.h	/^  fpoint_t a, b;$/;"	m	struct:__anon345
accel	src/p_spec.h	/^  int accel;           \/\/ Whether it's accelerative$/;"	m	struct:__anon271
acceleratestage	src/wi_stuff.c	/^int   acceleratestage;           \/\/ killough 3\/28\/98: made global$/;"	v
action	src/info.h	/^  actionf_t   action;       \/* code pointer to function for action if any  *\/$/;"	m	struct:__anon136
action	src/m_menu.h	/^  void (*action)(void); \/* killough 10\/98: function to call after changing *\/$/;"	m	struct:setup_menu_s
actionf_p1	src/d_think.h	/^typedef  void (*actionf_p1)( void* );$/;"	t
actionf_p2	src/d_think.h	/^typedef  void (*actionf_p2)( void*, void* );$/;"	t
actionf_t	src/d_think.h	/^typedef  void (*actionf_t)();$/;"	t
actionf_v	src/d_think.h	/^typedef  void (*actionf_v)();$/;"	t
actions	src/TEXTSCREEN/txt_window.h	/^    txt_window_action_t *actions[3];$/;"	m	struct:txt_window_s
activate_cursor	src/hu_input.c	/^static void activate_cursor(input_widget_t *iw) {$/;"	f	file:
active	src/hu_chat.c	/^  bool active;$/;"	m	struct:chat_widget_s	file:
active_memory	src/z_zone.c	/^static int active_memory = 0;$/;"	v	file:
active_shader	src/gl_shader.c	/^static GLShader *active_shader = NULL;$/;"	v	file:
active_texture_enabled	src/gl_opengl.c	/^int active_texture_enabled[32];$/;"	v
activeceilings	src/p_ceilng.c	/^ceilinglist_t *activeceilings;$/;"	v
activeplats	src/p_plats.c	/^platlist_t *activeplats;       \/\/ killough 2\/14\/98: made global again$/;"	v
activesound	src/info.h	/^  int activesound;  \/* What sound it makes wandering around, once$/;"	m	struct:__anon138
adcr	src/m_menu.c	/^  adcr$/;"	e	enum:__anon163	file:
add_player_message	src/p_user.c	/^static void add_player_message(int pn, bool is_markup, bool centered, int sfx,$/;"	f	file:
add_player_vmessage	src/p_user.c	/^static void add_player_vmessage(int pn, bool is_markup, bool centered, int sfx,$/;"	f	file:
add_sfx	src/SDL/i_sound.c	/^static int add_sfx(int sfxid, int channel, const unsigned char *data, size_t len) {$/;"	f	file:
addr	src/g_overflow.h	/^    void *addr;$/;"	m	struct:__anon119
address	src/r_fps.c	/^  void *address;$/;"	m	struct:__anon301	file:
adjust_recurse	src/PCRELIB/pcre_compile.c	/^adjust_recurse(uschar *group, int adjust, BOOL utf8, compile_data *cd)$/;"	f	file:
adjust_sound_params	src/s_sound.c	/^static int adjust_sound_params(mobj_t *listener, mobj_t *source,$/;"	f	file:
advancedemo	src/d_main.c	/^dboolean advancedemo;$/;"	v
affectee	src/p_spec.h	/^  int affectee;        \/\/ Number of affected sector$/;"	m	struct:__anon273
affectee	src/p_spec.h	/^  int affectee;        \/\/ Number of affected sector$/;"	m	struct:__anon274
affectee	src/p_spec.h	/^  int affectee;        \/\/ Number of affected sidedef, sector, tag, or whatever$/;"	m	struct:__anon271
after_call	src/PCRELIB/pcre_internal.h	/^  const uschar *after_call;     \/* "Return value": points after the call in the expr *\/$/;"	m	struct:recursion_info
after_context	src/PCRELIB/pcregrep.c	/^static int after_context = 0;$/;"	v	file:
aim_flags_mask	src/p_map.c	/^static uint_64_t aim_flags_mask;$/;"	v	file:
aimslope	src/p_map.c	/^static fixed_t   aimslope;$/;"	v	file:
align	src/TEXTSCREEN/txt_widget.h	/^    txt_horiz_align_t align;$/;"	m	struct:txt_widget_s
align_bottom	src/hu_msg.c	/^  int align_bottom;$/;"	m	struct:message_widget_s	file:
all_options	src/PCRELIB/pcrecpp.h	/^  int all_options() const {$/;"	f	class:pcrecpp::RE_Options
all_options_	src/PCRELIB/pcrecpp.h	/^  int all_options_;$/;"	m	class:pcrecpp::RE_Options
all_windows	src/TEXTSCREEN/txt_desktop.c	/^static txt_window_t *all_windows[MAXWINDOWS];$/;"	v	file:
alloced	src/memio.c	/^  size_t alloced;$/;"	m	struct:_MEMFILE	file:
allow_changes	src/m_menu.c	/^static int allow_changes(void)$/;"	f	file:
allow_pushers	src/d_net.h	/^  byte allow_pushers;$/;"	m	struct:__anon24
allow_pushers	src/doomstat.c	/^int  allow_pushers = 1;      \/\/ MT_PUSH Things              \/\/ phares 3\/10\/98$/;"	v
alpha	src/gl_intern.h	/^  float alpha;$/;"	m	struct:__anon91
alpha	src/gl_intern.h	/^  float alpha;$/;"	m	struct:__anon93
alphaKey	src/m_menu.h	/^  char  alphaKey; \/\/ hotkey in menu$/;"	m	struct:menuitem_s
altdown	src/d_main.h	/^  bool altdown;$/;"	m	struct:keybindings_s
alttext	src/m_menu.h	/^  const char *alttext;$/;"	m	struct:menuitem_s
altu	src/d_ipxgate.c	/^  union altu {$/;"	u	struct:__anon18	file:
always	src/m_cheat.h	/^    always   = 0,$/;"	e	enum:cheatseq_s::__anon145
am_active	src/doomstat.h	/^  am_active = 1,  \/\/ currently shown$/;"	e	enum:automapmode_e
am_cell	src/doomdef.h	/^  am_cell,    \/\/ Plasma rifle, BFG.$/;"	e	enum:__anon50
am_clip	src/doomdef.h	/^  am_clip,    \/\/ Pistol \/ chaingun ammo.$/;"	e	enum:__anon50
am_follow	src/doomstat.h	/^  am_follow = 8,  \/\/ keep the player centred$/;"	e	enum:automapmode_e
am_frame	src/am_map.c	/^am_frame_t am_frame;$/;"	v
am_frame_s	src/am_map.h	/^typedef struct am_frame_s$/;"	s
am_frame_t	src/am_map.h	/^} am_frame_t;$/;"	t	typeref:struct:am_frame_s
am_grid	src/doomstat.h	/^  am_grid   =16,  \/\/ show grid$/;"	e	enum:automapmode_e
am_icon_ammo	src/gl_struct.h	/^  am_icon_ammo,$/;"	e	enum:__anon118
am_icon_armor	src/gl_struct.h	/^  am_icon_armor,$/;"	e	enum:__anon118
am_icon_arrow	src/gl_struct.h	/^  am_icon_arrow,$/;"	e	enum:__anon118
am_icon_bullet	src/gl_struct.h	/^  am_icon_bullet,$/;"	e	enum:__anon118
am_icon_corpse	src/gl_struct.h	/^  am_icon_corpse,$/;"	e	enum:__anon118
am_icon_count	src/gl_struct.h	/^  am_icon_count$/;"	e	enum:__anon118
am_icon_health	src/gl_struct.h	/^  am_icon_health,$/;"	e	enum:__anon118
am_icon_key	src/gl_struct.h	/^  am_icon_key,$/;"	e	enum:__anon118
am_icon_mark	src/gl_struct.h	/^  am_icon_mark,$/;"	e	enum:__anon118
am_icon_monster	src/gl_struct.h	/^  am_icon_monster,$/;"	e	enum:__anon118
am_icon_normal	src/gl_struct.h	/^  am_icon_normal,$/;"	e	enum:__anon118
am_icon_player	src/gl_struct.h	/^  am_icon_player,$/;"	e	enum:__anon118
am_icon_power	src/gl_struct.h	/^  am_icon_power,$/;"	e	enum:__anon118
am_icon_s	src/gl_struct.h	/^typedef struct am_icon_s$/;"	s
am_icon_shadow	src/gl_struct.h	/^  am_icon_shadow,$/;"	e	enum:__anon118
am_icon_t	src/gl_struct.h	/^} am_icon_t;$/;"	t	typeref:struct:am_icon_s
am_icon_weap	src/gl_struct.h	/^  am_icon_weap,$/;"	e	enum:__anon118
am_icons	src/gl_map.c	/^am_icon_t am_icons[am_icon_count + 1] = $/;"	v
am_misl	src/doomdef.h	/^  am_misl,    \/\/ Missile launcher.$/;"	e	enum:__anon50
am_noammo	src/doomdef.h	/^  am_noammo   \/\/ Unlimited for chainsaw \/ fist.$/;"	e	enum:__anon50
am_overlay	src/doomstat.h	/^  am_overlay= 2,  \/\/ covers the screen, i.e. not overlay mode$/;"	e	enum:automapmode_e
am_rotate	src/doomstat.h	/^  am_rotate = 4,  \/\/ rotates to the player facing direction$/;"	e	enum:automapmode_e
am_shell	src/doomdef.h	/^  am_shell,   \/\/ Shotgun \/ double barreled shotgun.$/;"	e	enum:__anon50
ammo	src/d_items.h	/^  ammotype_t  ammo;$/;"	m	struct:__anon19
ammo	src/d_player.h	/^  int                 ammo[NUMAMMO];$/;"	m	struct:player_s
ammo_colour_behaviour	src/st_stuff.c	/^ammo_colour_behaviour_t ammo_colour_behaviour;$/;"	v
ammo_colour_behaviour_full_only	src/st_stuff.h	/^  ammo_colour_behaviour_full_only,$/;"	e	enum:__anon326
ammo_colour_behaviour_list	src/st_stuff.c	/^const char *ammo_colour_behaviour_list[ammo_colour_behaviour_max] = {$/;"	v
ammo_colour_behaviour_max	src/st_stuff.h	/^  ammo_colour_behaviour_max$/;"	e	enum:__anon326
ammo_colour_behaviour_no	src/st_stuff.h	/^  ammo_colour_behaviour_no,$/;"	e	enum:__anon326
ammo_colour_behaviour_t	src/st_stuff.h	/^} ammo_colour_behaviour_t;$/;"	t	typeref:enum:__anon326
ammo_colour_behaviour_yes	src/st_stuff.h	/^  ammo_colour_behaviour_yes,$/;"	e	enum:__anon326
ammo_red	src/st_stuff.c	/^int ammo_red;      \/\/ ammo percent less than which status is red$/;"	v
ammo_yellow	src/st_stuff.c	/^int ammo_yellow;   \/\/ ammo percent less is yellow more green$/;"	v
ammopershot	src/d_items.c	/^int ammopershot[NUMWEAPONS+2] = {0, 1, 1, 1, 1, 1, 40, 0, 2, 0, 0};$/;"	v
ammotype_t	src/doomdef.h	/^} ammotype_t;$/;"	t	typeref:enum:__anon50
angle	src/doomdata.h	/^  short angle;$/;"	m	struct:__anon36
angle	src/doomdata.h	/^  short angle;$/;"	m	struct:__anon42
angle	src/doomdata.h	/^  unsigned short angle;$/;"	m	struct:__anon37
angle	src/e6y.h	/^  angle_t angle;$/;"	m	struct:camera_s
angle	src/p_mobj.h	/^    angle_t             angle;  \/\/ orientation$/;"	m	struct:mobj_s
angle	src/r_defs.h	/^  angle_t angle;$/;"	m	struct:__anon287
angle_t	src/tables.h	/^typedef unsigned angle_t;$/;"	t
angleoffset	src/d_net.h	/^    short               angleoffset;$/;"	m	struct:__anon27
angletime	src/r_defs.h	/^  int angletime;       \/\/ e6y: recalculation time for view angle $/;"	m	struct:__anon281
angleturn	src/d_ticcmd.h	/^  short  angleturn;    \/* <<16 for angle delta *\/$/;"	m	struct:__anon63
angleturn	src/g_game.c	/^fixed_t angleturn[3]   = {640, 1280, 320};  \/\/ + slow turn$/;"	v
anim	src/p_spec.h	/^  anim_t *anim;$/;"	m	struct:__anon237
anim_flats	src/gl_detail.c	/^TAnimItemParam *anim_flats = NULL;$/;"	v
anim_t	src/p_spec.h	/^} anim_t;$/;"	t	typeref:struct:__anon236
anim_t	src/wi_stuff.c	/^} anim_t;$/;"	t	typeref:struct:__anon348	file:
anim_textures	src/gl_detail.c	/^TAnimItemParam *anim_textures = NULL;$/;"	v
animdef_t	src/p_spec.c	/^} PACKEDATTR animdef_t; \/\/jff 3\/23\/98 pack to read from memory$/;"	t	typeref:struct:__anon235	file:
animenum_t	src/wi_stuff.c	/^} animenum_t;$/;"	t	typeref:enum:__anon346	file:
anims	src/p_spec.c	/^static anim_t*  anims;                \/\/ new structure w\/o limits -- killough$/;"	v	file:
anims	src/wi_stuff.c	/^static anim_t *anims[NUMEPISODES] =$/;"	v	file:
arg	src/m_cheat.h	/^  const int arg;$/;"	m	struct:cheatseq_s
armor_green	src/st_stuff.c	/^int armor_green;   \/\/ armor amount above is blue, below is green$/;"	v
armor_red	src/st_stuff.c	/^int armor_red;     \/\/ armor amount less than which status is red$/;"	v
armor_yellow	src/st_stuff.c	/^int armor_yellow;  \/\/ armor amount less than which status is yellow$/;"	v
armorpoints	src/d_player.h	/^  int                 armorpoints;$/;"	m	struct:player_s
armortype	src/d_player.h	/^  int                 armortype;$/;"	m	struct:player_s
arms	src/st_stuff.c	/^static patchnum_t arms[6][2];$/;"	v	file:
armsbg	src/st_stuff.c	/^static patchnum_t armsbg;$/;"	v	file:
array_data	src/m_misc.h	/^    char*** array_data;$/;"	m	struct:default_s::__anon169
array_data	src/m_misc.h	/^    const char** array_data;$/;"	m	struct:default_s::__anon170
array_index	src/m_misc.h	/^    int array_index;$/;"	m	struct:default_s::__anon169
array_s	src/m_misc.h	/^typedef struct array_s$/;"	s
array_size	src/cmp.h	/^  uint32_t  array_size;$/;"	m	union:cmp_object_data_u
array_size	src/m_misc.h	/^    int array_size;$/;"	m	struct:default_s::__anon170
array_size	src/m_misc.h	/^    int* array_size;$/;"	m	struct:default_s::__anon169
array_t	src/m_misc.h	/^} array_t;$/;"	t	typeref:struct:array_s
as	src/cmp.h	/^  union cmp_object_data_u as;$/;"	m	struct:cmp_object_s	typeref:union:cmp_object_s::cmp_object_data_u
atkstate	src/d_items.h	/^  int         atkstate;$/;"	m	struct:__anon19
att_a	src/gl_struct.h	/^  float att_a;$/;"	m	struct:motion_blur_params_s
att_b	src/gl_struct.h	/^  float att_b;$/;"	m	struct:motion_blur_params_s
att_c	src/gl_struct.h	/^  float att_c;$/;"	m	struct:motion_blur_params_s
attack	src/MUSIC/oplplayer.c	/^    byte attack;$/;"	m	struct:__anon194	file:
attackAdd	src/MUSIC/dbopl.h	/^  Bit32u attackAdd;     \/\/Timers for the different states of the envelope$/;"	m	struct:_Operator
attackRates	src/MUSIC/dbopl.h	/^  Bit32u attackRates[76];$/;"	m	struct:_Chip
attackdown	src/d_player.h	/^  int                 attackdown;$/;"	m	struct:player_s
attacker	src/d_player.h	/^  mobj_t             *attacker;$/;"	m	struct:player_s
attackrange	src/p_map.c	/^fixed_t   attackrange;$/;"	v
attacksound	src/info.h	/^  int attacksound;  \/* The sound it makes when it attacks *\/$/;"	m	struct:__anon138
audio_fd	src/SDL/i_sound.c	/^int audio_fd;               \/\/ The actual output device.$/;"	v
auth_level_e	src/n_net.h	/^} auth_level_e;$/;"	t	typeref:enum:__anon203
auto_callout	src/PCRELIB/pcre_compile.c	/^auto_callout(uschar *code, const uschar *ptr, compile_data *cd)$/;"	f	file:
auto_settings	src/m_menu.c	/^setup_menu_t* auto_settings[] =$/;"	v
auto_settings1	src/m_menu.c	/^setup_menu_t auto_settings1[] =  \/\/ 1st AutoMap Settings screen$/;"	v
auto_settings1	src/m_menu.c	/^setup_menu_t auto_settings1[];$/;"	v
auto_settings2	src/m_menu.c	/^setup_menu_t auto_settings2[] =  \/\/ 2st AutoMap Settings screen$/;"	v
auto_settings2	src/m_menu.c	/^setup_menu_t auto_settings2[];$/;"	v
auto_settings3	src/m_menu.c	/^setup_menu_t auto_settings3[] =  \/\/ 3nd AutoMap Settings screen$/;"	v
auto_settings3	src/m_menu.c	/^setup_menu_t auto_settings3[];$/;"	v
auto_shot_count	src/d_main.c	/^static int auto_shot_count, auto_shot_time;$/;"	v	file:
auto_shot_fname	src/d_main.c	/^static const char *auto_shot_fname;$/;"	v	file:
auto_shot_time	src/d_main.c	/^static int auto_shot_count, auto_shot_time;$/;"	v	file:
autoaim	src/p_pspr.c	/^int autoaim = 0;  \/\/ killough 7\/19\/98: autoaiming was not in original beta$/;"	v
automapmode	src/am_map.c	/^enum automapmode_e automapmode; \/\/ Mode that the automap is in$/;"	v	typeref:enum:automapmode_e
automapmode_e	src/doomstat.h	/^enum automapmode_e {$/;"	g
autorun	src/g_game.c	/^int             autorun = false;      \/\/ always running?          \/\/ phares$/;"	v
autostart	src/d_main.c	/^dboolean autostart;$/;"	v
averageColor	src/gl_sky.c	/^void averageColor(PalEntry_t * PalEntry, const unsigned int *data, int size, fixed_t maxout_factor)$/;"	f
average_savebuffer_size	src/g_save.c	/^static avg_t average_savebuffer_size;$/;"	v	file:
average_savebuffer_size_initialized	src/g_save.c	/^static bool average_savebuffer_size_initialized = false;$/;"	v	file:
average_state_size	src/n_state.c	/^static avg_t average_state_size;$/;"	v	file:
avg_s	src/m_avg.h	/^typedef struct avg_s {$/;"	s
avg_t	src/m_avg.h	/^} avg_t;$/;"	t	typeref:struct:avg_s
avi_shot_fname	src/e6y.c	/^const char *avi_shot_fname;$/;"	v
avi_shot_num	src/e6y.c	/^int avi_shot_num;$/;"	v
avi_shot_time	src/e6y.c	/^int avi_shot_time;$/;"	v
b	src/TEXTSCREEN/txt_widget.h	/^typedef void (*TxtMousePressFunc)(TXT_UNCAST_ARG(widget), int x, int y, int b);$/;"	t
b	src/TEXTSCREEN/txt_widget.h	/^void TXT_WidgetMousePress(TXT_UNCAST_ARG(widget), int x, int y, int b);$/;"	v
b	src/am_map.c	/^    mpoint_t a, b;$/;"	m	struct:__anon1	file:
b	src/am_map.h	/^  unsigned char r, g, b, a;$/;"	m	struct:map_point_s
b	src/gl_intern.h	/^  unsigned char r, g, b, a;$/;"	m	struct:vbo_vertex_s
b	src/gl_intern.h	/^  unsigned char r, g, b, a;$/;"	m	struct:vbo_xy_uv_rgba_s
b	src/gl_intern.h	/^  unsigned char r, g, b;$/;"	m	struct:PalEntry_s
b	src/hu_lib.h	/^  float b;$/;"	m	struct:hu_color_s
b	src/v_video.h	/^  fpoint_t a, b;$/;"	m	struct:__anon345
backpack	src/d_player.h	/^  dboolean            backpack;$/;"	m	struct:player_s
backref_map	src/PCRELIB/pcre_internal.h	/^  unsigned int backref_map;     \/* Bitmap of low back refs *\/$/;"	m	struct:compile_data
backsector	src/r_bsp.c	/^sector_t  *backsector;$/;"	v
backsector	src/r_defs.h	/^  sector_t *backsector;$/;"	m	struct:line_s
backsector	src/r_defs.h	/^  sector_t *frontsector, *backsector;$/;"	m	struct:__anon287
backspace	src/hu_input.c	/^static void backspace(input_widget_t *iw) {$/;"	f	file:
badplayer	src/d_server.c	/^static int badplayer(int n) { return (n < 0 || n >= MAXPLAYERS); }$/;"	f	file:
bakipos	src/r_fps.c	/^static fixed2_t *bakipos;$/;"	v	file:
base_layout_height	src/hu_msg.c	/^  int base_layout_height;$/;"	m	struct:message_widget_s	file:
base_layout_width	src/hu_msg.c	/^  int base_layout_width;$/;"	m	struct:message_widget_s	file:
base_line_height	src/hu_msg.c	/^  int base_line_height;$/;"	m	struct:message_widget_s	file:
base_note_offset	src/MUSIC/oplplayer.c	/^    short base_note_offset;$/;"	m	struct:__anon195	file:
basepic	src/p_spec.h	/^    int         basepic;$/;"	m	struct:__anon236
basesavegame	src/d_main.c	/^char    *basesavegame;             \/\/ killough 2\/16\/98: savegame directory$/;"	v
basetic	src/d_ipxgate.c	/^int basetic;$/;"	v
basetic	src/g_game.c	/^int             basetic;       \/* killough 9\/29\/98: for demo sync *\/$/;"	v
basetime	src/POSIX/i_system.c	/^static unsigned long basetime;$/;"	v	file:
basetime	src/SDL/i_system.c	/^static int basetime = 0;$/;"	v	file:
basexscale	src/r_plane.c	/^static fixed_t basexscale, baseyscale;$/;"	v	file:
baseyscale	src/r_plane.c	/^static fixed_t basexscale, baseyscale;$/;"	v	file:
bbox	src/am_map.h	/^  fixed_t bbox[4];$/;"	m	struct:am_frame_s
bbox	src/doomdata.h	/^  short bbox[2][4];$/;"	m	struct:__anon39
bbox	src/doomdata.h	/^  short bbox[2][4];$/;"	m	struct:__anon40
bbox	src/doomdata.h	/^  short bbox[2][4];$/;"	m	struct:__anon41
bbox	src/p_sight.c	/^  fixed_t bbox[4];$/;"	m	struct:__anon234	file:
bbox	src/r_defs.h	/^  fixed_t bbox[2][4];            \/\/ Bounding box for each child.$/;"	m	struct:__anon288
bbox	src/r_defs.h	/^  fixed_t bbox[4];       \/\/ A bounding box, for the linedef's extent$/;"	m	struct:line_s
bbox	src/r_defs.h	/^  fixed_t bbox[4];$/;"	m	struct:ssline_s
bbox	src/r_defs.h	/^  int bbox[4];           \/\/ bounding box in map units$/;"	m	struct:__anon283
bcnt	src/wi_stuff.c	/^static int    bcnt;$/;"	v	file:
bcopyp	src/r_things.c	1093;"	d	file:
bcopyp	src/r_things.c	1097;"	d	file:
be16	src/cmp.c	/^static uint16_t be16(uint16_t x) {$/;"	f	file:
be32	src/cmp.c	/^static uint32_t be32(uint32_t x) {$/;"	f	file:
be64	src/cmp.c	/^static uint64_t be64(uint64_t x) {$/;"	f	file:
bedouble	src/cmp.c	/^static double bedouble(double x) {$/;"	f	file:
befloat	src/cmp.c	/^static float befloat(float x) {$/;"	f	file:
before_context	src/PCRELIB/pcregrep.c	/^static int before_context = 0;$/;"	v	file:
bend	src/MUSIC/oplplayer.c	/^    int bend;$/;"	m	struct:__anon197	file:
best_compatibility	src/doomtype.h	/^  best_compatibility = prboom_6_compatibility,$/;"	e	enum:__anon57
bestslidefrac	src/p_map.c	/^static fixed_t   bestslidefrac;$/;"	v	file:
bestslideline	src/p_map.c	/^static line_t*   bestslideline;$/;"	v	file:
bfgcells	src/p_inter.c	/^int bfgcells = 40;      \/\/ used in p_pspr.c$/;"	v
bfgedition	src/d_main.c	/^dboolean bfgedition = 0;$/;"	v
bg	src/hu_lib.h	/^  const patchnum_t *bg;                  \/\/ patches for background$/;"	m	struct:__anon123
bg_color	src/hu_input.c	/^  hu_color_t bg_color;$/;"	m	struct:input_widget_s	file:
bg_color	src/hu_msg.c	/^  hu_color_t bg_color;$/;"	m	struct:message_widget_s	file:
bgcastcall	src/d_deh.c	/^const char *bgcastcall   = "BOSSBACK"; \/\/ Panel behind cast call$/;"	v
bgcolor	src/TEXTSCREEN/txt_io.c	/^static txt_color_t bgcolor = TXT_COLOR_BLACK;$/;"	v	file:
bgcolor	src/TEXTSCREEN/txt_label.h	/^    txt_color_t bgcolor;$/;"	m	struct:txt_label_s
bgflat06	src/d_deh.c	/^const char *bgflat06     = "SLIME16";  \/\/ DOOM2 after MAP06$/;"	v
bgflat11	src/d_deh.c	/^const char *bgflat11     = "RROCK14";  \/\/ DOOM2 after MAP11$/;"	v
bgflat15	src/d_deh.c	/^const char *bgflat15     = "RROCK13";  \/\/ DOOM2 going MAP15 to MAP31$/;"	v
bgflat20	src/d_deh.c	/^const char *bgflat20     = "RROCK07";  \/\/ DOOM2 after MAP20$/;"	v
bgflat30	src/d_deh.c	/^const char *bgflat30     = "RROCK17";  \/\/ DOOM2 after MAP30$/;"	v
bgflat31	src/d_deh.c	/^const char *bgflat31     = "RROCK19";  \/\/ DOOM2 going MAP31 to MAP32$/;"	v
bgflatE1	src/d_deh.c	/^const char *bgflatE1     = "FLOOR4_8"; \/\/ end of DOOM Episode 1$/;"	v
bgflatE2	src/d_deh.c	/^const char *bgflatE2     = "SFLR6_1";  \/\/ end of DOOM Episode 2$/;"	v
bgflatE3	src/d_deh.c	/^const char *bgflatE3     = "MFLR8_4";  \/\/ end of DOOM Episode 3$/;"	v
bgflatE4	src/d_deh.c	/^const char *bgflatE4     = "MFLR8_3";  \/\/ end of DOOM Episode 4$/;"	v
bias	src/gl_struct.h	/^  float bias;$/;"	m	struct:shadow_params_s
bin_size	src/cmp.h	/^  uint32_t  bin_size;$/;"	m	union:cmp_object_data_u
blank_command_queue	src/p_cmd.c	/^static GQueue *blank_command_queue;$/;"	v	file:
blazeClose	src/p_spec.h	/^  blazeClose,$/;"	e	enum:__anon253
blazeDWUS	src/p_spec.h	/^  blazeDWUS,$/;"	e	enum:__anon252
blazeOpen	src/p_spec.h	/^  blazeOpen,$/;"	e	enum:__anon253
blazeRaise	src/p_spec.h	/^  blazeRaise,$/;"	e	enum:__anon253
blkmargin	src/p_setup.c	1581;"	d	file:
blkmask	src/p_setup.c	1580;"	d	file:
blkshift	src/p_setup.c	1579;"	d	file:
block_memory_alloc_s	src/z_bmalloc.h	/^struct block_memory_alloc_s {$/;"	s
blockbox	src/r_defs.h	/^  int blockbox[4];       \/\/ mapblock bounding box for height changes$/;"	m	struct:__anon283
blockbytag	src/z_zone.c	/^static memblock_t *blockbytag[PU_MAX];$/;"	v	file:
blockline	src/p_map.c	/^line_t        *blockline;    \/* killough 8\/11\/98: blocking linedef *\/$/;"	v
blocklinks	src/p_setup.c	/^mobj_t    **blocklinks;           \/\/ for thing chains$/;"	v
blockmap	src/p_setup.c	/^int       *blockmap;              \/\/ was short -- killough$/;"	v
blockmaplump	src/p_setup.c	/^int       *blockmaplump;          \/\/ was short -- killough$/;"	v
blockmapxneg	src/p_setup.c	/^int blockmapxneg = -257;$/;"	v
blockmapyneg	src/p_setup.c	/^int blockmapyneg = -257;$/;"	v
blocks	src/z_bmalloc.c	/^  size_t             blocks;$/;"	m	struct:bmalpool_s	file:
blue_armor_class	src/p_inter.c	/^int blue_armor_class = 2;$/;"	v
bmalpool_s	src/z_bmalloc.c	/^typedef struct bmalpool_s {$/;"	s	file:
bmalpool_t	src/z_bmalloc.c	/^} bmalpool_t;$/;"	t	typeref:struct:bmalpool_s	file:
bmapheight	src/p_setup.c	/^int       bmapwidth, bmapheight;  \/\/ size in mapblocks$/;"	v
bmaporgx	src/p_setup.c	/^fixed_t   bmaporgx, bmaporgy;     \/\/ origin of block map$/;"	v
bmaporgy	src/p_setup.c	/^fixed_t   bmaporgx, bmaporgy;     \/\/ origin of block map$/;"	v
bmapwidth	src/p_setup.c	/^int       bmapwidth, bmapheight;  \/\/ size in mapblocks$/;"	v
bnext	src/p_mobj.h	/^    struct mobj_s*      bnext;$/;"	m	struct:mobj_s	typeref:struct:mobj_s::mobj_s
bob	src/d_player.h	/^  fixed_t             bob;$/;"	m	struct:player_s
bombdamage	src/p_map.c	/^int bombdamage;$/;"	v
bombsource	src/p_map.c	/^mobj_t *bombsource, *bombspot;$/;"	v
bombspot	src/p_map.c	/^mobj_t *bombsource, *bombspot;$/;"	v
bonuscount	src/d_player.h	/^  int                 bonuscount;$/;"	m	struct:player_s
boolean	src/cmp.h	/^  bool      boolean;$/;"	m	union:cmp_object_data_u
boom_201_compatibility	src/doomtype.h	/^  boom_201_compatibility,                \/* Boom v2.01 *\/$/;"	e	enum:__anon57
boom_202_compatibility	src/doomtype.h	/^  boom_202_compatibility,                \/* Boom v2.02 *\/$/;"	e	enum:__anon57
boom_cheat_route	src/m_cheat.c	/^static int boom_cheat_route[MAX_COMPATIBILITY_LEVEL];$/;"	v	file:
boom_cm	src/r_main.c	/^int boom_cm;         \/\/ current colormap$/;"	v
boom_compatibility	src/doomtype.h	/^  boom_compatibility = boom_201_compatibility, \/* Alias used by G_Compatibility *\/$/;"	e	enum:__anon57
boom_compatibility_compatibility	src/doomtype.h	/^  boom_compatibility_compatibility,      \/* Boom's compatibility mode *\/$/;"	e	enum:__anon57
borders	src/TEXTSCREEN/txt_gui.c	/^static const int borders[4][4] = $/;"	v	file:
both_context	src/PCRELIB/pcregrep.c	/^static int both_context = 0;$/;"	v	file:
bottom	src/p_spec.h	/^    bottom$/;"	e	enum:__anon258
bottom	src/r_defs.h	/^  unsigned short *bottom;$/;"	m	struct:visplane
bottomfrac	src/r_segs.c	/^static fixed_t  bottomfrac;$/;"	v	file:
bottomheight	src/p_spec.h	/^  fixed_t bottomheight;$/;"	m	struct:__anon268
bottommap	src/r_defs.h	/^  int bottommap, midmap, topmap; \/\/ killough 4\/4\/98: dynamic colormaps$/;"	m	struct:__anon283
bottomslope	src/p_map.c	/^static fixed_t  bottomslope;$/;"	v	file:
bottomslope	src/p_sight.c	/^  fixed_t topslope, bottomslope;   \/\/ slopes to top and bottom of target$/;"	m	struct:__anon234	file:
bottomslope	src/p_sight.c	/^fixed_t topslope, bottomslope;  \/\/ slopes to top and bottom of target$/;"	v
bottomstep	src/r_segs.c	/^static fixed_t  bottomstep;$/;"	v	file:
bottomtexheight	src/r_segs.c	/^static fixed_t  toptexheight, midtexheight, bottomtexheight; \/\/ cph$/;"	v	file:
bottomtexture	src/doomdata.h	/^  char  bottomtexture[8];$/;"	m	struct:__anon30
bottomtexture	src/r_defs.h	/^  short bottomtexture;$/;"	m	struct:__anon284
bottomtexture	src/r_segs.c	/^static int      bottomtexture;$/;"	v	file:
box_skybox_s	src/gl_intern.h	/^typedef struct box_skybox_s$/;"	s
box_skybox_t	src/gl_intern.h	/^} box_skybox_t;$/;"	t	typeref:struct:box_skybox_s
bprev	src/p_mobj.h	/^    struct mobj_s**     bprev; \/\/ killough 8\/11\/98: change to ptr-to-ptr$/;"	m	struct:mobj_s	typeref:struct:mobj_s::mobj_s
brain	src/p_enemy.c	/^struct brain_s brain;   \/\/ killough 3\/26\/98: global state of boss brain$/;"	v	typeref:struct:brain_s
brain_s	src/p_enemy.h	/^extern struct brain_s {         \/* killough 3\/26\/98: global state of boss brain *\/$/;"	s
braintargets	src/p_enemy.c	/^mobj_t **braintargets;$/;"	v
branch_chain	src/PCRELIB/pcre_internal.h	/^typedef struct branch_chain {$/;"	s
branch_chain	src/PCRELIB/pcre_internal.h	/^} branch_chain;$/;"	t	typeref:struct:branch_chain
brdr_b	src/st_stuff.c	/^patchnum_t brdr_t, brdr_b, brdr_l, brdr_r;$/;"	v
brdr_bl	src/st_stuff.c	/^patchnum_t brdr_tl, brdr_tr, brdr_bl, brdr_br;$/;"	v
brdr_br	src/st_stuff.c	/^patchnum_t brdr_tl, brdr_tr, brdr_bl, brdr_br;$/;"	v
brdr_l	src/st_stuff.c	/^patchnum_t brdr_t, brdr_b, brdr_l, brdr_r;$/;"	v
brdr_r	src/st_stuff.c	/^patchnum_t brdr_t, brdr_b, brdr_l, brdr_r;$/;"	v
brdr_t	src/st_stuff.c	/^patchnum_t brdr_t, brdr_b, brdr_l, brdr_r;$/;"	v
brdr_tl	src/st_stuff.c	/^patchnum_t brdr_tl, brdr_tr, brdr_bl, brdr_br;$/;"	v
brdr_tr	src/st_stuff.c	/^patchnum_t brdr_tl, brdr_tr, brdr_bl, brdr_br;$/;"	v
brighttime	src/p_spec.h	/^  int brighttime;$/;"	m	struct:__anon264
bsilheight	src/r_defs.h	/^  fixed_t bsilheight;                   \/\/ do not clip sprites above this$/;"	m	struct:drawseg_s
bstar	src/wi_stuff.c	/^static const char bstar[] = {"STFDEAD0"};$/;"	v	file:
btexture	src/p_spec.h	/^  int   btexture;$/;"	m	struct:__anon261
btimer	src/p_spec.h	/^  int   btimer;$/;"	m	struct:__anon261
buf	src/cmp.h	/^  void       *buf;$/;"	m	struct:cmp_ctx_s
buf	src/hu_input.c	/^  GString *buf;$/;"	m	struct:input_widget_s	file:
buf	src/hu_msg.c	/^  GString *buf;$/;"	m	struct:message_widget_s	file:
buf	src/i_video.h	/^  unsigned char *buf;$/;"	m	struct:vid_8ingl_s
buf	src/m_pbuf.h	/^  buf_t buf;$/;"	m	struct:pbuf_s
buf	src/md5.h	/^        UWORD32 buf[4];$/;"	m	struct:MD5Context
buf	src/memio.c	/^  unsigned char *buf;$/;"	m	struct:_MEMFILE	file:
buf_read	src/m_pbuf.c	/^static bool buf_read(cmp_ctx_t *ctx, void *data, size_t limit) {$/;"	f	file:
buf_s	src/m_buf.h	/^typedef struct buf_s {$/;"	s
buf_t	src/m_buf.h	/^} buf_t;$/;"	t	typeref:struct:buf_s
buf_write	src/m_pbuf.c	/^static size_t buf_write(cmp_ctx_t *ctx, const void *data, size_t count) {$/;"	f	file:
buffer	src/MUSIC/midifile.c	/^    byte *buffer;$/;"	m	struct:midi_file_s	file:
buffer	src/PCRELIB/pcretest.c	/^static uschar *buffer = NULL;$/;"	v	file:
buffer	src/TEXTSCREEN/txt_inputbox.h	/^    char *buffer;$/;"	m	struct:txt_inputbox_s
buffer	src/TEXTSCREEN/txt_spinctrl.h	/^    char *buffer;$/;"	m	struct:txt_spincontrol_s
buffer_height	src/gl_intern.h	/^  int buffer_width,buffer_height;$/;"	m	struct:__anon89
buffer_size	src/MUSIC/midifile.c	/^    unsigned int buffer_size;$/;"	m	struct:midi_file_s	file:
buffer_size	src/PCRELIB/pcretest.c	/^static int buffer_size = 50000;$/;"	v	file:
buffer_size	src/gl_intern.h	/^  int buffer_size;$/;"	m	struct:__anon89
buffer_size	src/gl_shader.c	105;"	d	file:
buffer_width	src/gl_intern.h	/^  int buffer_width,buffer_height;$/;"	m	struct:__anon89
buflen	src/memio.c	/^  size_t buflen;$/;"	m	struct:_MEMFILE	file:
build	src/hu_stuff.c	/^  HU_widget_build_func build;$/;"	m	struct:hud_widget_s	file:
build8	src/p_spec.h	/^  build8, \/\/ slowly build by 8$/;"	e	enum:__anon256
buildBinary	src/MAC/macsupport.rb	/^def buildBinary(task, path, file, sources)$/;"	f
buildStair	src/p_spec.h	/^  buildStair,$/;"	e	enum:__anon255
build_mmfile	src/m_delta.c	/^static void build_mmfile(mmfile_t *mmf, char *data, size_t size) {$/;"	f	file:
bulletslope	src/p_pspr.c	/^fixed_t bulletslope;$/;"	v
bundleDir	src/MAC/macsupport.rb	/^def bundleDir(dir)$/;"	f	class:installTask
button_t	src/p_spec.h	/^} button_t;$/;"	t	typeref:struct:__anon261
buttoncode_t	src/d_event.h	/^} buttoncode_t;$/;"	t	typeref:enum:__anon16
buttonlist	src/p_switch.c	/^button_t  buttonlist[MAXBUTTONS];$/;"	v
buttons	src/d_ticcmd.h	/^  byte   buttons;$/;"	m	struct:__anon63
bw_blue	src/gl_main.c	/^float bw_blue = 0.11f;$/;"	v
bw_green	src/gl_main.c	/^float bw_green = 0.59f;$/;"	v
bw_red	src/gl_main.c	/^float bw_red = 0.3f;$/;"	v
bwhere_e	src/p_spec.h	/^} bwhere_e;$/;"	t	typeref:enum:__anon258
byte	src/MAC/config.h	/^typedef unsigned char byte;$/;"	t
byte	src/MUSIC/midifile.c	/^typedef unsigned char byte;$/;"	t	file:
byte	src/doomtype.h	/^typedef uint8_t byte;$/;"	t
byte	src/doomtype.h	/^typedef unsigned char byte;$/;"	t
byteSwap	src/md5.c	/^byteSwap(UWORD32 *buf, unsigned words)$/;"	f
byteSwap	src/md5.c	62;"	d	file:
byte_pitch	src/r_draw.h	/^  int   byte_pitch;$/;"	m	struct:__anon299
byte_pitch	src/v_video.h	/^  int byte_pitch;      \/\/ tha actual width of one line, used when mallocing$/;"	m	struct:__anon342
byte_tempbuf	src/r_draw.c	/^static byte           *byte_tempbuf;$/;"	v	file:
byte_topleft	src/r_draw.h	/^  byte           *byte_topleft;$/;"	m	struct:__anon299
byteflip	src/PCRELIB/pcre_try_flipped.c	/^byteflip(unsigned long int value, int n)$/;"	f	file:
byteflip	src/PCRELIB/pcretest.c	/^byteflip(unsigned long int value, int n)$/;"	f	file:
bytes	src/md5.h	/^        UWORD32 bytes[2];$/;"	m	struct:MD5Context
bytes_per_tic	src/g_game.c	/^int             bytes_per_tic;$/;"	v
cTask	src/MAC/macsupport.rb	/^def cTask(object, source)$/;"	f
c_scalelight	src/r_main.c	/^const lighttable_t *(*c_scalelight)[LIGHTLEVELS_MAX][MAXLIGHTSCALE];$/;"	v
c_zlight	src/r_main.c	/^const lighttable_t *(*c_zlight)[LIGHTLEVELS_MAX][MAXLIGHTZ];$/;"	v
cache	src/e6y_launcher.c	/^  fileitem_t *cache;$/;"	m	struct:__anon68	file:
cache	src/w_memcache.c	/^  void *cache;$/;"	m	struct:__anon350	file:
cache	src/w_mmap.c	/^  void *cache;$/;"	m	struct:__anon351	file:
cacheddistance	src/r_plane.c	/^static fixed_t *cacheddistance = NULL;$/;"	v	file:
cachedheight	src/r_plane.c	/^static fixed_t *cachedheight = NULL;$/;"	v	file:
cachedxstep	src/r_plane.c	/^static fixed_t *cachedxstep = NULL;$/;"	v	file:
cachedystep	src/r_plane.c	/^static fixed_t *cachedystep = NULL;$/;"	v	file:
cachelump	src/w_memcache.c	/^} *cachelump;$/;"	v	typeref:struct:__anon350	file:
cachelump	src/w_mmap.c	/^} *cachelump;$/;"	v	typeref:struct:__anon351	file:
cachesize	src/e6y_launcher.c	/^  size_t cachesize;$/;"	m	struct:__anon68	file:
calculate_base_layout_dimensions	src/hu_msg.c	/^static void calculate_base_layout_dimensions(message_widget_t *mw) {$/;"	f	file:
calculate_line_height	src/hu_msg.c	/^static void calculate_line_height(gpointer data, gpointer user_data) {$/;"	f	file:
callback	src/MUSIC/opl_queue.c	/^    opl_callback_t callback;$/;"	m	struct:__anon182	file:
callback	src/PCSOUND/pcsound_linux.c	/^static pcsound_callback_func callback;$/;"	v	file:
callback	src/PCSOUND/pcsound_sdl.c	/^static pcsound_callback_func callback;$/;"	v	file:
callback	src/PCSOUND/pcsound_win32.c	/^static pcsound_callback_func callback;$/;"	v	file:
callback_data_t	src/TEXTSCREEN/txt_dropdown.c	/^} callback_data_t;$/;"	t	typeref:struct:__anon328	file:
callback_queue	src/MUSIC/opl.c	/^static opl_callback_queue_t *callback_queue;$/;"	v	file:
callback_table	src/TEXTSCREEN/txt_widget.h	/^    txt_callback_table_t *callback_table;$/;"	m	struct:txt_widget_s
callbacks	src/TEXTSCREEN/txt_widget.c	/^    txt_callback_t *callbacks;$/;"	m	struct:txt_callback_table_s	file:
calloc	src/z_zone.h	173;"	d
calloc	src/z_zone.h	179;"	d
calloc_IfSameLevel	src/p_setup.c	/^static void *calloc_IfSameLevel(void* p, size_t n1, size_t n2)$/;"	f	file:
callout	src/PCRELIB/pcretest.c	/^static int callout(pcre_callout_block *cb)$/;"	f	file:
callout_count	src/PCRELIB/pcretest.c	/^static int callout_count;$/;"	v	file:
callout_data	src/PCRELIB/pcre.h	/^  void        *callout_data;      \/* Data passed in with the call *\/$/;"	m	struct:pcre_callout_block
callout_data	src/PCRELIB/pcre.h	/^  void *callout_data;             \/* Data passed back in callouts *\/$/;"	m	struct:pcre_extra
callout_data	src/PCRELIB/pcre_internal.h	/^  void  *callout_data;          \/* To pass back to callouts *\/$/;"	m	struct:dfa_match_data
callout_data	src/PCRELIB/pcre_internal.h	/^  void  *callout_data;          \/* To pass back to callouts *\/$/;"	m	struct:match_data
callout_extra	src/PCRELIB/pcretest.c	/^static int callout_extra;$/;"	v	file:
callout_fail_count	src/PCRELIB/pcretest.c	/^static int callout_fail_count;$/;"	v	file:
callout_fail_id	src/PCRELIB/pcretest.c	/^static int callout_fail_id;$/;"	v	file:
callout_number	src/PCRELIB/pcre.h	/^  int          callout_number;    \/* Number compiled into pattern *\/$/;"	m	struct:pcre_callout_block
callpat	src/PCRELIB/pcre_exec.c	3425;"	d	file:
callpat	src/PCRELIB/pcre_exec.c	449;"	d	file:
camera_s	src/e6y.h	/^typedef struct camera_s$/;"	s
camera_t	src/e6y.h	/^} camera_t;$/;"	t	typeref:struct:camera_s
cap_muxcommand	src/i_capture.c	/^const char *cap_muxcommand;$/;"	v
cap_remove_tempfiles	src/i_capture.c	/^int cap_remove_tempfiles;$/;"	v
cap_soundcommand	src/i_capture.c	/^const char *cap_soundcommand;$/;"	v
cap_tempfile1	src/i_capture.c	/^const char *cap_tempfile1;$/;"	v
cap_tempfile2	src/i_capture.c	/^const char *cap_tempfile2;$/;"	v
cap_videocommand	src/i_capture.c	/^const char *cap_videocommand;$/;"	v
capacity	src/m_buf.h	/^  size_t capacity;$/;"	m	struct:buf_s
capacity	src/m_misc.h	/^  int capacity;$/;"	m	struct:array_s
capture_last	src/PCRELIB/pcre.h	/^  int          capture_last;      \/* Most recently closed capture *\/$/;"	m	struct:pcre_callout_block
capture_last	src/PCRELIB/pcre_internal.h	/^  int    capture_last;          \/* Most recent capture number *\/$/;"	m	struct:match_data
capture_top	src/PCRELIB/pcre.h	/^  int          capture_top;       \/* Max current capture *\/$/;"	m	struct:pcre_callout_block
capturing_video	src/i_capture.c	/^int capturing_video = 0;$/;"	v
card_t	src/doomdef.h	/^} card_t;$/;"	t	typeref:enum:__anon48
cards	src/d_player.h	/^  dboolean            cards[NUMCARDS];$/;"	m	struct:player_s
carrier	src/MUSIC/oplplayer.c	/^    genmidi_op_t carrier;$/;"	m	struct:__anon195	file:
caseless	src/PCRELIB/pcrecpp.h	/^  bool caseless() const {$/;"	f	class:pcrecpp::RE_Options
castattacking	src/f_finale.c	/^dboolean         castattacking;$/;"	v
castdeath	src/f_finale.c	/^dboolean         castdeath;$/;"	v
castframes	src/f_finale.c	/^int             castframes;$/;"	v
castinfo_t	src/f_finale.c	/^} castinfo_t;$/;"	t	typeref:struct:__anon70	file:
castnum	src/f_finale.c	/^int             castnum;$/;"	v
castonmelee	src/f_finale.c	/^int             castonmelee;$/;"	v
castorder	src/f_finale.c	/^static const castinfo_t castorder[] = { \/\/ CPhipps - static const, initialised here$/;"	v	file:
caststate	src/f_finale.c	/^state_t*        caststate;$/;"	v
casttics	src/f_finale.c	/^int             casttics;$/;"	v
cb_video_t	src/v_video.h	/^} cb_video_t;$/;"	t	typeref:struct:__anon340
cbit_cntrl	src/PCRELIB/pcre_internal.h	917;"	d
cbit_digit	src/PCRELIB/pcre_internal.h	910;"	d
cbit_graph	src/PCRELIB/pcre_internal.h	914;"	d
cbit_length	src/PCRELIB/pcre_internal.h	918;"	d
cbit_lower	src/PCRELIB/pcre_internal.h	912;"	d
cbit_print	src/PCRELIB/pcre_internal.h	915;"	d
cbit_punct	src/PCRELIB/pcre_internal.h	916;"	d
cbit_space	src/PCRELIB/pcre_internal.h	908;"	d
cbit_upper	src/PCRELIB/pcre_internal.h	911;"	d
cbit_word	src/PCRELIB/pcre_internal.h	913;"	d
cbit_xdigit	src/PCRELIB/pcre_internal.h	909;"	d
cbits	src/PCRELIB/pcre_internal.h	/^  const uschar *cbits;          \/* Points to character type table *\/$/;"	m	struct:compile_data
cbits_offset	src/PCRELIB/pcre_internal.h	925;"	d
ceiling	src/gl_missingtexture.c	/^  int ceiling;      \/\/ this group is for ceilings or flats$/;"	m	struct:__anon108	file:
ceiling	src/p_spec.h	/^  ceiling_t *ceiling;$/;"	m	struct:ceilinglist
ceiling_e	src/p_spec.h	/^} ceiling_e;$/;"	t	typeref:enum:__anon254
ceiling_special	src/p_spec.h	/^  ceiling_special,$/;"	e	enum:__anon249
ceiling_t	src/p_spec.h	/^} ceiling_t;$/;"	t	typeref:struct:__anon268
ceiling_xoffs	src/r_defs.h	/^  fixed_t ceiling_xoffs, ceiling_yoffs;$/;"	m	struct:__anon283
ceiling_yoffs	src/r_defs.h	/^  fixed_t ceiling_xoffs, ceiling_yoffs;$/;"	m	struct:__anon283
ceilingchange_e	src/p_spec.h	/^} ceilingchange_e;$/;"	t	typeref:enum:__anon244
ceilingclip	src/r_plane.c	/^int *ceilingclip = NULL;$/;"	v
ceilingdata	src/r_defs.h	/^  void *ceilingdata;  \/\/ floors, ceilings, lighting,$/;"	m	struct:__anon283
ceilingdestheight	src/p_spec.h	/^  fixed_t ceilingdestheight;$/;"	m	struct:__anon270
ceilingheight	src/doomdata.h	/^  short ceilingheight;$/;"	m	struct:__anon32
ceilingheight	src/r_defs.h	/^  fixed_t ceilingheight;$/;"	m	struct:__anon283
ceilinglightsec	src/r_defs.h	/^  int floorlightsec, ceilinglightsec;$/;"	m	struct:__anon283
ceilingline	src/p_map.c	/^line_t    *ceilingline;$/;"	v
ceilinglist	src/p_spec.h	/^typedef struct ceilinglist {$/;"	s
ceilinglist_t	src/p_spec.h	/^} ceilinglist_t;$/;"	t	typeref:struct:ceilinglist
ceilingmodel_t	src/p_spec.h	/^} ceilingmodel_t;$/;"	t	typeref:enum:__anon245
ceilingpic	src/doomdata.h	/^  char  ceilingpic[8];$/;"	m	struct:__anon32
ceilingpic	src/r_defs.h	/^  short ceilingpic;$/;"	m	struct:__anon283
ceilingplane	src/r_plane.c	/^visplane_t *floorplane, *ceilingplane;$/;"	v
ceilingtarget_e	src/p_spec.h	/^} ceilingtarget_e;$/;"	t	typeref:enum:__anon243
ceilingz	src/p_mobj.h	/^    fixed_t             ceilingz;$/;"	m	struct:mobj_s
centered	src/p_user.h	/^  bool centered;$/;"	m	struct:player_message_s
centermessage	src/d_player.h	/^  const char*         centermessage;$/;"	m	struct:player_s
centerx	src/am_map.h	/^  fixed_t centerx, centery;$/;"	m	struct:am_frame_s
centerx	src/r_main.c	/^int      centerx, centery;$/;"	v
centerx_f	src/am_map.h	/^  float centerx_f, centery_f;$/;"	m	struct:am_frame_s
centerxfrac	src/r_main.c	/^fixed_t  centerxfrac, centeryfrac;$/;"	v
centery	src/am_map.h	/^  fixed_t centerx, centery;$/;"	m	struct:am_frame_s
centery	src/r_main.c	/^int      centerx, centery;$/;"	v
centery_f	src/am_map.h	/^  float centerx_f, centery_f;$/;"	m	struct:am_frame_s
centeryfrac	src/r_main.c	/^fixed_t  centerxfrac, centeryfrac;$/;"	v
chan	src/MUSIC/dbopl.h	/^  Channel chan[18];$/;"	m	struct:_Chip
chanData	src/MUSIC/dbopl.h	/^  Bit32u chanData;      \/\/Frequency\/octave and derived data coming from whatever channel controls this$/;"	m	struct:_Operator
chanData	src/MUSIC/dbopl.h	/^  Bit32u chanData;    \/\/Frequency\/octave and derived values$/;"	m	struct:_Channel
change_e	src/p_spec.h	/^} change_e;$/;"	t	typeref:enum:__anon250
changed	src/gl_vertex.c	/^  dboolean changed;$/;"	m	struct:vertexsplit_info_s	file:
channel	src/MUSIC/midifile.h	/^        midi_channel_event_data_t channel;$/;"	m	union:__anon191::__anon192
channel	src/MUSIC/midifile.h	/^    unsigned int channel;$/;"	m	struct:__anon190
channel	src/MUSIC/oplplayer.c	/^    opl_channel_data_t *channel;$/;"	m	struct:opl_voice_s	file:
channel_empty	src/n_peer.c	/^static bool channel_empty(netchan_t *nc) {$/;"	f	file:
channel_info_t	src/SDL/i_sound.c	/^} channel_info_t;$/;"	t	typeref:struct:__anon313	file:
channel_map	src/mus2mid.c	/^static int channel_map[NUM_CHANNELS];$/;"	v	file:
channel_t	src/s_sound.c	/^} channel_t;$/;"	t	typeref:struct:__anon319	file:
channelinfo	src/SDL/i_sound.c	/^channel_info_t channelinfo[MAX_SOUND_CHANNELS];$/;"	v
channels	src/MUSIC/oplplayer.c	/^    opl_channel_data_t channels[MIDI_CHANNELS_PER_TRACK];$/;"	m	struct:__anon198	file:
channels	src/s_sound.c	/^static GArray *channels;$/;"	v	file:
channelvelocities	src/mus2mid.c	/^static byte channelvelocities[] =$/;"	v	file:
channelvol	src/MUSIC/portmidiplayer.c	/^static int channelvol[16];$/;"	v	file:
charptr	src/PCRELIB/pcre_exec.c	3426;"	d	file:
charptr	src/PCRELIB/pcre_exec.c	447;"	d	file:
chars_read	src/m_cheat.h	/^  size_t chars_read;$/;"	m	struct:cheatseq_s
chat_char	src/hu_stuff.c	/^char chat_char;                 \/\/ remove later.$/;"	v
chat_index	src/m_menu.c	/^int   chat_index;$/;"	v
chat_macros	src/hu_stuff.c	/^const char* chat_macros[] =$/;"	v
chat_settings	src/m_menu.c	/^setup_menu_t* chat_settings[] =$/;"	v
chat_settings1	src/m_menu.c	/^setup_menu_t chat_settings1[] =  \/\/ Chat Strings screen$/;"	v
chat_settings1	src/m_menu.c	/^setup_menu_t chat_settings1[];$/;"	v
chat_string_buffer	src/m_menu.c	/^char* chat_string_buffer; \/\/ points to new chat strings while editing$/;"	v
chat_widget_s	src/hu_chat.c	/^struct chat_widget_s {$/;"	s	file:
chat_widget_t	src/hu_chat.h	/^typedef struct chat_widget_s chat_widget_t;$/;"	t	typeref:struct:chat_widget_s
chatchar	src/d_ticcmd.h	/^  byte   chatchar;$/;"	m	struct:__anon63
cheat	src/m_cheat.c	/^cheatseq_t cheat[] = {$/;"	v
cheat	src/m_cheat.h	/^  const char *	cheat;$/;"	m	struct:cheatseq_s
cheat_behold	src/m_cheat.c	/^static void cheat_behold() {$/;"	f	file:
cheat_choppers	src/m_cheat.c	/^static void cheat_choppers() {$/;"	f	file:
cheat_clev	src/m_cheat.c	/^static void cheat_clev(char buf[3]) {$/;"	f	file:
cheat_comp	src/m_cheat.c	/^static void cheat_comp() {$/;"	f	file:
cheat_ddt	src/m_cheat.c	/^static void cheat_ddt() {$/;"	f	file:
cheat_fa	src/m_cheat.c	/^static void cheat_fa() {$/;"	f	file:
cheat_fast	src/m_cheat.c	/^static void cheat_fast() {$/;"	f	file:
cheat_fly	src/m_cheat.c	/^static void cheat_fly() {$/;"	f	file:
cheat_friction	src/m_cheat.c	/^static void cheat_friction() {$/;"	f	file:
cheat_god	src/m_cheat.c	/^static void cheat_god() {$/;"	f	file:
cheat_health	src/m_cheat.c	/^static void cheat_health() {$/;"	f	file:
cheat_hom	src/m_cheat.c	/^static void cheat_hom() {$/;"	f	file:
cheat_k	src/m_cheat.c	/^static void cheat_k() {$/;"	f	file:
cheat_kfa	src/m_cheat.c	/^static void cheat_kfa() {$/;"	f	file:
cheat_massacre	src/m_cheat.c	/^static void cheat_massacre() {  \/\/ jff 2\/01\/98 kill all monsters$/;"	f	file:
cheat_megaarmour	src/m_cheat.c	/^static void cheat_megaarmour() {$/;"	f	file:
cheat_mus	src/m_cheat.c	/^static void cheat_mus(char buf[3]) {$/;"	f	file:
cheat_mypos	src/m_cheat.c	/^static void cheat_mypos() {$/;"	f	file:
cheat_noclip	src/m_cheat.c	/^static void cheat_noclip() {$/;"	f	file:
cheat_notarget	src/m_cheat.c	/^static void cheat_notarget() {$/;"	f	file:
cheat_pitch	src/m_cheat.c	/^static void cheat_pitch() {$/;"	f	file:
cheat_player_arrow	src/am_map.c	/^mline_t cheat_player_arrow[] =$/;"	v
cheat_pushers	src/m_cheat.c	/^static void cheat_pushers() {$/;"	f	file:
cheat_pw	src/m_cheat.c	/^static void cheat_pw(int pw) {$/;"	f	file:
cheat_rate	src/m_cheat.c	/^static void cheat_rate() {$/;"	f	file:
cheat_smart	src/m_cheat.c	/^static void cheat_smart() {$/;"	f	file:
cheat_t	src/d_player.h	/^} cheat_t;$/;"	t	typeref:enum:__anon59
cheat_tntammo	src/m_cheat.c	/^static void cheat_tntammo() {$/;"	f	file:
cheat_tntammox	src/m_cheat.c	/^static void cheat_tntammox(char buf[1]) {$/;"	f	file:
cheat_tntkey	src/m_cheat.c	/^static void cheat_tntkey() {$/;"	f	file:
cheat_tntkeyx	src/m_cheat.c	/^static void cheat_tntkeyx() {$/;"	f	file:
cheat_tntkeyxx	src/m_cheat.c	/^static void cheat_tntkeyxx(int key) {$/;"	f	file:
cheat_tnttran	src/m_cheat.c	/^static void cheat_tnttran() {$/;"	f	file:
cheat_tntweap	src/m_cheat.c	/^static void cheat_tntweap() {$/;"	f	file:
cheat_tntweapx	src/m_cheat.c	/^static void cheat_tntweapx(char buf[3]) {$/;"	f	file:
cheats	src/d_player.h	/^  int                 cheats;$/;"	m	struct:player_s
cheatseq_s	src/m_cheat.h	/^typedef struct cheatseq_s {$/;"	s
cheatseq_t	src/m_cheat.h	/^} cheatseq_t;$/;"	t	typeref:struct:cheatseq_s
checkGLVertex	src/p_setup.c	/^static int checkGLVertex(int num)$/;"	f	file:
check_cursor	src/m_buf.c	/^static void check_cursor(buf_t *buf) {$/;"	f	file:
check_escape	src/PCRELIB/pcre_compile.c	/^check_escape(const uschar **ptrptr, int *errorcodeptr, int bracount,$/;"	f	file:
check_intercept	src/p_maputl.c	/^void check_intercept(void)$/;"	f
check_match_limit	src/PCRELIB/pcretest.c	/^check_match_limit(pcre *re, pcre_extra *extra, uschar *bptr, int len,$/;"	f	file:
check_newline	src/PCRELIB/pcretest.c	/^check_newline(uschar *p, FILE *f)$/;"	f	file:
check_posix_name	src/PCRELIB/pcre_compile.c	/^check_posix_name(const uschar *ptr, int len)$/;"	f	file:
check_posix_syntax	src/PCRELIB/pcre_compile.c	/^check_posix_syntax(const uschar *ptr, const uschar **endptr, compile_data *cd)$/;"	f	file:
check_range	src/n_pack.c	58;"	d	file:
check_x_funcs	src/x_main.c	/^static void check_x_funcs(void) {$/;"	f	file:
checkcoord	src/r_bsp.c	/^static const int checkcoord[12][4] = \/\/ killough -- static const$/;"	v	file:
checksum	src/d_ipxgate.c	/^    unsigned            checksum;$/;"	m	struct:a	file:
checksum	src/d_net.h	/^    unsigned            checksum;$/;"	m	struct:__anon23
checksum	src/protocol.h	/^  byte checksum;       \/\/ Simple checksum of the entire packet$/;"	m	struct:__anon228
checksum_gamestate	src/p_checksum.c	/^void checksum_gamestate(int tic) {$/;"	f
cheesy	src/TEXTSCREEN/examples/guitest.c	/^int cheesy;$/;"	v
chex	src/doomdef.h	/^  chex,         \/\/ Chex Quest$/;"	e	enum:__anon44
child	src/TEXTSCREEN/txt_scrollpane.h	/^    txt_widget_t *child;$/;"	m	struct:txt_scrollpane_s
children	src/doomdata.h	/^  int children[2];$/;"	m	struct:__anon40
children	src/doomdata.h	/^  int children[2];$/;"	m	struct:__anon41
children	src/doomdata.h	/^  unsigned short children[2];$/;"	m	struct:__anon39
children	src/r_defs.h	/^  int children[2];    \/\/ If NF_SUBSECTOR its a subsector.$/;"	m	struct:__anon288
cht_InitCheats	src/m_cheat.c	/^static void cht_InitCheats(void) {$/;"	f	file:
cht_never	src/m_cheat.h	/^    cht_never = not_net | not_demo$/;"	e	enum:cheatseq_s::__anon145
chunk_header	src/MUSIC/midifile.c	/^    chunk_header_t chunk_header;$/;"	m	struct:__anon180	file:
chunk_header_t	src/MUSIC/midifile.c	/^} PACKEDATTR chunk_header_t;$/;"	t	typeref:struct:__anon179	file:
chunk_id	src/MUSIC/midifile.c	/^    byte chunk_id[4];$/;"	m	struct:__anon179	file:
chunk_size	src/MUSIC/midifile.c	/^    unsigned int chunk_size;$/;"	m	struct:__anon179	file:
cl	src/hu_lib.h	/^  int     cl;                          \/\/ current line number$/;"	m	struct:__anon123
cl	src/hu_lib.h	/^  int     cl;                   \/\/ current line number$/;"	m	struct:__anon122
cl_authorization_level	src/n_main.c	/^static auth_level_e cl_authorization_level = AUTH_LEVEL_NONE;$/;"	v	file:
cl_check_for_state_updates	src/n_main.c	/^static void cl_check_for_state_updates(void) {$/;"	f	file:
cl_current_command_index	src/n_main.c	/^static int          cl_current_command_index = 0;$/;"	v	file:
cl_delta_from_tic	src/n_main.c	/^static int          cl_delta_from_tic = -1;$/;"	v	file:
cl_delta_to_tic	src/n_main.c	/^static int          cl_delta_to_tic = -1;$/;"	v	file:
cl_latest_command_run	src/n_main.c	/^static int          cl_latest_command_run = 0;$/;"	v	file:
cl_load_new_state	src/n_main.c	/^static bool cl_load_new_state(netpeer_t *server,$/;"	f	file:
cl_loading_state	src/n_main.c	/^static bool         cl_loading_state = false;$/;"	v	file:
cl_local_command_index	src/n_main.c	/^static int          cl_local_command_index = 0;$/;"	v	file:
cl_predict	src/n_main.c	/^static void cl_predict(int saved_gametic,$/;"	f	file:
cl_received_setup	src/n_main.c	/^static bool         cl_received_setup = false;$/;"	v	file:
cl_repredicting	src/n_main.c	/^static bool         cl_repredicting = false;$/;"	v	file:
cl_running_consoleplayer_commands	src/n_main.c	/^static bool         cl_running_consoleplayer_commands = false;$/;"	v	file:
cl_running_nonconsoleplayer_commands	src/n_main.c	/^static bool         cl_running_nonconsoleplayer_commands = false;$/;"	v	file:
cl_state_tic	src/n_main.c	/^static int          cl_state_tic = -1;$/;"	v	file:
cl_synchronized_command_index	src/n_main.c	/^static int          cl_synchronized_command_index = -1;$/;"	v	file:
cl_synchronizing	src/n_main.c	/^static bool         cl_synchronizing = false;$/;"	v	file:
cleanup	src/SDL/SDL_win32_main.c	/^static void cleanup(void)$/;"	f	file:
cleanup_output	src/SDL/SDL_win32_main.c	/^static void cleanup_output(void)$/;"	f	file:
clear	src/hu_input.c	/^static void clear(input_widget_t *iw) {$/;"	f	file:
clear_channel	src/n_peer.c	/^static void clear_channel(netchan_t *nc) {$/;"	f	file:
clear_file_error	src/m_file.c	/^static void clear_file_error(void) {$/;"	f	file:
clear_game_state_data	src/n_state.c	/^static void clear_game_state_data(gpointer gp) {$/;"	f	file:
clear_state_buffer	src/n_state.c	/^static void clear_state_buffer(gpointer gp) {$/;"	f	file:
clfastparm	src/d_main.c	/^dboolean clfastparm;     \/\/ checkparm of -fast$/;"	v
clieant_active_texture_enabled	src/gl_opengl.c	/^int clieant_active_texture_enabled[32];$/;"	v
clipammo	src/p_inter.c	/^int clipammo[NUMAMMO] = { 10,  4,  20,  1};$/;"	v
clipangle	src/r_main.c	/^angle_t clipangle;$/;"	v
cliparea	src/TEXTSCREEN/txt_gui.c	/^static txt_cliparea_t *cliparea = NULL;$/;"	v	file:
clipbot	src/r_things.c	/^static int *clipbot = NULL; \/\/ killough 2\/8\/98: \/\/ dropoff overflow$/;"	v	file:
cliphead	src/gl_clipper.c	/^clipnode_t *cliphead;$/;"	v
clipnode_s	src/gl_clipper.c	/^typedef struct clipnode_s$/;"	s	file:
clipnode_t	src/gl_clipper.c	/^} clipnode_t;$/;"	t	typeref:struct:clipnode_s	file:
clipnodes	src/gl_clipper.c	/^clipnode_t *clipnodes;$/;"	v
cliptop	src/r_things.c	/^static int *cliptop = NULL; \/\/ change to MAX_*  \/\/ dropoff overflow$/;"	v	file:
clnomonsters	src/d_main.c	/^dboolean clnomonsters;   \/\/ checkparm of -nomonsters$/;"	v
close30ThenOpen	src/p_spec.h	/^  close30ThenOpen,$/;"	e	enum:__anon253
closeDoor	src/p_spec.h	/^  closeDoor,$/;"	e	enum:__anon253
close_log	src/d_log.c	/^static void close_log(gpointer data) {$/;"	f	file:
close_logs	src/d_log.c	/^static void close_logs(void) {$/;"	f	file:
closedirectory	src/PCRELIB/pcregrep.c	/^closedirectory(directory_type *dir)$/;"	f	file:
closedirectory	src/PCRELIB/pcregrep.c	/^closedirectory(directory_type *dir)$/;"	f
closedirectory	src/PCRELIB/pcregrep.c	/^void closedirectory(directory_type *dir) {}$/;"	f
clrespawnparm	src/d_main.c	/^dboolean clrespawnparm;  \/\/ checkparm of -respawn$/;"	v
cm	src/gl_intern.h	/^  int cm;$/;"	m	struct:__anon101
cm	src/gl_intern.h	/^  int cm;$/;"	m	struct:__anon102
cm	src/gl_intern.h	/^  int cm;$/;"	m	struct:__anon89
cm	src/hu_lib.h	/^  int   cm;                         \/\/jff 2\/16\/52 output color range$/;"	m	struct:__anon121
cm	src/hu_stuff.h	/^  int cm;$/;"	m	struct:custom_message_s
cm2RGB	src/gl_main.c	/^GLfloat cm2RGB[CR_LIMIT + 1][4] =$/;"	v
cmap	src/gl_hires.c	/^  GLubyte *cmap;$/;"	m	struct:__anon85	file:
cmapEntries	src/gl_hires.c	/^  GLsizei  cmapEntries;$/;"	m	struct:__anon85	file:
cmapFormat	src/gl_hires.c	/^  GLenum   cmapFormat;$/;"	m	struct:__anon85	file:
cmd	src/d_player.h	/^  ticcmd_t            cmd;$/;"	m	struct:player_s
cmd	src/e6y.h	/^  const char *cmd;$/;"	m	struct:prboom_comp_s
cmd	src/hu_tracers.h	/^  char cmd[32];$/;"	m	struct:traceslist_s
cmd	src/hu_tracers.h	/^  char cmd[32];$/;"	m	struct:traceslistinit_s
cmd	src/n_net.h	/^  ticcmd_t cmd;$/;"	m	struct:netticcmd_s
cmds	src/d_ipxgate.c	/^    ticcmd_t            cmds[BACKUPTICS];$/;"	m	struct:a	file:
cmds	src/d_net.h	/^    ticcmd_t            cmds[BACKUPTICS];$/;"	m	struct:__anon23
cmp	src/m_pbuf.h	/^  cmp_ctx_t cmp;$/;"	m	struct:pbuf_s
cmp_ctx_s	src/cmp.h	/^typedef struct cmp_ctx_s {$/;"	s
cmp_ctx_t	src/cmp.h	/^} cmp_ctx_t;$/;"	t	typeref:struct:cmp_ctx_s
cmp_error_messages	src/cmp.c	/^const char *cmp_error_messages[ERROR_MAX + 1] = {$/;"	v
cmp_ext_s	src/cmp.h	/^typedef struct cmp_ext_s {$/;"	s
cmp_ext_t	src/cmp.h	/^} cmp_ext_t;$/;"	t	typeref:struct:cmp_ext_s
cmp_init	src/cmp.c	/^void cmp_init(cmp_ctx_t *ctx, void *buf, cmp_reader read, cmp_writer write) {$/;"	f
cmp_mp_version	src/cmp.c	/^uint32_t cmp_mp_version(void) {$/;"	f
cmp_object_data_u	src/cmp.h	/^union cmp_object_data_u {$/;"	u
cmp_object_s	src/cmp.h	/^typedef struct cmp_object_s {$/;"	s
cmp_object_t	src/cmp.h	/^} cmp_object_t;$/;"	t	typeref:struct:cmp_object_s
cmp_read_array	src/cmp.c	/^bool cmp_read_array(cmp_ctx_t *ctx, uint32_t *size) {$/;"	f
cmp_read_bin	src/cmp.c	/^bool cmp_read_bin(cmp_ctx_t *ctx, void *data, uint32_t *size) {$/;"	f
cmp_read_bin_size	src/cmp.c	/^bool cmp_read_bin_size(cmp_ctx_t *ctx, uint32_t *size) {$/;"	f
cmp_read_bool	src/cmp.c	/^bool cmp_read_bool(cmp_ctx_t *ctx, bool *b) {$/;"	f
cmp_read_bool_as_u8	src/cmp.c	/^bool cmp_read_bool_as_u8(cmp_ctx_t *ctx, uint8_t *b) {$/;"	f
cmp_read_char	src/cmp.c	/^bool cmp_read_char(cmp_ctx_t *ctx, int8_t *c) {$/;"	f
cmp_read_double	src/cmp.c	/^bool cmp_read_double(cmp_ctx_t *ctx, double *d) {$/;"	f
cmp_read_ext	src/cmp.c	/^bool cmp_read_ext(cmp_ctx_t *ctx, int8_t *type, uint32_t *size, void *data) {$/;"	f
cmp_read_ext16	src/cmp.c	/^bool cmp_read_ext16(cmp_ctx_t *ctx, int8_t *type, uint16_t *size, void *data) {$/;"	f
cmp_read_ext16_marker	src/cmp.c	/^bool cmp_read_ext16_marker(cmp_ctx_t *ctx, int8_t *type, uint16_t *size) {$/;"	f
cmp_read_ext32	src/cmp.c	/^bool cmp_read_ext32(cmp_ctx_t *ctx, int8_t *type, uint32_t *size, void *data) {$/;"	f
cmp_read_ext32_marker	src/cmp.c	/^bool cmp_read_ext32_marker(cmp_ctx_t *ctx, int8_t *type, uint32_t *size) {$/;"	f
cmp_read_ext8	src/cmp.c	/^bool cmp_read_ext8(cmp_ctx_t *ctx, int8_t *type, uint8_t *size, void *data) {$/;"	f
cmp_read_ext8_marker	src/cmp.c	/^bool cmp_read_ext8_marker(cmp_ctx_t *ctx, int8_t *type, uint8_t *size) {$/;"	f
cmp_read_ext_marker	src/cmp.c	/^bool cmp_read_ext_marker(cmp_ctx_t *ctx, int8_t *type, uint32_t *size) {$/;"	f
cmp_read_fixext1	src/cmp.c	/^bool cmp_read_fixext1(cmp_ctx_t *ctx, int8_t *type, void *data) {$/;"	f
cmp_read_fixext16	src/cmp.c	/^bool cmp_read_fixext16(cmp_ctx_t *ctx, int8_t *type, void *data) {$/;"	f
cmp_read_fixext16_marker	src/cmp.c	/^bool cmp_read_fixext16_marker(cmp_ctx_t *ctx, int8_t *type) {$/;"	f
cmp_read_fixext1_marker	src/cmp.c	/^bool cmp_read_fixext1_marker(cmp_ctx_t *ctx, int8_t *type) {$/;"	f
cmp_read_fixext2	src/cmp.c	/^bool cmp_read_fixext2(cmp_ctx_t *ctx, int8_t *type, void *data) {$/;"	f
cmp_read_fixext2_marker	src/cmp.c	/^bool cmp_read_fixext2_marker(cmp_ctx_t *ctx, int8_t *type) {$/;"	f
cmp_read_fixext4	src/cmp.c	/^bool cmp_read_fixext4(cmp_ctx_t *ctx, int8_t *type, void *data) {$/;"	f
cmp_read_fixext4_marker	src/cmp.c	/^bool cmp_read_fixext4_marker(cmp_ctx_t *ctx, int8_t *type) {$/;"	f
cmp_read_fixext8	src/cmp.c	/^bool cmp_read_fixext8(cmp_ctx_t *ctx, int8_t *type, void *data) {$/;"	f
cmp_read_fixext8_marker	src/cmp.c	/^bool cmp_read_fixext8_marker(cmp_ctx_t *ctx, int8_t *type) {$/;"	f
cmp_read_float	src/cmp.c	/^bool cmp_read_float(cmp_ctx_t *ctx, float *f) {$/;"	f
cmp_read_int	src/cmp.c	/^bool cmp_read_int(cmp_ctx_t *ctx, int32_t *i) {$/;"	f
cmp_read_long	src/cmp.c	/^bool cmp_read_long(cmp_ctx_t *ctx, int64_t *d) {$/;"	f
cmp_read_map	src/cmp.c	/^bool cmp_read_map(cmp_ctx_t *ctx, uint32_t *size) {$/;"	f
cmp_read_nfix	src/cmp.c	/^bool cmp_read_nfix(cmp_ctx_t *ctx, int8_t *c) {$/;"	f
cmp_read_nil	src/cmp.c	/^bool cmp_read_nil(cmp_ctx_t *ctx) {$/;"	f
cmp_read_object	src/cmp.c	/^bool cmp_read_object(cmp_ctx_t *ctx, cmp_object_t *obj) {$/;"	f
cmp_read_pfix	src/cmp.c	/^bool cmp_read_pfix(cmp_ctx_t *ctx, uint8_t *c) {$/;"	f
cmp_read_s16	src/cmp.c	/^bool cmp_read_s16(cmp_ctx_t *ctx, int16_t *s) {$/;"	f
cmp_read_s32	src/cmp.c	/^bool cmp_read_s32(cmp_ctx_t *ctx, int32_t *i) {$/;"	f
cmp_read_s64	src/cmp.c	/^bool cmp_read_s64(cmp_ctx_t *ctx, int64_t *l) {$/;"	f
cmp_read_s8	src/cmp.c	/^bool cmp_read_s8(cmp_ctx_t *ctx, int8_t *c) {$/;"	f
cmp_read_sfix	src/cmp.c	/^bool cmp_read_sfix(cmp_ctx_t *ctx, int8_t *c) {$/;"	f
cmp_read_short	src/cmp.c	/^bool cmp_read_short(cmp_ctx_t *ctx, int16_t *s) {$/;"	f
cmp_read_sinteger	src/cmp.c	/^bool cmp_read_sinteger(cmp_ctx_t *ctx, int64_t *d) {$/;"	f
cmp_read_str	src/cmp.c	/^bool cmp_read_str(cmp_ctx_t *ctx, char *data, uint32_t *size) {$/;"	f
cmp_read_str_size	src/cmp.c	/^bool cmp_read_str_size(cmp_ctx_t *ctx, uint32_t *size) {$/;"	f
cmp_read_u16	src/cmp.c	/^bool cmp_read_u16(cmp_ctx_t *ctx, uint16_t *s) {$/;"	f
cmp_read_u32	src/cmp.c	/^bool cmp_read_u32(cmp_ctx_t *ctx, uint32_t *i) {$/;"	f
cmp_read_u64	src/cmp.c	/^bool cmp_read_u64(cmp_ctx_t *ctx, uint64_t *l) {$/;"	f
cmp_read_u8	src/cmp.c	/^bool cmp_read_u8(cmp_ctx_t *ctx, uint8_t *c) {$/;"	f
cmp_read_uchar	src/cmp.c	/^bool cmp_read_uchar(cmp_ctx_t *ctx, uint8_t *c) {$/;"	f
cmp_read_ufix	src/cmp.c	/^bool cmp_read_ufix(cmp_ctx_t *ctx, uint8_t *c) {$/;"	f
cmp_read_uint	src/cmp.c	/^bool cmp_read_uint(cmp_ctx_t *ctx, uint32_t *i) {$/;"	f
cmp_read_uinteger	src/cmp.c	/^bool cmp_read_uinteger(cmp_ctx_t *ctx, uint64_t *d) {$/;"	f
cmp_read_ulong	src/cmp.c	/^bool cmp_read_ulong(cmp_ctx_t *ctx, uint64_t *u) {$/;"	f
cmp_read_ushort	src/cmp.c	/^bool cmp_read_ushort(cmp_ctx_t *ctx, uint16_t *s) {$/;"	f
cmp_reader	src/cmp.h	/^typedef bool   (*cmp_reader)(struct cmp_ctx_s *ctx, void *data, size_t limit);$/;"	t
cmp_strerror	src/cmp.c	/^const char* cmp_strerror(cmp_ctx_t *ctx) {$/;"	f
cmp_version	src/cmp.c	/^uint32_t cmp_version(void) {$/;"	f
cmp_write_array	src/cmp.c	/^bool cmp_write_array(cmp_ctx_t *ctx, uint32_t size) {$/;"	f
cmp_write_array16	src/cmp.c	/^bool cmp_write_array16(cmp_ctx_t *ctx, uint16_t size) {$/;"	f
cmp_write_array32	src/cmp.c	/^bool cmp_write_array32(cmp_ctx_t *ctx, uint32_t size) {$/;"	f
cmp_write_bin	src/cmp.c	/^bool cmp_write_bin(cmp_ctx_t *ctx, const void *data, uint32_t size) {$/;"	f
cmp_write_bin16	src/cmp.c	/^bool cmp_write_bin16(cmp_ctx_t *ctx, const void *data, uint16_t size) {$/;"	f
cmp_write_bin16_marker	src/cmp.c	/^bool cmp_write_bin16_marker(cmp_ctx_t *ctx, uint16_t size) {$/;"	f
cmp_write_bin32	src/cmp.c	/^bool cmp_write_bin32(cmp_ctx_t *ctx, const void *data, uint32_t size) {$/;"	f
cmp_write_bin32_marker	src/cmp.c	/^bool cmp_write_bin32_marker(cmp_ctx_t *ctx, uint32_t size) {$/;"	f
cmp_write_bin8	src/cmp.c	/^bool cmp_write_bin8(cmp_ctx_t *ctx, const void *data, uint8_t size) {$/;"	f
cmp_write_bin8_marker	src/cmp.c	/^bool cmp_write_bin8_marker(cmp_ctx_t *ctx, uint8_t size) {$/;"	f
cmp_write_bin_marker	src/cmp.c	/^bool cmp_write_bin_marker(cmp_ctx_t *ctx, uint32_t size) {$/;"	f
cmp_write_bool	src/cmp.c	/^bool cmp_write_bool(cmp_ctx_t *ctx, bool b) {$/;"	f
cmp_write_double	src/cmp.c	/^bool cmp_write_double(cmp_ctx_t *ctx, double d) {$/;"	f
cmp_write_ext	src/cmp.c	/^bool cmp_write_ext(cmp_ctx_t *ctx, int8_t tp, uint32_t sz, const void *data) {$/;"	f
cmp_write_ext16	src/cmp.c	/^bool cmp_write_ext16(cmp_ctx_t *ctx, int8_t tp, uint16_t sz, const void *data) {$/;"	f
cmp_write_ext16_marker	src/cmp.c	/^bool cmp_write_ext16_marker(cmp_ctx_t *ctx, int8_t type, uint16_t size) {$/;"	f
cmp_write_ext32	src/cmp.c	/^bool cmp_write_ext32(cmp_ctx_t *ctx, int8_t tp, uint32_t sz, const void *data) {$/;"	f
cmp_write_ext32_marker	src/cmp.c	/^bool cmp_write_ext32_marker(cmp_ctx_t *ctx, int8_t type, uint32_t size) {$/;"	f
cmp_write_ext8	src/cmp.c	/^bool cmp_write_ext8(cmp_ctx_t *ctx, int8_t tp, uint8_t sz, const void *data) {$/;"	f
cmp_write_ext8_marker	src/cmp.c	/^bool cmp_write_ext8_marker(cmp_ctx_t *ctx, int8_t type, uint8_t size) {$/;"	f
cmp_write_ext_marker	src/cmp.c	/^bool cmp_write_ext_marker(cmp_ctx_t *ctx, int8_t tp, uint32_t sz) {$/;"	f
cmp_write_false	src/cmp.c	/^bool cmp_write_false(cmp_ctx_t *ctx) {$/;"	f
cmp_write_fixarray	src/cmp.c	/^bool cmp_write_fixarray(cmp_ctx_t *ctx, uint8_t size) {$/;"	f
cmp_write_fixext1	src/cmp.c	/^bool cmp_write_fixext1(cmp_ctx_t *ctx, int8_t type, const void *data) {$/;"	f
cmp_write_fixext16	src/cmp.c	/^bool cmp_write_fixext16(cmp_ctx_t *ctx, int8_t type, const void *data) {$/;"	f
cmp_write_fixext16_marker	src/cmp.c	/^bool cmp_write_fixext16_marker(cmp_ctx_t *ctx, int8_t type) {$/;"	f
cmp_write_fixext1_marker	src/cmp.c	/^bool cmp_write_fixext1_marker(cmp_ctx_t *ctx, int8_t type) {$/;"	f
cmp_write_fixext2	src/cmp.c	/^bool cmp_write_fixext2(cmp_ctx_t *ctx, int8_t type, const void *data) {$/;"	f
cmp_write_fixext2_marker	src/cmp.c	/^bool cmp_write_fixext2_marker(cmp_ctx_t *ctx, int8_t type) {$/;"	f
cmp_write_fixext4	src/cmp.c	/^bool cmp_write_fixext4(cmp_ctx_t *ctx, int8_t type, const void *data) {$/;"	f
cmp_write_fixext4_marker	src/cmp.c	/^bool cmp_write_fixext4_marker(cmp_ctx_t *ctx, int8_t type) {$/;"	f
cmp_write_fixext8	src/cmp.c	/^bool cmp_write_fixext8(cmp_ctx_t *ctx, int8_t type, const void *data) {$/;"	f
cmp_write_fixext8_marker	src/cmp.c	/^bool cmp_write_fixext8_marker(cmp_ctx_t *ctx, int8_t type) {$/;"	f
cmp_write_fixmap	src/cmp.c	/^bool cmp_write_fixmap(cmp_ctx_t *ctx, uint8_t size) {$/;"	f
cmp_write_fixstr	src/cmp.c	/^bool cmp_write_fixstr(cmp_ctx_t *ctx, const char *data, uint8_t size) {$/;"	f
cmp_write_fixstr_marker	src/cmp.c	/^bool cmp_write_fixstr_marker(cmp_ctx_t *ctx, uint8_t size) {$/;"	f
cmp_write_float	src/cmp.c	/^bool cmp_write_float(cmp_ctx_t *ctx, float f) {$/;"	f
cmp_write_map	src/cmp.c	/^bool cmp_write_map(cmp_ctx_t *ctx, uint32_t size) {$/;"	f
cmp_write_map16	src/cmp.c	/^bool cmp_write_map16(cmp_ctx_t *ctx, uint16_t size) {$/;"	f
cmp_write_map32	src/cmp.c	/^bool cmp_write_map32(cmp_ctx_t *ctx, uint32_t size) {$/;"	f
cmp_write_nfix	src/cmp.c	/^bool cmp_write_nfix(cmp_ctx_t *ctx, int8_t c) {$/;"	f
cmp_write_nil	src/cmp.c	/^bool cmp_write_nil(cmp_ctx_t *ctx) {$/;"	f
cmp_write_object	src/cmp.c	/^bool cmp_write_object(cmp_ctx_t *ctx, cmp_object_t *obj) {$/;"	f
cmp_write_pfix	src/cmp.c	/^bool cmp_write_pfix(cmp_ctx_t *ctx, uint8_t c) {$/;"	f
cmp_write_s16	src/cmp.c	/^bool cmp_write_s16(cmp_ctx_t *ctx, int16_t s) {$/;"	f
cmp_write_s32	src/cmp.c	/^bool cmp_write_s32(cmp_ctx_t *ctx, int32_t i) {$/;"	f
cmp_write_s64	src/cmp.c	/^bool cmp_write_s64(cmp_ctx_t *ctx, int64_t l) {$/;"	f
cmp_write_s8	src/cmp.c	/^bool cmp_write_s8(cmp_ctx_t *ctx, int8_t c) {$/;"	f
cmp_write_sfix	src/cmp.c	/^bool cmp_write_sfix(cmp_ctx_t *ctx, int8_t c) {$/;"	f
cmp_write_sint	src/cmp.c	/^bool cmp_write_sint(cmp_ctx_t *ctx, int64_t d) {$/;"	f
cmp_write_str	src/cmp.c	/^bool cmp_write_str(cmp_ctx_t *ctx, const char *data, uint32_t size) {$/;"	f
cmp_write_str16	src/cmp.c	/^bool cmp_write_str16(cmp_ctx_t *ctx, const char *data, uint16_t size) {$/;"	f
cmp_write_str16_marker	src/cmp.c	/^bool cmp_write_str16_marker(cmp_ctx_t *ctx, uint16_t size) {$/;"	f
cmp_write_str32	src/cmp.c	/^bool cmp_write_str32(cmp_ctx_t *ctx, const char *data, uint32_t size) {$/;"	f
cmp_write_str32_marker	src/cmp.c	/^bool cmp_write_str32_marker(cmp_ctx_t *ctx, uint32_t size) {$/;"	f
cmp_write_str8	src/cmp.c	/^bool cmp_write_str8(cmp_ctx_t *ctx, const char *data, uint8_t size) {$/;"	f
cmp_write_str8_marker	src/cmp.c	/^bool cmp_write_str8_marker(cmp_ctx_t *ctx, uint8_t size) {$/;"	f
cmp_write_str_marker	src/cmp.c	/^bool cmp_write_str_marker(cmp_ctx_t *ctx, uint32_t size) {$/;"	f
cmp_write_true	src/cmp.c	/^bool cmp_write_true(cmp_ctx_t *ctx) {$/;"	f
cmp_write_u16	src/cmp.c	/^bool cmp_write_u16(cmp_ctx_t *ctx, uint16_t s) {$/;"	f
cmp_write_u32	src/cmp.c	/^bool cmp_write_u32(cmp_ctx_t *ctx, uint32_t i) {$/;"	f
cmp_write_u64	src/cmp.c	/^bool cmp_write_u64(cmp_ctx_t *ctx, uint64_t l) {$/;"	f
cmp_write_u8	src/cmp.c	/^bool cmp_write_u8(cmp_ctx_t *ctx, uint8_t c) {$/;"	f
cmp_write_u8_as_bool	src/cmp.c	/^bool cmp_write_u8_as_bool(cmp_ctx_t *ctx, uint8_t b) {$/;"	f
cmp_write_ufix	src/cmp.c	/^bool cmp_write_ufix(cmp_ctx_t *ctx, uint8_t c) {$/;"	f
cmp_write_uint	src/cmp.c	/^bool cmp_write_uint(cmp_ctx_t *ctx, uint64_t u) {$/;"	f
cmp_writer	src/cmp.h	/^typedef size_t (*cmp_writer)(struct cmp_ctx_s *ctx, const void *data,$/;"	t
cnext	src/d_think.h	/^  struct thinker_s *cnext, *cprev; \/* Next, previous thinkers in same class *\/$/;"	m	struct:thinker_s	typeref:struct:thinker_s::thinker_s
cnode	src/PCRELIB/ucpinternal.h	/^typedef struct cnode {$/;"	s
cnode	src/PCRELIB/ucpinternal.h	/^} cnode;$/;"	t	typeref:struct:cnode
cnt	src/wi_stuff.c	/^static int    cnt;$/;"	v	file:
cnt_frags	src/wi_stuff.c	/^static int *cnt_frags;$/;"	v	file:
cnt_items	src/wi_stuff.c	/^static int *cnt_items;$/;"	v	file:
cnt_kills	src/wi_stuff.c	/^static int *cnt_kills;$/;"	v	file:
cnt_par	src/wi_stuff.c	/^static int    cnt_par;$/;"	v	file:
cnt_pause	src/wi_stuff.c	/^static int    cnt_pause;$/;"	v	file:
cnt_secret	src/wi_stuff.c	/^static int *cnt_secret;$/;"	v	file:
cnt_time	src/wi_stuff.c	/^static int    cnt_time;$/;"	v	file:
cnt_total_time	src/wi_stuff.c	/^static int    cnt_total_time;$/;"	v	file:
code	src/m_cheat.h	/^  uint_64_t code, mask;$/;"	m	struct:cheatseq_s
colfunc	src/r_draw.h	/^  R_DrawColumn_f      colfunc;$/;"	m	struct:draw_column_vars_s
colon	src/wi_stuff.c	/^static const char colon[] = {"WICOLON"};$/;"	v	file:
color	src/TEXTSCREEN/txt_io.c	/^    txt_color_t color;$/;"	m	struct:__anon327	file:
color_palette_x	src/m_menu.c	/^int color_palette_x; \/\/ X position of the cursor on the color palette$/;"	v
color_palette_y	src/m_menu.c	/^int color_palette_y; \/\/ Y position of the cursor on the color palette$/;"	v
colorbox_active	src/m_menu.c	/^dboolean colorbox_active   = false; \/\/ color palette being shown$/;"	v
colormap	src/d_player.h	/^  int                 colormap;$/;"	m	struct:player_s
colormap	src/r_data.c	/^  short colormap;        \/\/ unused in Doom but might be used in Phase 2 Boom$/;"	m	struct:__anon277	file:
colormap	src/r_defs.h	/^  const lighttable_t *colormap;$/;"	m	struct:vissprite_s
colormap	src/r_draw.h	/^  const lighttable_t  *colormap;$/;"	m	struct:__anon298
colormap	src/r_draw.h	/^  const lighttable_t  *colormap;$/;"	m	struct:draw_column_vars_s
colormaps	src/r_main.c	/^const lighttable_t **colormaps;$/;"	v
colors	src/TEXTSCREEN/txt_io.c	/^} colors[] = {$/;"	v	typeref:struct:__anon327	file:
colour_option	src/PCRELIB/pcregrep.c	/^static char *colour_option = NULL;$/;"	v	file:
colour_string	src/PCRELIB/pcregrep.c	/^static char *colour_string = (char *)"1;31";$/;"	v	file:
colours	src/i_video.h	/^  byte *colours;$/;"	m	struct:vid_8ingl_s
colrngs	src/v_video.c	/^const byte *colrngs[CR_LIMIT];$/;"	v
column_pipeline_e	src/r_draw.h	/^enum column_pipeline_e {$/;"	g
column_t	src/r_patch.c	/^typedef post_t column_t;$/;"	t	file:
columnofs	src/r_patch.c	/^  int columnofs[8];     \/\/ only [width] used$/;"	m	struct:__anon305	file:
columns	src/TEXTSCREEN/txt_table.h	/^    int columns;$/;"	m	struct:txt_table_s
columns	src/gl_sky.c	/^  int rows, columns;$/;"	m	struct:__anon112	file:
columns	src/gl_sky.c	/^static int rows, columns;	$/;"	v	file:
columns	src/r_patch.h	/^  rcolumn_t *columns;$/;"	m	struct:__anon311
columntype_e	src/r_draw.c	/^} columntype_e;$/;"	t	typeref:enum:__anon296	file:
command	src/d_net.h	/^    short               command;$/;"	m	struct:__anon27
command	src/i_capture.c	/^  char command[PATH_MAX];$/;"	m	struct:__anon128	file:
command_index	src/s_sound.c	/^  int command_index;   \/\/ command index at which this sound was started$/;"	m	struct:__anon319	file:
command_is_shorthand	src/c_main.c	/^static bool command_is_shorthand(const char *command) {$/;"	f	file:
command_line_echo	src/c_main.c	/^static void command_line_echo(const char *message) {$/;"	f	file:
command_line_mecho	src/c_main.c	/^static void command_line_mecho(const char *message) {$/;"	f	file:
command_line_mvprintf	src/c_main.c	/^static void command_line_mvprintf(const char *fmt, va_list args) {$/;"	f	file:
command_line_mwrite	src/c_main.c	/^static void command_line_mwrite(const char *message) {$/;"	f	file:
command_line_vprintf	src/c_main.c	/^static void command_line_vprintf(const char *fmt, va_list args) {$/;"	f	file:
command_line_write	src/c_main.c	/^static void command_line_write(const char *message) {$/;"	f	file:
command_loadgame	src/g_game.c	/^dboolean        command_loadgame = false;$/;"	v
command_queue_s	src/n_peer.h	/^typedef struct command_queue_s {$/;"	s
command_queue_t	src/n_peer.h	/^} command_queue_t;$/;"	t	typeref:struct:command_queue_s
command_t	src/d_net.h	/^} command_t;$/;"	t	typeref:enum:__anon22
commands	src/n_peer.h	/^  command_queue_t    commands[MAXPLAYERS];$/;"	m	struct:netsync_s
comments_	src/PCRELIB/pcre_scanner.h	/^  std::vector<StringPiece> *comments_;$/;"	m	class:pcrecpp::Scanner
comments_offset_	src/PCRELIB/pcre_scanner.h	/^  int           comments_offset_;$/;"	m	class:pcrecpp::Scanner
commercial	src/doomdef.h	/^  commercial,   \/\/ DOOM 2 retail, E1 M34  (DOOM 2 german edition not handled)$/;"	e	enum:__anon43
commonbot	src/r_draw.c	/^static int    commontop, commonbot;$/;"	v	file:
commontop	src/r_draw.c	/^static int    commontop, commonbot;$/;"	v	file:
comp	src/doomstat.c	/^int comp[COMP_TOTAL], default_comp[COMP_TOTAL];    \/\/ killough 10\/98$/;"	v
comp_666	src/doomstat.h	/^  comp_666,$/;"	e	enum:__anon54
comp_blazing	src/doomstat.h	/^  comp_blazing,$/;"	e	enum:__anon54
comp_doorlight	src/doomstat.h	/^  comp_doorlight,$/;"	e	enum:__anon54
comp_doorstuck	src/doomstat.h	/^  comp_doorstuck,$/;"	e	enum:__anon54
comp_dropoff	src/doomstat.h	/^  comp_dropoff,$/;"	e	enum:__anon54
comp_falloff	src/doomstat.h	/^  comp_falloff,$/;"	e	enum:__anon54
comp_floors	src/doomstat.h	/^  comp_floors,$/;"	e	enum:__anon54
comp_god	src/doomstat.h	/^  comp_god,$/;"	e	enum:__anon54
comp_infcheat	src/doomstat.h	/^  comp_infcheat,$/;"	e	enum:__anon54
comp_lev_str	src/g_game.c	/^const char * comp_lev_str[MAX_COMPATIBILITY_LEVEL] = {$/;"	v
comp_level	src/g_save.c	/^  int comp_level;$/;"	m	struct:__anon120	file:
comp_maskedanim	src/doomstat.h	/^  comp_maskedanim,$/;"	e	enum:__anon54
comp_maxhealth	src/doomstat.h	/^  comp_maxhealth,$/;"	e	enum:__anon54
comp_model	src/doomstat.h	/^  comp_model,$/;"	e	enum:__anon54
comp_moveblock	src/doomstat.h	/^  comp_moveblock,$/;"	e	enum:__anon54
comp_ouchface	src/doomstat.h	/^  comp_ouchface,$/;"	e	enum:__anon54
comp_pain	src/doomstat.h	/^  comp_pain,$/;"	e	enum:__anon54
comp_pursuit	src/doomstat.h	/^  comp_pursuit,$/;"	e	enum:__anon54
comp_respawn	src/doomstat.h	/^  comp_respawn,  \/* cph - this is the inverse of comp_respawnfix from eternity *\/$/;"	e	enum:__anon54
comp_settings	src/m_menu.c	/^setup_menu_t* comp_settings[] =$/;"	v
comp_settings1	src/m_menu.c	/^setup_menu_t comp_settings1[] =  \/\/ Compatibility Settings screen #1$/;"	v
comp_settings1	src/m_menu.c	/^setup_menu_t comp_settings1[], comp_settings2[], comp_settings3[];$/;"	v
comp_settings2	src/m_menu.c	/^setup_menu_t comp_settings1[], comp_settings2[], comp_settings3[];$/;"	v
comp_settings2	src/m_menu.c	/^setup_menu_t comp_settings2[] =  \/\/ Compatibility Settings screen #2$/;"	v
comp_settings3	src/m_menu.c	/^setup_menu_t comp_settings1[], comp_settings2[], comp_settings3[];$/;"	v
comp_settings3	src/m_menu.c	/^setup_menu_t comp_settings3[] =  \/\/ Compatibility Settings screen #3$/;"	v
comp_settings3	src/m_menu.c	/^setup_menu_t comp_settings3[];\/\/e6y$/;"	v
comp_skull	src/doomstat.h	/^  comp_skull,$/;"	e	enum:__anon54
comp_skymap	src/doomstat.h	/^  comp_skymap,$/;"	e	enum:__anon54
comp_soul	src/doomstat.h	/^  comp_soul,$/;"	e	enum:__anon54
comp_sound	src/doomstat.h	/^  comp_sound,$/;"	e	enum:__anon54
comp_stairs	src/doomstat.h	/^  comp_stairs,$/;"	e	enum:__anon54
comp_staylift	src/doomstat.h	/^  comp_staylift,$/;"	e	enum:__anon54
comp_telefrag	src/doomstat.h	/^  comp_telefrag,$/;"	e	enum:__anon54
comp_translucency	src/doomstat.h	/^  comp_translucency,$/;"	e	enum:__anon54
comp_vile	src/doomstat.h	/^  comp_vile,$/;"	e	enum:__anon54
comp_zerotags	src/doomstat.h	/^  comp_zerotags,$/;"	e	enum:__anon54
comp_zombie	src/doomstat.h	/^  comp_zombie,$/;"	e	enum:__anon54
compat_666	src/m_menu.c	/^  compat_666 = 0,$/;"	e	enum:__anon161	file:
compat_blazing	src/m_menu.c	/^  compat_blazing,$/;"	e	enum:__anon161	file:
compat_doorlight	src/m_menu.c	/^  compat_doorlight = 0,$/;"	e	enum:__anon161	file:
compat_doorstuck	src/m_menu.c	/^  compat_doorstuck,$/;"	e	enum:__anon161	file:
compat_dropoff	src/m_menu.c	/^  compat_dropoff,$/;"	e	enum:__anon161	file:
compat_falloff	src/m_menu.c	/^  compat_falloff,$/;"	e	enum:__anon161	file:
compat_floors	src/m_menu.c	/^  compat_floors,$/;"	e	enum:__anon161	file:
compat_god	src/m_menu.c	/^  compat_god,$/;"	e	enum:__anon161	file:
compat_infcheat	src/m_menu.c	/^  compat_infcheat,$/;"	e	enum:__anon161	file:
compat_maskedanim	src/m_menu.c	/^  compat_maskedanim,$/;"	e	enum:__anon161	file:
compat_maxhealth	src/m_menu.c	/^  compat_maxhealth,$/;"	e	enum:__anon161	file:
compat_model	src/m_menu.c	/^  compat_model,$/;"	e	enum:__anon161	file:
compat_moveblock	src/m_menu.c	/^  compat_moveblock,$/;"	e	enum:__anon161	file:
compat_ouchface	src/m_menu.c	/^  compat_ouchface,$/;"	e	enum:__anon161	file:
compat_pain	src/m_menu.c	/^  compat_pain,$/;"	e	enum:__anon161	file:
compat_plussettings	src/m_menu.c	/^  compat_plussettings,$/;"	e	enum:__anon161	file:
compat_pursuit	src/m_menu.c	/^  compat_pursuit,$/;"	e	enum:__anon161	file:
compat_skull	src/m_menu.c	/^  compat_skull,$/;"	e	enum:__anon161	file:
compat_skymap	src/m_menu.c	/^  compat_skymap,$/;"	e	enum:__anon161	file:
compat_soul	src/m_menu.c	/^  compat_soul,$/;"	e	enum:__anon161	file:
compat_sound	src/m_menu.c	/^  compat_sound,$/;"	e	enum:__anon161	file:
compat_stairs	src/m_menu.c	/^  compat_stairs,$/;"	e	enum:__anon161	file:
compat_staylift	src/m_menu.c	/^  compat_staylift,$/;"	e	enum:__anon161	file:
compat_telefrag	src/m_menu.c	/^  compat_telefrag,$/;"	e	enum:__anon161	file:
compat_translucency	src/m_menu.c	/^  compat_translucency,$/;"	e	enum:__anon161	file:
compat_vile	src/m_menu.c	/^  compat_vile,$/;"	e	enum:__anon161	file:
compat_zerotags	src/m_menu.c	/^  compat_zerotags,$/;"	e	enum:__anon161	file:
compat_zombie	src/m_menu.c	/^  compat_zombie,$/;"	e	enum:__anon161	file:
compatibility	src/doomstat.h	58;"	d
compatibility_level	src/doomstat.c	/^complevel_t compatibility_level, default_compatibility_level;$/;"	v
comperr	src/g_game.h	161;"	d
comperr_allowjump	src/doomstat.h	/^  comperr_allowjump,$/;"	e	enum:__anon55
comperr_blockmap	src/doomstat.h	/^  comperr_blockmap,$/;"	e	enum:__anon55
comperr_hangsolid	src/doomstat.h	/^  comperr_hangsolid,$/;"	e	enum:__anon55
comperr_passuse	src/doomstat.h	/^  comperr_passuse,$/;"	e	enum:__anon55
comperr_zerotag	src/doomstat.h	/^  comperr_zerotag,$/;"	e	enum:__anon55
compile_branch	src/PCRELIB/pcre_compile.c	/^compile_branch(int *optionsptr, int *brackets, uschar **codeptr,$/;"	f	file:
compile_data	src/PCRELIB/pcre_internal.h	/^typedef struct compile_data {$/;"	s
compile_data	src/PCRELIB/pcre_internal.h	/^} compile_data;$/;"	t	typeref:struct:compile_data
compile_pattern	src/PCRELIB/pcregrep.c	/^compile_pattern(char *pattern, int options, char *filename, int count)$/;"	f	file:
compile_regex	src/PCRELIB/pcre_compile.c	/^compile_regex(int options, int oldims, int *brackets, uschar **codeptr,$/;"	f	file:
compile_single_pattern	src/PCRELIB/pcregrep.c	/^compile_single_pattern(char *pattern, int options, char *filename, int count)$/;"	f	file:
complete_callout	src/PCRELIB/pcre_compile.c	/^complete_callout(uschar *previous_callout, const uschar *ptr, compile_data *cd)$/;"	f	file:
complevel	src/protocol.h	/^  byte players, yourplayer, skill, episode, level, deathmatch, complevel, ticdup, extratic;$/;"	m	struct:setup_packet_s
complevel_t	src/doomtype.h	/^typedef int complevel_t;$/;"	t
complevel_t_e	src/doomtype.h	/^} complevel_t_e;$/;"	t	typeref:enum:__anon57
components	src/gl_hires.c	/^  GLint    components;$/;"	m	struct:__anon85	file:
compute_spmc_normal	src/MUSIC/midifile.c	/^static double compute_spmc_normal (unsigned mpq, unsigned tempo, unsigned sndrate)$/;"	f	file:
compute_spmc_smpte	src/MUSIC/midifile.c	/^static double compute_spmc_smpte (unsigned smpte_fps, unsigned mpf, unsigned sndrate)$/;"	f	file:
con_hWnd	src/lprintf.c	/^HWND con_hWnd=0;$/;"	v
condition	src/PCRELIB/pcre_exec.c	3436;"	d	file:
condition	src/PCRELIB/pcre_exec.c	459;"	d	file:
connect_time	src/n_peer.h	/^  time_t        connect_time;$/;"	m	struct:netpeer_s
connected	src/d_ipxgate.c	/^int connected;$/;"	v
cons	src/c_main.c	/^static console_widget_t *cons;$/;"	v	file:
cons_error_mask	src/lprintf.c	/^int cons_error_mask = -1-LO_INFO; \/* all but LO_INFO when redir'd *\/$/;"	v
cons_output_mask	src/lprintf.c	/^int cons_output_mask = -1;        \/* all output enabled *\/$/;"	v
consistancy	src/d_ticcmd.h	/^  short  consistancy;  \/* checks for net game  *\/$/;"	m	struct:__anon63
console_handle	src/PCSOUND/pcsound_linux.c	/^static int console_handle;$/;"	v	file:
console_inited	src/lprintf.c	/^dboolean console_inited=FALSE;$/;"	v
console_main	src/SDL/SDL_win32_main.c	/^int console_main(int argc, char *argv[])$/;"	f
console_main	src/SDL/SDL_win32_main.c	216;"	d	file:
console_s	src/c_main.c	/^typedef struct console_s {$/;"	s	file:
console_t	src/c_main.c	/^} console_t;$/;"	t	typeref:struct:console_s	file:
console_widget_s	src/hu_cons.c	/^struct console_widget_s {$/;"	s	file:
console_widget_t	src/hu_cons.h	/^typedef struct console_widget_s console_widget_t;$/;"	t	typeref:struct:console_widget_s
consoleplayer	src/d_ipxgate.c	/^int consoleplayer;$/;"	v
consoleplayer	src/d_net.h	/^    short               consoleplayer;$/;"	m	struct:__anon27
consoleplayer	src/g_game.c	/^int             consoleplayer; \/\/ player taking events and displaying$/;"	v
const	src/PCRELIB/config.h	58;"	d
content	src/p_user.h	/^  char *content;$/;"	m	struct:player_message_s
control	src/p_spec.h	/^  int control;         \/\/ Control sector (-1 if none) used to control scrolling$/;"	m	struct:__anon271
controller_map	src/mus2mid.c	/^static const byte controller_map[] =$/;"	v	file:
coptable	src/PCRELIB/pcre_dfa_exec.c	/^static uschar coptable[] = {$/;"	v	file:
corpse_queue	src/g_game.c	/^GQueue *corpse_queue = NULL;$/;"	v
corpse_queue_size	src/g_game.c	/^int corpse_queue_size; \/\/ killough 2\/8\/98$/;"	v
corpsehit	src/p_enemy.c	/^mobj_t* corpsehit;$/;"	v
cos	src/am_map.h	/^  fixed_t sin, cos;$/;"	m	struct:am_frame_s
cos_f	src/am_map.h	/^  float sin_f, cos_f;$/;"	m	struct:am_frame_s
cos_inv_yaw	src/gl_main.c	/^float cos_inv_yaw, sin_inv_yaw;$/;"	v
cos_paperitems_pitch	src/gl_main.c	/^float cos_paperitems_pitch, sin_paperitems_pitch;$/;"	v
could_be_empty	src/PCRELIB/pcre_compile.c	/^could_be_empty(const uschar *code, const uschar *endcode, branch_chain *bcptr,$/;"	f	file:
could_be_empty_branch	src/PCRELIB/pcre_compile.c	/^could_be_empty_branch(const uschar *code, const uschar *endcode, BOOL utf8)$/;"	f	file:
count	src/PCRELIB/pcre_dfa_exec.c	/^  int count;                      \/* Count for repeats *\/$/;"	m	struct:stateblock	file:
count	src/gl_missingtexture.c	/^  int count;        \/\/ size of the list with adjoining sectors$/;"	m	struct:__anon108	file:
count	src/hu_stuff.c	/^  int count;$/;"	m	struct:hud_widgets_list_s	file:
count	src/hu_tracers.h	/^  int count;$/;"	m	struct:traceslist_s
count	src/i_smp.h	/^  volatile int count;$/;"	m	struct:smp_item_s
count	src/m_avg.h	/^  unsigned int count;$/;"	m	struct:avg_s
count	src/m_misc.h	/^  int count;$/;"	m	struct:array_s
count	src/p_spec.h	/^  int count;$/;"	m	struct:__anon262
count	src/p_spec.h	/^  int count;$/;"	m	struct:__anon263
count	src/p_spec.h	/^  int count;$/;"	m	struct:__anon264
count	src/p_spec.h	/^  int count;$/;"	m	struct:__anon266
count	src/r_things.c	/^  int count;$/;"	m	struct:drawsegs_xrange_s	file:
count_only	src/PCRELIB/pcregrep.c	/^static BOOL count_only = FALSE;$/;"	v	file:
count_t	src/r_patch.c	/^} count_t;$/;"	t	typeref:struct:__anon306	file:
cpars	src/g_game.c	/^int cpars[34] = {$/;"	v
cprev	src/d_think.h	/^  struct thinker_s *cnext, *cprev; \/* Next, previous thinkers in same class *\/$/;"	m	struct:thinker_s	typeref:struct:thinker_s::
cptr	src/d_deh.c	/^  actionf_t cptr;  \/\/ actual pointer to the subroutine$/;"	m	struct:__anon12	file:
cr_adcr	src/m_menu.c	/^  cr_adcr=2,$/;"	e	enum:__anon164	file:
cr_prog	src/m_menu.c	/^  cr_prog=0,$/;"	e	enum:__anon164	file:
crange_idx_e	src/v_video.h	/^} crange_idx_e;$/;"	t	typeref:enum:__anon341
crdef_t	src/v_video.c	/^} crdef_t;$/;"	t	typeref:struct:__anon338	file:
crdefs	src/v_video.c	/^static const crdef_t crdefs[] = {$/;"	v	file:
createPatch	src/r_patch.c	/^static void createPatch(int id) {$/;"	f	file:
createTextureCompositePatch	src/r_patch.c	/^static void createTextureCompositePatch(int id) {$/;"	f	file:
cred_settings	src/m_menu.c	/^setup_menu_t cred_settings[]={$/;"	v
cross_mark	src/am_map.c	/^mline_t cross_mark[] =$/;"	v
crossed_lines_count	src/hu_tracers.c	/^int crossed_lines_count = 0;$/;"	v
crosshair	src/hu_stuff.c	/^crosshair_t crosshair;$/;"	v
crosshair_nam	src/hu_stuff.c	/^const char *crosshair_nam[HU_CROSSHAIRS]= { NULL, "CROSS1", "CROSS2", "CROSS3" };$/;"	v
crosshair_s	src/hu_stuff.h	/^typedef struct crosshair_s$/;"	s
crosshair_str	src/hu_stuff.c	/^const char *crosshair_str[HU_CROSSHAIRS]= { "none", "cross", "angle", "dot" };$/;"	v
crosshair_t	src/hu_stuff.h	/^} crosshair_t;$/;"	t	typeref:struct:crosshair_s
crosshair_target	src/p_map.c	/^mobj_t*   crosshair_target;$/;"	v
crush	src/p_spec.h	/^  dboolean crush;$/;"	m	struct:__anon266
crush	src/p_spec.h	/^  dboolean crush;$/;"	m	struct:__anon268
crush	src/p_spec.h	/^  dboolean crush;$/;"	m	struct:__anon269
crushAndRaise	src/p_spec.h	/^  crushAndRaise,$/;"	e	enum:__anon254
crushchange	src/g_overflow.h	/^  dboolean *crushchange;$/;"	m	struct:spechit_overrun_param_s
crushchange	src/p_map.c	/^static dboolean crushchange, nofit;$/;"	v	file:
crushed	src/p_spec.h	/^  crushed,$/;"	e	enum:__anon259
ctr	src/wi_stuff.c	/^  int   ctr;$/;"	m	struct:__anon348	file:
ctrldown	src/d_main.h	/^  bool ctrldown;$/;"	m	struct:keybindings_s
ctype	src/PCRELIB/pcre_exec.c	3442;"	d	file:
ctype	src/PCRELIB/pcre_exec.c	475;"	d	file:
ctype_digit	src/PCRELIB/pcre_internal.h	900;"	d
ctype_letter	src/PCRELIB/pcre_internal.h	899;"	d
ctype_meta	src/PCRELIB/pcre_internal.h	903;"	d
ctype_space	src/PCRELIB/pcre_internal.h	898;"	d
ctype_word	src/PCRELIB/pcre_internal.h	902;"	d
ctype_xdigit	src/PCRELIB/pcre_internal.h	901;"	d
ctypes	src/PCRELIB/pcre_internal.h	/^  const uschar *ctypes;         \/* Points to table of type maps *\/$/;"	m	struct:compile_data
ctypes	src/PCRELIB/pcre_internal.h	/^  const uschar *ctypes;         \/* Points to table of type maps *\/$/;"	m	struct:match_data
ctypes_offset	src/PCRELIB/pcre_internal.h	926;"	d
cur_is_word	src/PCRELIB/pcre_exec.c	3435;"	d	file:
cur_is_word	src/PCRELIB/pcre_exec.c	458;"	d	file:
cur_x	src/TEXTSCREEN/txt_io.c	/^static int cur_x = 0, cur_y = 0;$/;"	v	file:
cur_y	src/TEXTSCREEN/txt_io.c	/^static int cur_x = 0, cur_y = 0;$/;"	v	file:
curipos	src/r_fps.c	/^static interpolation_t *curipos;$/;"	v	file:
curline	src/r_bsp.c	/^seg_t     *curline;$/;"	v
curline	src/r_defs.h	/^  seg_t *curline;$/;"	m	struct:drawseg_s
curr_mtof_zoommul	src/am_map.c	/^static fixed_t curr_mtof_zoommul;$/;"	v	file:
curr_speed_pow2	src/gl_struct.h	/^  float curr_speed_pow2;$/;"	m	struct:motion_blur_params_s
current	src/PCRELIB/pcre_internal.h	/^  uschar *current;$/;"	m	struct:branch_chain
current	src/m_misc.h	/^  int  *current;          \/* cph - MBF-like pointer to current value *\/$/;"	m	struct:default_s
currentLevel	src/MUSIC/dbopl.h	/^  Bit32u currentLevel;    \/\/totalLevel + tremolo$/;"	m	struct:_Operator
currentMenu	src/m_menu.c	/^menu_t* currentMenu; \/\/ current menudef$/;"	v
currentPaletteIndex	src/v_video.c	/^static int currentPaletteIndex = 0;$/;"	v	file:
current_actor	src/p_enemy.c	/^static mobj_t *current_actor;$/;"	v	file:
current_allaround	src/p_enemy.c	/^static int current_allaround;$/;"	v	file:
current_episode	src/p_setup.c	/^static int current_episode = -1;$/;"	v	file:
current_exception_index	src/SDL/i_main.c	/^static ExeptionsList_t current_exception_index;$/;"	v	file:
current_freq	src/PCSOUND/pcsound_sdl.c	/^static int current_freq;$/;"	v	file:
current_instr	src/MUSIC/oplplayer.c	/^    const genmidi_instr_t *current_instr;$/;"	m	struct:opl_voice_s	file:
current_instr_voice	src/MUSIC/oplplayer.c	/^    unsigned int current_instr_voice;$/;"	m	struct:opl_voice_s	file:
current_item	src/s_advsound.h	/^  int current_item;$/;"	m	struct:musinfo_s
current_map	src/p_setup.c	/^static int current_map = -1;$/;"	v	file:
current_music_volume	src/MUSIC/oplplayer.c	/^static int current_music_volume;$/;"	v	file:
current_nodesVersion	src/p_setup.c	/^static int current_nodesVersion = -1;$/;"	v	file:
current_player	src/SDL/i_emusic.c	/^static int current_player = -1;$/;"	v	file:
current_position	src/PCRELIB/pcre.h	/^  int          current_position;  \/* Where we currently are in the subject *\/$/;"	m	struct:pcre_callout_block
current_remaining	src/PCSOUND/pcsound_sdl.c	/^static int current_remaining;$/;"	v	file:
current_setup_menu	src/m_menu.c	/^setup_menu_t* current_setup_menu; \/\/ points to current setup menu table$/;"	v
current_sound_handle	src/i_pcsound.c	/^static int current_sound_handle = 0;$/;"	v	file:
current_sound_lump	src/i_pcsound.c	/^static const uint8_t *current_sound_lump = NULL;$/;"	v	file:
current_sound_pos	src/i_pcsound.c	/^static const uint8_t *current_sound_pos = NULL;$/;"	v	file:
current_sound_remaining	src/i_pcsound.c	/^static unsigned int current_sound_remaining = 0;$/;"	v	file:
current_thinker_count	src/p_saveg.c	/^static uint32_t current_thinker_count;$/;"	v	file:
current_time	src/MUSIC/opl.c	/^static unsigned int current_time;$/;"	v	file:
current_videomode	src/v_video.c	/^static video_mode_t current_videomode = VID_MODE32;$/;"	v	file:
currentsector	src/gl_preprocess.c	/^static int currentsector; \/\/ the sector which is currently tesselated$/;"	v	file:
currentsubsectornum	src/r_bsp.c	/^int currentsubsectornum;$/;"	v
currentthinker	src/p_tick.c	/^static thinker_t *currentthinker;$/;"	v	file:
curs_color	src/hu_input.c	/^  hu_color_t curs_color;$/;"	m	struct:input_widget_s	file:
cursor	src/hu_input.c	/^  size_t cursor;$/;"	m	struct:input_widget_s	file:
cursor	src/m_buf.h	/^  size_t cursor;$/;"	m	struct:buf_s
cursor	src/n_peer.c	/^  unsigned int cursor;$/;"	m	struct:packet_buf_s	file:
cursor_active	src/hu_input.c	/^  uint32_t cursor_active;$/;"	m	struct:input_widget_s	file:
cursor_at_end	src/hu_input.c	/^static bool cursor_at_end(input_widget_t *iw) {$/;"	f	file:
cursor_at_start	src/hu_input.c	/^static bool cursor_at_start(input_widget_t *iw) {$/;"	f	file:
cursors	src/SDL/i_video.c	/^static SDL_Cursor* cursors[2] = {NULL, NULL};$/;"	v	file:
custom_message	src/hu_stuff.c	/^static custom_message_t custom_message[MAXPLAYERS];$/;"	v	file:
custom_message_p	src/hu_stuff.c	/^static custom_message_t *custom_message_p;$/;"	v	file:
custom_message_s	src/hu_stuff.h	/^typedef struct custom_message_s$/;"	s
custom_message_t	src/hu_stuff.h	/^} custom_message_t;$/;"	t	typeref:struct:custom_message_s
cxxTask	src/MAC/macsupport.rb	/^def cxxTask(object, source)$/;"	f
d	src/d_ipxgate.c	/^    doomdata_t d;$/;"	m	union:__anon18::altu	file:
d	src/p_maputl.h	/^  } d;$/;"	m	struct:__anon222	typeref:union:__anon222::__anon223
d_episode	src/g_game.c	/^static int     d_episode;$/;"	v	file:
d_map	src/g_game.c	/^static int     d_map;$/;"	v	file:
d_skill	src/g_game.c	/^static skill_t d_skill;$/;"	v	file:
damage	src/info.h	/^  int damage;       \/* If this is a missile, how much does it hurt? *\/$/;"	m	struct:__anon138
damagecount	src/d_player.h	/^  int                 damagecount;$/;"	m	struct:player_s
darktime	src/p_spec.h	/^  int darktime;$/;"	m	struct:__anon264
data	src/MUSIC/midifile.h	/^    byte *data;$/;"	m	struct:__anon188
data	src/MUSIC/midifile.h	/^    byte *data;$/;"	m	struct:__anon189
data	src/MUSIC/midifile.h	/^    const byte *data;$/;"	m	struct:__anon184
data	src/MUSIC/midifile.h	/^    } data;$/;"	m	struct:__anon191	typeref:union:__anon191::__anon192
data	src/MUSIC/opl_queue.c	/^    void *data;$/;"	m	struct:__anon182	file:
data	src/PCRELIB/pcre_dfa_exec.c	/^  int data;                       \/* Some use extra data *\/$/;"	m	struct:stateblock	file:
data	src/PCRELIB/pcre_exec.c	3427;"	d	file:
data	src/PCRELIB/pcre_exec.c	450;"	d	file:
data	src/PCRELIB/pcregrep.c	/^WIN32_FIND_DATA data;$/;"	m	struct:directory_type	file:
data	src/SDL/i_sound.c	/^  const unsigned char *data;    \/\/ The channel data pointers, start...$/;"	m	struct:__anon313	file:
data	src/TEXTSCREEN/txt_sdl.c	/^    unsigned char *data;$/;"	m	struct:__anon337	file:
data	src/d_ipxgate.c	/^    unsigned char data[100];$/;"	m	union:__anon18::altu	file:
data	src/d_net.h	/^    doomdata_t          data;$/;"	m	struct:__anon27
data	src/gl_intern.h	/^  GLDrawDataItem_t *data;$/;"	m	struct:__anon105
data	src/gl_intern.h	/^  byte *data;$/;"	m	struct:GLDrawDataItem_s
data	src/gl_sky.c	/^  vbo_vertex_t *data;$/;"	m	struct:__anon112	file:
data	src/i_smp.h	/^  } data;$/;"	m	struct:smp_item_s	typeref:union:smp_item_s::__anon140
data	src/m_buf.h	/^  char *data;$/;"	m	struct:buf_s
data	src/m_misc.h	/^  void *data;$/;"	m	struct:array_s
data	src/n_peer.c	/^  unsigned char *data;$/;"	m	struct:packet_buf_s	file:
data	src/n_state.h	/^  buf_t data;$/;"	m	struct:game_state_delta_s
data	src/n_state.h	/^  pbuf_t *data;$/;"	m	struct:game_state_s
data	src/r_demo.c	/^  short *data;$/;"	m	struct:__anon292	file:
data	src/r_demo.h	/^  char* data;$/;"	m	struct:__anon293
data	src/r_patch.h	/^  unsigned char *data;$/;"	m	struct:__anon311
data	src/sounds.h	/^  const void *data;$/;"	m	struct:__anon316
data	src/sounds.h	/^  void *data;$/;"	m	struct:sfxinfo_struct
data	src/st_lib.h	/^  int     data;   \/\/ user data$/;"	m	struct:__anon323
data	src/st_lib.h	/^  int     data;$/;"	m	struct:__anon322
data	src/st_lib.h	/^  int data;$/;"	m	struct:__anon320
data	src/v_video.h	/^  byte *data;          \/\/ pointer to the screen content$/;"	m	struct:__anon342
data	src/w_mmap.c	/^  void   *data;$/;"	m	struct:__anon352	file:
data1	src/d_event.h	/^  int          data1;    \/\/ keys \/ mouse\/joystick buttons$/;"	m	struct:__anon14
data1	src/hu_tracers.h	/^  int data1;$/;"	m	struct:__anon127
data1	src/wi_stuff.c	/^  int   data1;$/;"	m	struct:__anon348	file:
data2	src/d_event.h	/^  int          data2;    \/\/ mouse\/joystick x move$/;"	m	struct:__anon14
data2	src/wi_stuff.c	/^  int   data2;$/;"	m	struct:__anon348	file:
data3	src/d_event.h	/^  int          data3;    \/\/ mouse\/joystick y move$/;"	m	struct:__anon14
data_	src/PCRELIB/pcre_scanner.h	/^  std::string   data_;          \/\/ All the input data$/;"	m	class:pcrecpp::Scanner
data_len	src/MUSIC/midifile.c	/^    unsigned int data_len;$/;"	m	struct:__anon181	file:
datalength	src/d_net.h	/^    short               datalength;$/;"	m	struct:__anon27
dataptr	src/PCRELIB/pcregrep.c	/^  void *dataptr;$/;"	m	struct:option_item	file:
datasize	src/r_demo.h	/^  int datasize;$/;"	m	struct:__anon293
db_delta	src/MUSIC/dumbplayer.c	/^static float db_delta;$/;"	v	file:
db_init	src/MUSIC/dumbplayer.c	/^static int db_init (int samplerate)$/;"	f	file:
db_looping	src/MUSIC/dumbplayer.c	/^static int db_looping;$/;"	v	file:
db_name	src/MUSIC/dumbplayer.c	/^static const char *db_name (void)$/;"	f	file:
db_pause	src/MUSIC/dumbplayer.c	/^static void db_pause (void)$/;"	f	file:
db_paused	src/MUSIC/dumbplayer.c	/^static int db_paused = 0;$/;"	v	file:
db_play	src/MUSIC/dumbplayer.c	/^static void db_play (const void *handle, int looping)$/;"	f	file:
db_player	src/MUSIC/dumbplayer.c	/^const music_player_t db_player =$/;"	v
db_playing	src/MUSIC/dumbplayer.c	/^static int db_playing = 0;$/;"	v	file:
db_registersong	src/MUSIC/dumbplayer.c	/^static const void* db_registersong (const void *data, unsigned len)$/;"	f	file:
db_render	src/MUSIC/dumbplayer.c	/^static void db_render (void *dest, unsigned nsamp)$/;"	f	file:
db_resume	src/MUSIC/dumbplayer.c	/^static void db_resume (void)$/;"	f	file:
db_setvolume	src/MUSIC/dumbplayer.c	/^static void db_setvolume (int v)$/;"	f	file:
db_shutdown	src/MUSIC/dumbplayer.c	/^static void db_shutdown (void)$/;"	f	file:
db_stop	src/MUSIC/dumbplayer.c	/^static void db_stop (void)$/;"	f	file:
db_unregistersong	src/MUSIC/dumbplayer.c	/^static void db_unregistersong (const void *handle)$/;"	f	file:
db_volume	src/MUSIC/dumbplayer.c	/^static float db_volume;$/;"	v	file:
dbl	src/cmp.h	/^  double    dbl;$/;"	m	union:cmp_object_data_u
dboolean	src/MAC/config.h	/^typedef int dboolean;$/;"	t
dboolean	src/MUSIC/midifile.c	/^typedef enum {false, true} dboolean;$/;"	t	typeref:enum:__anon178	file:
dboolean	src/doomtype.h	/^typedef bool dboolean;$/;"	t
dboolean	src/doomtype.h	/^typedef enum {false, true} dboolean;$/;"	t	typeref:enum:__anon56
dboolean	src/doomtype.h	/^typedef int dboolean;$/;"	t
dbuffer	src/PCRELIB/pcretest.c	/^static uschar *dbuffer = NULL;$/;"	v	file:
dclicks	src/g_game.c	/^static int   dclicks;$/;"	v	file:
dclicks2	src/g_game.c	/^static int   dclicks2;$/;"	v	file:
dclickstate	src/g_game.c	/^static int   dclickstate;$/;"	v	file:
dclickstate2	src/g_game.c	/^static int   dclickstate2;$/;"	v	file:
dclicktime	src/g_game.c	/^static int   dclicktime;$/;"	v	file:
dclicktime2	src/g_game.c	/^static int   dclicktime2;$/;"	v	file:
ddckCKDestBlt	src/gl_hires.c	/^  DDRAW_H_DDCOLORKEY ddckCKDestBlt;    \/\/ color key for destination blt use$/;"	m	struct:_DDRAW_H_DDSURFACEDESC2	file:
ddckCKDestOverlay	src/gl_hires.c	/^    DDRAW_H_DDCOLORKEY ddckCKDestOverlay; \/\/ color key for destination overlay use$/;"	m	union:_DDRAW_H_DDSURFACEDESC2::__anon83	file:
ddckCKSrcBlt	src/gl_hires.c	/^  DDRAW_H_DDCOLORKEY ddckCKSrcBlt;     \/\/ color key for source blt use$/;"	m	struct:_DDRAW_H_DDSURFACEDESC2	file:
ddckCKSrcOverlay	src/gl_hires.c	/^  DDRAW_H_DDCOLORKEY ddckCKSrcOverlay; \/\/ color key for source overlay use$/;"	m	struct:_DDRAW_H_DDSURFACEDESC2	file:
ddpfPixelFormat	src/gl_hires.c	/^    DDRAW_H_DDPIXELFORMAT ddpfPixelFormat; \/\/ pixel format description of the surface$/;"	m	union:_DDRAW_H_DDSURFACEDESC2::__anon84	file:
ddsCaps	src/gl_hires.c	/^  DDRAW_H_DDSCAPS2 ddsCaps;        \/\/ direct draw surface capabilities$/;"	m	struct:_DDRAW_H_DDSURFACEDESC2	file:
ddt_cheating	src/am_map.c	/^int ddt_cheating = 0;         \/\/ killough 2\/7\/98: make global, rename to ddt_*$/;"	v
deathmatch	src/d_net.h	/^    short               deathmatch;$/;"	m	struct:__anon27
deathmatch	src/g_game.c	/^dboolean        deathmatch;    \/\/ only if started as net death$/;"	v
deathmatch	src/protocol.h	/^  byte players, yourplayer, skill, episode, level, deathmatch, complevel, ticdup, extratic;$/;"	m	struct:setup_packet_s
deathmatch_p	src/p_setup.c	/^mapthing_t *deathmatch_p;$/;"	v
deathmatchstarts	src/p_setup.c	/^mapthing_t *deathmatchstarts;      \/\/ killough$/;"	v
deathmatchstarts_indexes	src/hu_tracers.c	/^static tracer_mapthing_t *deathmatchstarts_indexes = NULL;$/;"	v	file:
deathsound	src/info.h	/^  int deathsound;   \/* The death sound.  See also A_Scream() in$/;"	m	struct:__anon138
deathstate	src/info.h	/^  int deathstate;   \/* What state begins the death sequence *\/$/;"	m	struct:__anon138
debugfile	src/d_main.c	/^FILE    *debugfile;$/;"	v
decayAdd	src/MUSIC/dbopl.h	/^  Bit32u decayAdd;$/;"	m	struct:_Operator
dee_READ	src/PCRELIB/pcregrep.c	/^enum { dee_READ, dee_SKIP, dee_RECURSE };$/;"	e	enum:__anon214	file:
dee_RECURSE	src/PCRELIB/pcregrep.c	/^enum { dee_READ, dee_SKIP, dee_RECURSE };$/;"	e	enum:__anon214	file:
dee_SKIP	src/PCRELIB/pcregrep.c	/^enum { dee_READ, dee_SKIP, dee_RECURSE };$/;"	e	enum:__anon214	file:
dee_action	src/PCRELIB/pcregrep.c	/^static int dee_action = dee_READ;$/;"	v	file:
dee_option	src/PCRELIB/pcregrep.c	/^static char *dee_option = NULL;$/;"	v	file:
def	src/m_menu.h	/^    struct default_s    *def;   \/* default[] table entry *\/$/;"	m	union:setup_menu_s::__anon167	typeref:struct:setup_menu_s::__anon167::default_s
def_arr	src/m_misc.h	/^    def_arr,  \/\/ e6y: arrays$/;"	e	enum:default_s::__anon171
def_bool	src/m_misc.h	/^    def_bool = def_int,  \/\/ Boolean$/;"	e	enum:default_s::__anon171
def_colour	src/m_misc.h	/^    def_colour = def_hex \/\/ Colour (256 colour palette entry)$/;"	e	enum:default_s::__anon171
def_game_options	src/d_server.c	/^byte def_game_options[GAME_OPTIONS_SIZE] = \\$/;"	v
def_hex	src/m_misc.h	/^    def_hex,  \/\/ Integer (write in hex)$/;"	e	enum:default_s::__anon171
def_int	src/m_misc.h	/^    def_int,  \/\/ Integer$/;"	e	enum:default_s::__anon171
def_key	src/m_misc.h	/^    def_key = def_hex,   \/\/ Key code (byte)$/;"	e	enum:default_s::__anon171
def_mouseb	src/m_misc.h	/^    def_mouseb = def_int,\/\/ Mouse button$/;"	e	enum:default_s::__anon171
def_none	src/m_misc.h	/^    def_none, \/\/ Dummy entry$/;"	e	enum:default_s::__anon171
def_str	src/m_misc.h	/^    def_str,  \/\/ A string$/;"	e	enum:default_s::__anon171
default_allow_pushers	src/doomstat.c	/^int  default_allow_pushers;  \/\/ killough 3\/1\/98: make local to each game$/;"	v
default_comp	src/doomstat.c	/^int comp[COMP_TOTAL], default_comp[COMP_TOTAL];    \/\/ killough 10\/98$/;"	v
default_compatibility_level	src/doomstat.c	/^complevel_t compatibility_level, default_compatibility_level;$/;"	v
default_comperr	src/doomstat.c	/^int \/*comperr[COMPERR_NUM], *\/default_comperr[COMPERR_NUM];$/;"	v
default_demo_insurance	src/doomstat.c	/^int demo_insurance, default_demo_insurance;        \/\/ killough 1\/16\/98$/;"	v
default_distfriend	src/doomstat.c	/^int distfriend = 128, default_distfriend = 128;$/;"	v
default_dog_jumping	src/doomstat.c	/^int dog_jumping, default_dog_jumping;   \/\/ killough 10\/98$/;"	v
default_dogs	src/doomstat.c	/^int dogs, default_dogs;         \/\/ killough 7\/19\/98: Marine's best friend :)$/;"	v
default_help_friends	src/doomstat.c	/^int help_friends, default_help_friends;$/;"	v
default_leave_weapons	src/doomstat.c	/^int default_leave_weapons; \/\/ CG 08\/19\/2014$/;"	v
default_monkeys	src/doomstat.c	/^int monkeys, default_monkeys;$/;"	v
default_monster_avoid_hazards	src/doomstat.c	/^int monster_avoid_hazards, default_monster_avoid_hazards;$/;"	v
default_monster_backing	src/doomstat.c	/^int monster_backing, default_monster_backing;$/;"	v
default_monster_friction	src/doomstat.c	/^int default_monster_friction=1;$/;"	v
default_monster_infighting	src/doomstat.c	/^int default_monster_infighting=1;$/;"	v
default_monsters_remember	src/doomstat.c	/^int default_monsters_remember;$/;"	v
default_numChannels	src/s_sound.c	/^int default_numChannels;$/;"	v
default_options	src/PCRELIB/pcrecpp.cc	/^static RE_Options default_options;$/;"	m	namespace:pcrecpp	file:
default_player_bobbing	src/doomstat.c	/^int default_player_bobbing;  \/\/ killough 3\/1\/98: make local to each game$/;"	v
default_s	src/m_misc.h	/^typedef struct default_s$/;"	s
default_t	src/m_misc.h	/^} default_t;$/;"	t	typeref:struct:default_s
default_translucency	src/doomstat.c	/^int     default_translucency; \/\/ config file says           \/\/ phares$/;"	v
default_variable_friction	src/doomstat.c	/^int  default_variable_friction;  \/\/ killough 3\/1\/98: make local to each game$/;"	v
default_verify	src/m_menu.c	/^dboolean default_verify    = false; \/\/ verify reset defaults decision$/;"	v
default_videomode	src/v_video.c	/^const char *default_videomode;$/;"	v
default_weapon_recoil	src/doomstat.c	/^int  default_weapon_recoil;      \/\/ killough 3\/1\/98: make local to each game$/;"	v
defaultfile	src/m_misc.c	/^static char* defaultfile; \/\/ CPhipps - static, const$/;"	v	file:
defaults	src/m_misc.c	/^default_t defaults[] =$/;"	v
defaultskill	src/g_game.c	/^int defaultskill;               \/\/note 1-based$/;"	v
defaultvalue	src/m_misc.h	/^  } defaultvalue; \/\/ CPhipps - default value$/;"	m	struct:default_s	typeref:struct:default_s::__anon170
defdemoname	src/g_game.c	/^static const char *defdemoname;$/;"	v	file:
degenmobj_t	src/r_defs.h	/^} degenmobj_t;$/;"	t	typeref:struct:__anon282
dehReformatStr	src/d_deh.c	/^char *dehReformatStr(char *string)$/;"	f
deh_GetData	src/d_deh.c	/^dboolean deh_GetData(char *s, char *k, uint_64_t *l, char **strval, FILE *fpout)$/;"	f
deh_ammo	src/d_deh.c	/^static const char *deh_ammo[] = \/\/ CPhipps - static const*$/;"	v	file:
deh_applyCompatibility	src/d_deh.c	/^void deh_applyCompatibility(void)$/;"	f
deh_apply_cheats	src/d_deh.c	/^int deh_apply_cheats = true;$/;"	v
deh_bexptr	src/d_deh.c	/^} deh_bexptr;$/;"	t	typeref:struct:__anon12	file:
deh_bexptrs	src/d_deh.c	/^static const deh_bexptr deh_bexptrs[] = \/\/ CPhipps - static const$/;"	v	file:
deh_block	src/d_deh.c	/^} deh_block;$/;"	t	typeref:struct:__anon11	file:
deh_blocks	src/d_deh.c	/^static const deh_block deh_blocks[] = { \/\/ CPhipps - static const$/;"	v	file:
deh_changeCompTranslucency	src/d_deh.c	/^void deh_changeCompTranslucency(void)$/;"	f
deh_cheat	src/m_cheat.h	/^  const char *const deh_cheat;$/;"	m	struct:cheatseq_s
deh_codeptr	src/d_deh.c	/^static actionf_t deh_codeptr[NUMSTATES];$/;"	v	file:
deh_file_names	src/d_main.c	/^const char *wad_file_names[MAXLOADFILES], *deh_file_names[MAXLOADFILES];$/;"	v
deh_file_s	src/d_deh.h	/^typedef struct deh_file_s {$/;"	s
deh_file_t	src/d_deh.h	/^} deh_file_t;$/;"	t	typeref:struct:deh_file_s
deh_files	src/d_main.c	/^GPtrArray *deh_files = NULL;$/;"	v
deh_getBitsDelims	src/d_deh.c	/^const char * deh_getBitsDelims(void)$/;"	f
deh_max_soul	src/d_deh.c	/^int deh_max_soul;$/;"	v
deh_maxhealth	src/d_deh.c	/^int deh_maxhealth;$/;"	v
deh_mega_health	src/d_deh.c	/^int deh_mega_health;$/;"	v
deh_misc	src/d_deh.c	/^static const char *deh_misc[] = \/\/ CPhipps - static const*$/;"	v	file:
deh_mobjflags	src/d_deh.c	/^static const struct deh_mobjflags_s deh_mobjflags[] = {$/;"	v	typeref:struct:deh_mobjflags_s	file:
deh_mobjflags_s	src/d_deh.c	/^struct deh_mobjflags_s {$/;"	s	file:
deh_mobjinfo	src/d_deh.c	/^static const char *deh_mobjinfo[DEH_MOBJINFOMAX] =$/;"	v	file:
deh_musicnames	src/d_deh.c	/^char *deh_musicnames[NUMMUSIC + 1];$/;"	v
deh_newlevel	src/d_deh.c	/^const char *deh_newlevel = "NEWLEVEL"; \/\/ CPhipps - const$/;"	v
deh_numstrlookup	src/d_deh.c	/^static int deh_numstrlookup =$/;"	v	file:
deh_pars	src/d_deh.c	/^dboolean deh_pars = DEHFALSE; \/\/ in wi_stuff to allow pars in modified games$/;"	v
deh_procAmmo	src/d_deh.c	/^static void deh_procAmmo(DEHFILE *fpin, FILE* fpout, char *line)$/;"	f	file:
deh_procBexCodePointers	src/d_deh.c	/^static void deh_procBexCodePointers(DEHFILE *fpin, FILE* fpout, char *line)$/;"	f	file:
deh_procBexMusic	src/d_deh.c	/^static void deh_procBexMusic(DEHFILE *fpin, FILE *fpout, char *line)$/;"	f	file:
deh_procBexSounds	src/d_deh.c	/^static void deh_procBexSounds(DEHFILE *fpin, FILE *fpout, char *line)$/;"	f	file:
deh_procBexSprites	src/d_deh.c	/^static void deh_procBexSprites(DEHFILE *fpin, FILE *fpout, char *line)$/;"	f	file:
deh_procCheat	src/d_deh.c	/^static void deh_procCheat(DEHFILE *fpin, FILE* fpout, char *line) \/\/ done$/;"	f	file:
deh_procError	src/d_deh.c	/^static void deh_procError(DEHFILE *fpin, FILE* fpout, char *line)$/;"	f	file:
deh_procFrame	src/d_deh.c	/^static void deh_procFrame(DEHFILE *fpin, FILE* fpout, char *line)$/;"	f	file:
deh_procHelperThing	src/d_deh.c	/^static void deh_procHelperThing(DEHFILE *fpin, FILE *fpout, char *line)$/;"	f	file:
deh_procMisc	src/d_deh.c	/^static void deh_procMisc(DEHFILE *fpin, FILE* fpout, char *line) \/\/ done$/;"	f	file:
deh_procPars	src/d_deh.c	/^static void deh_procPars(DEHFILE *fpin, FILE* fpout, char *line) \/\/ extension$/;"	f	file:
deh_procPointer	src/d_deh.c	/^static void deh_procPointer(DEHFILE *fpin, FILE* fpout, char *line) \/\/ done$/;"	f	file:
deh_procSounds	src/d_deh.c	/^static void deh_procSounds(DEHFILE *fpin, FILE* fpout, char *line)$/;"	f	file:
deh_procSprite	src/d_deh.c	/^static void deh_procSprite(DEHFILE *fpin, FILE* fpout, char *line) \/\/ Not supported$/;"	f	file:
deh_procStringSub	src/d_deh.c	/^dboolean deh_procStringSub(char *key, char *lookfor, char *newstring, FILE *fpout)$/;"	f
deh_procStrings	src/d_deh.c	/^static void deh_procStrings(DEHFILE *fpin, FILE* fpout, char *line)$/;"	f	file:
deh_procText	src/d_deh.c	/^static void deh_procText(DEHFILE *fpin, FILE* fpout, char *line)$/;"	f	file:
deh_procThing	src/d_deh.c	/^static void deh_procThing(DEHFILE *fpin, FILE* fpout, char *line)$/;"	f	file:
deh_procWeapon	src/d_deh.c	/^static void deh_procWeapon(DEHFILE *fpin, FILE* fpout, char *line)$/;"	f	file:
deh_sequence_len	src/m_cheat.h	/^  size_t deh_sequence_len;$/;"	m	struct:cheatseq_s
deh_sfxinfo	src/d_deh.c	/^static const char *deh_sfxinfo[] = \/\/ CPhipps - static const*$/;"	v	file:
deh_soundnames	src/d_deh.c	/^char *deh_soundnames[NUMSFX + 1];$/;"	v
deh_spritenames	src/d_deh.c	/^char *deh_spritenames[NUMSPRITES + 1];$/;"	v
deh_state	src/d_deh.c	/^static const char *deh_state[] = \/\/ CPhipps - static const*$/;"	v	file:
deh_strcasecmp	src/d_deh.c	/^int deh_strcasecmp(const char *str1, const char *str2)$/;"	f
deh_strlookup	src/d_deh.c	/^static deh_strs deh_strlookup[] = {$/;"	v	file:
deh_strs	src/d_deh.c	/^} deh_strs;$/;"	t	typeref:struct:__anon10	file:
deh_weapon	src/d_deh.c	/^static const char *deh_weapon[] = \/\/ CPhipps - static const*$/;"	v	file:
dehfeof	src/d_deh.c	/^static int dehfeof(DEHFILE *fp)$/;"	f	file:
dehfgetc	src/d_deh.c	/^static int dehfgetc(DEHFILE *fp)$/;"	f	file:
dehfgets	src/d_deh.c	/^static char *dehfgets(char *buf, size_t n, DEHFILE *fp)$/;"	f	file:
delay	src/hu_stuff.h	/^  int delay;$/;"	m	struct:message_thinker_s
delete	src/hu_input.c	/^static void delete(input_widget_t *iw) {$/;"	f	file:
delta	src/gl_sky.c	/^static float delta = 0.0f;$/;"	v	file:
delta	src/n_peer.h	/^  game_state_delta_t delta;$/;"	m	struct:netsync_s
delta_time	src/MUSIC/midifile.h	/^    unsigned int delta_time;$/;"	m	struct:__anon191
deltaviewheight	src/d_player.h	/^  fixed_t             deltaviewheight;$/;"	m	struct:player_s
deltax1	src/v_video.h	/^  int deltax1;$/;"	m	struct:stretch_param_s
deltax2	src/v_video.h	/^  int deltax2;$/;"	m	struct:stretch_param_s
deltay1	src/v_video.h	/^  int deltay1;$/;"	m	struct:stretch_param_s
deltay2	src/v_video.h	/^  int deltay2;$/;"	m	struct:stretch_param_s
demo_compatibility	src/doomstat.h	59;"	d
demo_continue_name	src/g_game.c	/^char*           demo_continue_name;$/;"	v
demo_continue_p	src/g_game.c	/^const byte *demo_continue_p = NULL;$/;"	v
demo_curr_tic	src/e6y.c	/^int demo_curr_tic;$/;"	v
demo_demoex_filename	src/r_demo.c	/^const char *demo_demoex_filename;$/;"	v
demo_extendedformat	src/r_demo.c	/^int demo_extendedformat = -1;$/;"	v
demo_extendedformat_default	src/r_demo.c	/^int demo_extendedformat_default;$/;"	v
demo_insurance	src/d_net.h	/^  byte demo_insurance;$/;"	m	struct:__anon24
demo_insurance	src/doomstat.c	/^int demo_insurance, default_demo_insurance;        \/\/ killough 1\/16\/98$/;"	v
demo_len_st	src/e6y.c	/^char demo_len_st[80];$/;"	v
demo_overwriteexisting	src/e6y.c	/^int demo_overwriteexisting;$/;"	v
demo_p	src/g_game.c	/^const byte *demo_p;$/;"	v
demo_patterns_count	src/r_demo.c	/^int demo_patterns_count;$/;"	v
demo_patterns_list	src/r_demo.c	/^char **demo_patterns_list;$/;"	v
demo_patterns_list_def	src/r_demo.c	/^const char *demo_patterns_list_def[9];$/;"	v
demo_patterns_mask	src/r_demo.c	/^const char *demo_patterns_mask;$/;"	v
demo_playerscount	src/e6y.c	/^int demo_playerscount;$/;"	v
demo_skiptics	src/e6y.c	/^int demo_skiptics;$/;"	v
demo_smoothturns	src/r_demo.c	/^int demo_smoothturns = false;$/;"	v
demo_smoothturnsfactor	src/r_demo.c	/^int demo_smoothturnsfactor = 6;$/;"	v
demo_stoponend	src/e6y.c	/^dboolean demo_stoponend;$/;"	v
demo_stoponnext	src/e6y.c	/^dboolean demo_stoponnext;$/;"	v
demo_tics_count	src/e6y.c	/^int demo_tics_count;$/;"	v
demo_warp	src/e6y.c	/^dboolean demo_warp;$/;"	v
demobuffer	src/g_game.c	/^static const byte *demobuffer;   \/* cph - only used for playback *\/$/;"	v	file:
democontinue	src/g_game.c	/^dboolean        democontinue = false;$/;"	v
demoex_filename	src/r_demo.c	/^char demoex_filename[PATH_MAX];$/;"	v
demofp	src/g_game.c	/^static FILE       *demofp; \/* cph - record straight to file *\/$/;"	v	file:
demolength	src/g_game.c	/^static int         demolength; \/\/ check for overrun (missing DEMOMARKER)$/;"	v	file:
demolumpnum	src/g_game.c	/^static int demolumpnum = -1;$/;"	v	file:
demoplayback	src/g_game.c	/^dboolean        demoplayback;$/;"	v
demorecording	src/g_game.c	/^dboolean        demorecording;$/;"	v
demosequence	src/d_main.c	/^static int  demosequence;         \/\/ killough 5\/2\/98: made static$/;"	v	file:
demostates	src/d_main.c	/^} const demostates[][4] =$/;"	v	file:
demover	src/doomstat.c	/^int demover;$/;"	v
demover	src/g_game.c	/^int             demover;$/;"	v
desc	src/z_bmalloc.h	/^  const char *desc;$/;"	m	struct:block_memory_alloc_s
desc	src/z_zone.c	/^static const char *const desc[NUM_HISTORY_TYPES] = {"malloc()'s", "free()'s"};$/;"	v	file:
deserialize_toc	src/n_peer.c	/^static bool deserialize_toc(GArray *toc, unsigned char *data,$/;"	f	file:
desired_fullscreen	src/SDL/i_video.c	/^int desired_fullscreen;$/;"	v
desired_screenheight	src/d_main.c	/^unsigned int desired_screenwidth, desired_screenheight;$/;"	v
desired_screenwidth	src/d_main.c	/^unsigned int desired_screenwidth, desired_screenheight;$/;"	v
desktop_title	src/TEXTSCREEN/txt_desktop.c	/^static char *desktop_title;$/;"	v	file:
destination_keys	src/g_keys.c	/^int destination_keys[MAXPLAYERS];$/;"	v
destroy_netticcmd	src/n_peer.c	/^static void destroy_netticcmd(gpointer data) {$/;"	f	file:
destructor	src/TEXTSCREEN/txt_widget.h	/^    TxtWidgetDestroy destructor;$/;"	m	struct:txt_widget_class_s
detail	src/gl_intern.h	/^  detail_t *detail;$/;"	m	struct:__anon89
detailNames	src/m_menu.c	/^char detailNames[2][9] = {"M_GDHIGH","M_GDLOW"};$/;"	v
detail_height	src/gl_intern.h	/^  float detail_width, detail_height;$/;"	m	struct:__anon89
detail_s	src/gl_intern.h	/^typedef struct detail_s$/;"	s
detail_t	src/gl_intern.h	/^} detail_t;$/;"	t	typeref:struct:detail_s
detail_width	src/gl_intern.h	/^  float detail_width, detail_height;$/;"	m	struct:__anon89
details	src/gl_detail.c	/^detail_t *details;$/;"	v
details_count	src/gl_detail.c	/^int details_count;$/;"	v
details_size	src/gl_detail.c	/^int details_size;$/;"	v
detect_voices	src/SDL/i_sound.c	/^int detect_voices = 0;      \/\/ God knows$/;"	v
devparm	src/d_main.c	/^dboolean devparm;        \/\/ started game with -devparm$/;"	v
dfa_match_data	src/PCRELIB/pcre_internal.h	/^typedef struct dfa_match_data {$/;"	s
dfa_match_data	src/PCRELIB/pcre_internal.h	/^} dfa_match_data;$/;"	t	typeref:struct:dfa_match_data
dfil	src/MUSIC/dumbplayer.c	/^static DUMBFILE *dfil = NULL;$/;"	v	file:
dicmp_flat	src/gl_main.c	/^static int C_DECL dicmp_flat(const void *a, const void *b) {$/;"	f	file:
dicmp_flat_detail	src/gl_detail.c	/^static int C_DECL dicmp_flat_detail(const void *a, const void *b)$/;"	f	file:
dicmp_sprite	src/gl_main.c	/^static int C_DECL dicmp_sprite(const void *a, const void *b) {$/;"	f	file:
dicmp_sprite_by_pos	src/gl_main.c	/^static int C_DECL dicmp_sprite_by_pos(const void *a, const void *b) {$/;"	f	file:
dicmp_sprite_by_pos	src/p_setup.c	/^static int C_DECL dicmp_sprite_by_pos(const void *a, const void *b)$/;"	f	file:
dicmp_sprite_scale	src/gl_main.c	/^static int C_DECL dicmp_sprite_scale(const void *a, const void *b) {$/;"	f	file:
dicmp_visible_subsectors_by_pic	src/gl_main.c	/^static int C_DECL dicmp_visible_subsectors_by_pic(const void *a, const void *b)$/;"	f	file:
dicmp_wall	src/gl_main.c	/^static int C_DECL dicmp_wall(const void *a, const void *b) {$/;"	f	file:
dicmp_wall_detail	src/gl_detail.c	/^static int C_DECL dicmp_wall_detail(const void *a, const void *b)$/;"	f	file:
didInterp	src/r_fps.c	/^static dboolean didInterp;$/;"	v	file:
didsecret	src/d_player.h	/^  dboolean            didsecret;$/;"	m	struct:player_s
didsecret	src/d_player.h	/^  dboolean   didsecret;$/;"	m	struct:__anon61
didsolidcol	src/r_segs.c	/^static int didsolidcol; \/* True if at least one column was marked solid *\/$/;"	v	file:
digitab	src/PCRELIB/pcre_compile.c	/^static const unsigned char digitab[] =$/;"	v	file:
direction	src/p_spec.h	/^  int direction;$/;"	m	struct:__anon265
direction	src/p_spec.h	/^  int direction;$/;"	m	struct:__anon267
direction	src/p_spec.h	/^  int direction;$/;"	m	struct:__anon268
direction	src/p_spec.h	/^  int direction;$/;"	m	struct:__anon269
direction	src/p_spec.h	/^  int direction;$/;"	m	struct:__anon270
directory_type	src/PCRELIB/pcregrep.c	/^typedef DIR directory_type;$/;"	t	file:
directory_type	src/PCRELIB/pcregrep.c	/^typedef struct directory_type$/;"	s	file:
directory_type	src/PCRELIB/pcregrep.c	/^typedef void directory_type;$/;"	t	file:
directory_type	src/PCRELIB/pcregrep.c	/^} directory_type;$/;"	t	typeref:struct:directory_type	file:
dirtype_e	src/p_enemy.c	/^} dirtype_e;$/;"	t	typeref:enum:__anon220	file:
dirtype_t	src/p_enemy.c	/^typedef int dirtype_t;$/;"	t	file:
disconnect_time	src/n_peer.h	/^  time_t        disconnect_time;$/;"	m	struct:netpeer_s
displaycounter	src/d_server.c	/^int displaycounter;$/;"	v
displayplayer	src/g_game.c	/^int             displayplayer; \/\/ view being displayed$/;"	v
displaytime	src/SDL/i_system.c	/^static unsigned int displaytime;$/;"	v	file:
distance2piece	src/gl_detail.c	/^float distance2piece(float x0, float y0, float x1, float y1, float x2, float y2)$/;"	f
distfogtable	src/gl_light.c	/^float distfogtable[3][256];$/;"	v
distfriend	src/doomstat.c	/^int distfriend = 128, default_distfriend = 128;$/;"	v
distscale	src/r_plane.c	/^fixed_t *distscale = NULL;$/;"	v
divline_t	src/p_maputl.h	/^} divline_t;$/;"	t	typeref:struct:__anon221
dm_frags	src/wi_stuff.c	/^static short int  **dm_frags;  \/\/ frags matrix$/;"	v	file:
dm_state	src/wi_stuff.c	/^static int          dm_state;$/;"	v	file:
dm_totals	src/wi_stuff.c	/^static short int   *dm_totals;  \/\/ totals by player$/;"	v	file:
doSkip	src/e6y.c	/^dboolean doSkip;$/;"	v
do_after_lines	src/PCRELIB/pcregrep.c	/^static void do_after_lines(int lastmatchnumber, char *lastmatchrestart,$/;"	f	file:
do_colour	src/PCRELIB/pcregrep.c	/^static BOOL do_colour = FALSE;$/;"	v	file:
doexit	src/d_server.c	/^void doexit(void)$/;"	f
dofrags	src/wi_stuff.c	/^static int    dofrags;$/;"	v	file:
dog_jumping	src/doomstat.c	/^int dog_jumping, default_dog_jumping;   \/\/ killough 10\/98$/;"	v
dogs	src/doomstat.c	/^int dogs, default_dogs;         \/\/ killough 7\/19\/98: Marine's best friend :)$/;"	v
dollar_endonly	src/PCRELIB/pcrecpp.h	/^  bool dollar_endonly() const {$/;"	f	class:pcrecpp::RE_Options
doneTables	src/MUSIC/dbopl.c	/^static int doneTables = FALSE;$/;"	v	file:
donutRaise	src/p_spec.h	/^  donutRaise,$/;"	e	enum:__anon255
doom	src/doomdef.h	/^  doom,         \/\/ DOOM 1$/;"	e	enum:__anon44
doom1	src/e6y_launcher.c	/^  dboolean doom1;$/;"	m	struct:__anon67	file:
doom2	src/doomdef.h	/^  doom2,        \/\/ DOOM 2$/;"	e	enum:__anon44
doom2	src/e6y_launcher.c	/^  dboolean doom2;$/;"	m	struct:__anon67	file:
doom2_19_compatibility	src/doomtype.h	/^  doom2_19_compatibility,  \/* Doom & Doom 2 v1.9 *\/$/;"	e	enum:__anon57
doom_12_compatibility	src/doomtype.h	/^  doom_12_compatibility,   \/* Doom v1.2 *\/$/;"	e	enum:__anon57
doom_1666_compatibility	src/doomtype.h	/^  doom_1666_compatibility, \/* Doom v1.666 *\/$/;"	e	enum:__anon57
doom_b16	src/m_swap.h	112;"	d
doom_b16	src/m_swap.h	121;"	d
doom_b32	src/m_swap.h	113;"	d
doom_b32	src/m_swap.h	122;"	d
doom_b64	src/m_swap.h	114;"	d
doom_b64	src/m_swap.h	123;"	d
doom_htonl	src/m_swap.h	140;"	d
doom_htonll	src/m_swap.h	138;"	d
doom_htons	src/m_swap.h	142;"	d
doom_htowl	src/m_swap.h	133;"	d
doom_htowll	src/m_swap.h	131;"	d
doom_htows	src/m_swap.h	135;"	d
doom_l16	src/m_swap.h	115;"	d
doom_l16	src/m_swap.h	124;"	d
doom_l32	src/m_swap.h	116;"	d
doom_l32	src/m_swap.h	125;"	d
doom_l64	src/m_swap.h	117;"	d
doom_l64	src/m_swap.h	126;"	d
doom_ntohl	src/m_swap.h	139;"	d
doom_ntohll	src/m_swap.h	137;"	d
doom_ntohs	src/m_swap.h	141;"	d
doom_snprintf	src/lprintf.c	/^int doom_snprintf(char *buf, size_t max, const char *fmt, ...)$/;"	f
doom_swap_l	src/m_swap.h	58;"	d
doom_swap_l	src/m_swap.h	69;"	d
doom_swap_l	src/m_swap.h	88;"	d
doom_swap_ll	src/m_swap.h	61;"	d
doom_swap_ll	src/m_swap.h	71;"	d
doom_swap_ll	src/m_swap.h	76;"	d
doom_swap_s	src/m_swap.h	55;"	d
doom_swap_s	src/m_swap.h	68;"	d
doom_swap_s	src/m_swap.h	96;"	d
doom_vsnprintf	src/lprintf.c	/^int doom_vsnprintf(char *buf, size_t max, const char *fmt, va_list va)$/;"	f
doom_weapon_toggles	src/doomstat.c	/^int doom_weapon_toggles; \/\/ killough 10\/98$/;"	v
doom_wtohl	src/m_swap.h	132;"	d
doom_wtohll	src/m_swap.h	130;"	d
doom_wtohs	src/m_swap.h	134;"	d
doomcom	src/d_client.c	/^doomcom_t*      doomcom;$/;"	v
doomcom_t	src/d_net.h	/^} doomcom_t;$/;"	t	typeref:struct:__anon27
doomdata_t	src/d_ipxgate.c	/^} doomdata_t;   $/;"	t	typeref:struct:a	file:
doomdata_t	src/d_net.h	/^} doomdata_t;$/;"	t	typeref:struct:__anon23
doomednum	src/info.h	/^  int doomednum;    \/* Thing number used in id's editor, and now$/;"	m	struct:__anon138
doomverstr	src/d_main.c	/^const char* doomverstr = NULL;$/;"	v
doorkind_e	src/p_spec.h	/^} doorkind_e;$/;"	t	typeref:enum:__anon247
dos_mem_dump	src/g_overflow.c	/^unsigned char *dos_mem_dump = mem_dump_dos622;$/;"	v
dosdoom_compatibility	src/doomtype.h	/^  dosdoom_compatibility,     \/* DosDoom 0.47 *\/$/;"	e	enum:__anon57
dotall	src/PCRELIB/pcrecpp.h	/^  bool dotall() const {$/;"	f	class:pcrecpp::RE_Options
down	src/p_spec.h	/^  down,$/;"	e	enum:__anon251
downWaitUpStay	src/p_spec.h	/^  downWaitUpStay,$/;"	e	enum:__anon252
downstate	src/d_items.h	/^  int         downstate;$/;"	m	struct:__anon19
draw	src/hu_stuff.c	/^  HU_widget_draw_func draw;$/;"	m	struct:hud_widget_s	file:
draw_column_flags_e	src/r_draw.h	/^} draw_column_flags_e;$/;"	t	typeref:enum:__anon297
draw_column_vars_s	src/r_draw.h	/^typedef struct draw_column_vars_s$/;"	s
draw_column_vars_t	src/r_draw.h	/^} draw_column_vars_t;$/;"	t	typeref:struct:draw_column_vars_s
draw_filter_type_e	src/r_draw.h	/^enum draw_filter_type_e {$/;"	g
draw_span_vars_t	src/r_draw.h	/^} draw_span_vars_t;$/;"	t	typeref:struct:__anon298
draw_vars_t	src/r_draw.h	/^} draw_vars_t;$/;"	t	typeref:struct:__anon299
drawcolumnfuncs	src/r_draw.c	/^static R_DrawColumn_f drawcolumnfuncs[VID_MODEMAX][RDRAW_FILTER_MAXFILTERS][RDRAW_FILTER_MAXFILTERS][RDC_PIPELINE_MAXPIPELINES] = {$/;"	v	file:
drawer	src/TEXTSCREEN/txt_widget.h	/^    TxtWidgetDrawer drawer;$/;"	m	struct:txt_widget_class_s
drawingmasked	src/r_draw.h	/^  int                 drawingmasked;$/;"	m	struct:draw_column_vars_s
drawseg_s	src/r_defs.h	/^typedef struct drawseg_s$/;"	s
drawseg_t	src/r_defs.h	/^} drawseg_t;$/;"	t	typeref:struct:drawseg_s
drawseg_xrange_item_s	src/r_things.c	/^typedef struct drawseg_xrange_item_s$/;"	s	file:
drawseg_xrange_item_t	src/r_things.c	/^} drawseg_xrange_item_t;$/;"	t	typeref:struct:drawseg_xrange_item_s	file:
drawsegs	src/r_bsp.c	/^drawseg_t *drawsegs;$/;"	v
drawsegs_xrange	src/r_things.c	/^static drawseg_xrange_item_t *drawsegs_xrange;$/;"	v	file:
drawsegs_xrange_count	src/r_things.c	/^static int drawsegs_xrange_count = 0;$/;"	v	file:
drawsegs_xrange_s	src/r_things.c	/^typedef struct drawsegs_xrange_s$/;"	s	file:
drawsegs_xrange_size	src/r_things.c	/^static unsigned int drawsegs_xrange_size = 0;$/;"	v	file:
drawsegs_xrange_t	src/r_things.c	/^} drawsegs_xrange_t;$/;"	t	typeref:struct:drawsegs_xrange_s	file:
drawsegs_xranges	src/r_things.c	/^static drawsegs_xrange_t drawsegs_xranges[DS_RANGES_COUNT];$/;"	v	file:
drawspanfuncs	src/r_draw.c	/^static R_DrawSpan_f drawspanfuncs[VID_MODEMAX][RDRAW_FILTER_MAXFILTERS][RDRAW_FILTER_MAXFILTERS] = {$/;"	v	file:
drawvars	src/r_draw.c	/^draw_vars_t drawvars = { $/;"	v
drivers	src/PCSOUND/pcsound.c	/^static pcsound_driver_t *drivers[] = $/;"	v	file:
drone	src/d_ipxgate.c	/^  short     drone;$/;"	m	struct:__anon17	file:
drone	src/d_net.h	/^    short               drone;$/;"	m	struct:__anon27
dropoff_deltax	src/p_enemy.c	/^static fixed_t dropoff_deltax, dropoff_deltay, floorz;$/;"	v	file:
dropoff_deltay	src/p_enemy.c	/^static fixed_t dropoff_deltax, dropoff_deltay, floorz;$/;"	v	file:
dropoffz	src/p_mobj.h	/^    fixed_t             dropoffz;$/;"	m	struct:mobj_s
ds_p	src/r_bsp.c	/^drawseg_t *ds_p;$/;"	v
dsren	src/MUSIC/dumbplayer.c	/^static DUH_SIGRENDERER *dsren = NULL;$/;"	v	file:
duh	src/MUSIC/dumbplayer.c	/^static DUH *duh = NULL;$/;"	v	file:
dummy1	src/PCRELIB/pcre_internal.h	/^  pcre_uint32 dummy1;             \/* For future use, maybe *\/$/;"	m	struct:real_pcre
dumping_sound	src/SDL/i_sound.c	/^static int dumping_sound = 0; \/\/ NSM$/;"	v	file:
dwAlphaBitDepth	src/gl_hires.c	/^    unsigned long dwAlphaBitDepth;         \/\/ how many bits for alpha channels$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon74	file:
dwAlphaBitDepth	src/gl_hires.c	/^  unsigned long dwAlphaBitDepth; \/\/ depth of alpha buffer requested$/;"	m	struct:_DDRAW_H_DDSURFACEDESC2	file:
dwBBitMask	src/gl_hires.c	/^    unsigned long dwBBitMask;             \/\/ mask for blue bits$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon78	file:
dwBackBufferCount	src/gl_hires.c	/^    unsigned long dwBackBufferCount; \/\/ number of back buffers requested$/;"	m	union:_DDRAW_H_DDSURFACEDESC2::__anon81	file:
dwBumpBitCount	src/gl_hires.c	/^    unsigned long dwBumpBitCount;          \/\/ how many bits per "buxel", total$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon74	file:
dwBumpDuBitMask	src/gl_hires.c	/^    unsigned long dwBumpDuBitMask;    \/\/ mask for bump map U delta bits$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon75	file:
dwBumpDvBitMask	src/gl_hires.c	/^    unsigned long dwBumpDvBitMask; \/\/ mask for bump map V delta bits$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon76	file:
dwBumpLuminanceBitMask	src/gl_hires.c	/^    unsigned long dwBumpLuminanceBitMask; \/\/ mask for luminance in bump map$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon78	file:
dwCaps	src/gl_hires.c	/^  unsigned long dwCaps;     \/\/ capabilities of surface wanted$/;"	m	struct:_DDRAW_H_DDSCAPS2	file:
dwCaps2	src/gl_hires.c	/^  unsigned long dwCaps2;$/;"	m	struct:_DDRAW_H_DDSCAPS2	file:
dwCaps3	src/gl_hires.c	/^  unsigned long dwCaps3;$/;"	m	struct:_DDRAW_H_DDSCAPS2	file:
dwCaps4	src/gl_hires.c	/^    unsigned long dwCaps4;$/;"	m	union:_DDRAW_H_DDSCAPS2::__anon73	file:
dwColorSpaceHighValue	src/gl_hires.c	/^  unsigned long dwColorSpaceHighValue; \/\/ high boundary of color space that is$/;"	m	struct:_DDRAW_H_DDCOLORKEY	file:
dwColorSpaceLowValue	src/gl_hires.c	/^  unsigned long dwColorSpaceLowValue;  \/\/ low boundary of color space that is to$/;"	m	struct:_DDRAW_H_DDCOLORKEY	file:
dwDepth	src/gl_hires.c	/^    unsigned long dwDepth;           \/\/ the depth if this is a volume texture $/;"	m	union:_DDRAW_H_DDSURFACEDESC2::__anon81	file:
dwEmptyFaceColor	src/gl_hires.c	/^    unsigned long      dwEmptyFaceColor;  \/\/ Physical color for empty cubemap faces$/;"	m	union:_DDRAW_H_DDSURFACEDESC2::__anon83	file:
dwFVF	src/gl_hires.c	/^    unsigned long  dwFVF;                  \/\/ vertex format description of vertex buffers$/;"	m	union:_DDRAW_H_DDSURFACEDESC2::__anon84	file:
dwFlags	src/gl_hires.c	/^  unsigned long dwFlags;        \/\/ pixel format flags$/;"	m	struct:_DDRAW_H_DDPIXELFORMAT	file:
dwFlags	src/gl_hires.c	/^  unsigned long dwFlags;  \/\/ determines what fields are valid$/;"	m	struct:_DDRAW_H_DDSURFACEDESC2	file:
dwFourCC	src/gl_hires.c	/^  unsigned long dwFourCC;       \/\/ (FOURCC code)$/;"	m	struct:_DDRAW_H_DDPIXELFORMAT	file:
dwGBitMask	src/gl_hires.c	/^    unsigned long dwGBitMask;      \/\/ mask for green bits$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon76	file:
dwHeight	src/gl_hires.c	/^  unsigned long dwHeight; \/\/ height of surface to be created$/;"	m	struct:_DDRAW_H_DDSURFACEDESC2	file:
dwLinearSize	src/gl_hires.c	/^    unsigned long dwLinearSize; \/\/ Formless late-allocated optimized surface size$/;"	m	union:_DDRAW_H_DDSURFACEDESC2::__anon80	file:
dwLuminanceAlphaBitMask	src/gl_hires.c	/^    unsigned long dwLuminanceAlphaBitMask; \/\/ mask for alpha channel$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon79	file:
dwLuminanceBitCount	src/gl_hires.c	/^    unsigned long dwLuminanceBitCount;     \/\/ how many bits per pixel$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon74	file:
dwLuminanceBitMask	src/gl_hires.c	/^    unsigned long dwLuminanceBitMask; \/\/ mask for luminance bits$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon75	file:
dwMipMapCount	src/gl_hires.c	/^    unsigned long dwMipMapCount; \/\/ number of mip-map levels requestde$/;"	m	union:_DDRAW_H_DDSURFACEDESC2::__anon82	file:
dwOperations	src/gl_hires.c	/^    unsigned long dwOperations;       \/\/ DDPF_D3DFORMAT Operations$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon75	file:
dwPrivateFormatBitCount	src/gl_hires.c	/^    unsigned long dwPrivateFormatBitCount; \/\/ Bits per pixel of private driver formats. Only valid in texture$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon74	file:
dwRBitMask	src/gl_hires.c	/^    unsigned long dwRBitMask;         \/\/ mask for red bit$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon75	file:
dwRGBAlphaBitMask	src/gl_hires.c	/^    unsigned long dwRGBAlphaBitMask;       \/\/ mask for alpha channel$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon79	file:
dwRGBBitCount	src/gl_hires.c	/^    unsigned long dwRGBBitCount;           \/\/ how many bits per pixel$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon74	file:
dwRGBZBitMask	src/gl_hires.c	/^    unsigned long dwRGBZBitMask;           \/\/ mask for Z channel$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon79	file:
dwRefreshRate	src/gl_hires.c	/^    unsigned long dwRefreshRate; \/\/ refresh rate (used when display mode is described)$/;"	m	union:_DDRAW_H_DDSURFACEDESC2::__anon82	file:
dwReserved	src/gl_hires.c	/^  unsigned long dwReserved;      \/\/ reserved$/;"	m	struct:_DDRAW_H_DDSURFACEDESC2	file:
dwSize	src/gl_hires.c	/^  unsigned long dwSize;         \/\/ size of structure$/;"	m	struct:_DDRAW_H_DDPIXELFORMAT	file:
dwSize	src/gl_hires.c	/^  unsigned long dwSize;   \/\/ size of the DDSURFACEDESC structure$/;"	m	struct:_DDRAW_H_DDSURFACEDESC2	file:
dwSrcVBHandle	src/gl_hires.c	/^    unsigned long dwSrcVBHandle; \/\/ The source used in VB::Optimize$/;"	m	union:_DDRAW_H_DDSURFACEDESC2::__anon82	file:
dwStencilBitDepth	src/gl_hires.c	/^    unsigned long dwStencilBitDepth;  \/\/ how many stencil bits (note: dwZBufferBitDepth-dwStencilBitDepth is total Z-only bits)$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon75	file:
dwStencilBitMask	src/gl_hires.c	/^    unsigned long dwStencilBitMask;       \/\/ mask for stencil bits$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon78	file:
dwTextureStage	src/gl_hires.c	/^  unsigned long    dwTextureStage; \/\/ stage in multitexture cascade$/;"	m	struct:_DDRAW_H_DDSURFACEDESC2	file:
dwUBitMask	src/gl_hires.c	/^    unsigned long dwUBitMask;      \/\/ mask for U bits$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon76	file:
dwVBitMask	src/gl_hires.c	/^    unsigned long dwVBitMask;             \/\/ mask for V bits$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon78	file:
dwVolumeDepth	src/gl_hires.c	/^    unsigned long dwVolumeDepth;$/;"	m	union:_DDRAW_H_DDSCAPS2::__anon73	file:
dwWidth	src/gl_hires.c	/^  unsigned long dwWidth;  \/\/ width of input surface$/;"	m	struct:_DDRAW_H_DDSURFACEDESC2	file:
dwYBitMask	src/gl_hires.c	/^    unsigned long dwYBitMask;         \/\/ mask for Y bits$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon75	file:
dwYUVAlphaBitMask	src/gl_hires.c	/^    unsigned long dwYUVAlphaBitMask;       \/\/ mask for alpha channel$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon79	file:
dwYUVBitCount	src/gl_hires.c	/^    unsigned long dwYUVBitCount;           \/\/ how many bits per pixel$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon74	file:
dwYUVZBitMask	src/gl_hires.c	/^    unsigned long dwYUVZBitMask;           \/\/ mask for Z channel$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon79	file:
dwZBitMask	src/gl_hires.c	/^    unsigned long dwZBitMask;      \/\/ mask for Z bits$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon76	file:
dwZBufferBitDepth	src/gl_hires.c	/^    unsigned long dwZBufferBitDepth;       \/\/ how many total bits\/pixel in z buffer (including any stencil bits)$/;"	m	union:_DDRAW_H_DDPIXELFORMAT::__anon74	file:
dx	src/doomdata.h	/^  short dx;$/;"	m	struct:__anon39
dx	src/doomdata.h	/^  short dx;$/;"	m	struct:__anon40
dx	src/doomdata.h	/^  short dx;$/;"	m	struct:__anon41
dx	src/p_maputl.h	/^  fixed_t     dx;$/;"	m	struct:__anon221
dx	src/p_spec.h	/^  fixed_t dx, dy;      \/\/ (dx,dy) scroll speeds$/;"	m	struct:__anon271
dx	src/r_defs.h	/^  fixed_t  x,  y, dx, dy;        \/\/ Partition line.$/;"	m	struct:__anon288
dx	src/r_defs.h	/^  fixed_t dx, dy;        \/\/ Precalculated v2 - v1 for side checking.$/;"	m	struct:line_s
dy	src/doomdata.h	/^  short dy;$/;"	m	struct:__anon39
dy	src/doomdata.h	/^  short dy;$/;"	m	struct:__anon40
dy	src/doomdata.h	/^  short dy;$/;"	m	struct:__anon41
dy	src/p_maputl.h	/^  fixed_t     dy;$/;"	m	struct:__anon221
dy	src/p_spec.h	/^  fixed_t dx, dy;      \/\/ (dx,dy) scroll speeds$/;"	m	struct:__anon271
dy	src/r_defs.h	/^  fixed_t  x,  y, dx, dy;        \/\/ Partition line.$/;"	m	struct:__anon288
dy	src/r_defs.h	/^  fixed_t dx, dy;        \/\/ Precalculated v2 - v1 for side checking.$/;"	m	struct:line_s
dy	src/r_draw.h	/^  int                 dy;$/;"	m	struct:draw_column_vars_s
e6y_G_Compatibility	src/e6y.c	/^void e6y_G_Compatibility(void)$/;"	f
e6y_G_DoCompleted	src/e6y.c	/^void e6y_G_DoCompleted(void)$/;"	f
e6y_G_DoWorldDone	src/e6y.c	/^void e6y_G_DoWorldDone(void)$/;"	f
e6y_I_FindFile	src/e6y_launcher.c	/^char* e6y_I_FindFile(const char* ext)$/;"	f
e6y_InitCommandLine	src/e6y.c	/^void e6y_InitCommandLine(void)$/;"	f
e6y_WriteStats	src/e6y.c	/^void e6y_WriteStats(void)$/;"	f
e6y_assert	src/e6y.c	/^void e6y_assert(const char *format, ...) $/;"	f
easy	src/p_enemy.h	/^  int easy, targeton;$/;"	m	struct:brain_s
ebcdic_chartab	src/PCRELIB/pcre_compile.c	/^static const unsigned char ebcdic_chartab[] = { \/* chartable partial dup *\/$/;"	v	file:
ecode	src/PCRELIB/pcre_exec.c	3419;"	d	file:
ecode	src/PCRELIB/pcre_exec.c	437;"	d	file:
edgeslope	src/r_draw.h	/^  int                 edgeslope; \/\/ OR'ed RDRAW_EDGESLOPE_*$/;"	m	struct:draw_column_vars_s
edgeslope_t	src/r_patch.h	/^} edgeslope_t;$/;"	t	typeref:enum:__anon307
edgetype	src/r_draw.h	/^  enum sloped_edge_type_e edgetype;$/;"	m	struct:draw_column_vars_s	typeref:enum:draw_column_vars_s::sloped_edge_type_e
edgetypes	src/m_menu.c	/^static const char *edgetypes[] = {"jagged", "sloped"};$/;"	v	file:
editing	src/TEXTSCREEN/txt_inputbox.h	/^    int editing;$/;"	m	struct:txt_inputbox_s
editing	src/TEXTSCREEN/txt_spinctrl.h	/^    int editing;$/;"	m	struct:txt_spincontrol_s
ega_colors	src/TEXTSCREEN/txt_sdl.c	/^static SDL_Color ega_colors[] = $/;"	v	file:
eint	src/PCRELIB/pcreposix.c	/^static const int eint[] = {$/;"	v	file:
elevateCurrent	src/p_spec.h	/^  elevateCurrent,$/;"	e	enum:__anon257
elevateDown	src/p_spec.h	/^  elevateDown,$/;"	e	enum:__anon257
elevateUp	src/p_spec.h	/^  elevateUp,$/;"	e	enum:__anon257
elevator_e	src/p_spec.h	/^} elevator_e;$/;"	t	typeref:enum:__anon257
elevator_t	src/p_spec.h	/^} elevator_t;$/;"	t	typeref:struct:__anon270
empty_string	src/PCRELIB/pcrecpp.cc	/^static const string empty_string;$/;"	m	namespace:pcrecpp	file:
emulate	src/g_overflow.h	/^  int emulate;$/;"	m	struct:overrun_param_s
enable	src/gl_struct.h	/^  int enable;$/;"	m	struct:shadow_params_s
enabled	src/MUSIC/opl.c	/^    unsigned int enabled;     \/\/ Non-zero if timer is enabled.$/;"	m	struct:__anon183	file:
enabled	src/gl_struct.h	/^  int enabled;$/;"	m	struct:motion_blur_params_s
enabled	src/i_video.h	/^  int enabled;$/;"	m	struct:vid_8ingl_s
end	src/gl_clipper.c	/^  angle_t start, end;$/;"	m	struct:clipnode_s	file:
end_match_ptr	src/PCRELIB/pcre_internal.h	/^  USPTR  end_match_ptr;         \/* Subject position at end match *\/$/;"	m	struct:match_data
end_offset_top	src/PCRELIB/pcre_internal.h	/^  int    end_offset_top;        \/* Highwater mark at end of match *\/$/;"	m	struct:match_data
end_subject	src/PCRELIB/pcre_internal.h	/^  USPTR  end_subject;           \/* End of the subject string *\/$/;"	m	struct:match_data
end_subject	src/PCRELIB/pcre_internal.h	/^  const uschar *end_subject;    \/* End of subject string *\/$/;"	m	struct:dfa_match_data
enddata	src/SDL/i_sound.c	/^  const unsigned char *enddata; \/\/ ...and end.$/;"	m	struct:__anon313	file:
endgame	src/m_menu.c	/^  endgame,$/;"	e	enum:__anon155	file:
endlinebyte	src/PCRELIB/pcregrep.c	/^static int  endlinebyte = '\\n';     \/* Last byte of endline sequence *\/$/;"	v	file:
endlineextra	src/PCRELIB/pcregrep.c	/^static int  endlineextra = 0;       \/* Extra bytes for endline sequence *\/$/;"	v	file:
endmsg	src/dstrings.c	/^const char *const endmsg[]=$/;"	v
endname	src/p_spec.c	/^  char        endname[9];           \/\/  if false, it is a flat$/;"	m	struct:__anon235	file:
endonly	src/PCRELIB/pcre_internal.h	/^  BOOL   endonly;               \/* Dollar not before final \\n *\/$/;"	m	struct:match_data
endoom_colours	src/SDL/i_main.c	/^  endoom_colours = 1,$/;"	e	enum:__anon315	file:
endoom_droplastline	src/SDL/i_main.c	/^  endoom_droplastline = 4$/;"	e	enum:__anon315	file:
endoom_mode	src/SDL/i_main.c	/^int endoom_mode;$/;"	v
endoom_nonasciichars	src/SDL/i_main.c	/^  endoom_nonasciichars = 2,$/;"	e	enum:__anon315	file:
enem_avoid_hazards	src/m_menu.c	/^  enem_avoid_hazards,$/;"	e	enum:__anon160	file:
enem_backing	src/m_menu.c	/^  enem_backing,$/;"	e	enum:__anon160	file:
enem_distfriend	src/m_menu.c	/^  enem_distfriend,$/;"	e	enum:__anon160	file:
enem_dog_jumping	src/m_menu.c	/^  enem_dog_jumping,$/;"	e	enum:__anon160	file:
enem_end	src/m_menu.c	/^  enem_end$/;"	e	enum:__anon160	file:
enem_friction	src/m_menu.c	/^  enem_friction,$/;"	e	enum:__anon160	file:
enem_help_friends	src/m_menu.c	/^  enem_help_friends,$/;"	e	enum:__anon160	file:
enem_helpers	src/m_menu.c	/^  enem_helpers,$/;"	e	enum:__anon160	file:
enem_infighting	src/m_menu.c	/^  enem_infighting,$/;"	e	enum:__anon160	file:
enem_monkeys	src/m_menu.c	/^  enem_monkeys,$/;"	e	enum:__anon160	file:
enem_remember	src/m_menu.c	/^  enem_remember = 1,$/;"	e	enum:__anon160	file:
enem_settings	src/m_menu.c	/^setup_menu_t* enem_settings[] =$/;"	v
enem_settings1	src/m_menu.c	/^setup_menu_t enem_settings1[] =  \/\/ Enemy Settings screen$/;"	v
enem_settings1	src/m_menu.c	/^setup_menu_t enem_settings1[];$/;"	v
english	src/doomdef.h	/^  english,$/;"	e	enum:__anon45
english_shiftxform	src/hu_stuff.c	/^const char english_shiftxform[] =$/;"	v
entering	src/wi_stuff.c	/^static const char entering[] = {"WIENTER"};$/;"	v	file:
entries	src/MUSIC/opl_queue.c	/^    opl_queue_entry_t entries[MAX_OPL_QUEUE];$/;"	m	struct:opl_callback_queue_s	file:
ep1	src/m_menu.c	/^  ep1,$/;"	e	enum:__anon152	file:
ep2	src/m_menu.c	/^  ep2,$/;"	e	enum:__anon152	file:
ep3	src/m_menu.c	/^  ep3,$/;"	e	enum:__anon152	file:
ep4	src/m_menu.c	/^  ep4,$/;"	e	enum:__anon152	file:
ep_end	src/m_menu.c	/^  ep_end$/;"	e	enum:__anon152	file:
epb_prev	src/PCRELIB/pcre_exec.c	/^  struct eptrblock *epb_prev;$/;"	m	struct:eptrblock	typeref:struct:eptrblock::eptrblock	file:
epb_saved_eptr	src/PCRELIB/pcre_exec.c	/^  USPTR epb_saved_eptr;$/;"	m	struct:eptrblock	file:
epi	src/m_menu.c	/^int epi;$/;"	v
episode	src/d_net.h	/^    short               episode;        \/\/ 1-3$/;"	m	struct:__anon27
episode	src/p_spec.h	/^  short episode;$/;"	m	struct:__anon260
episode	src/protocol.h	/^  byte players, yourplayer, skill, episode, level, deathmatch, complevel, ticdup, extratic;$/;"	m	struct:setup_packet_s
episodes_e	src/m_menu.c	/^} episodes_e;$/;"	v	typeref:enum:__anon152
epsd	src/d_player.h	/^  int         epsd;   \/\/ episode # (0-2)$/;"	m	struct:__anon61
epsd0animinfo	src/wi_stuff.c	/^static anim_t epsd0animinfo[] =$/;"	v	file:
epsd1animinfo	src/wi_stuff.c	/^static anim_t epsd1animinfo[] =$/;"	v	file:
epsd2animinfo	src/wi_stuff.c	/^static anim_t epsd2animinfo[] =$/;"	v	file:
eptr	src/PCRELIB/pcre_exec.c	3418;"	d	file:
eptr	src/PCRELIB/pcre_exec.c	436;"	d	file:
eptrb	src/PCRELIB/pcre_exec.c	3422;"	d	file:
eptrb	src/PCRELIB/pcre_exec.c	440;"	d	file:
eptrblock	src/PCRELIB/pcre_exec.c	/^typedef struct eptrblock {$/;"	s	file:
eptrblock	src/PCRELIB/pcre_exec.c	/^} eptrblock;$/;"	t	typeref:struct:eptrblock	file:
error	src/PCRELIB/pcrecpp.h	/^  const string& error() const { return *error_; }$/;"	f	class:pcrecpp::RE
error	src/cmp.h	/^  uint8_t     error;$/;"	m	struct:cmp_ctx_s
error_	src/PCRELIB/pcrecpp.h	/^  const string* error_;         \/\/ Error indicator (or points to empty string)$/;"	m	class:pcrecpp::RE
error_count	src/PCRELIB/pcregrep.c	/^static int error_count = 0;$/;"	v	file:
error_fn	src/SDL/i_sshot.c	/^static void error_fn(png_structp p, png_const_charp s)$/;"	f	file:
error_message	src/i_main.h	/^  const char * error_message;$/;"	m	struct:__anon133
error_message	src/x_main.c	/^static char *error_message = NULL;$/;"	v	file:
error_texts	src/PCRELIB/pcre_compile.c	/^static const char *error_texts[] = {$/;"	v	file:
errthread	src/i_capture.c	/^  SDL_Thread *errthread;$/;"	m	struct:__anon128	file:
escapes	src/PCRELIB/pcre_compile.c	/^static const short int escapes[] = {$/;"	v	file:
ev_joystick	src/d_event.h	/^  ev_joystick$/;"	e	enum:__anon13
ev_keydown	src/d_event.h	/^  ev_keydown,$/;"	e	enum:__anon13
ev_keyup	src/d_event.h	/^  ev_keyup,$/;"	e	enum:__anon13
ev_mouse	src/d_event.h	/^  ev_mouse,$/;"	e	enum:__anon13
ev_none	src/d_event.h	/^  ev_none,$/;"	e	enum:__anon13
event_callback	src/TEXTSCREEN/txt_sdl.c	/^static TxtSDLEventCallbackFunc event_callback;$/;"	v	file:
event_callback_data	src/TEXTSCREEN/txt_sdl.c	/^static void *event_callback_data;$/;"	v	file:
event_t	src/d_event.h	/^} event_t;$/;"	t	typeref:struct:__anon14
event_type	src/MUSIC/midifile.h	/^    midi_event_type_t event_type;$/;"	m	struct:__anon191
eventpos	src/MUSIC/flplayer.c	/^static int eventpos;$/;"	v	file:
eventpos	src/MUSIC/portmidiplayer.c	/^static int eventpos;$/;"	v	file:
events	src/MUSIC/flplayer.c	/^static midi_event_t **events;$/;"	v	file:
events	src/MUSIC/midifile.c	/^    midi_event_t *events;$/;"	m	struct:__anon181	file:
events	src/MUSIC/portmidiplayer.c	/^static midi_event_t **events;$/;"	v	file:
evtype_t	src/d_event.h	/^} evtype_t;$/;"	t	typeref:enum:__anon13
exclude_compiled	src/PCRELIB/pcregrep.c	/^static pcre *exclude_compiled = NULL;$/;"	v	file:
exclude_pattern	src/PCRELIB/pcregrep.c	/^static char *exclude_pattern = NULL;$/;"	v	file:
expand_h	src/TEXTSCREEN/txt_scrollpane.h	/^    int expand_w, expand_h;$/;"	m	struct:txt_scrollpane_s
expand_w	src/TEXTSCREEN/txt_scrollpane.h	/^    int expand_w, expand_h;$/;"	m	struct:txt_scrollpane_s
expire_time	src/MUSIC/opl.c	/^    unsigned int expire_time; \/\/ Calculated time that timer will expire.$/;"	m	struct:__anon183	file:
ext	src/cmp.h	/^  cmp_ext_t ext;$/;"	m	union:cmp_object_data_u
extend_inputline	src/PCRELIB/pcretest.c	/^extend_inputline(FILE *f, uschar *start)$/;"	f	file:
extended	src/PCRELIB/pcrecpp.h	/^  bool extended() const {$/;"	f	class:pcrecpp::RE_Options
extended_help_count	src/m_menu.c	/^int extended_help_count;   \/\/ number of user-defined help screens found$/;"	v
extended_help_index	src/m_menu.c	/^int extended_help_index;   \/\/ index of current extended help screen$/;"	v
extra	src/PCRELIB/pcrecpp.h	/^  bool extra() const {$/;"	f	class:pcrecpp::RE_Options
extra_alpha	src/gl_main.c	/^static float extra_alpha=0.0f;$/;"	v	file:
extra_blue	src/gl_main.c	/^static float extra_blue=0.0f;$/;"	v	file:
extra_green	src/gl_main.c	/^static float extra_green=0.0f;$/;"	v	file:
extra_red	src/gl_main.c	/^static float extra_red=0.0f;$/;"	v	file:
extralight	src/d_player.h	/^  int                 extralight;$/;"	m	struct:player_s
extralight	src/r_main.c	/^int extralight;                           \/\/ bumped light from gun blasts$/;"	v
extratic	src/protocol.h	/^  byte players, yourplayer, skill, episode, level, deathmatch, complevel, ticdup, extratic;$/;"	m	struct:setup_packet_s
extratics	src/d_net.h	/^    short               extratics;$/;"	m	struct:__anon27
f	src/TEXTSCREEN/txt_spinctrl.h	/^    union { float f; int i; } min, max, *value, step; $/;"	m	union:txt_spincontrol_s::__anon335
f	src/d_deh.c	/^  FILE* f;$/;"	m	struct:__anon9	file:
f	src/hu_lib.h	/^  const patchnum_t* f;                    \/\/ font$/;"	m	struct:__anon121
f0	src/PCRELIB/ucpinternal.h	/^  pcre_uint32 f0;$/;"	m	struct:cnode
f0_charmask	src/PCRELIB/ucpinternal.h	41;"	d
f0_rangeflag	src/PCRELIB/ucpinternal.h	40;"	d
f0_scriptmask	src/PCRELIB/ucpinternal.h	38;"	d
f0_scriptshift	src/PCRELIB/ucpinternal.h	39;"	d
f1	src/PCRELIB/ucpinternal.h	/^  pcre_uint32 f1;$/;"	m	struct:cnode
f1_casemask	src/PCRELIB/ucpinternal.h	48;"	d
f1_caseneg	src/PCRELIB/ucpinternal.h	49;"	d
f1_rangemask	src/PCRELIB/ucpinternal.h	47;"	d
f1_typemask	src/PCRELIB/ucpinternal.h	45;"	d
f1_typeshift	src/PCRELIB/ucpinternal.h	46;"	d
fU1	src/i_video.h	/^  float fU1, fU2, fV1, fV2;$/;"	m	struct:vid_8ingl_s
fU2	src/i_video.h	/^  float fU1, fU2, fV1, fV2;$/;"	m	struct:vid_8ingl_s
fV1	src/i_video.h	/^  float fU1, fU2, fV1, fV2;$/;"	m	struct:vid_8ingl_s
fV2	src/i_video.h	/^  float fU1, fU2, fV1, fV2;$/;"	m	struct:vid_8ingl_s
f_delta	src/MUSIC/flplayer.c	/^static double f_delta;$/;"	v	file:
f_font	src/MUSIC/flplayer.c	/^static int f_font;$/;"	v	file:
f_h	src/am_map.c	/^static int  f_h;$/;"	v	file:
f_looping	src/MUSIC/flplayer.c	/^static int f_looping;$/;"	v	file:
f_paused	src/MUSIC/flplayer.c	/^static int f_paused;$/;"	v	file:
f_playing	src/MUSIC/flplayer.c	/^static int f_playing;$/;"	v	file:
f_set	src/MUSIC/flplayer.c	/^static fluid_settings_t *f_set;$/;"	v	file:
f_soundrate	src/MUSIC/flplayer.c	/^static int f_soundrate;$/;"	v	file:
f_stderr	src/i_capture.c	/^  FILE *f_stderr;$/;"	m	struct:__anon128	file:
f_stdin	src/i_capture.c	/^  FILE *f_stdin;$/;"	m	struct:__anon128	file:
f_stdout	src/i_capture.c	/^  FILE *f_stdout;$/;"	m	struct:__anon128	file:
f_syn	src/MUSIC/flplayer.c	/^static fluid_synth_t *f_syn;$/;"	v	file:
f_volume	src/MUSIC/flplayer.c	/^static int f_volume;$/;"	v	file:
f_w	src/am_map.c	/^static int  f_w;$/;"	v	file:
f_x	src/am_map.c	/^static int  f_x;$/;"	v	file:
f_y	src/am_map.c	/^static int  f_y;$/;"	v	file:
faceback	src/st_stuff.c	/^static patchnum_t faceback; \/\/ CPhipps - single background, translated for different players$/;"	v	file:
facebackp	src/wi_stuff.c	/^static const char facebackp[] = {"STPB0"};$/;"	v	file:
faces	src/gl_intern.h	/^  char faces[6][9];$/;"	m	struct:box_skybox_s
faces	src/st_stuff.c	/^static patchnum_t faces[ST_NUMFACES];$/;"	v	file:
factor	src/gl_struct.h	/^  float factor;$/;"	m	struct:shadow_params_s
fake_contrast	src/r_main.c	/^int fake_contrast;$/;"	v
fakegroup	src/r_defs.h	/^  int fakegroup[2];$/;"	m	struct:__anon283
fakegroup_t	src/gl_missingtexture.c	/^} fakegroup_t;$/;"	t	typeref:struct:__anon108	file:
fakeplanes	src/gl_missingtexture.c	/^static fakegroup_t *fakeplanes = NULL;$/;"	v	file:
false	src/MAC/config.h	/^enum {false, true};$/;"	e	enum:__anon143
false	src/MUSIC/midifile.c	/^typedef enum {false, true} dboolean;$/;"	e	enum:__anon178	file:
false	src/doomtype.h	/^typedef enum {false, true} dboolean;$/;"	e	enum:__anon56
fastCrushAndRaise	src/p_spec.h	/^  fastCrushAndRaise,$/;"	e	enum:__anon254
fastdemo	src/g_game.c	/^dboolean        fastdemo;      \/\/ if true, run at full speed -- killough$/;"	v
fastparm	src/d_main.c	/^dboolean fastparm;       \/\/ working -fast$/;"	v
fastparm	src/d_net.h	/^  byte fastparm;$/;"	m	struct:__anon24
fc	src/PCRELIB/pcre_exec.c	3461;"	d	file:
fc	src/PCRELIB/pcre_exec.c	476;"	d	file:
fcc	src/PCRELIB/pcre_internal.h	/^  const uschar *fcc;            \/* Points to case-flipping table *\/$/;"	m	struct:compile_data
fcc_offset	src/PCRELIB/pcre_internal.h	924;"	d
feedback	src/MUSIC/dbopl.h	/^  Bit8u feedback;     \/\/Feedback shift$/;"	m	struct:_Channel
feedback	src/MUSIC/oplplayer.c	/^    byte feedback;$/;"	m	struct:__anon195	file:
felldown	src/p_map.c	/^dboolean   felldown;$/;"	v
ffmap	src/d_main.c	/^int ffmap;$/;"	v
fg_color	src/hu_input.c	/^  hu_color_t fg_color;$/;"	m	struct:input_widget_s	file:
fg_color	src/hu_msg.c	/^  hu_color_t fg_color;$/;"	m	struct:message_widget_s	file:
fgcolor	src/TEXTSCREEN/txt_io.c	/^static txt_color_t fgcolor = TXT_COLOR_GREY;$/;"	v	file:
fgcolor	src/TEXTSCREEN/txt_label.h	/^    txt_color_t fgcolor;$/;"	m	struct:txt_label_s
fi	src/PCRELIB/pcre_exec.c	3462;"	d	file:
fi	src/PCRELIB/pcre_exec.c	477;"	d	file:
file	src/z_zone.c	/^  const char *file;$/;"	m	struct:memblock	file:
file_error	src/m_file.c	/^static GError *file_error = NULL;$/;"	v	file:
file_history	src/z_zone.c	/^static const char *file_history[NUM_HISTORY_TYPES][ZONE_HISTORY];$/;"	v	file:
fileinfo	src/w_mmap.c	/^  OFSTRUCT fileinfo;$/;"	m	struct:__anon352	file:
fileitem_t	src/e6y_launcher.c	/^} fileitem_t;$/;"	t	typeref:struct:__anon67	file:
filelump_t	src/w_wad.h	/^} filelump_t;$/;"	t	typeref:struct:__anon354
filename	src/d_deh.h	/^  char *filename;$/;"	m	struct:deh_file_s
filenames	src/PCRELIB/pcregrep.c	/^static int filenames = FN_DEFAULT;$/;"	v	file:
filepos	src/w_wad.h	/^  int  filepos;$/;"	m	struct:__anon354
files	src/e6y_launcher.c	/^  fileitem_t *files;$/;"	m	struct:__anon68	file:
filescount	src/e6y_launcher.c	/^  size_t filescount;$/;"	m	struct:__anon68	file:
fill_buffer	src/SDL/i_sshot.c	/^  void (*fill_buffer)(SDL_Surface *scr, void *buffer);$/;"	m	struct:screenshot_sdl_func	file:
fill_buffer_hicolor	src/SDL/i_sshot.c	/^static void fill_buffer_hicolor(SDL_Surface *scr, void *buffer)$/;"	f	file:
fill_buffer_indexed	src/SDL/i_sshot.c	/^static void fill_buffer_indexed(SDL_Surface *scr, void *buffer)$/;"	f	file:
filler	src/d_net.h	/^  char filler[sizeof(ticcmd_t)*BACKUPTICS-STARTUPLEN];$/;"	m	struct:__anon24
filter_count	src/gl_struct.h	/^  filter_count$/;"	e	enum:__anon113
filter_ditherMatrix	src/r_filter.c	/^byte filter_ditherMatrix[DITHER_DIM][DITHER_DIM] = {$/;"	v
filter_getDitheredForColumn	src/r_filter.h	52;"	d
filter_getDitheredPixelLevel	src/r_filter.h	39;"	d
filter_getFilteredForColumn15	src/r_filter.h	102;"	d
filter_getFilteredForColumn16	src/r_filter.h	96;"	d
filter_getFilteredForColumn32	src/r_filter.h	86;"	d
filter_getFilteredForSpan15	src/r_filter.h	123;"	d
filter_getFilteredForSpan16	src/r_filter.h	117;"	d
filter_getFilteredForSpan32	src/r_filter.h	109;"	d
filter_getRoundedForColumn	src/r_filter.h	55;"	d
filter_getRoundedForSpan	src/r_filter.h	68;"	d
filter_getScale2xQuadColors	src/r_filter.c	/^byte *filter_getScale2xQuadColors(byte e, byte b, byte f, byte h, byte d) {$/;"	f
filter_linear	src/gl_struct.h	/^  filter_linear,$/;"	e	enum:__anon113
filter_linear_mipmap_linear	src/gl_struct.h	/^  filter_linear_mipmap_linear,$/;"	e	enum:__anon113
filter_linear_mipmap_nearest	src/gl_struct.h	/^  filter_linear_mipmap_nearest,$/;"	e	enum:__anon113
filter_nearest	src/gl_struct.h	/^  filter_nearest,$/;"	e	enum:__anon113
filter_nearest_mipmap_linear	src/gl_struct.h	/^  filter_nearest_mipmap_linear,$/;"	e	enum:__anon113
filter_nearest_mipmap_nearest	src/gl_struct.h	/^  filter_nearest_mipmap_nearest,$/;"	e	enum:__anon113
filter_roundedRowMap	src/r_filter.c	/^byte filter_roundedRowMap[4*16];$/;"	v
filter_roundedUVMap	src/r_filter.c	/^byte filter_roundedUVMap[FILTER_UVDIM*FILTER_UVDIM];$/;"	v
filter_texture_mode_t	src/gl_struct.h	/^} filter_texture_mode_t;$/;"	t	typeref:enum:__anon113
filterfloor	src/r_draw.h	/^  enum draw_filter_type_e filterfloor;$/;"	m	struct:__anon299	typeref:enum:__anon299::draw_filter_type_e
filterpatch	src/r_draw.h	/^  enum draw_filter_type_e filterpatch;$/;"	m	struct:__anon299	typeref:enum:__anon299::draw_filter_type_e
filtersprite	src/r_draw.h	/^  enum draw_filter_type_e filtersprite;$/;"	m	struct:__anon299	typeref:enum:__anon299::draw_filter_type_e
filterwall	src/r_draw.h	/^  enum draw_filter_type_e filterwall;$/;"	m	struct:__anon299	typeref:enum:__anon299::draw_filter_type_e
filterz	src/r_draw.h	/^  enum draw_filter_type_e filterz;$/;"	m	struct:__anon299	typeref:enum:__anon299::draw_filter_type_e
fin	src/i_capture.c	/^  FILE *fin;$/;"	m	struct:__anon131	file:
finaldoom_compatibility	src/doomtype.h	/^  finaldoom_compatibility,     \/* Final Doom *\/$/;"	e	enum:__anon57
finalecount	src/f_finale.c	/^static int finalecount; \/\/ made static$/;"	v	file:
finaleflat	src/f_finale.c	/^static const char*   finaleflat; \/\/ made static const$/;"	v	file:
finalestage	src/f_finale.c	/^static int finalestage; \/\/ cph -$/;"	v	file:
finaletext	src/f_finale.c	/^static const char*   finaletext; \/\/ cph -$/;"	v	file:
find_bracket	src/PCRELIB/pcre_compile.c	/^find_bracket(const uschar *code, BOOL utf8, int number)$/;"	f	file:
find_firstassertedchar	src/PCRELIB/pcre_compile.c	/^find_firstassertedchar(const uschar *code, int *options, BOOL inassert)$/;"	f	file:
find_fixedlength	src/PCRELIB/pcre_compile.c	/^find_fixedlength(uschar *code, int options)$/;"	f	file:
find_named_parens	src/PCRELIB/pcre_compile.c	/^find_named_parens(const uschar *ptr, int count, const uschar *name, int namelen)$/;"	f	file:
find_recurse	src/PCRELIB/pcre_compile.c	/^find_recurse(const uschar *code, BOOL utf8)$/;"	f	file:
findstate_t	src/e6y.h	/^} findstate_t;$/;"	t	typeref:struct:__anon66
fine_tuning	src/MUSIC/oplplayer.c	/^    byte fine_tuning;$/;"	m	struct:__anon196	file:
finecosine	src/tables.h	/^static fixed_t *const finecosine = finesine + (FINEANGLES\/4);$/;"	v
finesine	src/tables.c	/^fixed_t finesine[10240];$/;"	v
finetangent	src/tables.c	/^fixed_t finetangent[4096];$/;"	v
finished	src/wi_stuff.c	/^static const char finished[] = {"WIF"};$/;"	v	file:
fireflicker_t	src/p_spec.h	/^} fireflicker_t;$/;"	t	typeref:struct:__anon262
first	src/PCRELIB/pcregrep.c	/^BOOL first;$/;"	m	struct:directory_type	file:
first_byte	src/PCRELIB/pcre_internal.h	/^  pcre_uint16 first_byte;$/;"	m	struct:real_pcre
first_callout	src/PCRELIB/pcretest.c	/^static int first_callout;$/;"	v	file:
first_operand	src/TEXTSCREEN/examples/calculator.c	/^int first_operand;$/;"	v
first_significant_code	src/PCRELIB/pcre_compile.c	/^first_significant_code(const uschar *code, int *options, int optbit,$/;"	f	file:
first_sound_init	src/SDL/i_sound.c	/^static dboolean first_sound_init = true;$/;"	v	file:
firstcolormaplump	src/r_data.c	/^int firstcolormaplump, lastcolormaplump;      \/\/ killough 4\/17\/98$/;"	v
firstflat	src/r_data.c	/^int       firstflat, lastflat, numflats;$/;"	v
firstglvertex	src/p_setup.c	/^int     firstglvertex = 0;$/;"	v
firstline	src/r_defs.h	/^  int numlines, firstline;$/;"	m	struct:subsector_s
firstpool	src/z_bmalloc.h	/^  void  *firstpool;$/;"	m	struct:block_memory_alloc_s
firstrefresh	src/wi_stuff.c	/^static int    firstrefresh;$/;"	v	file:
firstseg	src/doomdata.h	/^  int firstseg;$/;"	m	struct:__anon34
firstseg	src/doomdata.h	/^  unsigned short firstseg;    \/\/ Index of first one; segs are stored sequentially.$/;"	m	struct:__anon33
firstspritelump	src/r_data.c	/^int       firstspritelump, lastspritelump, numspritelumps;$/;"	v
firsttag	src/r_defs.h	/^  int firsttag,nexttag;  \/\/ killough 4\/17\/98: improves searches for tags.$/;"	m	struct:line_s
firsttag	src/r_defs.h	/^  int nexttag,firsttag;  \/\/ killough 1\/30\/98: improves searches for tags.$/;"	m	struct:__anon283
firstwin	src/TEXTSCREEN/examples/guitest.c	/^txt_window_t *firstwin;$/;"	v
fixed2_t	src/r_fps.c	/^typedef fixed_t fixed2_t[2];$/;"	t	file:
fixed_note	src/MUSIC/oplplayer.c	/^    byte fixed_note;$/;"	m	struct:__anon196	file:
fixed_t	src/m_fixed.h	/^typedef int fixed_t;$/;"	t
fixedcolormap	src/d_player.h	/^  int                 fixedcolormap;$/;"	m	struct:player_s
fixedcolormap	src/r_main.c	/^const lighttable_t *fixedcolormap;$/;"	v
fl_init	src/MUSIC/flplayer.c	/^static int fl_init (int samplerate)$/;"	f	file:
fl_name	src/MUSIC/flplayer.c	/^static const char *fl_name (void)$/;"	f	file:
fl_pause	src/MUSIC/flplayer.c	/^static void fl_pause (void)$/;"	f	file:
fl_play	src/MUSIC/flplayer.c	/^static void fl_play (const void *handle, int looping)$/;"	f	file:
fl_player	src/MUSIC/flplayer.c	/^const music_player_t fl_player =$/;"	v
fl_registersong	src/MUSIC/flplayer.c	/^static const void *fl_registersong (const void *data, unsigned len)$/;"	f	file:
fl_render	src/MUSIC/flplayer.c	/^static void fl_render (void *vdest, unsigned length)$/;"	f	file:
fl_resume	src/MUSIC/flplayer.c	/^static void fl_resume (void)$/;"	f	file:
fl_setvolume	src/MUSIC/flplayer.c	/^static void fl_setvolume (int v)$/;"	f	file:
fl_shutdown	src/MUSIC/flplayer.c	/^static void fl_shutdown (void)$/;"	f	file:
fl_stop	src/MUSIC/flplayer.c	/^static void fl_stop (void)$/;"	f	file:
fl_unregistersong	src/MUSIC/flplayer.c	/^static void fl_unregistersong (const void *handle)$/;"	f	file:
fl_writesamples_ex	src/MUSIC/flplayer.c	/^static void fl_writesamples_ex (short *dest, int nsamp)$/;"	f	file:
flag	src/gl_intern.h	/^  byte flag;$/;"	m	struct:__anon91
flags	src/MUSIC/oplplayer.c	/^    unsigned short flags;$/;"	m	struct:__anon196	file:
flags	src/PCRELIB/pcre.h	/^  unsigned long int flags;        \/* Bits for which fields are set *\/$/;"	m	struct:pcre_extra
flags	src/PCRELIB/pcre_exec.c	3423;"	d	file:
flags	src/PCRELIB/pcre_exec.c	441;"	d	file:
flags	src/doomdata.h	/^  unsigned short flags;$/;"	m	struct:__anon31
flags	src/gl_intern.h	/^  uint_64_t flags;$/;"	m	struct:__anon102
flags	src/gl_intern.h	/^  unsigned int flags;$/;"	m	struct:__anon89
flags	src/gl_intern.h	/^  unsigned int flags;$/;"	m	struct:__anon93
flags	src/gl_intern.h	/^  unsigned int flags;$/;"	m	struct:__anon95
flags	src/hu_lib.h	/^  enum patch_translation_e flags;$/;"	m	struct:__anon121	typeref:enum:__anon121::patch_translation_e
flags	src/hu_stuff.c	/^  enum patch_translation_e flags;$/;"	m	struct:hud_widget_s	typeref:enum:hud_widget_s::patch_translation_e	file:
flags	src/hu_stuff.h	/^  int w, h, flags;$/;"	m	struct:crosshair_s
flags	src/info.h	/^  uint_64_t flags;  \/* Bit masks for lots of things.  See p_mobj.h *\/$/;"	m	struct:__anon138
flags	src/p_mobj.h	/^    uint_64_t           flags;$/;"	m	struct:mobj_s
flags	src/r_defs.h	/^  unsigned int flags;    \/\/e6y: instead of .no_toptextures and .no_bottomtextures$/;"	m	struct:__anon283
flags	src/r_defs.h	/^  unsigned short flags;           \/\/ Animation related.$/;"	m	struct:line_s
flags	src/r_draw.h	/^  unsigned int        flags; \/\/e6y: for detect patches ind colfunc()$/;"	m	struct:draw_column_vars_s
flags	src/r_patch.h	/^  unsigned int flags;\/\/e6y$/;"	m	struct:__anon311
flags	src/w_wad.h	/^  int flags; \/\/e6y$/;"	m	struct:__anon358
flashing_hom	src/doomstat.c	/^int flashing_hom;     \/\/ killough 10\/98$/;"	v
flashstate	src/d_items.h	/^  int         flashstate;$/;"	m	struct:__anon19
flat	src/gl_intern.h	/^    GLFlat *flat;$/;"	m	union:GLDrawItem_s::__anon104
flats_detail_display_list	src/gl_main.c	/^int flats_detail_display_list;$/;"	v
flats_detail_display_list_size	src/gl_main.c	/^int flats_detail_display_list_size = 0;$/;"	v
flats_display_list	src/gl_main.c	/^int flats_display_list;$/;"	v
flats_display_list_size	src/gl_main.c	/^int flats_display_list_size = 0;$/;"	v
flats_vbo	src/gl_main.c	/^vbo_xyz_uv_t *flats_vbo = NULL;$/;"	v
flats_vbo_id	src/gl_main.c	/^GLuint flats_vbo_id = 0; \/\/ ID of VBO$/;"	v
flats_vbo_u	src/gl_intern.h	519;"	d
flats_vbo_x	src/gl_intern.h	518;"	d
flattranslation	src/r_data.c	/^int       *flattranslation;             \/\/ for global animation$/;"	v
fline_t	src/v_video.h	/^} fline_t;$/;"	t	typeref:struct:__anon345
flip	src/r_defs.h	/^  unsigned short flip;$/;"	m	struct:__anon290
fliptop	src/gl_intern.h	/^  int fliptop;$/;"	m	struct:box_skybox_s
floatok	src/p_map.c	/^dboolean   floatok;$/;"	v
floor_e	src/p_spec.h	/^} floor_e;$/;"	t	typeref:enum:__anon255
floor_special	src/p_spec.h	/^  floor_special,$/;"	e	enum:__anon249
floor_xoffs	src/r_defs.h	/^  fixed_t   floor_xoffs,   floor_yoffs;$/;"	m	struct:__anon283
floor_yoffs	src/r_defs.h	/^  fixed_t   floor_xoffs,   floor_yoffs;$/;"	m	struct:__anon283
floorchange_e	src/p_spec.h	/^} floorchange_e;$/;"	t	typeref:enum:__anon241
floorclip	src/r_plane.c	/^int *floorclip = NULL;$/;"	v
floordata	src/r_defs.h	/^  void *floordata;    \/\/ jff 2\/22\/98 make thinkers on$/;"	m	struct:__anon283
floordestheight	src/p_spec.h	/^  fixed_t floordestheight;$/;"	m	struct:__anon269
floordestheight	src/p_spec.h	/^  fixed_t floordestheight;$/;"	m	struct:__anon270
floorheight	src/doomdata.h	/^  short floorheight;$/;"	m	struct:__anon32
floorheight	src/r_defs.h	/^  fixed_t floorheight;$/;"	m	struct:__anon283
floorlightsec	src/r_defs.h	/^  int floorlightsec, ceilinglightsec;$/;"	m	struct:__anon283
floorline	src/p_map.c	/^line_t        *floorline;    \/* killough 8\/1\/98: Highest touched floor *\/$/;"	v
floormodel_t	src/p_spec.h	/^} floormodel_t;$/;"	t	typeref:enum:__anon242
floormove_t	src/p_spec.h	/^} floormove_t;$/;"	t	typeref:struct:__anon269
floorpic	src/doomdata.h	/^  char  floorpic[8];$/;"	m	struct:__anon32
floorpic	src/r_defs.h	/^  short floorpic;$/;"	m	struct:__anon283
floorplane	src/r_plane.c	/^visplane_t *floorplane, *ceilingplane;$/;"	v
floortarget_e	src/p_spec.h	/^} floortarget_e;$/;"	t	typeref:enum:__anon240
floorz	src/p_enemy.c	/^static fixed_t dropoff_deltax, dropoff_deltay, floorz;$/;"	v	file:
floorz	src/p_mobj.h	/^    fixed_t             floorz;$/;"	m	struct:mobj_s
flt	src/cmp.h	/^  float     flt;$/;"	m	union:cmp_object_data_u
flyspeed	src/g_game.c	/^fixed_t flyspeed[2]    = {1*256, 3*256};$/;"	v
fn	src/i_capture.c	/^  const char *fn;$/;"	m	struct:__anon131	file:
focallength	src/r_main.c	/^fixed_t  focallength;$/;"	v
fog_density	src/gl_main.c	/^int fog_density=200;$/;"	v
fogdensity	src/gl_intern.h	/^  float fogdensity;$/;"	m	struct:__anon102
fogdensity	src/gl_intern.h	/^  float fogdensity;$/;"	m	struct:__anon91
fogdensity	src/gl_intern.h	/^  float fogdensity;$/;"	m	struct:__anon93
foglayer	src/gl_sky.c	/^static dboolean foglayer;$/;"	v	file:
font	src/TEXTSCREEN/txt_sdl.c	/^static txt_font_t *font;$/;"	v	file:
font_description	src/hu_input.c	/^  const char *font_description;$/;"	m	struct:input_widget_s	file:
font_description	src/hu_msg.c	/^  const char *font_description;$/;"	m	struct:message_widget_s	file:
footer	src/g_overflow.h	/^  int footer;$/;"	m	struct:overrun_param_s
footer_emulate	src/g_overflow.h	/^  int footer_emulate;$/;"	m	struct:overrun_param_s
fopen	src/SDL/SDL_win32_main.c	36;"	d	file:
forceOldBsp	src/p_setup.c	/^dboolean forceOldBsp   = false;$/;"	v
force_singletics_to	src/e6y.c	/^int force_singletics_to = 0;$/;"	v
forced_loadgame	src/g_game.c	/^dboolean        forced_loadgame = false;$/;"	v
forced_loadgame_message	src/m_menu.c	/^static char *forced_loadgame_message;$/;"	v	file:
format	src/gl_hires.c	/^  GLenum   format;$/;"	m	struct:__anon85	file:
format_type	src/MUSIC/midifile.c	/^    unsigned short format_type;$/;"	m	struct:__anon180	file:
forwardmove	src/d_ticcmd.h	/^  char   forwardmove;  \/* *2048 for move       *\/$/;"	m	struct:__anon63
forwardmove	src/g_game.c	/^fixed_t forwardmove[2] = {0x19, 0x32};$/;"	v
forwardmove_normal	src/g_game.c	/^fixed_t forwardmove_normal[2] = {0x19, 0x32};$/;"	v
fourMask	src/MUSIC/dbopl.h	/^  Bit8u fourMask;$/;"	m	struct:_Channel
fpoint_t	src/v_video.h	/^} fpoint_t;$/;"	t	typeref:struct:__anon344
fptr	src/d_deh.c	/^  void (*const fptr)(DEHFILE *, FILE*, char *); \/\/ handler$/;"	m	struct:__anon11	file:
frac	src/p_maputl.h	/^  fixed_t     frac;           \/* along trace line *\/$/;"	m	struct:__anon222
frac	src/r_fps.h	/^  fixed_t frac;$/;"	m	struct:__anon302
fracleft	src/gl_intern.h	/^  dboolean fracleft, fracright; \/\/e6y$/;"	m	struct:__anon90
fracright	src/gl_intern.h	/^  dboolean fracleft, fracright; \/\/e6y$/;"	m	struct:__anon90
frags	src/d_player.h	/^  int                 frags[MAXPLAYERS];$/;"	m	struct:player_s
frags	src/d_player.h	/^  int         frags[4];$/;"	m	struct:__anon60
frags	src/wi_stuff.c	/^static const char frags[] = {"WIFRGS"};$/;"	v	file:
frame	src/info.h	/^  long        frame;        \/* which frame\/subframe of the sprite is shown *\/$/;"	m	struct:__anon136
frame	src/p_mobj.h	/^    int                 frame;  \/\/ might be ORed with FF_FULLBRIGHT$/;"	m	struct:mobj_s
frame_fixedcolormap	src/r_main.c	/^int frame_fixedcolormap = 0;$/;"	v
free	src/z_zone.h	171;"	d
free	src/z_zone.h	177;"	d
free_command_queue	src/n_peer.c	/^static void free_command_queue(command_queue_t *cq) {$/;"	f	file:
free_history	src/z_zone.c	/^enum {malloc_history, free_history, NUM_HISTORY_TYPES};$/;"	e	enum:__anon360	file:
free_memory	src/z_zone.c	/^static int free_memory = 0;$/;"	v	file:
free_netcom	src/n_peer.c	/^static void free_netcom(netcom_t *nc) {$/;"	f	file:
free_netsync	src/n_peer.c	/^static void free_netsync(netsync_t *ns) {$/;"	f	file:
free_peer	src/n_peer.c	/^static void free_peer(netpeer_t *np) {$/;"	f	file:
free_string	src/m_file.c	/^static void free_string(gpointer data) {$/;"	f	file:
free_string	src/n_pack.c	/^static void free_string(gpointer data) {$/;"	f	file:
freehead	src/r_plane.c	/^static visplane_t **freehead = &freetail;     \/\/ killough$/;"	v	file:
freelist	src/gl_clipper.c	/^clipnode_t *freelist;$/;"	v
freelookviewheight	src/r_sky.c	/^fixed_t freelookviewheight;$/;"	v
freetail	src/r_plane.c	/^static visplane_t *freetail;                  \/\/ killough$/;"	v	file:
french	src/doomdef.h	/^  french,$/;"	e	enum:__anon45
freopen	src/SDL/SDL_win32_main.c	37;"	d	file:
freq	src/MUSIC/oplplayer.c	/^    unsigned int freq;$/;"	m	struct:opl_voice_s	file:
freqMul	src/MUSIC/dbopl.h	/^  Bit32u freqMul;       \/\/Scale channel frequency with this, TODO maybe remove?$/;"	m	struct:_Operator
freqMul	src/MUSIC/dbopl.h	/^  Bit32u freqMul[16];$/;"	m	struct:_Chip
frequencies	src/i_pcsound.c	/^static float frequencies[] = {$/;"	v	file:
frequency_curve	src/MUSIC/oplplayer.c	/^static const unsigned short frequency_curve[] = {$/;"	v	file:
friction	src/p_mobj.h	/^    int friction;                                           \/\/ phares 3\/17\/98$/;"	m	struct:mobj_s
friction	src/p_spec.h	/^  int friction;        \/\/ friction value (E800 = normal)$/;"	m	struct:__anon273
friction	src/r_defs.h	/^  int friction,movefactor;$/;"	m	struct:__anon283
friction_t	src/p_spec.h	/^} friction_t;$/;"	t	typeref:struct:__anon273
from_tic	src/n_state.h	/^  int   from_tic;$/;"	m	struct:game_state_delta_s
frontsector	src/r_bsp.c	/^sector_t  *frontsector;$/;"	v
frontsector	src/r_defs.h	/^  sector_t *frontsector, *backsector;$/;"	m	struct:__anon287
frontsector	src/r_defs.h	/^  sector_t *frontsector; \/\/ Front and back sector.$/;"	m	struct:line_s
frustum	src/gl_clipper.c	/^float frustum[6][4];$/;"	v
ftom_zoommul	src/am_map.c	/^static fixed_t ftom_zoommul; \/\/ how far the window zooms each tic (fb coords)$/;"	v	file:
fudgea	src/g_game.c	/^static inline signed short fudgea(signed short b) {$/;"	f	file:
fudgef	src/g_game.c	/^static inline signed char fudgef(signed char b) {$/;"	f	file:
fullcolormap	src/r_main.c	/^const lighttable_t *fullcolormap;$/;"	v
func	src/TEXTSCREEN/txt_widget.c	/^                       TxtWidgetSignalFunc func, $/;"	v
func	src/TEXTSCREEN/txt_widget.c	/^    TxtWidgetSignalFunc func;$/;"	m	struct:__anon333	file:
func	src/TEXTSCREEN/txt_widget.h	/^                       TxtWidgetSignalFunc func, void *user_data);$/;"	v
func	src/d_main.c	/^  void (*func)(const char *);$/;"	m	struct:__anon21	file:
func	src/m_cheat.h	/^  void (*const func)();$/;"	m	struct:cheatseq_s
func_extract_an_archive	src/PCRELIB/ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	src/PCRELIB/ltmain.sh	/^func_extract_archives ()$/;"	f
func_infer_tag	src/PCRELIB/ltmain.sh	/^func_infer_tag ()$/;"	f
func_mktempdir	src/PCRELIB/ltmain.sh	/^func_mktempdir ()$/;"	f
func_win32_libid	src/PCRELIB/ltmain.sh	/^func_win32_libid ()$/;"	f
function	src/d_think.h	/^  think_t             function;$/;"	m	struct:thinker_s
fuzzoffset	src/r_draw.c	/^static int fuzzoffset[FUZZTABLE];$/;"	v	file:
fuzzoffset_org	src/r_draw.c	/^static const int fuzzoffset_org[FUZZTABLE] = {$/;"	v	file:
fuzzpos	src/r_draw.c	/^static int fuzzpos = 0;$/;"	v	file:
fx	src/am_map.h	/^ float fx,fy;$/;"	m	struct:__anon2
fx	src/v_video.h	/^  float fx, fy;$/;"	m	struct:__anon344
fy	src/am_map.h	/^ float fx,fy;$/;"	m	struct:__anon2
fy	src/v_video.h	/^  float fx, fy;$/;"	m	struct:__anon344
g	src/am_map.h	/^  unsigned char r, g, b, a;$/;"	m	struct:map_point_s
g	src/gl_intern.h	/^  unsigned char r, g, b, a;$/;"	m	struct:vbo_vertex_s
g	src/gl_intern.h	/^  unsigned char r, g, b, a;$/;"	m	struct:vbo_xy_uv_rgba_s
g	src/gl_intern.h	/^  unsigned char r, g, b;$/;"	m	struct:PalEntry_s
g	src/hu_lib.h	/^  float g;$/;"	m	struct:hu_color_s
gArgc	src/MAC/SDLMain.h	/^static int gArgc;$/;"	v
gArgv	src/MAC/SDLMain.h	/^static char **gArgv;$/;"	v
gCalledAppMainline	src/MAC/SDLMain.h	/^static BOOL gCalledAppMainline = FALSE;$/;"	v
gFinderLaunch	src/MAC/SDLMain.h	/^static BOOL gFinderLaunch;$/;"	v
gNd2	src/p_setup.c	85;"	d	file:
gNd3	src/p_setup.c	86;"	d	file:
gNd4	src/p_setup.c	87;"	d	file:
gNd5	src/p_setup.c	88;"	d	file:
g_hhk	src/e6y_launcher.c	/^HHOOK g_hhk;$/;"	v
g_hwndTT	src/e6y_launcher.c	/^HWND g_hwndTT;$/;"	v
g_rand	src/m_random.c	/^static GRand *g_rand = NULL;$/;"	v	file:
ga_completed	src/d_event.h	/^  ga_completed,$/;"	e	enum:__anon15
ga_loadgame	src/d_event.h	/^  ga_loadgame,$/;"	e	enum:__anon15
ga_loadlevel	src/d_event.h	/^  ga_loadlevel,$/;"	e	enum:__anon15
ga_newgame	src/d_event.h	/^  ga_newgame,$/;"	e	enum:__anon15
ga_nothing	src/d_event.h	/^  ga_nothing,$/;"	e	enum:__anon15
ga_playdemo	src/d_event.h	/^  ga_playdemo,$/;"	e	enum:__anon15
ga_savegame	src/d_event.h	/^  ga_savegame,$/;"	e	enum:__anon15
ga_victory	src/d_event.h	/^  ga_victory,$/;"	e	enum:__anon15
ga_worlddone	src/d_event.h	/^  ga_worlddone,$/;"	e	enum:__anon15
game_options	src/protocol.h	/^  byte game_options[GAME_OPTIONS_SIZE];$/;"	m	struct:setup_packet_s
game_state_delta_s	src/n_state.h	/^typedef struct game_state_delta_s {$/;"	s
game_state_delta_t	src/n_state.h	/^} game_state_delta_t;$/;"	t	typeref:struct:game_state_delta_s
game_state_s	src/n_state.h	/^typedef struct game_state_s {$/;"	s
game_state_t	src/n_state.h	/^} game_state_t;$/;"	t	typeref:struct:game_state_s
gameaction	src/g_game.c	/^gameaction_t    gameaction;$/;"	v
gameaction_t	src/d_event.h	/^} gameaction_t;$/;"	t	typeref:enum:__anon15
gameepisode	src/g_game.c	/^int             gameepisode;$/;"	v
gameid	src/d_ipxgate.c	/^  short     gameid;                       \/\/ so multiple games can setup at once$/;"	m	struct:__anon17	file:
gamekeydown	src/g_keys.c	/^dboolean gamekeydown[NUMKEYS];$/;"	v
gamemap	src/g_game.c	/^int             gamemap;$/;"	v
gamemission	src/doomstat.c	/^GameMission_t   gamemission = doom;$/;"	v
gamemode	src/doomstat.c	/^GameMode_t gamemode = indetermined;$/;"	v
gameopt_config_names	src/d_server.c	/^const char* gameopt_config_names[] = {$/;"	v
gameskill	src/g_game.c	/^skill_t         gameskill;$/;"	v
gamestate	src/g_game.c	/^gamestate_t     gamestate = -1;$/;"	v
gamestate_t	src/doomdef.h	/^} gamestate_t;$/;"	t	typeref:enum:__anon46
gametic	src/g_game.c	/^int             gametic;$/;"	v
gather_buffer	src/m_menu.c	/^char gather_buffer[MAXGATHER+1];  \/\/ killough 10\/98: make input character-based$/;"	v
gather_count	src/m_menu.c	/^int  gather_count;$/;"	v
gcd	src/v_video.c	/^static unsigned int gcd (unsigned int n, unsigned int d) { return (d ? gcd(d, n%d) : n); }$/;"	f	file:
gear	src/p_mobj.h	/^    short               gear; \/\/ killough 11\/98: used in torque simulation$/;"	m	struct:mobj_s
genBlazeCdO	src/p_spec.h	/^  genBlazeCdO,$/;"	e	enum:__anon253
genBlazeClose	src/p_spec.h	/^  genBlazeClose,$/;"	e	enum:__anon253
genBlazeOpen	src/p_spec.h	/^  genBlazeOpen,$/;"	e	enum:__anon253
genBlazeRaise	src/p_spec.h	/^  genBlazeRaise,$/;"	e	enum:__anon253
genBuildStair	src/p_spec.h	/^  genBuildStair,$/;"	e	enum:__anon255
genCdO	src/p_spec.h	/^  genCdO,$/;"	e	enum:__anon253
genCeiling	src/p_spec.h	/^  genCeiling,$/;"	e	enum:__anon254
genCeilingChg	src/p_spec.h	/^  genCeilingChg,$/;"	e	enum:__anon254
genCeilingChg0	src/p_spec.h	/^  genCeilingChg0,$/;"	e	enum:__anon254
genCeilingChgT	src/p_spec.h	/^  genCeilingChgT,$/;"	e	enum:__anon254
genClose	src/p_spec.h	/^  genClose,$/;"	e	enum:__anon253
genCrusher	src/p_spec.h	/^  genCrusher,$/;"	e	enum:__anon254
genFloor	src/p_spec.h	/^  genFloor,$/;"	e	enum:__anon255
genFloorChg	src/p_spec.h	/^  genFloorChg,$/;"	e	enum:__anon255
genFloorChg0	src/p_spec.h	/^  genFloorChg0,$/;"	e	enum:__anon255
genFloorChgT	src/p_spec.h	/^  genFloorChgT,$/;"	e	enum:__anon255
genLift	src/p_spec.h	/^  genLift,      \/\/jff added to support generalized Plat types$/;"	e	enum:__anon252
genOpen	src/p_spec.h	/^  genOpen,$/;"	e	enum:__anon253
genPerpetual	src/p_spec.h	/^  genPerpetual,$/;"	e	enum:__anon252
genRaise	src/p_spec.h	/^  genRaise,$/;"	e	enum:__anon253
genSilentCrusher	src/p_spec.h	/^  genSilentCrusher,$/;"	e	enum:__anon254
gen_compstrings	src/m_menu.c	/^static const char *gen_compstrings[] =$/;"	v	file:
gen_settings	src/m_menu.c	/^setup_menu_t* gen_settings[] =$/;"	v
gen_settings1	src/m_menu.c	/^setup_menu_t gen_settings1[] = { \/\/ General Settings screen1$/;"	v
gen_settings1	src/m_menu.c	/^setup_menu_t gen_settings1[], gen_settings2[], gen_settings3[];$/;"	v
gen_settings2	src/m_menu.c	/^setup_menu_t gen_settings1[], gen_settings2[], gen_settings3[];$/;"	v
gen_settings2	src/m_menu.c	/^setup_menu_t gen_settings2[] = { \/\/ General Settings screen2$/;"	v
gen_settings3	src/m_menu.c	/^setup_menu_t gen_settings1[], gen_settings2[], gen_settings3[];$/;"	v
gen_settings3	src/m_menu.c	/^setup_menu_t gen_settings3[] = { \/\/ General Settings screen2$/;"	v
gen_settings4	src/m_menu.c	/^setup_menu_t gen_settings4[] = { \/\/ General Settings screen3$/;"	v
gen_settings4	src/m_menu.c	/^setup_menu_t gen_settings4[], gen_settings5[], gen_settings6[];$/;"	v
gen_settings5	src/m_menu.c	/^setup_menu_t gen_settings4[], gen_settings5[], gen_settings6[];$/;"	v
gen_settings5	src/m_menu.c	/^setup_menu_t gen_settings5[] = { \/\/ General Settings screen3$/;"	v
gen_settings6	src/m_menu.c	/^setup_menu_t gen_settings4[], gen_settings5[], gen_settings6[];$/;"	v
gen_settings6	src/m_menu.c	/^setup_menu_t gen_settings6[] =$/;"	v
gen_settings7	src/m_menu.c	/^setup_menu_t gen_settings7[] =$/;"	v
gen_settings7	src/m_menu.c	/^setup_menu_t gen_settings7[], gen_settings8[];$/;"	v
gen_settings8	src/m_menu.c	/^setup_menu_t gen_settings7[], gen_settings8[];$/;"	v
gen_settings8	src/m_menu.c	/^setup_menu_t gen_settings8[] = { \/\/ General Settings screen4$/;"	v
gen_skillstrings	src/m_menu.c	/^static const char *gen_skillstrings[] = {$/;"	v	file:
general	src/m_menu.c	/^  general, \/\/ killough 10\/98$/;"	e	enum:__anon155	file:
general_translucency	src/doomstat.c	/^dboolean general_translucency; \/\/ true if translucency is ok \/\/ phares$/;"	v
generic_setup_e	src/m_menu.c	/^} generic_setup_e;$/;"	v	typeref:enum:__anon158
generic_setup_end	src/m_menu.c	/^  generic_setup_end$/;"	e	enum:__anon158	file:
generic_setupempty1	src/m_menu.c	/^  generic_setupempty1,$/;"	e	enum:__anon158	file:
genmidi_instr_t	src/MUSIC/oplplayer.c	/^} PACKEDATTR genmidi_instr_t;$/;"	t	typeref:struct:__anon196	file:
genmidi_op_t	src/MUSIC/oplplayer.c	/^} PACKEDATTR genmidi_op_t;$/;"	t	typeref:struct:__anon194	file:
genmidi_voice_t	src/MUSIC/oplplayer.c	/^} PACKEDATTR genmidi_voice_t;$/;"	t	typeref:struct:__anon195	file:
german	src/doomdef.h	/^  german,$/;"	e	enum:__anon45
getCode	src/r_filter.c	106;"	d	file:
getColumnEdgeSlope	src/r_patch.c	/^static int getColumnEdgeSlope(const column_t *prevcolumn, const column_t *nextcolumn, int spot) {$/;"	f	file:
getConvertedDEHBits	src/d_deh.c	/^static uint_64_t getConvertedDEHBits(uint_64_t bits) {$/;"	f	file:
getIsSolidAtSpot	src/r_patch.c	/^static int getIsSolidAtSpot(const column_t *column, int spot) {$/;"	f	file:
getNextSector	src/p_spec.c	/^sector_t* getNextSector$/;"	f
getPatchIsNotTileable	src/r_patch.c	/^static int getPatchIsNotTileable(const patch_t *patch) {$/;"	f	file:
getSector	src/p_spec.c	/^sector_t* getSector$/;"	f
getSide	src/p_spec.c	/^side_t* getSide$/;"	f
get_average_line_height	src/hu_msg.c	/^static float get_average_line_height(message_widget_t *mw) {$/;"	f	file:
get_channel	src/s_sound.c	/^static int get_channel(mobj_t *mobj, sfxinfo_t *sfxinfo, int is_pickup) {$/;"	f	file:
get_first_set	src/PCRELIB/pcre_get.c	/^get_first_set(const pcre *code, const char *stringname, int *ovector)$/;"	f	file:
get_line_count	src/hu_msg.c	/^static unsigned int get_line_count(message_widget_t *mw) {$/;"	f	file:
get_message_recipient_buffer	src/n_proto.c	/^static buf_t* get_message_recipient_buffer(void) {$/;"	f	file:
get_netchan	src/n_peer.c	38;"	d	file:
get_new_state	src/n_state.c	/^game_state_t* get_new_state(int tic) {$/;"	f
get_othercase_range	src/PCRELIB/pcre_compile.c	/^get_othercase_range(int *cptr, int d, int *ocptr, int *odptr)$/;"	f	file:
get_ucp	src/PCRELIB/pcre_compile.c	/^get_ucp(const uschar **ptrptr, BOOL *negptr, int *dptr, int *errorcodeptr)$/;"	f	file:
get_value	src/PCRELIB/pcretest.c	/^get_value(unsigned char *str, unsigned char **endptr)$/;"	f	file:
getelem	src/z_bmalloc.c	/^inline static void* getelem(bmalpool_t *p, size_t size, size_t n) {$/;"	f	file:
getopt	src/d_server.c	/^getopt(nargc, nargv, ostr)$/;"	f
getwad_cmdline	src/r_demo.c	/^const char *getwad_cmdline;$/;"	v
given_damage_pertic	src/hu_tracers.c	/^static int given_damage_pertic[MAXTRACEITEMS];$/;"	v	file:
given_damage_pertic_saved	src/hu_tracers.c	/^static int given_damage_pertic_saved[MAXTRACEITEMS];$/;"	v	file:
given_damage_processed	src/hu_tracers.c	/^static int given_damage_processed[MAXTRACEITEMS];$/;"	v	file:
given_damage_total	src/hu_tracers.c	/^static int given_damage_total[MAXTRACEITEMS];$/;"	v	file:
glDepthBufferFBOTexID	src/gl_fbo.c	/^GLuint glDepthBufferFBOTexID = 0;$/;"	v
glSceneImageFBOTexID	src/gl_fbo.c	/^GLuint glSceneImageFBOTexID = 0;$/;"	v
glSceneImageTextureFBOTexID	src/gl_fbo.c	/^GLuint glSceneImageTextureFBOTexID = 0;$/;"	v
glTexExID	src/gl_intern.h	/^  GLuint ***glTexExID;$/;"	m	struct:__anon89
gl_CurrentFogDensity	src/gl_light.c	/^float gl_CurrentFogDensity = -1.0f;$/;"	v
gl_DeviceSupportsGamma	src/gl_gamma.c	/^int gl_DeviceSupportsGamma = false;$/;"	v
gl_EnableFog	src/gl_light.c	/^void gl_EnableFog(int on)$/;"	f
gl_allow_detail_textures	src/gl_detail.c	/^int gl_allow_detail_textures;$/;"	v
gl_anisotropic_16x	src/m_misc.c	/^  gl_anisotropic_16x = 4,$/;"	e	enum:__anon168	file:
gl_anisotropic_2x	src/m_misc.c	/^  gl_anisotropic_2x  = 1,$/;"	e	enum:__anon168	file:
gl_anisotropic_4x	src/m_misc.c	/^  gl_anisotropic_4x  = 2,$/;"	e	enum:__anon168	file:
gl_anisotropic_8x	src/m_misc.c	/^  gl_anisotropic_8x  = 3,$/;"	e	enum:__anon168	file:
gl_anisotropic_mode_t	src/m_misc.c	/^} gl_anisotropic_mode_t;$/;"	t	typeref:enum:__anon168	file:
gl_anisotropic_off	src/m_misc.c	/^  gl_anisotropic_off = 0,$/;"	e	enum:__anon168	file:
gl_arb_framebuffer_object	src/gl_opengl.c	/^dboolean gl_arb_framebuffer_object = false;$/;"	v
gl_arb_framebuffer_object_default	src/gl_opengl.c	/^int gl_arb_framebuffer_object_default;$/;"	v
gl_arb_multitexture	src/gl_opengl.c	/^dboolean gl_arb_multitexture = false;$/;"	v
gl_arb_multitexture_default	src/gl_opengl.c	/^int gl_arb_multitexture_default;$/;"	v
gl_arb_pixel_buffer_object	src/gl_opengl.c	/^dboolean gl_arb_pixel_buffer_object = false;$/;"	v
gl_arb_pixel_buffer_object_default	src/gl_opengl.c	/^int gl_arb_pixel_buffer_object_default;$/;"	v
gl_arb_shader_objects	src/gl_opengl.c	/^dboolean gl_arb_shader_objects = false;$/;"	v
gl_arb_shader_objects_default	src/gl_opengl.c	/^int gl_arb_shader_objects_default;$/;"	v
gl_arb_texture_compression	src/gl_opengl.c	/^dboolean gl_arb_texture_compression = false;$/;"	v
gl_arb_texture_compression_default	src/gl_opengl.c	/^int gl_arb_texture_compression_default;$/;"	v
gl_arb_texture_non_power_of_two	src/gl_opengl.c	/^dboolean gl_arb_texture_non_power_of_two = false;$/;"	v
gl_arb_texture_non_power_of_two_default	src/gl_opengl.c	/^int gl_arb_texture_non_power_of_two_default;$/;"	v
gl_blend_animations	src/gl_main.c	/^int gl_blend_animations;$/;"	v
gl_boom_colormaps	src/gl_texture.c	/^int gl_boom_colormaps = -1;$/;"	v
gl_boom_colormaps_default	src/gl_texture.c	/^int gl_boom_colormaps_default;$/;"	v
gl_clear	src/gl_main.c	/^int gl_clear;$/;"	v
gl_color_mip_levels	src/gl_texture.c	/^int gl_color_mip_levels;$/;"	v
gl_colorbuffer_bits	src/SDL/i_video.c	/^int gl_colorbuffer_bits = 16;$/;"	v
gl_compatibility	src/gl_main.c	/^int gl_compatibility = 0;$/;"	v
gl_compatibility_mode	src/gl_opengl.c	/^static dboolean gl_compatibility_mode;$/;"	v	file:
gl_depthbuffer_bits	src/SDL/i_video.c	/^int gl_depthbuffer_bits = 16;$/;"	v
gl_detail_maxdist	src/gl_detail.c	/^int gl_detail_maxdist;$/;"	v
gl_detail_maxdist_sqrt	src/gl_detail.c	/^float gl_detail_maxdist_sqrt;$/;"	v
gl_distfog	src/gl_light.c	/^int gl_distfog = 70;$/;"	v
gl_drawskys	src/gl_sky.c	/^int gl_drawskys;$/;"	v
gl_ext_arb_vertex_buffer_object	src/gl_opengl.c	/^dboolean gl_ext_arb_vertex_buffer_object = false;$/;"	v
gl_ext_arb_vertex_buffer_object_default	src/gl_opengl.c	/^int gl_ext_arb_vertex_buffer_object_default;$/;"	v
gl_ext_blend_color	src/gl_opengl.c	/^dboolean gl_ext_blend_color = false;$/;"	v
gl_ext_blend_color_default	src/gl_opengl.c	/^int gl_ext_blend_color_default;$/;"	v
gl_ext_packed_depth_stencil	src/gl_opengl.c	/^dboolean gl_ext_packed_depth_stencil = false;$/;"	v
gl_ext_packed_depth_stencil_default	src/gl_opengl.c	/^int gl_ext_packed_depth_stencil_default;$/;"	v
gl_ext_texture_filter_anisotropic	src/gl_opengl.c	/^dboolean gl_ext_texture_filter_anisotropic = false;$/;"	v
gl_ext_texture_filter_anisotropic_default	src/gl_opengl.c	/^int gl_ext_texture_filter_anisotropic_default;$/;"	v
gl_finish	src/gl_main.c	/^int gl_finish = 1;$/;"	v
gl_fog	src/gl_light.c	/^int gl_fog;$/;"	v
gl_fog_color	src/gl_light.c	/^int gl_fog_color;$/;"	v
gl_fogenabled	src/gl_light.c	/^int gl_fogenabled;$/;"	v
gl_hardware_gamma	src/gl_light.c	/^int gl_hardware_gamma = false;$/;"	v
gl_has_hires	src/gl_hires.c	/^unsigned int gl_has_hires = 0;$/;"	v
gl_hires_24bit_colormap	src/gl_hires.c	/^int gl_hires_24bit_colormap = false;$/;"	v
gl_hires_override_pwads	src/gl_hires.c	/^int gl_hires_override_pwads;$/;"	v
gl_hqresizemode_t	src/gl_struct.h	/^} gl_hqresizemode_t;$/;"	t	typeref:enum:__anon116
gl_hqresizemodes	src/gl_hqresize.c	/^const char *gl_hqresizemodes[hq_scale_max] = {$/;"	v
gl_light_ambient	src/gl_light.c	/^int gl_light_ambient;$/;"	v
gl_lightmode	src/gl_light.c	/^gl_lightmode_t gl_lightmode;$/;"	v
gl_lightmode_default	src/gl_light.c	/^gl_lightmode_t gl_lightmode_default;$/;"	v
gl_lightmode_fogbased	src/gl_struct.h	/^  gl_lightmode_fogbased,$/;"	e	enum:__anon115
gl_lightmode_glboom	src/gl_struct.h	/^  gl_lightmode_glboom,$/;"	e	enum:__anon115
gl_lightmode_gzdoom	src/gl_struct.h	/^  gl_lightmode_gzdoom,$/;"	e	enum:__anon115
gl_lightmode_last	src/gl_struct.h	/^  gl_lightmode_last$/;"	e	enum:__anon115
gl_lightmode_shaders	src/gl_struct.h	/^  gl_lightmode_shaders,$/;"	e	enum:__anon115
gl_lightmode_t	src/gl_struct.h	/^} gl_lightmode_t;$/;"	t	typeref:enum:__anon115
gl_lightmodes	src/gl_light.c	/^const char *gl_lightmodes[] = {"glboom", "gzdoom", "fog based", "shaders"};$/;"	v
gl_lines	src/gl_main.c	/^GLSeg *gl_lines=NULL;$/;"	v
gl_mask_sprite_threshold	src/gl_main.c	/^int gl_mask_sprite_threshold;$/;"	v
gl_mask_sprite_threshold_f	src/gl_main.c	/^float gl_mask_sprite_threshold_f;$/;"	v
gl_max_texture_size	src/gl_opengl.c	/^int gl_max_texture_size = 0;$/;"	v
gl_motionblur	src/gl_fbo.c	/^int gl_motionblur;$/;"	v
gl_nearclip	src/gl_main.c	/^int gl_nearclip=5;$/;"	v
gl_oldHardwareGamma	src/gl_gamma.c	/^static Uint16 gl_oldHardwareGamma[3][256];$/;"	v	file:
gl_paletted_texture	src/gl_opengl.c	/^int gl_paletted_texture = 0;$/;"	v
gl_patch_filter	src/gl_main.c	/^int gl_patch_filter;$/;"	v
gl_preprocessed	src/gl_main.c	/^int gl_preprocessed = false;$/;"	v
gl_ratio	src/v_video.c	/^float gl_ratio;$/;"	v
gl_rellight	src/gl_light.c	/^int gl_rellight;$/;"	v
gl_seamless	src/gl_vertex.c	/^int gl_seamless = false;$/;"	v
gl_segs	src/gl_main.c	/^GLSeg *gl_segs=NULL;$/;"	v
gl_shadows_factor	src/gl_shadow.c	/^int gl_shadows_factor;$/;"	v
gl_shadows_maxdist	src/gl_shadow.c	/^int gl_shadows_maxdist;$/;"	v
gl_shared_texture_palette	src/gl_opengl.c	/^int gl_shared_texture_palette = 0;$/;"	v
gl_sky_detail	src/gl_sky.c	/^int gl_sky_detail = 16;$/;"	v
gl_skymode	src/gl_sky.c	/^int gl_skymode;$/;"	v
gl_splitsbysector	src/gl_vertex.c	/^static splitsbysector_t * gl_splitsbysector = NULL;$/;"	v	file:
gl_sprite_blend	src/gl_main.c	/^int gl_sprite_blend;  \/\/ e6y: smooth sprite edges$/;"	v
gl_sprite_filter	src/gl_main.c	/^int gl_sprite_filter;$/;"	v
gl_sprite_offset	src/gl_main.c	/^float gl_sprite_offset;       \/\/ precalcilated float value for gl_sprite_offset_default$/;"	v
gl_sprite_offset_default	src/gl_main.c	/^int gl_sprite_offset_default;	\/\/ item out of floor offset Mead 8\/13\/03$/;"	v
gl_spriteclip	src/gl_main.c	/^spriteclipmode_t gl_spriteclip;$/;"	v
gl_spriteclip_threshold	src/gl_main.c	/^int gl_spriteclip_threshold;$/;"	v
gl_spriteclip_threshold_f	src/gl_main.c	/^float gl_spriteclip_threshold_f;$/;"	v
gl_spriteclipmodes	src/gl_main.c	/^const char *gl_spriteclipmodes[] = {"constant", "full", "smart"};$/;"	v
gl_spriteindex	src/gl_main.c	/^int gl_spriteindex;$/;"	v
gl_sprites_frustum_culling	src/gl_main.c	/^int gl_sprites_frustum_culling;$/;"	v
gl_stretchsky	src/gl_sky.c	/^int gl_stretchsky = false;$/;"	v
gl_strip_coords_s	src/gl_intern.h	/^typedef struct gl_strip_coords_s$/;"	s
gl_strip_coords_t	src/gl_intern.h	/^} gl_strip_coords_t;$/;"	t	typeref:struct:gl_strip_coords_s
gl_tex_format	src/gl_texture.c	/^int gl_tex_format=GL_RGB5_A1;$/;"	v
gl_tex_format_string	src/gl_texture.c	/^const char *gl_tex_format_string;$/;"	v
gl_texture_external_hires	src/gl_hires.c	/^int gl_texture_external_hires = -1;$/;"	v
gl_texture_filter	src/gl_main.c	/^int gl_texture_filter;$/;"	v
gl_texture_filter_anisotropic	src/gl_main.c	/^int gl_texture_filter_anisotropic = 0;$/;"	v
gl_texture_hires_dir	src/gl_hires.c	/^const char *gl_texture_hires_dir = NULL;$/;"	v
gl_texture_hqresize	src/gl_hqresize.c	/^int gl_texture_hqresize;$/;"	v
gl_texture_hqresize_maxinputsize	src/gl_hqresize.c	/^int gl_texture_hqresize_maxinputsize = 512;$/;"	v
gl_texture_hqresize_patches	src/gl_hqresize.c	/^int gl_texture_hqresize_patches;$/;"	v
gl_texture_hqresize_sprites	src/gl_hqresize.c	/^int gl_texture_hqresize_sprites;$/;"	v
gl_texture_hqresize_textures	src/gl_hqresize.c	/^int gl_texture_hqresize_textures;$/;"	v
gl_texture_internal_hires	src/gl_hires.c	/^int gl_texture_internal_hires = -1;$/;"	v
gl_use_FBO	src/gl_fbo.c	/^dboolean gl_use_FBO = false;$/;"	v
gl_use_display_lists	src/gl_main.c	/^int gl_use_display_lists;$/;"	v
gl_use_fog	src/gl_light.c	/^int gl_use_fog;$/;"	v
gl_use_motionblur	src/gl_fbo.c	/^int gl_use_motionblur = false;$/;"	v
gl_use_paletted_texture	src/gl_opengl.c	/^int gl_use_paletted_texture = 0;$/;"	v
gl_use_shared_texture_palette	src/gl_opengl.c	/^int gl_use_shared_texture_palette = 0;$/;"	v
gl_use_stencil	src/gl_opengl.c	/^dboolean gl_use_stencil = false;$/;"	v
gl_use_stencil_default	src/gl_opengl.c	/^int gl_use_stencil_default;$/;"	v
gl_version	src/gl_opengl.c	/^int gl_version;$/;"	v
gl_vertexsplit	src/gl_vertex.c	/^static vertexsplit_info_t * gl_vertexsplit = NULL;$/;"	v	file:
gl_vsync	src/gl_main.c	/^int gl_vsync = true;$/;"	v
gl_whitecolor	src/gl_main.c	/^GLfloat gl_whitecolor[4]={1.0f,1.0f,1.0f,1.0f};$/;"	v
gl_ztrick	src/gl_main.c	/^int gl_ztrick;$/;"	v
gl_ztrickframe	src/gl_main.c	/^int gl_ztrickframe = 0;$/;"	v
gld_AddDrawItem	src/gl_drawinfo.c	/^void gld_AddDrawItem(GLDrawItemType dit, void *itemdata) {$/;"	f
gld_AddDrawRange	src/gl_drawinfo.c	/^static void gld_AddDrawRange(int size) {$/;"	f	file:
gld_AddDrawWallItem	src/gl_main.c	/^static void gld_AddDrawWallItem(GLDrawItemType itemtype, void *itemdata)$/;"	f	file:
gld_AddFlat	src/gl_main.c	/^static void gld_AddFlat(int sectornum, dboolean ceiling, visplane_t *plane)$/;"	f	file:
gld_AddFlatToTexture	src/gl_texture.c	/^static void gld_AddFlatToTexture(GLTexture *gltexture, unsigned char *buffer, const unsigned char *flat, int paletted)$/;"	f	file:
gld_AddGlobalVertexes	src/gl_preprocess.c	/^static void gld_AddGlobalVertexes(int count)$/;"	f	file:
gld_AddHealthBar	src/gl_main.c	/^static void gld_AddHealthBar(mobj_t* thing, GLSprite *sprite)$/;"	f	file:
gld_AddNewGLPatchTexture	src/gl_texture.c	/^static GLTexture *gld_AddNewGLPatchTexture(int lump)$/;"	f	file:
gld_AddNewGLTexItem	src/gl_texture.c	/^static GLTexture *gld_AddNewGLTexItem(int num, int count, GLTexture ***items)$/;"	f	file:
gld_AddNewGLTexture	src/gl_texture.c	/^static GLTexture *gld_AddNewGLTexture(int texture_num)$/;"	f	file:
gld_AddNiceThing	src/gl_map.c	/^void gld_AddNiceThing(int type, float x, float y, float radius, float angle,$/;"	f
gld_AddPatchToTexture	src/gl_texture.c	/^void gld_AddPatchToTexture(GLTexture *gltexture, unsigned char *buffer, const rpatch_t *patch, int originx, int originy, int cm, int paletted)$/;"	f
gld_AddPatchToTexture_UnTranslated	src/gl_texture.c	/^static void gld_AddPatchToTexture_UnTranslated(GLTexture *gltexture, unsigned char *buffer, const rpatch_t *patch, int originx, int originy, int paletted)$/;"	f	file:
gld_AddPlane	src/gl_main.c	/^void gld_AddPlane(int subsectornum, visplane_t *floor, visplane_t *ceiling)$/;"	f
gld_AddSkyTexture	src/gl_sky.c	/^void gld_AddSkyTexture(GLWall *wall, int sky1, int sky2, int skytype)$/;"	f
gld_AddWall	src/gl_main.c	/^void gld_AddWall(seg_t *seg)$/;"	f
gld_ApplyGammaRamp	src/gl_gamma.c	/^void gld_ApplyGammaRamp(byte *buf, int pitch, int width, int height)$/;"	f
gld_BindDetail	src/gl_detail.c	/^void gld_BindDetail(GLTexture *gltexture, int enable)$/;"	f
gld_BindDetailARB	src/gl_detail.c	/^void gld_BindDetailARB(GLTexture *gltexture, int enable)$/;"	f
gld_BindFace	src/gl_sky.c	/^int gld_BindFace(box_skybox_t *sb, int index)$/;"	f
gld_BindFlat	src/gl_texture.c	/^void gld_BindFlat(GLTexture *gltexture, unsigned int flags)$/;"	f
gld_BindPatch	src/gl_texture.c	/^void gld_BindPatch(GLTexture *gltexture, int cm)$/;"	f
gld_BindTexture	src/gl_texture.c	/^void gld_BindTexture(GLTexture *gltexture, unsigned int flags) {$/;"	f
gld_BlendOverTexture	src/gl_texture.c	/^static void gld_BlendOverTexture(byte *data, int pixelCount, byte blend[4])$/;"	f	file:
gld_BuildMipmaps	src/gl_texture.c	/^void gld_BuildMipmaps(GLsizei w, GLsizei h, GLvoid *p, GLenum wrap)$/;"	f
gld_BuildSky	src/gl_sky.c	/^static void gld_BuildSky(int row_count, int col_count, SkyBoxParams_t *sky, int cm)$/;"	f	file:
gld_BuildTexture	src/gl_texture.c	/^int gld_BuildTexture(GLTexture *gltexture, void *data, dboolean readonly,$/;"	f
gld_Calc2DLightLevel	src/gl_intern.h	/^gld_Calc2DLightLevel_f gld_Calc2DLightLevel;$/;"	v
gld_Calc2DLightLevel_f	src/gl_intern.h	/^typedef float (*gld_Calc2DLightLevel_f)(int lightlevel);$/;"	t
gld_CalcFogDensity	src/gl_intern.h	/^gld_CalcFogDensity_f gld_CalcFogDensity;$/;"	v
gld_CalcFogDensity	src/gl_light.c	/^gld_CalcFogDensity_f gld_CalcFogDensity = gld_CalcFogDensity_glboom;$/;"	v
gld_CalcFogDensity_f	src/gl_intern.h	/^typedef float (*gld_CalcFogDensity_f)(sector_t *sector, int lightlevel, GLDrawItemType type);$/;"	t
gld_CalcFogDensity_fogbased	src/gl_light.c	/^static float gld_CalcFogDensity_fogbased(sector_t *sector, int lightlevel, GLDrawItemType type)$/;"	f	file:
gld_CalcFogDensity_glboom	src/gl_light.c	/^static float gld_CalcFogDensity_glboom(sector_t *sector, int lightlevel, GLDrawItemType type)$/;"	f	file:
gld_CalcFogDensity_gzdoom	src/gl_light.c	/^static float gld_CalcFogDensity_gzdoom(sector_t *sector, int lightlevel, GLDrawItemType type)$/;"	f	file:
gld_CalcIntersectionVertex	src/gl_preprocess.c	/^static void gld_CalcIntersectionVertex(vertex_t *s, vertex_t *e, divline_t *d, vertex_t *i)$/;"	f	file:
gld_CalcLightLevel	src/gl_intern.h	/^gld_CalcLightLevel_f gld_CalcLightLevel;$/;"	v
gld_CalcLightLevel	src/gl_light.c	/^gld_CalcLightLevel_f gld_CalcLightLevel = gld_CalcLightLevel_glboom;$/;"	v
gld_CalcLightLevel_f	src/gl_intern.h	/^typedef float (*gld_CalcLightLevel_f)(int lightlevel);$/;"	t
gld_CalcLightLevel_fogbased	src/gl_light.c	/^static float gld_CalcLightLevel_fogbased(int lightlevel)$/;"	f	file:
gld_CalcLightLevel_glboom	src/gl_light.c	/^static float gld_CalcLightLevel_glboom(int lightlevel)$/;"	f	file:
gld_CalcLightLevel_gzdoom	src/gl_light.c	/^static float gld_CalcLightLevel_gzdoom(int lightlevel)$/;"	f	file:
gld_CalcLightLevel_shaders	src/gl_light.c	/^static float gld_CalcLightLevel_shaders(int lightlevel)$/;"	f	file:
gld_CarveFlats	src/gl_preprocess.c	/^static void gld_CarveFlats(int bspnode, int numdivlines, divline_t *divlines)$/;"	f	file:
gld_CheckHardwareGamma	src/gl_gamma.c	/^void gld_CheckHardwareGamma(void)$/;"	f
gld_CleanDisplayLists	src/gl_main.c	/^void gld_CleanDisplayLists(void)$/;"	f
gld_CleanMemory	src/gl_texture.c	/^void gld_CleanMemory(void)$/;"	f
gld_CleanStaticMemory	src/gl_texture.c	/^void gld_CleanStaticMemory(void)$/;"	f
gld_CleanTexItems	src/gl_texture.c	/^static void gld_CleanTexItems(int count, GLTexture ***items)$/;"	f	file:
gld_CleanVertexData	src/gl_vertex.c	/^void gld_CleanVertexData()$/;"	f
gld_Clear	src/gl_main.c	/^void gld_Clear(void)$/;"	f
gld_ClearFloodStencil	src/gl_missingtexture.c	/^void gld_ClearFloodStencil(GLWall *wall)$/;"	f
gld_ClearNiceThings	src/gl_map.c	/^void gld_ClearNiceThings(void)$/;"	f
gld_CreateScreenSizeFBO	src/gl_fbo.c	/^static dboolean gld_CreateScreenSizeFBO(void)$/;"	f	file:
gld_DisplayList	src/gl_main.c	/^GLuint gld_DisplayList=0;$/;"	v
gld_Draw8InGL	src/gl_soft2gl.c	/^void gld_Draw8InGL(void)$/;"	f
gld_DrawBoxSkyBox	src/gl_sky.c	/^int gld_DrawBoxSkyBox(void)$/;"	f
gld_DrawDetail_NoARB	src/gl_detail.c	/^void gld_DrawDetail_NoARB(void)$/;"	f
gld_DrawDomeSkyBox	src/gl_sky.c	/^void gld_DrawDomeSkyBox(void)$/;"	f
gld_DrawFakeSkyStrips	src/gl_sky.c	/^void gld_DrawFakeSkyStrips(void)$/;"	f
gld_DrawFlat	src/gl_main.c	/^static void gld_DrawFlat(GLFlat *flat)$/;"	f	file:
gld_DrawFlatDetail_NoARB	src/gl_detail.c	/^void gld_DrawFlatDetail_NoARB(GLFlat *flat)$/;"	f
gld_DrawHealthBars	src/gl_main.c	/^static void gld_DrawHealthBars(void)$/;"	f	file:
gld_DrawItemsSort	src/gl_main.c	/^static void gld_DrawItemsSort(GLDrawItemType itemtype, int (C_DECL *PtFuncCompare)(const void *, const void *))$/;"	f	file:
gld_DrawItemsSortByDetail	src/gl_detail.c	/^void gld_DrawItemsSortByDetail(GLDrawItemType itemtype)$/;"	f
gld_DrawItemsSortByTexture	src/gl_main.c	/^static void gld_DrawItemsSortByTexture(GLDrawItemType itemtype) {$/;"	f	file:
gld_DrawItemsSortSprites	src/gl_main.c	/^static void gld_DrawItemsSortSprites(GLDrawItemType itemtype)$/;"	f	file:
gld_DrawLine	src/gl_main.c	/^void gld_DrawLine(int x0, int y0, int x1, int y1, int BaseColor)$/;"	f
gld_DrawLine_f	src/gl_main.c	/^void gld_DrawLine_f(float x0, float y0, float x1, float y1, int BaseColor)$/;"	f
gld_DrawMapLines	src/gl_map.c	/^void gld_DrawMapLines(void)$/;"	f
gld_DrawNiceThings	src/gl_map.c	/^void gld_DrawNiceThings(int fx, int fy, int fw, int fh)$/;"	f
gld_DrawNumPatch	src/gl_main.c	/^void gld_DrawNumPatch(int x, int y, int lump, int cm, enum patch_translation_e flags)$/;"	f
gld_DrawNumPatch_f	src/gl_main.c	/^void gld_DrawNumPatch_f(float x, float y, int lump, int cm, enum patch_translation_e flags)$/;"	f
gld_DrawProjectedWalls	src/gl_main.c	/^void gld_DrawProjectedWalls(GLDrawItemType itemtype)$/;"	f
gld_DrawScene	src/gl_main.c	/^void gld_DrawScene(player_t *player)$/;"	f
gld_DrawScreenSkybox	src/gl_sky.c	/^void gld_DrawScreenSkybox(void)$/;"	f
gld_DrawShadow	src/gl_shadow.c	/^static void gld_DrawShadow(GLShadow *shadow)$/;"	f	file:
gld_DrawSkyCaps	src/gl_sky.c	/^void gld_DrawSkyCaps(void)$/;"	f
gld_DrawSprite	src/gl_main.c	/^static void gld_DrawSprite(GLSprite *sprite)$/;"	f	file:
gld_DrawStripsSky	src/gl_sky.c	/^void gld_DrawStripsSky(void)$/;"	f
gld_DrawTriangleStrip	src/gl_main.c	/^void gld_DrawTriangleStrip(GLWall *wall, gl_strip_coords_t *c)$/;"	f
gld_DrawTriangleStripARB	src/gl_detail.c	/^void gld_DrawTriangleStripARB(GLWall *wall, gl_strip_coords_t *c1, gl_strip_coords_t *c2)$/;"	f
gld_DrawWall	src/gl_main.c	/^static void gld_DrawWall(GLWall *wall)$/;"	f	file:
gld_DrawWallDetail_NoARB	src/gl_detail.c	/^void gld_DrawWallDetail_NoARB(GLWall *wall)$/;"	f
gld_DrawWallWithDetail	src/gl_detail.c	/^void gld_DrawWallWithDetail(GLWall *wall)$/;"	f
gld_DrawWeapon	src/gl_main.c	/^void gld_DrawWeapon(int weaponlump, vissprite_t *vis, int lightlevel)$/;"	f
gld_EnableClientCoordArray	src/gl_opengl.c	/^void gld_EnableClientCoordArray(GLenum texture, int enable)$/;"	f
gld_EnableDetail	src/gl_detail.c	/^void gld_EnableDetail(int enable)$/;"	f
gld_EnableMultisample	src/gl_opengl.c	/^void gld_EnableMultisample(int enable)$/;"	f
gld_EnableTexture2D	src/gl_opengl.c	/^void gld_EnableTexture2D(GLenum texture, int enable)$/;"	f
gld_EndDrawScene	src/gl_main.c	/^void gld_EndDrawScene(void)$/;"	f
gld_FillBlock	src/gl_main.c	/^void gld_FillBlock(int x, int y, int width, int height, int col)$/;"	f
gld_FillFlat	src/gl_main.c	/^void gld_FillFlat(int lump, int x, int y, int width, int height, enum patch_translation_e flags)$/;"	f
gld_FillFlatName	src/gl_struct.h	95;"	d
gld_FillPatch	src/gl_main.c	/^void gld_FillPatch(int lump, int x, int y, int width, int height, enum patch_translation_e flags)$/;"	f
gld_FillPatchName	src/gl_struct.h	99;"	d
gld_Finish	src/gl_main.c	/^void gld_Finish(void)$/;"	f
gld_FlatConvexCarver	src/gl_preprocess.c	/^static void gld_FlatConvexCarver(int ssidx, int num, divline_t *list)$/;"	f	file:
gld_FlatEdgeClipper	src/gl_preprocess.c	/^static vertex_t *gld_FlatEdgeClipper(int *numpoints, vertex_t *points, int numclippers, divline_t *clippers)$/;"	f	file:
gld_FlushTextures	src/gl_texture.c	/^void gld_FlushTextures(void)$/;"	f
gld_FreeDrawInfo	src/gl_drawinfo.c	/^void gld_FreeDrawInfo(void)$/;"	f
gld_FreeScreenSizeFBO	src/gl_fbo.c	/^void gld_FreeScreenSizeFBO(void)$/;"	f
gld_FrustrumSetup	src/gl_clipper.c	/^void gld_FrustrumSetup(void)$/;"	f
gld_FrustumAngle	src/gl_clipper.c	/^angle_t gld_FrustumAngle(void)$/;"	f
gld_GLPatchTextures	src/gl_texture.c	/^static GLTexture **gld_GLPatchTextures=NULL;$/;"	v	file:
gld_GLStaticPatchTextures	src/gl_texture.c	/^static GLTexture **gld_GLStaticPatchTextures=NULL;$/;"	v	file:
gld_GLTextures	src/gl_texture.c	/^static GLTexture **gld_GLTextures=NULL;$/;"	v	file:
gld_GetScreenSkyScale	src/gl_sky.c	/^void gld_GetScreenSkyScale(GLWall *wall, float *scale_x, float *scale_y)$/;"	f
gld_GetSkyCapColors	src/gl_sky.c	/^void gld_GetSkyCapColors(void)$/;"	f
gld_GetSubSectorVertices	src/gl_preprocess.c	/^static void gld_GetSubSectorVertices(void)$/;"	f	file:
gld_GetTexDimension	src/gl_texture.c	/^int gld_GetTexDimension(int value)$/;"	f
gld_GetTextureBuffer	src/gl_texture.c	/^unsigned char* gld_GetTextureBuffer(GLuint texid, int miplevel, int *width, int *height)$/;"	f
gld_GetTextureTexID	src/gl_texture.c	/^void gld_GetTextureTexID(GLTexture *gltexture, int cm)$/;"	f
gld_HQResize	src/gl_hqresize.c	/^unsigned char* gld_HQResize(GLTexture *gltexture, unsigned char *inputBuffer, int inWidth, int inHeight, int *outWidth, int *outHeight)$/;"	f
gld_HiRes_Bind	src/gl_hires.c	/^static void gld_HiRes_Bind(GLTexture *gltexture, GLuint *glTexID)$/;"	f	file:
gld_HiRes_BuildTables	src/gl_hires.c	/^int gld_HiRes_BuildTables(void)$/;"	f
gld_HiRes_GetExternalName	src/gl_hires.c	/^static int gld_HiRes_GetExternalName(GLTexture *gltexture, char *img_path, char *dds_path)$/;"	f	file:
gld_HiRes_GetInternalName	src/gl_hires.c	/^static const char* gld_HiRes_GetInternalName(GLTexture *gltexture)$/;"	f	file:
gld_HiRes_LoadDDSTexture	src/gl_hires.c	/^static int gld_HiRes_LoadDDSTexture(GLTexture* gltexture, GLuint* texid, const char* dds_path)$/;"	f	file:
gld_HiRes_LoadFromCache	src/gl_hires.c	/^static int gld_HiRes_LoadFromCache(GLTexture* gltexture, GLuint* texid, const char* img_path)$/;"	f	file:
gld_HiRes_LoadFromFile	src/gl_hires.c	/^static int gld_HiRes_LoadFromFile(GLTexture* gltexture, GLuint* texid, const char* img_path)$/;"	f	file:
gld_HiRes_ProcessColormap	src/gl_hires.c	/^void gld_HiRes_ProcessColormap(unsigned char *buffer, int bufSize)$/;"	f
gld_HiRes_WriteCache	src/gl_hires.c	/^static int gld_HiRes_WriteCache(GLTexture* gltexture, GLuint* texid, const char* img_path)$/;"	f	file:
gld_Init	src/gl_main.c	/^void gld_Init(int width, int height)$/;"	f
gld_Init8InGLMode	src/gl_soft2gl.c	/^void gld_Init8InGLMode(void)$/;"	f
gld_InitCommandLine	src/gl_main.c	/^void gld_InitCommandLine(void)$/;"	f
gld_InitDetail	src/gl_detail.c	/^void gld_InitDetail(void)$/;"	f
gld_InitDisplayLists	src/gl_main.c	/^void gld_InitDisplayLists(void)$/;"	f
gld_InitDrawScene	src/gl_main.c	/^void gld_InitDrawScene(void)$/;"	f
gld_InitFBO	src/gl_fbo.c	/^void gld_InitFBO(void)$/;"	f
gld_InitFrameDetails	src/gl_detail.c	/^void gld_InitFrameDetails(void)$/;"	f
gld_InitFrameSky	src/gl_sky.c	/^void gld_InitFrameSky(void)$/;"	f
gld_InitHiRes	src/gl_hires.c	/^void gld_InitHiRes(void)$/;"	f
gld_InitLightTable	src/gl_light.c	/^void gld_InitLightTable(void)$/;"	f
gld_InitLightTable_f	src/gl_light.c	/^typedef void (*gld_InitLightTable_f)(void);$/;"	t	file:
gld_InitLightTable_fogbased	src/gl_light.c	/^static void gld_InitLightTable_fogbased(void)$/;"	f	file:
gld_InitLightTable_glboom	src/gl_light.c	/^static void gld_InitLightTable_glboom(void)$/;"	f	file:
gld_InitLightTable_gzdoom	src/gl_light.c	/^static void gld_InitLightTable_gzdoom(void)$/;"	f	file:
gld_InitMapPics	src/gl_map.c	/^void gld_InitMapPics(void)$/;"	f
gld_InitMotionBlur	src/gl_fbo.c	/^void gld_InitMotionBlur(void)$/;"	f
gld_InitOpenGL	src/gl_opengl.c	/^void gld_InitOpenGL(dboolean compatibility_mode)$/;"	f
gld_InitOpenGLVersion	src/gl_opengl.c	/^void gld_InitOpenGLVersion(void)$/;"	f
gld_InitPalettedTextures	src/gl_texture.c	/^void gld_InitPalettedTextures(void)$/;"	f
gld_InitShadows	src/gl_shadow.c	/^void gld_InitShadows(void)$/;"	f
gld_InitSky	src/gl_sky.c	/^void gld_InitSky(void)$/;"	f
gld_InitTextureParams	src/gl_main.c	/^void gld_InitTextureParams(void)$/;"	f
gld_InitVertexData	src/gl_vertex.c	/^void gld_InitVertexData()$/;"	f
gld_InvertScene	src/gl_main.c	/^static void gld_InvertScene(void)$/;"	f	file:
gld_IsDetailVisible	src/gl_detail.c	/^int gld_IsDetailVisible(float x0, float y0, float x1, float y1, float x2, float y2)$/;"	f
gld_LoadDetailName	src/gl_detail.c	/^GLuint gld_LoadDetailName(const char *name)$/;"	f
gld_LoadGLDefs	src/gl_main.c	/^int gld_LoadGLDefs(const char * defsLump)$/;"	f
gld_LoadHiresTex	src/gl_hires.c	/^int gld_LoadHiresTex(GLTexture *gltexture, int cm)$/;"	f
gld_LoadShader	src/gl_shader.c	/^static GLShader* gld_LoadShader(const char *vpname, const char *fpname)$/;"	f	file:
gld_MapDrawSubsectors	src/gl_main.c	/^void gld_MapDrawSubsectors(player_t *plr, int fx, int fy, fixed_t mx, fixed_t my, int fw, int fh, fixed_t scale)$/;"	f
gld_MarkSectorsForClamp	src/gl_preprocess.c	/^static void gld_MarkSectorsForClamp(void)$/;"	f	file:
gld_MultisamplingCheck	src/gl_main.c	/^void gld_MultisamplingCheck(void)$/;"	f
gld_MultisamplingInit	src/gl_main.c	/^void gld_MultisamplingInit(void)$/;"	f
gld_MultisamplingSet	src/gl_main.c	/^void gld_MultisamplingSet(void)$/;"	f
gld_ParseDetail	src/gl_detail.c	/^void gld_ParseDetail(void)$/;"	f
gld_ParseDetailItem	src/gl_detail.c	/^void gld_ParseDetailItem(tag_detail_e item)$/;"	f
gld_ParseSkybox	src/gl_sky.c	/^void gld_ParseSkybox(void)$/;"	f
gld_PointOnSide	src/gl_preprocess.c	/^static dboolean gld_PointOnSide(vertex_t *p, divline_t *d)$/;"	f	file:
gld_Precache	src/gl_texture.c	/^void gld_Precache(void)$/;"	f
gld_PrecacheGUIPatches	src/gl_hires.c	/^int gld_PrecacheGUIPatches(void)$/;"	f
gld_PrecalculateSector	src/gl_preprocess.c	/^static void gld_PrecalculateSector(int num)$/;"	f	file:
gld_PrepareSectorSpecialEffects	src/gl_missingtexture.c	/^static void gld_PrepareSectorSpecialEffects(void)$/;"	f	file:
gld_PreprocessDetail	src/gl_detail.c	/^void gld_PreprocessDetail(void)$/;"	f
gld_PreprocessFakeSector	src/gl_missingtexture.c	/^static void gld_PreprocessFakeSector(int ceiling, sector_t *sector, int groupid)$/;"	f	file:
gld_PreprocessFakeSectors	src/gl_missingtexture.c	/^void gld_PreprocessFakeSectors(void)$/;"	f
gld_PreprocessLevel	src/gl_preprocess.c	/^void gld_PreprocessLevel(void)$/;"	f
gld_PreprocessSectors	src/gl_preprocess.c	/^static void gld_PreprocessSectors(void)$/;"	f	file:
gld_PreprocessSegs	src/gl_preprocess.c	/^static void gld_PreprocessSegs(void)$/;"	f	file:
gld_ProcessExtraAlpha	src/gl_main.c	/^static void gld_ProcessExtraAlpha(void)$/;"	f	file:
gld_ProcessTexturedMap	src/gl_preprocess.c	/^void gld_ProcessTexturedMap(void)$/;"	f
gld_ProcessThingShadow	src/gl_shadow.c	/^void gld_ProcessThingShadow(mobj_t *mo)$/;"	f
gld_ProcessWall	src/gl_main.c	/^void gld_ProcessWall(GLWall *wall) {$/;"	f
gld_ProgressEnd	src/gl_hires.c	/^int gld_ProgressEnd(void)$/;"	f
gld_ProgressRestoreScreen	src/gl_hires.c	/^int gld_ProgressRestoreScreen(void)$/;"	f
gld_ProgressStart	src/gl_hires.c	/^int gld_ProgressStart(void)$/;"	f
gld_ProgressUpdate	src/gl_hires.c	/^void gld_ProgressUpdate(const char * text, int progress, int total)$/;"	f
gld_ProjectSprite	src/gl_main.c	/^void gld_ProjectSprite(mobj_t* thing)$/;"	f
gld_ReadDetailParams	src/gl_detail.c	/^int gld_ReadDetailParams(tag_detail_e item, detail_t *detail)$/;"	f
gld_ReadScreen	src/gl_main.c	/^unsigned char *gld_ReadScreen(void)$/;"	f
gld_RecalcVertexHeights	src/gl_vertex.c	/^void gld_RecalcVertexHeights(const vertex_t *v)$/;"	f
gld_RecolorMipLevels	src/gl_texture.c	/^static void gld_RecolorMipLevels(byte *data)$/;"	f	file:
gld_RegisterFlat	src/gl_texture.c	/^GLTexture *gld_RegisterFlat(int lump, dboolean mipmap)$/;"	f
gld_RegisterPatch	src/gl_texture.c	/^GLTexture *gld_RegisterPatch(int lump, int cm)$/;"	f
gld_RegisterTexture	src/gl_texture.c	/^GLTexture *gld_RegisterTexture(int texture_num, dboolean mipmap, dboolean force)$/;"	f
gld_RenderShadows	src/gl_shadow.c	/^void gld_RenderShadows(void)$/;"	f
gld_ResetDrawInfo	src/gl_drawinfo.c	/^void gld_ResetDrawInfo(void) {$/;"	f
gld_ResetGammaRamp	src/gl_gamma.c	/^void gld_ResetGammaRamp(void)$/;"	f
gld_ResetLastTexture	src/gl_texture.c	/^void gld_ResetLastTexture(void)$/;"	f
gld_ResetTexturedAutomap	src/gl_main.c	/^void gld_ResetTexturedAutomap(void)$/;"	f
gld_Set2DMode	src/gl_main.c	/^GLvoid gld_Set2DMode(void)$/;"	f
gld_SetFog	src/gl_light.c	/^void gld_SetFog(float fogdensity)$/;"	f
gld_SetGammaRamp	src/gl_gamma.c	/^int gld_SetGammaRamp(int gamma)$/;"	f
gld_SetPalette	src/gl_main.c	/^void gld_SetPalette(int palette)$/;"	f
gld_SetTexClamp	src/gl_texture.c	/^void gld_SetTexClamp(GLTexture *gltexture, unsigned int flags)$/;"	f
gld_SetTexDetail	src/gl_detail.c	/^void gld_SetTexDetail(GLTexture *gltexture)$/;"	f
gld_SetTexFilters	src/gl_texture.c	/^void gld_SetTexFilters(GLTexture *gltexture)$/;"	f
gld_SetTexturePalette	src/gl_texture.c	/^void gld_SetTexturePalette(GLenum target)$/;"	f
gld_SetupFloodStencil	src/gl_missingtexture.c	/^void gld_SetupFloodStencil(GLWall *wall)$/;"	f
gld_SetupFloodedPlaneCoords	src/gl_missingtexture.c	/^void gld_SetupFloodedPlaneCoords(GLWall *wall, gl_strip_coords_t *c)$/;"	f
gld_SetupFloodedPlaneLight	src/gl_missingtexture.c	/^void gld_SetupFloodedPlaneLight(GLWall *wall)$/;"	f
gld_ShutdownDetail	src/gl_detail.c	/^void gld_ShutdownDetail(void)$/;"	f
gld_SphereInFrustum	src/gl_clipper.c	/^dboolean gld_SphereInFrustum(float x, float y, float z, float radius)$/;"	f
gld_SplitLeftEdge	src/gl_vertex.c	/^void gld_SplitLeftEdge(const GLWall *wall, dboolean detail)$/;"	f
gld_SplitRightEdge	src/gl_vertex.c	/^void gld_SplitRightEdge(const GLWall *wall, dboolean detail)$/;"	f
gld_StartDrawScene	src/gl_main.c	/^void gld_StartDrawScene(void)$/;"	f
gld_StaticLight	src/gl_intern.h	442;"	d
gld_StaticLightAlpha	src/gl_light.c	/^void gld_StaticLightAlpha(float light, float alpha)$/;"	f
gld_UpdateSplitData	src/gl_vertex.c	/^void gld_UpdateSplitData(sector_t *sector)$/;"	f
gld_clipnode_Free	src/gl_clipper.c	/^static void gld_clipnode_Free(clipnode_t *node)$/;"	f	file:
gld_clipnode_GetNew	src/gl_clipper.c	/^static clipnode_t * gld_clipnode_GetNew(void)$/;"	f	file:
gld_clipnode_NewRange	src/gl_clipper.c	/^static clipnode_t * gld_clipnode_NewRange(angle_t start, angle_t end)$/;"	f	file:
gld_clipper_AddClipRange	src/gl_clipper.c	/^static void gld_clipper_AddClipRange(angle_t start, angle_t end)$/;"	f	file:
gld_clipper_AngleToPseudo	src/gl_clipper.c	/^angle_t gld_clipper_AngleToPseudo(angle_t ang)$/;"	f
gld_clipper_Clear	src/gl_clipper.c	/^void gld_clipper_Clear(void)$/;"	f
gld_clipper_IsRangeVisible	src/gl_clipper.c	/^static dboolean gld_clipper_IsRangeVisible(angle_t startAngle, angle_t endAngle)$/;"	f	file:
gld_clipper_RemoveRange	src/gl_clipper.c	/^static void gld_clipper_RemoveRange(clipnode_t *range)$/;"	f	file:
gld_clipper_SafeAddClipRange	src/gl_clipper.c	/^void gld_clipper_SafeAddClipRange(angle_t startangle, angle_t endangle)$/;"	f
gld_clipper_SafeAddClipRangeRealAngles	src/gl_clipper.c	/^void gld_clipper_SafeAddClipRangeRealAngles(angle_t startangle, angle_t endangle)$/;"	f
gld_clipper_SafeCheckRange	src/gl_clipper.c	/^dboolean gld_clipper_SafeCheckRange(angle_t startAngle, angle_t endAngle)$/;"	f
gld_drawinfo	src/gl_drawinfo.c	/^GLDrawInfo gld_drawinfo;$/;"	v
gld_light	src/gl_light.c	/^static GLLight gld_light[gl_lightmode_last] = {$/;"	v	file:
gld_max_vertexes	src/gl_preprocess.c	/^static int gld_max_vertexes = 0;$/;"	v	file:
gld_num_vertexes	src/gl_preprocess.c	/^static int gld_num_vertexes = 0;$/;"	v	file:
gld_palmap	src/gl_texture.c	/^unsigned char gld_palmap[256];$/;"	v
gld_wipe_EndScreen	src/gl_wipe.c	/^int gld_wipe_EndScreen(void)$/;"	f
gld_wipe_StartScreen	src/gl_wipe.c	/^int gld_wipe_StartScreen(void)$/;"	f
gld_wipe_doMelt	src/gl_wipe.c	/^int gld_wipe_doMelt(int ticks, int *y_lookup)$/;"	f
gld_wipe_exitMelt	src/gl_wipe.c	/^int gld_wipe_exitMelt(int ticks)$/;"	f
gldef_type_e	src/gl_main.c	/^} gldef_type_e;$/;"	t	typeref:enum:__anon107	file:
gldepthmax	src/gl_main.c	/^float gldepthmin, gldepthmax;$/;"	v
gldepthmin	src/gl_main.c	/^float gldepthmin, gldepthmax;$/;"	v
glow_t	src/p_spec.h	/^} glow_t;$/;"	t	typeref:struct:__anon265
glseg	src/gl_intern.h	/^  GLSeg *glseg;$/;"	m	struct:__anon91
glseg_t	src/p_setup.c	/^} glseg_t;$/;"	t	typeref:struct:__anon231	file:
glsl_Init	src/gl_intern.h	571;"	d
glsl_Init	src/gl_shader.c	/^int glsl_Init(void) {$/;"	f
glsl_IsActive	src/gl_shader.c	/^int glsl_IsActive(void)$/;"	f
glsl_SetActiveShader	src/gl_intern.h	572;"	d
glsl_SetActiveShader	src/gl_shader.c	/^void glsl_SetActiveShader(GLShader *shader)$/;"	f
glsl_SetLightLevel	src/gl_intern.h	573;"	d
glsl_SetLightLevel	src/gl_shader.c	/^void glsl_SetLightLevel(float lightlevel)$/;"	f
gltexfilters	src/m_menu.c	/^static const char *gltexfilters[] = {$/;"	v	file:
gltexfilters_anisotropics	src/m_menu.c	/^static const char *gltexfilters_anisotropics[] = $/;"	v	file:
gltexformats	src/m_menu.c	/^static const char *gltexformats[] = {$/;"	v	file:
gltexture	src/gl_intern.h	/^  GLTexture *gltexture;$/;"	m	struct:__anon102
gltexture	src/gl_intern.h	/^  GLTexture *gltexture;$/;"	m	struct:__anon91
gltexture	src/gl_intern.h	/^  GLTexture *gltexture;$/;"	m	struct:__anon93
glversion_t	src/gl_opengl.h	/^} glversion_t;$/;"	t	typeref:enum:__anon109
god_health	src/p_inter.c	/^int god_health = 100;   \/\/ these are used in cheats (see st_stuff.c)$/;"	v
gotten_store	src/PCRELIB/pcretest.c	/^static size_t gotten_store;$/;"	v	file:
graphics_initialized	src/g_game.c	/^dboolean graphics_initialized = false;$/;"	v
green_armor_class	src/p_inter.c	/^int green_armor_class = 1;  \/\/ these are involved with armortype below$/;"	v
grep_or_recurse	src/PCRELIB/pcregrep.c	/^grep_or_recurse(char *pathname, BOOL dir_recurse, BOOL only_one_at_top)$/;"	f	file:
grnrock	src/st_stuff.c	/^patchnum_t grnrock;$/;"	v
group_num	src/PCRELIB/pcre_internal.h	/^  int group_num;                \/* Number of group that was called *\/$/;"	m	struct:recursion_info
gx	src/r_defs.h	/^  fixed_t gx, gy;              \/\/ for line side calculation$/;"	m	struct:vissprite_s
gy	src/r_defs.h	/^  fixed_t gx, gy;              \/\/ for line side calculation$/;"	m	struct:vissprite_s
gz	src/r_defs.h	/^  fixed_t gz, gzt;             \/\/ global bottom \/ top for silhouette clipping$/;"	m	struct:vissprite_s
gzt	src/r_defs.h	/^  fixed_t gz, gzt;             \/\/ global bottom \/ top for silhouette clipping$/;"	m	struct:vissprite_s
h	src/TEXTSCREEN/txt_label.h	/^    unsigned int w, h;$/;"	m	struct:txt_label_s
h	src/TEXTSCREEN/txt_scrollpane.h	/^    int w, h;$/;"	m	struct:txt_scrollpane_s
h	src/TEXTSCREEN/txt_sdl.c	/^    unsigned int h;$/;"	m	struct:__anon337	file:
h	src/TEXTSCREEN/txt_widget.h	/^    unsigned int w, h;$/;"	m	struct:txt_widget_s
h	src/am_map.h	/^ fixed_t w, h;$/;"	m	struct:__anon3
h	src/hu_lib.h	/^  int     h;                    \/\/ height in lines$/;"	m	struct:__anon122
h	src/hu_lib.h	/^  int x,y,w,h;                         \/\/ window position and size$/;"	m	struct:__anon123
h	src/hu_stuff.h	/^  int w, h, flags;$/;"	m	struct:crosshair_s
hFragProg	src/gl_intern.h	/^  GLhandleARB hFragProg;$/;"	m	struct:GLShader_s
hShader	src/gl_intern.h	/^  GLhandleARB hShader;$/;"	m	struct:GLShader_s
hVertProg	src/gl_intern.h	/^  GLhandleARB hVertProg;$/;"	m	struct:GLShader_s
hacx	src/doomdef.h	/^  hacx,         \/\/ HACX - Twitch 'n Kill$/;"	e	enum:__anon44
handle	src/PCRELIB/pcregrep.c	/^HANDLE handle;$/;"	m	struct:directory_type	file:
handle	src/s_sound.c	/^  int handle;          \/\/ handle of the sound being played$/;"	m	struct:__anon319	file:
handle	src/sounds.h	/^  int handle;$/;"	m	struct:__anon316
handle	src/w_wad.h	/^  int handle;$/;"	m	struct:__anon356
handleInput	src/hu_chat.c	/^  ChatInputHandler handleInput;$/;"	m	struct:chat_widget_s	file:
handleInput	src/hu_input.c	/^  InputHandler handleInput;$/;"	m	struct:input_widget_s	file:
handle_auth_request	src/n_proto.c	/^static void handle_auth_request(netpeer_t *np) {$/;"	f	file:
handle_auth_response	src/n_proto.c	/^static void handle_auth_response(netpeer_t *np) {$/;"	f	file:
handle_option	src/PCRELIB/pcregrep.c	/^handle_option(int letter, int options)$/;"	f	file:
handle_player_message	src/n_proto.c	/^static void handle_player_message(netpeer_t *np) {$/;"	f	file:
handle_player_preference_change	src/n_proto.c	/^static void handle_player_preference_change(netpeer_t *np) {$/;"	f	file:
handle_rcon	src/n_proto.c	/^static void handle_rcon(netpeer_t *np) {$/;"	f	file:
handle_server_message	src/n_proto.c	/^static void handle_server_message(netpeer_t *np) {$/;"	f	file:
handle_setup	src/n_proto.c	/^static void handle_setup(netpeer_t *np) {$/;"	f	file:
handle_sync	src/n_proto.c	/^static void handle_sync(netpeer_t *np) {$/;"	f	file:
handle_vote_request	src/n_proto.c	/^static void handle_vote_request(netpeer_t *np) {$/;"	f	file:
has_exited	src/SDL/i_main.c	/^static int has_exited;$/;"	v	file:
haswolflevels	src/g_game.c	/^dboolean        haswolflevels = false;\/\/ jff 4\/18\/98 wolf levels present$/;"	v
hbar	src/gl_intern.h	/^    GLHealthBar *hbar;$/;"	m	union:GLDrawItem_s::__anon104
header	src/MUSIC/midifile.c	/^    midi_header_t header;$/;"	m	struct:midi_file_s	file:
header	src/r_demo.h	/^  wadinfo_t header;$/;"	m	struct:__anon293
headsecnode	src/p_map.c	/^msecnode_t *headsecnode = NULL;$/;"	v
headsupactive	src/hu_stuff.c	/^static dboolean headsupactive = false;$/;"	v	file:
health	src/d_player.h	/^  int                 health;$/;"	m	struct:player_s
health	src/p_mobj.h	/^    int                 health;$/;"	m	struct:mobj_s
health_bar	src/r_things.c	/^int health_bar;$/;"	v
health_bar_full_length	src/r_things.c	/^int health_bar_full_length;$/;"	v
health_bar_green	src/r_things.c	/^int health_bar_green;$/;"	v
health_bar_red	src/r_things.c	/^int health_bar_red;$/;"	v
health_bar_yellow	src/r_things.c	/^int health_bar_yellow;$/;"	v
health_green	src/st_stuff.c	/^int health_green;  \/\/ health amount above is blue, below is green$/;"	v
health_red	src/st_stuff.c	/^int health_red;    \/\/ health amount less than which status is red$/;"	v
health_yellow	src/st_stuff.c	/^int health_yellow; \/\/ health amount less than which status is yellow$/;"	v
heapframe	src/PCRELIB/pcre_exec.c	/^typedef struct heapframe {$/;"	s	file:
heapframe	src/PCRELIB/pcre_exec.c	/^} heapframe;$/;"	t	typeref:struct:heapframe	file:
height	src/TEXTSCREEN/txt_strut.h	/^    int height;$/;"	m	struct:txt_strut_s
height	src/c_main.c	/^  double height;$/;"	m	struct:console_s	file:
height	src/gl_hires.c	/^  GLsizei  height;$/;"	m	struct:__anon85	file:
height	src/gl_intern.h	/^  float width, height;$/;"	m	struct:detail_s
height	src/gl_intern.h	/^  int width,height;$/;"	m	struct:__anon89
height	src/gl_struct.h	/^  int height;$/;"	m	struct:shadow_params_s
height	src/hu_cons.c	/^  double height;$/;"	m	struct:console_widget_s	file:
height	src/hu_input.c	/^  int height;$/;"	m	struct:input_widget_s	file:
height	src/hu_msg.c	/^  int height;$/;"	m	struct:message_widget_s	file:
height	src/i_video.h	/^  int width, height, size;$/;"	m	struct:vid_8ingl_s
height	src/info.h	/^  int height;       \/* An often incorrect height, used only to see$/;"	m	struct:__anon138
height	src/p_mobj.h	/^    fixed_t             height;$/;"	m	struct:mobj_s
height	src/r_data.c	/^  short      height;$/;"	m	struct:__anon278	file:
height	src/r_data.h	/^  short width, height;$/;"	m	struct:__anon280
height	src/r_defs.h	/^  fixed_t height;$/;"	m	struct:visplane
height	src/r_defs.h	/^  int width,height;$/;"	m	struct:__anon289
height	src/r_patch.c	/^  short width, height;  \/\/ bounding box size$/;"	m	struct:__anon305	file:
height	src/r_patch.h	/^  int height;$/;"	m	struct:__anon311
height	src/v_video.h	/^   int width, height;$/;"	m	struct:__anon340
height	src/v_video.h	/^  int height;          \/\/ the height of the surface, used when mallocing$/;"	m	struct:__anon342
heightlist	src/gl_vertex.c	/^  float *heightlist;$/;"	m	struct:vertexsplit_info_s	file:
heightsec	src/r_defs.h	/^  int heightsec;    \/\/ other sector, or -1 if no other sector$/;"	m	struct:__anon283
heightsec	src/r_defs.h	/^  int heightsec;$/;"	m	struct:vissprite_s
help	src/PCRELIB/pcregrep.c	/^help(void)$/;"	f	file:
help_e	src/m_menu.c	/^} help_e;$/;"	v	typeref:enum:__anon151
help_end	src/m_menu.c	/^  help_end$/;"	e	enum:__anon151	file:
help_friends	src/doomstat.c	/^int help_friends, default_help_friends;$/;"	v
help_text	src/PCRELIB/pcregrep.c	/^  const char *help_text;$/;"	m	struct:option_item	file:
helpempty	src/m_menu.c	/^  helpempty,$/;"	e	enum:__anon151	file:
helpstrings	src/m_menu.c	/^setup_menu_t helpstrings[] =  \/\/ HELP screen strings$/;"	v
hi	src/MAC/SDLMain.h	/^    UInt32 hi;$/;"	m	struct:CPSProcessSerNum
hide_setup	src/m_menu.c	/^int hide_setup=1; \/\/ killough 5\/15\/98$/;"	v
high	src/p_spec.h	/^  fixed_t high;$/;"	m	struct:__anon266
hints_list	src/PCRELIB/pcregrep.c	/^static pcre_extra **hints_list;$/;"	v	file:
history_index	src/z_zone.c	/^static int history_index[NUM_HISTORY_TYPES];$/;"	v	file:
hitend	src/PCRELIB/pcre_internal.h	/^  BOOL   hitend;                \/* Hit the end of the subject at some point *\/$/;"	m	struct:match_data
hnd	src/w_mmap.c	/^  HANDLE hnd;$/;"	m	struct:__anon352	file:
hnd_map	src/w_mmap.c	/^  HANDLE hnd_map;$/;"	m	struct:__anon352	file:
horiz_align	src/TEXTSCREEN/txt_widget.h	/^void TXT_SetWidgetAlign(TXT_UNCAST_ARG(widget), txt_horiz_align_t horiz_align);$/;"	v
horiz_align	src/TEXTSCREEN/txt_window.h	/^    txt_horiz_align_t horiz_align;$/;"	m	struct:txt_window_s
hq_scale_2x	src/gl_struct.h	/^  hq_scale_2x,$/;"	e	enum:__anon116
hq_scale_3x	src/gl_struct.h	/^  hq_scale_3x,$/;"	e	enum:__anon116
hq_scale_4x	src/gl_struct.h	/^  hq_scale_4x,$/;"	e	enum:__anon116
hq_scale_max	src/gl_struct.h	/^  hq_scale_max$/;"	e	enum:__anon116
hq_scale_none	src/gl_struct.h	/^  hq_scale_none,$/;"	e	enum:__anon116
hu_color_s	src/hu_lib.h	/^typedef struct hu_color_s {$/;"	s
hu_color_t	src/hu_lib.h	/^} hu_color_t;$/;"	t	typeref:struct:hu_color_s
hu_font	src/hu_stuff.c	/^patchnum_t hu_font[HU_FONTSIZE];$/;"	v
hu_font2	src/hu_stuff.c	/^patchnum_t hu_font2[HU_FONTSIZE];$/;"	v
hu_font_hud	src/hu_stuff.c	/^patchnum_t hu_font_hud[HU_FONTSIZE];$/;"	v
hu_fontk	src/hu_stuff.c	/^patchnum_t hu_fontk[HU_FONTSIZE];\/\/jff 3\/7\/98 added for graphic key indicators$/;"	v
hu_itext_t	src/hu_lib.h	/^} hu_itext_t;$/;"	t	typeref:struct:__anon124
hu_msgbg	src/hu_stuff.c	/^patchnum_t hu_msgbg[9];          \/\/jff 2\/26\/98 add patches for message background$/;"	v
hu_mtext_t	src/hu_lib.h	/^} hu_mtext_t;$/;"	t	typeref:struct:__anon123
hu_stext_t	src/hu_lib.h	/^} hu_stext_t;$/;"	t	typeref:struct:__anon122
hu_textline	src/hu_stuff.c	/^  hu_textline_t *hu_textline;$/;"	m	struct:hud_widget_s	file:
hu_textline_t	src/hu_lib.h	/^} hu_textline_t;$/;"	t	typeref:struct:__anon121
hud_add	src/e6y.c	/^char hud_add[80];$/;"	v
hud_ammostr	src/hu_stuff.c	/^static char hud_ammostr[80];$/;"	v	file:
hud_armorstr	src/hu_stuff.c	/^static char hud_armorstr[80];$/;"	v	file:
hud_centermsg	src/e6y.c	/^char hud_centermsg[80];$/;"	v
hud_cfg_item_s	src/hu_stuff.c	/^typedef struct hud_cfg_item_s {$/;"	s	file:
hud_cfg_item_t	src/hu_stuff.c	/^} hud_cfg_item_t;$/;"	t	typeref:struct:hud_cfg_item_s	file:
hud_coordstrx	src/hu_stuff.c	/^static char hud_coordstrx[32];$/;"	v	file:
hud_coordstry	src/hu_stuff.c	/^static char hud_coordstry[32];$/;"	v	file:
hud_coordstrz	src/hu_stuff.c	/^static char hud_coordstrz[32];$/;"	v	file:
hud_current	src/hu_stuff.c	/^hud_widgets_list_t *hud_current;$/;"	v
hud_displayed	src/hu_stuff.c	/^int hud_displayed;    \/\/jff 2\/23\/98 turns heads-up display on\/off$/;"	v
hud_gkeysstr	src/hu_stuff.c	/^static char hud_gkeysstr[80]; \/\/jff 3\/7\/98 add support for graphic key display$/;"	v	file:
hud_healthstr	src/hu_stuff.c	/^static char hud_healthstr[80];$/;"	v	file:
hud_keysstr	src/hu_stuff.c	/^static char hud_keysstr[80];$/;"	v	file:
hud_list_bgon	src/hu_stuff.c	/^int hud_list_bgon;  \/\/ enable for solid window background for message list$/;"	v
hud_monsecstr	src/hu_stuff.c	/^static char hud_monsecstr[80];$/;"	v	file:
hud_msg_lines	src/hu_stuff.c	/^int hud_msg_lines;  \/\/ number of message lines in window$/;"	v
hud_name_widget	src/hu_stuff.c	/^static hud_widget_t hud_name_widget[] = {$/;"	v	file:
hud_num	src/hu_stuff.c	/^int hud_num;$/;"	v
hud_weapstr	src/hu_stuff.c	/^static char hud_weapstr[80];$/;"	v	file:
hud_widget_s	src/hu_stuff.c	/^typedef struct hud_widget_s {$/;"	s	file:
hud_widget_t	src/hu_stuff.c	/^} hud_widget_t;$/;"	t	typeref:struct:hud_widget_s	file:
hud_widgets_list_s	src/hu_stuff.c	/^typedef struct hud_widgets_list_s {$/;"	s	file:
hud_widgets_list_t	src/hu_stuff.c	/^} hud_widgets_list_t;$/;"	t	typeref:struct:hud_widgets_list_s	file:
hudadd_crosshair	src/e6y.c	/^int hudadd_crosshair;$/;"	v
hudadd_crosshair_color	src/e6y.c	/^int hudadd_crosshair_color;$/;"	v
hudadd_crosshair_health	src/e6y.c	/^int hudadd_crosshair_health;$/;"	v
hudadd_crosshair_lock_target	src/e6y.c	/^int hudadd_crosshair_lock_target;$/;"	v
hudadd_crosshair_scale	src/e6y.c	/^int hudadd_crosshair_scale;$/;"	v
hudadd_crosshair_target	src/e6y.c	/^int hudadd_crosshair_target;$/;"	v
hudadd_crosshair_target_color	src/e6y.c	/^int hudadd_crosshair_target_color;$/;"	v
hudadd_demoprogressbar	src/e6y.c	/^int hudadd_demoprogressbar;$/;"	v
hudadd_demotime	src/e6y.c	/^int hudadd_demotime;$/;"	v
hudadd_gamespeed	src/e6y.c	/^int hudadd_gamespeed;$/;"	v
hudadd_leveltime	src/e6y.c	/^int hudadd_leveltime;$/;"	v
hudadd_secretarea	src/e6y.c	/^int hudadd_secretarea;$/;"	v
hudadd_smarttotals	src/e6y.c	/^int hudadd_smarttotals;$/;"	v
hudcolor_chat	src/hu_stuff.c	/^int hudcolor_chat;  \/\/ color range of chat lines$/;"	v
hudcolor_list	src/hu_stuff.c	/^int hudcolor_list;  \/\/ list of messages color$/;"	v
hudcolor_mapstat_time	src/hu_stuff.c	/^int hudcolor_mapstat_time;$/;"	v
hudcolor_mapstat_title	src/hu_stuff.c	/^int hudcolor_mapstat_title;$/;"	v
hudcolor_mapstat_value	src/hu_stuff.c	/^int hudcolor_mapstat_value;$/;"	v
hudcolor_mesg	src/hu_stuff.c	/^int hudcolor_mesg;  \/\/ color range of scrolling messages$/;"	v
hudcolor_titl	src/hu_stuff.c	/^int hudcolor_titl;  \/\/ color range of automap level title$/;"	v
hudcolor_xyco	src/hu_stuff.c	/^int hudcolor_xyco;  \/\/ color range of new coords on automap$/;"	v
huds	src/hu_stuff.c	/^hud_widgets_list_t *huds;$/;"	v
huds_count	src/hu_stuff.c	/^int huds_count;$/;"	v
hudstr	src/hu_tracers.h	/^  char hudstr[80];$/;"	m	struct:traceslist_s
hurtme	src/m_menu.c	/^  hurtme,$/;"	e	enum:__anon153	file:
hyphenpending	src/PCRELIB/pcregrep.c	/^static BOOL hyphenpending = FALSE;$/;"	v	file:
i	src/TEXTSCREEN/txt_spinctrl.h	/^    union { float f; int i; } min, max, *value, step; $/;"	m	union:txt_spincontrol_s::__anon335
i	src/m_misc.h	/^    int i;$/;"	m	struct:default_s::__anon170
iLineID	src/r_defs.h	/^  int iLineID;           \/\/ proff 04\/05\/2000: needed for OpenGL$/;"	m	struct:line_s
iSectorID	src/r_defs.h	/^  int iSectorID; \/\/ proff 04\/05\/2000: needed for OpenGL and used in debugmode by the HUD to draw sectornum$/;"	m	struct:__anon283
icon_data	src/icon.c	/^static unsigned char icon_data[] = {$/;"	v	file:
icon_h	src/icon.c	/^static int icon_h = 32;$/;"	v	file:
icon_w	src/icon.c	/^static int icon_w = 32;$/;"	v	file:
id	src/SDL/i_sound.c	/^  int id;                       \/\/ SFX id of the playing sound effect.  Used to$/;"	m	struct:__anon313	file:
id	src/d_net.h	/^    long                id;$/;"	m	struct:__anon27
id	src/gl_sky.c	/^  int id;$/;"	m	struct:__anon112	file:
id	src/mus2mid.h	/^  byte id[4];$/;"	m	struct:__anon176
id	src/p_mobj.h	/^    uint32_t            id;$/;"	m	struct:mobj_s
id	src/r_defs.h	/^  uint32_t            id;$/;"	m	struct:__anon282
id	src/z_zone.c	/^  unsigned id;$/;"	m	struct:memblock	file:
id_hash	src/p_ident.c	/^static GHashTable *id_hash = NULL;$/;"	v	file:
iden_nums	src/p_mobj.h	/^    int iden_nums;		\/\/ hi word stores thing num, low word identifier num$/;"	m	struct:mobj_s
identification	src/w_wad.h	/^  char identification[4];                  \/\/ Should be "IWAD" or "PWAD".$/;"	m	struct:__anon353
idfa_armor	src/p_inter.c	/^int idfa_armor = 200;$/;"	v
idfa_armor_class	src/p_inter.c	/^int idfa_armor_class = 2;$/;"	v
idkfa_armor	src/p_inter.c	/^int idkfa_armor = 200;$/;"	v
idkfa_armor_class	src/p_inter.c	/^int idkfa_armor_class = 2;$/;"	v
idmusnum	src/s_sound.c	/^int idmusnum;$/;"	v
imageformats	src/gl_texture.c	/^int imageformats[5] = {0, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_RGB, GL_RGBA};$/;"	v
ims	src/PCRELIB/pcre_dfa_exec.c	/^  int ims;                        \/* ims flag bits *\/$/;"	m	struct:stateblock	file:
ims	src/PCRELIB/pcre_exec.c	3421;"	d	file:
ims	src/PCRELIB/pcre_exec.c	439;"	d	file:
in	src/d_player.h	/^  dboolean   in;     \/\/ whether the player is in game$/;"	m	struct:__anon60
in	src/md5.h	/^        UWORD32 in[16];$/;"	m	struct:MD5Context
in_stasis	src/p_spec.h	/^  in_stasis$/;"	e	enum:__anon251
include_compiled	src/PCRELIB/pcregrep.c	/^static pcre *include_compiled = NULL;$/;"	v	file:
include_pattern	src/PCRELIB/pcregrep.c	/^static char *include_pattern = NULL;$/;"	v	file:
includenotext	src/d_deh.c	/^static dboolean includenotext = false;$/;"	v	file:
incoming	src/n_peer.h	/^  netchan_t incoming;$/;"	m	struct:netcom_s
indetermined	src/doomdef.h	/^  indetermined  \/\/ Well, no IWAD found.$/;"	e	enum:__anon43
index	src/MUSIC/oplplayer.c	/^    int index;$/;"	m	struct:opl_voice_s	file:
index	src/gl_intern.h	/^  int index;   \/\/ subsector index$/;"	m	struct:__anon94
index	src/gl_intern.h	/^  int index;$/;"	m	struct:SkyBoxParams_s
index	src/gl_intern.h	/^  int index;$/;"	m	struct:__anon102
index	src/gl_intern.h	/^  int index;$/;"	m	struct:__anon89
index	src/hu_tracers.c	/^  int index;$/;"	m	struct:__anon125	file:
index	src/hu_tracers.h	/^  int index;$/;"	m	struct:__anon127
index	src/i_smp.h	/^  volatile int index;$/;"	m	struct:smp_item_s
index	src/n_net.h	/^  int      index;$/;"	m	struct:netticcmd_s
index	src/n_peer.c	/^  unsigned int index;$/;"	m	struct:tocentry_s	file:
index	src/n_peer.h	/^  int     index;$/;"	m	struct:command_queue_s
index	src/p_mobj.h	/^    int index;$/;"	m	struct:mobj_s
index	src/p_spec.h	/^  int index;$/;"	m	struct:__anon237
index	src/r_data.h	/^  int   next, index;     \/\/ killough 1\/31\/98: used in hashing algorithm$/;"	m	struct:__anon280
index	src/w_wad.h	/^  int index, next;$/;"	m	struct:__anon358
info	src/p_mobj.h	/^    mobjinfo_t*         info;   \/\/ &mobjinfo[mobj->type]$/;"	m	struct:mobj_s
infotableofs	src/w_wad.h	/^  int  infotableofs;$/;"	m	struct:__anon353
inhelpscreens	src/m_menu.c	/^dboolean inhelpscreens; \/\/ indicates we are in or just left a help screen$/;"	v
init	src/MUSIC/musicplayer.h	/^  int (*init)(int samplerate);$/;"	m	struct:__anon177
init_channel	src/n_peer.c	/^static void init_channel(netchan_t *nc) {$/;"	f	file:
init_channel	src/s_sound.c	/^static void init_channel(channel_t *c, mobj_t *mo, sfxinfo_t *sfx, int pu) {$/;"	f	file:
init_command_queue	src/n_peer.c	/^static void init_command_queue(command_queue_t *cq) {$/;"	f	file:
init_func	src/PCSOUND/pcsound.h	/^  pcsound_init_func init_func;$/;"	m	struct:pcsound_driver_s
init_index	src/hu_tracers.c	/^  int init_index;$/;"	m	struct:__anon125	file:
init_netcom	src/n_peer.c	/^static void init_netcom(netcom_t *nc) {$/;"	f	file:
init_netsync	src/n_peer.c	/^static void init_netsync(netsync_t *ns) {$/;"	f	file:
init_stage_reg_writes	src/MUSIC/opl.c	/^static int init_stage_reg_writes = 1;$/;"	v	file:
initial_bullets	src/p_inter.c	/^int initial_bullets = 50;$/;"	v
initial_health	src/p_inter.c	/^int initial_health = 100;$/;"	v
initialized	src/n_peer.h	/^  bool               initialized;$/;"	m	struct:netsync_s
inline	src/MUSIC/dbopl.c	54;"	d	file:
inline	src/TEXTSCREEN/txt_sdl.c	40;"	d	file:
inp	src/d_deh.c	/^  const byte *inp, *lump;$/;"	m	struct:__anon9	file:
input	src/c_main.c	/^  input_widget_t *input;$/;"	m	struct:console_s	file:
input	src/hu_chat.c	/^  input_widget_t *input;$/;"	m	struct:chat_widget_s	file:
input	src/hu_cons.c	/^  input_widget_t *input;$/;"	m	struct:console_widget_s	file:
input_	src/PCRELIB/pcre_scanner.h	/^  StringPiece   input_;         \/\/ Unprocessed input$/;"	m	class:pcrecpp::Scanner
input_box	src/TEXTSCREEN/examples/calculator.c	/^txt_label_t *input_box;$/;"	v
input_value	src/TEXTSCREEN/examples/calculator.c	/^int input_value = 0;$/;"	v
input_widget_s	src/hu_input.c	/^struct input_widget_s {$/;"	s	file:
input_widget_t	src/hu_input.h	/^typedef struct input_widget_s input_widget_t;$/;"	t	typeref:struct:input_widget_s
insert_text	src/hu_input.c	/^static void insert_text(input_widget_t *iw, const char *new_text) {$/;"	f	file:
installFrameworks	src/MAC/macsupport.rb	/^def installFrameworks(task)$/;"	f
installRule	src/MAC/macsupport.rb	/^def installRule(dir, file)$/;"	f
installTask	src/MAC/macsupport.rb	/^def installTask(taskName, dir, files)$/;"	f
installTaskRecursive	src/MAC/macsupport.rb	/^def installTaskRecursive(taskName, dest, src)$/;"	f	class:installTask
instrument	src/MUSIC/oplplayer.c	/^    const genmidi_instr_t *instrument;$/;"	m	struct:__anon197	file:
instrumentcount	src/mus2mid.h	/^  unsigned short instrumentcount;$/;"	m	struct:__anon176
int16_array	src/g_overflow.h	/^    dboolean int16_array;$/;"	m	struct:__anon119
int_64_t	src/doomtype.h	/^typedef __int64 int_64_t;$/;"	t
int_64_t	src/doomtype.h	/^typedef int64_t int_64_t;$/;"	t
int_64_t	src/doomtype.h	/^typedef signed long long int_64_t;$/;"	t
int_pitch	src/r_draw.h	/^  int   int_pitch;$/;"	m	struct:__anon299
int_pitch	src/v_video.h	/^  int int_pitch;       \/\/ tha actual width of one line, used when mallocing$/;"	m	struct:__anon342
int_tempbuf	src/r_draw.c	/^static unsigned int   *int_tempbuf;$/;"	v	file:
int_topleft	src/r_draw.h	/^  unsigned int   *int_topleft;$/;"	m	struct:__anon299
intercept_p	src/p_maputl.c	/^intercept_t *intercepts, *intercept_p;$/;"	v
intercept_t	src/p_maputl.h	/^} intercept_t;$/;"	t	typeref:struct:__anon222
intercepts	src/p_maputl.c	/^intercept_t *intercepts, *intercept_p;$/;"	v
intercepts_overrun	src/p_maputl.c	/^intercepts_overrun_t intercepts_overrun[] =$/;"	v
intercepts_overrun_t	src/g_overflow.h	/^} intercepts_overrun_t;$/;"	t	typeref:struct:__anon119
interlaced_scanning_requires_clearing	src/r_screenmultiply.c	/^int interlaced_scanning_requires_clearing;$/;"	v
internal_dfa_exec	src/PCRELIB/pcre_dfa_exec.c	/^internal_dfa_exec($/;"	f	file:
interpolation_maxobjects	src/r_fps.c	/^int interpolation_maxobjects;$/;"	v
interpolation_method	src/SDL/i_system.c	/^int interpolation_method;$/;"	v
interpolation_t	src/r_fps.c	/^} interpolation_t;$/;"	t	typeref:struct:__anon301	file:
interpolation_type_e	src/r_fps.c	/^} interpolation_type_e;$/;"	t	typeref:enum:__anon300	file:
interpolations_max	src/r_fps.c	/^int interpolations_max = 0;$/;"	v
intflags	src/p_mobj.h	/^    int                 intflags;  \/\/ killough 9\/15\/98: internal flags$/;"	m	struct:mobj_s
intnum	src/d_net.h	/^    short               intnum;$/;"	m	struct:__anon27
intptr_t	src/MUSIC/dbopl.h	/^    typedef INT_PTR   intptr_t;$/;"	t
inum	src/st_lib.h	/^  int*    inum;$/;"	m	struct:__anon322
inv_yaw	src/gl_main.c	/^float inv_yaw  = 0.0f;$/;"	v
invert	src/PCRELIB/pcregrep.c	/^static BOOL invert = FALSE;$/;"	v	file:
inverted	src/TEXTSCREEN/txt_checkbox.h	/^    int inverted;$/;"	m	struct:txt_checkbox_s
invul_method	src/gl_main.c	/^unsigned int invul_method;$/;"	v
ipx_receive	src/d_ipxgate.c	/^void ipx_receive(int s) {$/;"	f
ipx_socket	src/d_ipxgate.c	/^int ipx_socket(void) {$/;"	f
ipxcounter	src/d_ipxgate.c	/^int ipxcounter;$/;"	v
ipxpacket_t	src/d_ipxgate.c	/^} ipxpacket_t;$/;"	t	typeref:struct:__anon18	file:
ipxs	src/d_ipxgate.c	/^int ipxs, udps;$/;"	v
iquehead	src/p_mobj.c	/^int        iquehead;$/;"	v
iquetail	src/p_mobj.c	/^int        iquetail;$/;"	v
isExtensionSupported	src/gl_opengl.c	32;"	d	file:
isExtensionSupported	src/gl_opengl.h	54;"	d
isExtraDDisplay	src/d_client.c	/^static dboolean isExtraDDisplay = false;$/;"	v	file:
is_anchored	src/PCRELIB/pcre_compile.c	/^is_anchored(register const uschar *code, int *options, unsigned int bracket_map,$/;"	f	file:
is_bigendian	src/cmp.c	121;"	d	file:
is_counted_repeat	src/PCRELIB/pcre_compile.c	/^is_counted_repeat(const uschar *p)$/;"	f	file:
is_pickup	src/s_sound.c	/^  int is_pickup;       \/\/ killough 4\/25\/98: whether sound is a player's weapon$/;"	m	struct:__anon319	file:
is_startline	src/PCRELIB/pcre_compile.c	/^is_startline(const uschar *code, unsigned int bracket_map,$/;"	f	file:
is_stdout_tty	src/PCRELIB/pcregrep.c	/^is_stdout_tty(void)$/;"	f	file:
isaline	src/p_maputl.h	/^  dboolean     isaline;$/;"	m	struct:__anon222
iscale	src/r_draw.h	/^  fixed_t             iscale;$/;"	m	struct:draw_column_vars_s
isdirectory	src/PCRELIB/pcregrep.c	/^int isdirectory(char *filename) { return 0; }$/;"	f
isdirectory	src/PCRELIB/pcregrep.c	/^isdirectory(char *filename)$/;"	f	file:
isdirectory	src/PCRELIB/pcregrep.c	/^isdirectory(char *filename)$/;"	f
iselem	src/z_bmalloc.c	/^inline static PUREFUNC int iselem(const bmalpool_t *pool, size_t size, const void* p) {$/;"	f	file:
isregfile	src/PCRELIB/pcregrep.c	/^int isregfile(char *filename) { return 1; }$/;"	f
isregfile	src/PCRELIB/pcregrep.c	/^int isregfile(char *filename)$/;"	f
isregfile	src/PCRELIB/pcregrep.c	/^isregfile(char *filename)$/;"	f	file:
isspace	src/SDL/SDL_win32_main.c	99;"	d	file:
istexture	src/p_spec.c	/^  signed char istexture; \/\/jff 3\/23\/98 make char for comparison \/\/ cph - make signed$/;"	m	struct:__anon235	file:
istexture	src/p_spec.h	/^    dboolean     istexture;$/;"	m	struct:__anon236
it	src/n_peer.h	/^  netpeer_iter_t *it;$/;"	m	struct:netpeeriternode_s
it_bluecard	src/doomdef.h	/^  it_bluecard,$/;"	e	enum:__anon48
it_blueskull	src/doomdef.h	/^  it_blueskull,$/;"	e	enum:__anon48
it_redcard	src/doomdef.h	/^  it_redcard,$/;"	e	enum:__anon48
it_redskull	src/doomdef.h	/^  it_redskull,$/;"	e	enum:__anon48
it_yellowcard	src/doomdef.h	/^  it_yellowcard,$/;"	e	enum:__anon48
it_yellowskull	src/doomdef.h	/^  it_yellowskull,$/;"	e	enum:__anon48
item	src/TEXTSCREEN/txt_dropdown.c	/^    int item;$/;"	m	struct:__anon328	file:
item	src/e6y.c	/^  char item[200];$/;"	m	struct:tmpdata_s	file:
item	src/e6y.h	/^  int item[MAXPLAYERS];$/;"	m	struct:timetable_s
item	src/gl_intern.h	/^    void *item;$/;"	m	union:GLDrawItem_s::__anon104
item	src/gl_intern.h	/^  } item;$/;"	m	struct:GLDrawItem_s	typeref:union:GLDrawItem_s::__anon104
item	src/i_smp.h	/^    void *item;$/;"	m	union:smp_item_s::__anon140
itemOn	src/m_menu.c	/^short itemOn;           \/\/ menu item skull is on (for Big Font menus)$/;"	v
itemcount	src/d_player.h	/^  int                 itemcount;$/;"	m	struct:player_s
itemrespawnque	src/p_mobj.c	/^static mapthing_t itemrespawnque[ITEMQUESIZE];$/;"	v	file:
itemrespawntime	src/p_mobj.c	/^static int        itemrespawntime[ITEMQUESIZE];$/;"	v	file:
items	src/gl_intern.h	/^  GLDrawItem *items[GLDIT_TYPES];$/;"	m	struct:__anon105
items	src/hu_stuff.c	/^  hud_widget_t *items;$/;"	m	struct:hud_widgets_list_s	file:
items	src/hu_tracers.h	/^  traceitem_t items[MAXTRACEITEMS];$/;"	m	struct:traceslist_s
items	src/r_things.c	/^  drawseg_xrange_item_t *items;$/;"	m	struct:drawsegs_xrange_s	file:
items	src/s_advsound.h	/^  int items[MAX_MUS_ENTRIES];$/;"	m	struct:musinfo_s
items	src/wi_stuff.c	/^static const char items[] = {"WIOSTI"};$/;"	v	file:
itemsizes	src/gl_drawinfo.c	/^static int itemsizes[GLDIT_TYPES] = {$/;"	v	file:
iter	src/MUSIC/oplplayer.c	/^    midi_track_iter_t *iter;$/;"	m	struct:__anon198	file:
iwad_base	src/d_main.c	/^static char *iwad_base = NULL;$/;"	v	file:
iwad_path	src/d_main.c	/^static char *iwad_path = NULL;$/;"	v	file:
jfriedl_XR	src/PCRELIB/pcregrep.c	/^static unsigned int jfriedl_XR = 0; \/* repeat regex attempt this many times *\/$/;"	v	file:
jfriedl_XT	src/PCRELIB/pcregrep.c	/^static unsigned int jfriedl_XT = 0; \/* replicate text this many times *\/$/;"	v	file:
jfriedl_postfix	src/PCRELIB/pcregrep.c	/^static const char *jfriedl_postfix = "";$/;"	v	file:
jfriedl_prefix	src/PCRELIB/pcregrep.c	/^static const char *jfriedl_prefix = "";$/;"	v	file:
joyarray	src/g_game.c	/^static dboolean joyarray[9];$/;"	v	file:
joybfire	src/g_keys.c	/^int joybfire;$/;"	v
joybspeed	src/g_keys.c	/^int joybspeed;$/;"	v
joybstrafe	src/g_keys.c	/^int joybstrafe;$/;"	v
joybstrafeleft	src/g_keys.c	/^int joybstrafeleft;$/;"	v
joybstraferight	src/g_keys.c	/^int joybstraferight;$/;"	v
joybuse	src/g_keys.c	/^int joybuse;$/;"	v
joybuttons	src/g_game.c	/^static dboolean *joybuttons = &joyarray[1];    \/\/ allow [-1]$/;"	v	file:
joydown	src/SDL/i_joy.c	/^int joydown;$/;"	v
joyleft	src/SDL/i_joy.c	/^int joyleft;$/;"	v
joyright	src/SDL/i_joy.c	/^int joyright;$/;"	v
joystick	src/SDL/i_joy.c	/^static SDL_Joystick *joystick;$/;"	v	file:
joyup	src/SDL/i_joy.c	/^int joyup;$/;"	v
joyxmove	src/g_game.c	/^static int   joyxmove;$/;"	v	file:
joyymove	src/g_game.c	/^static int   joyymove;$/;"	v	file:
jumpTics	src/d_player.h	/^  fixed_t jumpTics;      \/\/ delay the next jump for a moment$/;"	m	struct:player_s
kMaxArgs	src/PCRELIB/pcrecpp.cc	/^static const int kMaxArgs = 16;$/;"	m	namespace:pcrecpp	file:
kMaxNumberLength	src/PCRELIB/pcrecpp.cc	/^static const int kMaxNumberLength = 32;$/;"	m	namespace:pcrecpp	file:
kVecSize	src/PCRELIB/pcrecpp.cc	/^static const int kVecSize = (1 + kMaxArgs) * 3;  \/\/ results + PCRE workspace$/;"	m	namespace:pcrecpp	file:
key	src/MUSIC/oplplayer.c	/^    unsigned int key;$/;"	m	struct:opl_voice_s	file:
key	src/TEXTSCREEN/txt_widget.h	/^int TXT_WidgetKeyPress(TXT_UNCAST_ARG(widget), int key);$/;"	v
key	src/TEXTSCREEN/txt_widget.h	/^typedef int (*TxtWidgetKeyPress)(TXT_UNCAST_ARG(widget), int key);$/;"	t
key	src/TEXTSCREEN/txt_window_action.h	/^    int key;$/;"	m	struct:txt_window_action_s
key	src/d_deh.c	/^  const char *key;       \/\/ a mnemonic block code name \/\/ CPhipps - const*$/;"	m	struct:__anon11	file:
keyOn	src/MUSIC/dbopl.h	/^  Bit8u keyOn;        \/\/Bitmask of different values that can generate keyon$/;"	m	struct:_Operator
key_autorun	src/g_keys.c	/^int key_autorun;                                                \/\/    V$/;"	v
key_backspace	src/g_keys.c	/^int key_backspace;$/;"	v
key_chat	src/g_keys.c	/^int key_chat;$/;"	v
key_demo_endlevel	src/g_keys.c	/^int key_demo_endlevel;$/;"	v
key_demo_jointogame	src/g_keys.c	/^int key_demo_jointogame;$/;"	v
key_demo_skip	src/g_keys.c	/^int key_demo_skip;$/;"	v
key_down	src/g_keys.c	/^int key_down;$/;"	v
key_endgame	src/g_keys.c	/^int key_endgame;$/;"	v
key_enter	src/g_keys.c	/^int key_enter;$/;"	v
key_escape	src/g_keys.c	/^int key_escape;                                         \/\/ phares 4\/13\/98$/;"	v
key_fire	src/g_keys.c	/^int key_fire;$/;"	v
key_flydown	src/g_keys.c	/^int key_flydown;$/;"	v
key_flyup	src/g_keys.c	/^int key_flyup;$/;"	v
key_gamma	src/g_keys.c	/^int key_gamma;$/;"	v
key_help	src/g_keys.c	/^int key_help;                                           \/\/ phares 4\/13\/98$/;"	v
key_hud	src/g_keys.c	/^int key_hud;$/;"	v
key_left	src/g_keys.c	/^int key_left;$/;"	v
key_level_restart	src/g_keys.c	/^int key_level_restart;$/;"	v
key_listener	src/TEXTSCREEN/txt_window.h	/^    TxtWindowKeyPress key_listener;$/;"	m	struct:txt_window_s
key_listener_data	src/TEXTSCREEN/txt_window.h	/^    void *key_listener_data;$/;"	m	struct:txt_window_s
key_loadgame	src/g_keys.c	/^int key_loadgame;                                               \/\/    |$/;"	v
key_map	src/g_keys.c	/^int key_map;$/;"	v
key_map_clear	src/g_keys.c	/^int key_map_clear;$/;"	v
key_map_down	src/g_keys.c	/^int key_map_down;$/;"	v
key_map_follow	src/g_keys.c	/^int key_map_follow;$/;"	v
key_map_gobig	src/g_keys.c	/^int key_map_gobig;$/;"	v
key_map_grid	src/g_keys.c	/^int key_map_grid;$/;"	v
key_map_left	src/g_keys.c	/^int key_map_left;$/;"	v
key_map_mark	src/g_keys.c	/^int key_map_mark;$/;"	v
key_map_overlay	src/g_keys.c	/^int key_map_overlay; \/\/ cph - map overlay$/;"	v
key_map_right	src/g_keys.c	/^int key_map_right;$/;"	v
key_map_rotate	src/g_keys.c	/^int key_map_rotate;  \/\/ cph - map rotation$/;"	v
key_map_textured	src/g_keys.c	/^int key_map_textured;  \/\/ e6y - textured automap$/;"	v
key_map_up	src/g_keys.c	/^int key_map_up;$/;"	v
key_map_zoomin	src/g_keys.c	/^int key_map_zoomin;$/;"	v
key_map_zoomout	src/g_keys.c	/^int key_map_zoomout;$/;"	v
key_mapping	src/TEXTSCREEN/txt_sdl.c	/^static int key_mapping = 1;$/;"	v	file:
key_menu_backspace	src/g_keys.c	/^int key_menu_backspace;                                  \/\/     ^$/;"	v
key_menu_down	src/g_keys.c	/^int key_menu_down;$/;"	v
key_menu_enter	src/g_keys.c	/^int key_menu_enter;                                      \/\/ phares 3\/7\/98$/;"	v
key_menu_escape	src/g_keys.c	/^int key_menu_escape;                                     \/\/     |$/;"	v
key_menu_left	src/g_keys.c	/^int key_menu_left;                                       \/\/     |$/;"	v
key_menu_right	src/g_keys.c	/^int key_menu_right;                                      \/\/ phares 3\/7\/98$/;"	v
key_menu_toggle	src/g_keys.c	/^int key_menu_toggle;$/;"	v
key_menu_up	src/g_keys.c	/^int key_menu_up;                                         \/\/     V$/;"	v
key_messages	src/g_keys.c	/^int key_messages;$/;"	v
key_mlook	src/g_keys.c	/^int key_mlook;$/;"	v
key_nextlevel	src/g_keys.c	/^int key_nextlevel;$/;"	v
key_nextweapon	src/g_keys.c	/^int key_nextweapon;$/;"	v
key_pause	src/g_keys.c	/^int key_pause;$/;"	v
key_press	src/TEXTSCREEN/txt_widget.h	/^    TxtWidgetKeyPress key_press;$/;"	m	struct:txt_widget_class_s
key_prevweapon	src/g_keys.c	/^int key_prevweapon;$/;"	v
key_quickload	src/g_keys.c	/^int key_quickload;$/;"	v
key_quicksave	src/g_keys.c	/^int key_quicksave;$/;"	v
key_quit	src/g_keys.c	/^int key_quit;$/;"	v
key_reverse	src/g_keys.c	/^int key_reverse;$/;"	v
key_right	src/g_keys.c	/^int key_right;$/;"	v
key_savegame	src/g_keys.c	/^int key_savegame;                                               \/\/ phares$/;"	v
key_screenshot	src/g_keys.c	/^int key_screenshot;             \/\/ killough 2\/22\/98: screenshot key$/;"	v
key_setup	src/g_keys.c	/^int key_setup;$/;"	v
key_showalive	src/g_keys.c	/^int key_showalive;$/;"	v
key_soundvolume	src/g_keys.c	/^int key_soundvolume;$/;"	v
key_speed	src/g_keys.c	/^int key_speed;$/;"	v
key_speed_default	src/g_keys.c	/^int key_speed_default;$/;"	v
key_speed_down	src/g_keys.c	/^int key_speed_down;$/;"	v
key_speed_up	src/g_keys.c	/^int key_speed_up;$/;"	v
key_spy	src/g_keys.c	/^int key_spy;$/;"	v
key_strafe	src/g_keys.c	/^int key_strafe;$/;"	v
key_strafeleft	src/g_keys.c	/^int key_strafeleft;$/;"	v
key_straferight	src/g_keys.c	/^int key_straferight;$/;"	v
key_up	src/g_keys.c	/^int key_up;$/;"	v
key_use	src/g_keys.c	/^int key_use;$/;"	v
key_walkcamera	src/g_keys.c	/^int key_walkcamera;$/;"	v
key_weapon1	src/g_keys.c	/^int key_weapon1;$/;"	v
key_weapon2	src/g_keys.c	/^int key_weapon2;$/;"	v
key_weapon3	src/g_keys.c	/^int key_weapon3;$/;"	v
key_weapon4	src/g_keys.c	/^int key_weapon4;$/;"	v
key_weapon5	src/g_keys.c	/^int key_weapon5;$/;"	v
key_weapon6	src/g_keys.c	/^int key_weapon6;$/;"	v
key_weapon7	src/g_keys.c	/^int key_weapon7;                                                \/\/    ^$/;"	v
key_weapon8	src/g_keys.c	/^int key_weapon8;                                                \/\/    |$/;"	v
key_weapon9	src/g_keys.c	/^int key_weapon9;                                                \/\/ phares$/;"	v
key_weapontoggle	src/g_keys.c	/^int key_weapontoggle;$/;"	v
key_zoomin	src/g_keys.c	/^int key_zoomin;$/;"	v
key_zoomout	src/g_keys.c	/^int key_zoomout;$/;"	v
keybindings	src/d_main.c	/^keybindings_t keybindings;$/;"	v
keybindings_s	src/d_main.h	/^typedef struct keybindings_s {$/;"	s
keybindings_t	src/d_main.h	/^} keybindings_t;$/;"	t	typeref:struct:keybindings_s
keyboxes	src/st_stuff.c	/^static int      keyboxes[3];$/;"	v	file:
keykind_e	src/p_spec.h	/^} keykind_e;$/;"	t	typeref:enum:__anon248
keys	src/st_stuff.c	/^static patchnum_t keys[NUMCARDS+3];$/;"	v	file:
keys_settings	src/m_menu.c	/^setup_menu_t* keys_settings[] =$/;"	v
keys_settings1	src/m_menu.c	/^setup_menu_t keys_settings1[] =  \/\/ Key Binding screen strings$/;"	v
keys_settings1	src/m_menu.c	/^setup_menu_t keys_settings1[];$/;"	v
keys_settings2	src/m_menu.c	/^setup_menu_t keys_settings2[] =  \/\/ Key Binding screen strings$/;"	v
keys_settings2	src/m_menu.c	/^setup_menu_t keys_settings2[];$/;"	v
keys_settings3	src/m_menu.c	/^setup_menu_t keys_settings3[] =  \/\/ Key Binding screen strings$/;"	v
keys_settings3	src/m_menu.c	/^setup_menu_t keys_settings3[];$/;"	v
keys_settings4	src/m_menu.c	/^setup_menu_t keys_settings4[] =  \/\/ Key Binding screen strings$/;"	v
keys_settings4	src/m_menu.c	/^setup_menu_t keys_settings4[];$/;"	v
keys_settings5	src/m_menu.c	/^setup_menu_t keys_settings5[] =  \/\/ Key Binding screen strings$/;"	v
keys_settings5	src/m_menu.c	/^setup_menu_t keys_settings5[];$/;"	v
keys_settings6	src/m_menu.c	/^setup_menu_t keys_settings6[] =  \/\/ Key Binding screen strings$/;"	v
keys_settings6	src/m_menu.c	/^setup_menu_t keys_settings6[];$/;"	v
keys_settings7	src/m_menu.c	/^setup_menu_t keys_settings7[] =$/;"	v
keys_settings7	src/m_menu.c	/^setup_menu_t keys_settings7[];$/;"	v
kill	src/e6y.c	/^  char kill[200];$/;"	m	struct:tmpdata_s	file:
kill	src/e6y.h	/^  int kill[MAXPLAYERS];$/;"	m	struct:timetable_s
killcount	src/d_player.h	/^  int                 killcount;$/;"	m	struct:player_s
killers	src/wi_stuff.c	/^static const char killers[] = {"WIKILRS"};$/;"	v	file:
kills	src/wi_stuff.c	/^static const char kills[] = {"WIOSTK"};$/;"	v	file:
killthings	src/m_menu.c	/^  killthings,$/;"	e	enum:__anon153	file:
ksr	src/MUSIC/dbopl.h	/^  Bit8u ksr;$/;"	m	struct:_Operator
l	src/hu_lib.h	/^  char  l[HU_MAXLINELENGTH*MAXLINES+1]; \/\/ line of text$/;"	m	struct:__anon121
l	src/hu_lib.h	/^  hu_textline_t l;    \/\/ text line to input on$/;"	m	struct:__anon124
l	src/hu_lib.h	/^  hu_textline_t l[HU_MAXLINES]; \/\/ text lines to draw$/;"	m	struct:__anon122
l	src/hu_lib.h	/^  hu_textline_t l[HU_MAXMESSAGES]; \/\/ text lines to draw$/;"	m	struct:__anon123
lPitch	src/gl_hires.c	/^    long          lPitch;       \/\/ distance to start of next line (return value only)$/;"	m	union:_DDRAW_H_DDSURFACEDESC2::__anon80	file:
la_damage	src/p_map.c	/^int       la_damage;$/;"	v
label	src/TEXTSCREEN/txt_button.h	/^    char *label;$/;"	m	struct:txt_button_s
label	src/TEXTSCREEN/txt_checkbox.h	/^    char *label;$/;"	m	struct:txt_checkbox_s
label	src/TEXTSCREEN/txt_label.h	/^    char *label;$/;"	m	struct:txt_label_s
label	src/TEXTSCREEN/txt_radiobutton.h	/^    char *label;$/;"	m	struct:txt_radiobutton_s
label	src/TEXTSCREEN/txt_separator.h	/^    char *label;$/;"	m	struct:txt_separator_s
label	src/TEXTSCREEN/txt_window_action.h	/^    char *label;$/;"	m	struct:txt_window_action_s
label	src/am_map.h	/^ char label[16];$/;"	m	struct:__anon3
language	src/doomstat.c	/^Language_t   language = english;$/;"	v
last	src/d_player.h	/^  int         last;$/;"	m	struct:__anon61
lastOn	src/m_menu.h	/^  short           lastOn;       \/\/ last item user was on in menu$/;"	m	struct:menu_s
last_detail_texid	src/gl_detail.c	/^static GLuint last_detail_texid = -1;$/;"	v	file:
last_glTexID	src/gl_texture.c	/^GLuint* last_glTexID = NULL;$/;"	v
last_height	src/p_spec.h	/^  fixed_t last_height; \/\/ Last known height of control sector$/;"	m	struct:__anon271
last_retraction	src/hu_msg.c	/^  uint64_t last_retraction;$/;"	m	struct:message_widget_s	file:
lastanim	src/p_spec.c	/^static anim_t*  lastanim;$/;"	v	file:
lastcolormaplump	src/r_data.c	/^int firstcolormaplump, lastcolormaplump;      \/\/ killough 4\/17\/98$/;"	v
lastdrawn	src/wi_stuff.c	/^  int   lastdrawn;$/;"	m	struct:__anon348	file:
lastenemy	src/p_mobj.h	/^    struct mobj_s*      lastenemy;$/;"	m	struct:mobj_s	typeref:struct:mobj_s::mobj_s
lastflat	src/r_data.c	/^int       firstflat, lastflat, numflats;$/;"	v
lastlook	src/p_mobj.h	/^    short               lastlook;$/;"	m	struct:mobj_s
lastmapthing	src/s_advsound.h	/^  mobj_t *lastmapthing;$/;"	m	struct:musinfo_s
laston	src/hu_lib.h	/^  dboolean   laston;             \/\/ last value of *->on.$/;"	m	struct:__anon122
laston	src/hu_lib.h	/^  dboolean   laston;             \/\/ last value of *->on.$/;"	m	struct:__anon123
laston	src/hu_lib.h	/^  dboolean   laston;   \/\/ last value of *->on;$/;"	m	struct:__anon124
lastopening	src/r_plane.c	/^int *openings,*lastopening; \/\/ dropoff overflow$/;"	v
lastspritelump	src/r_data.c	/^int       firstspritelump, lastspritelump, numspritelumps;$/;"	v
lasttimereply	src/POSIX/i_system.c	/^static unsigned long lasttimereply;$/;"	v	file:
lastupdate	src/gl_hires.c	/^static unsigned int lastupdate = 0;$/;"	v	file:
latest_game_state	src/n_state.c	/^static game_state_t *latest_game_state = NULL;$/;"	v	file:
launcher	src/e6y_launcher.c	/^launcher_t launcher;$/;"	v
launcher_enable	src/e6y_launcher.c	/^launcher_enable_t launcher_enable;$/;"	v
launcher_enable_always	src/e6y_launcher.h	/^  launcher_enable_always,$/;"	e	enum:__anon69
launcher_enable_count	src/e6y_launcher.h	/^  launcher_enable_count$/;"	e	enum:__anon69
launcher_enable_never	src/e6y_launcher.h	/^  launcher_enable_never,$/;"	e	enum:__anon69
launcher_enable_smart	src/e6y_launcher.h	/^  launcher_enable_smart,$/;"	e	enum:__anon69
launcher_enable_states	src/e6y_launcher.c	/^const char *launcher_enable_states[launcher_enable_count] = {"never", "smart", "always"};$/;"	v
launcher_enable_t	src/e6y_launcher.h	/^} launcher_enable_t;$/;"	t	typeref:enum:__anon69
launcher_history	src/e6y_launcher.c	/^char *launcher_history[LAUNCHER_HISTORY_SIZE];$/;"	v
launcher_params	src/e6y_launcher.c	/^unsigned int launcher_params;$/;"	v
launcher_t	src/e6y_launcher.c	/^} launcher_t;$/;"	t	typeref:struct:__anon68	file:
launchercachefile	src/e6y_launcher.c	/^static char launchercachefile[PATH_MAX];$/;"	v	file:
layout	src/TEXTSCREEN/txt_widget.h	/^    TxtWidgetLayoutFunc layout;$/;"	m	struct:txt_widget_class_s
layout	src/hu_input.c	/^  PangoLayout *layout;$/;"	m	struct:input_widget_s	file:
layout	src/hu_msg.c	/^  PangoLayout *layout;$/;"	m	struct:message_widget_s	file:
layout_context	src/hu_input.c	/^  PangoContext *layout_context;$/;"	m	struct:input_widget_s	file:
layout_context	src/hu_msg.c	/^  PangoContext *layout_context;$/;"	m	struct:message_widget_s	file:
layout_height	src/hu_input.c	/^  int layout_height;$/;"	m	struct:input_widget_s	file:
layout_height	src/hu_msg.c	/^  int layout_height;$/;"	m	struct:message_widget_s	file:
layout_width	src/hu_input.c	/^  int layout_width;$/;"	m	struct:input_widget_s	file:
layout_width	src/hu_msg.c	/^  int layout_width;$/;"	m	struct:message_widget_s	file:
lcc	src/PCRELIB/pcre_internal.h	/^  const uschar *lcc;            \/* Points to lower casing table *\/$/;"	m	struct:compile_data
lcc	src/PCRELIB/pcre_internal.h	/^  const uschar *lcc;            \/* Points to lower casing table *\/$/;"	m	struct:match_data
lcc_offset	src/PCRELIB/pcre_internal.h	923;"	d
leave_weapons	src/doomstat.c	/^int leave_weapons;         \/\/ leave picked-up weapons behind?$/;"	v
leds_always_off	src/SDL/i_video.c	/^int             leds_always_off = 0; \/\/ Expected by m_misc, not relevant$/;"	v
leftoffset	src/gl_intern.h	/^  int leftoffset,topoffset;$/;"	m	struct:__anon89
leftoffset	src/r_defs.h	/^  int leftoffset,topoffset;$/;"	m	struct:__anon289
leftoffset	src/r_patch.c	/^  short leftoffset;     \/\/ pixels to the left of origin$/;"	m	struct:__anon305	file:
leftoffset	src/r_patch.h	/^  int leftoffset;$/;"	m	struct:__anon311
leftvol	src/SDL/i_sound.c	/^  int leftvol;                  \/\/ left channel volume (0-127)$/;"	m	struct:__anon313	file:
len	src/MUSIC/midifile.h	/^    size_t len;$/;"	m	struct:__anon184
len	src/d_net.h	/^  size_t len;$/;"	m	struct:__anon26
len	src/g_overflow.h	/^    int len;$/;"	m	struct:__anon119
len	src/hu_lib.h	/^  int   len;                            \/\/ current line length$/;"	m	struct:__anon121
length	src/MUSIC/midifile.h	/^    unsigned int length;$/;"	m	struct:__anon188
length	src/MUSIC/midifile.h	/^    unsigned int length;$/;"	m	struct:__anon189
length	src/PCRELIB/pcre_exec.c	3443;"	d	file:
length	src/PCRELIB/pcre_exec.c	478;"	d	file:
length	src/r_patch.c	/^  byte length;   \/\/ length data bytes follows$/;"	m	struct:__anon304	file:
length	src/r_patch.h	/^  int length;$/;"	m	struct:__anon309
level	src/MUSIC/oplplayer.c	/^    byte level;$/;"	m	struct:__anon194	file:
level	src/protocol.h	/^  byte players, yourplayer, skill, episode, level, deathmatch, complevel, ticdup, extratic;$/;"	m	struct:setup_packet_s
levelFragLimit	src/p_spec.c	/^dboolean levelFragLimit;      \/\/ Ty 03\/18\/98 Added -frags support$/;"	v
levelFragLimit	src/p_spec.h	/^dboolean levelFragLimit;      \/\/ Ty 03\/18\/98 Added -frags support$/;"	v
levelFragLimitCount	src/p_spec.c	/^int      levelFragLimitCount; \/\/ Ty 03\/18\/98 Added -frags support$/;"	v
levelFragLimitCount	src/p_spec.h	/^int      levelFragLimitCount; \/\/ Ty 03\/18\/98 Added -frags support$/;"	v
levelTimeCount	src/p_spec.c	/^int      levelTimeCount;$/;"	v
levelTimeCount	src/p_spec.h	/^int      levelTimeCount;$/;"	v
levelTimer	src/p_spec.c	/^dboolean levelTimer;$/;"	v
levelTimer	src/p_spec.h	/^dboolean levelTimer;$/;"	v
levelinfo	src/gl_preprocess.c	/^static FILE *levelinfo;$/;"	v	file:
leveljuststarted	src/am_map.c	/^static int leveljuststarted = 1;       \/\/ kluge until AM_LevelInit() is called$/;"	v	file:
levels_max	src/e6y.c	/^int levels_max = 0;$/;"	v
levelstarttic	src/e6y.c	/^int levelstarttic;$/;"	v
leveltime	src/p_tick.c	/^int leveltime;$/;"	v
lfoAdd	src/MUSIC/dbopl.h	/^  Bit32u lfoAdd;$/;"	m	struct:_Chip
lfoCounter	src/MUSIC/dbopl.h	/^  Bit32u lfoCounter;$/;"	m	struct:_Chip
lfstrip	src/d_deh.c	/^void lfstrip(char *s)  \/\/ strip the \\r and\/or \\n off of a line$/;"	f
li_namespace	src/w_wad.h	/^  li_namespace_e li_namespace; \/\/ haleyjd 05\/21\/02: renamed from "namespace"$/;"	m	struct:__anon358
li_namespace_e	src/w_wad.h	/^} li_namespace_e; \/\/ haleyjd 05\/21\/02: renamed from "namespace"$/;"	t	typeref:enum:__anon357
lifttarget_e	src/p_spec.h	/^} lifttarget_e;$/;"	t	typeref:enum:__anon246
light	src/gl_intern.h	/^  float light; \/\/ the lightlevel of the flat$/;"	m	struct:__anon93
light	src/gl_intern.h	/^  float light;$/;"	m	struct:__anon100
light	src/gl_intern.h	/^  float light;$/;"	m	struct:__anon102
light	src/gl_intern.h	/^  float light;$/;"	m	struct:__anon91
lightflash_t	src/p_spec.h	/^} lightflash_t;$/;"	t	typeref:struct:__anon263
lighting_special	src/p_spec.h	/^  lighting_special,$/;"	e	enum:__anon249
lightingdata	src/r_defs.h	/^  void *lightingdata; \/\/ independent of one another$/;"	m	struct:__anon283
lightlevel	src/doomdata.h	/^  short lightlevel;$/;"	m	struct:__anon32
lightlevel	src/r_defs.h	/^  int picnum, lightlevel, minx, maxx;$/;"	m	struct:visplane
lightlevel	src/r_defs.h	/^  short lightlevel;$/;"	m	struct:__anon283
lightlevel_index	src/gl_intern.h	/^  int lightlevel_index;$/;"	m	struct:GLShader_s
lighttable_fogbased	src/gl_light.c	/^static float lighttable_fogbased[256];$/;"	v	file:
lighttable_glboom	src/gl_light.c	/^static float lighttable_glboom[5][256];$/;"	v	file:
lighttable_gzdoom	src/gl_light.c	/^static float lighttable_gzdoom[256];$/;"	v	file:
lighttable_t	src/r_defs.h	/^typedef byte  lighttable_t;$/;"	t
lighttag	src/p_spec.h	/^  int lighttag;$/;"	m	struct:__anon267
line	src/g_overflow.h	/^  line_t *line;$/;"	m	struct:spechit_overrun_param_s
line	src/p_maputl.h	/^    line_t* line;$/;"	m	union:__anon222::__anon223
line	src/p_spec.h	/^  line_t *line;$/;"	m	struct:__anon267
line	src/p_spec.h	/^  line_t* line;$/;"	m	struct:__anon261
line	src/z_zone.c	/^  int line;$/;"	m	struct:memblock	file:
line_count	src/hu_msg.c	/^  int line_count;$/;"	m	struct:message_widget_s	file:
line_history	src/z_zone.c	/^static int line_history[NUM_HISTORY_TYPES][ZONE_HISTORY];$/;"	v	file:
line_s	src/r_defs.h	/^typedef struct line_s$/;"	s
line_t	src/r_defs.h	/^} line_t;$/;"	t	typeref:struct:line_s
linearRates	src/MUSIC/dbopl.h	/^  Bit32u linearRates[76];$/;"	m	struct:_Chip
linecount	src/r_defs.h	/^  int linecount;$/;"	m	struct:__anon283
linedef	src/doomdata.h	/^  unsigned short linedef;$/;"	m	struct:__anon36
linedef	src/doomdata.h	/^  unsigned short linedef;$/;"	m	struct:__anon37
linedef	src/doomdata.h	/^  unsigned short linedef;$/;"	m	struct:__anon38
linedef	src/p_setup.c	/^  unsigned short  linedef; \/\/ linedef, or -1 for minisegs$/;"	m	struct:__anon231	file:
linedef	src/r_bsp.c	/^line_t    *linedef;$/;"	v
linedef	src/r_defs.h	/^  line_t *linedef;$/;"	m	struct:ssline_s
linedef	src/r_defs.h	/^  line_t* linedef;$/;"	m	struct:__anon287
linelen	src/hu_lib.h	/^  int   linelen;$/;"	m	struct:__anon121
linelist_t	src/p_setup.c	/^typedef struct linelist_t        \/\/ type used to list lines in each block$/;"	s	file:
linelist_t	src/p_setup.c	/^} linelist_t;$/;"	t	typeref:struct:linelist_t	file:
linerendered	src/gl_main.c	/^byte *linerendered[2]; \/\/ true if linedef rendered (only here for malloc)$/;"	v
lines	src/TEXTSCREEN/txt_label.h	/^    char **lines;$/;"	m	struct:txt_label_s
lines	src/p_setup.c	/^line_t   *lines;$/;"	v
lines	src/r_defs.h	/^  struct line_s **lines;$/;"	m	struct:__anon283	typeref:struct:__anon283::line_s
linetarget	src/p_map.c	/^mobj_t*   linetarget; \/\/ who got hit (or NULL)$/;"	v
link	src/sounds.h	/^  sfxinfo_t *link;$/;"	m	struct:sfxinfo_struct
list	src/TEXTSCREEN/txt_dropdown.c	/^    txt_dropdown_list_t *list;$/;"	m	struct:__anon328	file:
list	src/gl_missingtexture.c	/^  sector_t **list;  \/\/ list of adjoining sectors$/;"	m	struct:__anon108	file:
list	src/p_spec.h	/^  struct ceilinglist *list;   \/\/ jff 2\/22\/98 copied from killough's plats$/;"	m	struct:__anon268	typeref:struct:__anon268::ceilinglist
list	src/p_spec.h	/^  struct platlist *list;   \/\/ killough$/;"	m	struct:__anon266	typeref:struct:__anon266::platlist
listCMD	src/e6y_launcher.c	/^  HWND listCMD;$/;"	m	struct:__anon68	file:
listHistory	src/e6y_launcher.c	/^  HWND listHistory;$/;"	m	struct:__anon68	file:
listIWAD	src/e6y_launcher.c	/^  HWND listIWAD;$/;"	m	struct:__anon68	file:
listPWAD	src/e6y_launcher.c	/^  HWND listPWAD;$/;"	m	struct:__anon68	file:
lm	src/hu_lib.h	/^  int     lm;$/;"	m	struct:__anon124
lnodes	src/wi_stuff.c	/^static point_t lnodes[NUMEPISODES][NUMMAPS] =$/;"	v	file:
lo	src/MAC/SDLMain.h	/^    UInt32 lo;$/;"	m	struct:CPSProcessSerNum
load1	src/m_menu.c	/^  load1,$/;"	e	enum:__anon154	file:
load2	src/m_menu.c	/^  load2,$/;"	e	enum:__anon154	file:
load3	src/m_menu.c	/^  load3,$/;"	e	enum:__anon154	file:
load4	src/m_menu.c	/^  load4,$/;"	e	enum:__anon154	file:
load5	src/m_menu.c	/^  load5,$/;"	e	enum:__anon154	file:
load6	src/m_menu.c	/^  load6,$/;"	e	enum:__anon154	file:
load7	src/m_menu.c	/^  load7, \/\/jff 3\/15\/98 extend number of slots$/;"	e	enum:__anon154	file:
load8	src/m_menu.c	/^  load8,$/;"	e	enum:__anon154	file:
load_e	src/m_menu.c	/^} load_e;$/;"	v	typeref:enum:__anon154
load_end	src/m_menu.c	/^  load_end$/;"	e	enum:__anon154	file:
load_next_history_line	src/hu_input.c	/^static void load_next_history_line(input_widget_t *iw) {$/;"	f	file:
load_previous_history_line	src/hu_input.c	/^static void load_previous_history_line(input_widget_t *iw) {$/;"	f	file:
load_x_func	src/x_main.c	/^static void load_x_func(gpointer name, gpointer func, gpointer userdata) {$/;"	f	file:
loaded	src/gl_struct.h	/^  int loaded;$/;"	m	struct:shadow_params_s
loadgame	src/m_menu.c	/^  loadgame,$/;"	e	enum:__anon148	file:
loc	src/wi_stuff.c	/^  point_t loc;$/;"	m	struct:__anon348	file:
local_pixels	src/SDL/i_video.c	/^static unsigned char *local_pixels = NULL;$/;"	v	file:
locale	src/PCRELIB/pcregrep.c	/^static char *locale = NULL;$/;"	v	file:
location	src/m_misc.h	/^  } location;$/;"	m	struct:default_s	typeref:struct:default_s::__anon169
locks	src/r_patch.h	/^  unsigned int locks;$/;"	m	struct:__anon311
locks	src/w_memcache.c	/^  unsigned int locks;$/;"	m	struct:__anon350	file:
locks	src/w_mmap.c	/^  int locks;$/;"	m	struct:__anon351	file:
locktic	src/r_patch.h	/^  int locktic;$/;"	m	struct:__anon311
locktic	src/w_memcache.c	/^  int locktic;$/;"	m	struct:__anon350	file:
locktic	src/w_mmap.c	/^  int locktic;$/;"	m	struct:__anon351	file:
log_channel	src/s_sound.c	/^static void log_channel(int channel_num) {$/;"	f	file:
log_channel_e	src/d_log.h	/^} log_channel_e;$/;"	t	typeref:enum:__anon20
log_files	src/d_log.c	/^static GPtrArray *log_files;$/;"	v	file:
log_store	src/PCRELIB/pcretest.c	/^static int log_store = 0;$/;"	v	file:
long_name	src/PCRELIB/pcregrep.c	/^  const char *long_name;$/;"	m	struct:option_item	file:
longtics	src/g_game.c	/^int             longtics;$/;"	v
lookup	src/d_deh.c	/^  const char *lookup;  \/\/ mnemonic lookup string to be specified in BEX$/;"	m	struct:__anon12	file:
lookup	src/d_deh.c	/^  const char *lookup;  \/\/ pointer to lookup string name$/;"	m	struct:__anon10	file:
loop	src/d_ipxgate.c	/^void loop(int ipxs, int udps) {$/;"	f
loop	src/gl_intern.h	/^  GLLoopDef loop; \/\/ the loops itself$/;"	m	struct:__anon99
loopcount	src/gl_intern.h	/^  int loopcount; \/\/ number of loops for this sector$/;"	m	struct:__anon95
loopcount	src/gl_intern.h	/^  int loopcount; \/\/ number of loops for this sector$/;"	m	struct:__anon96
loopcount	src/gl_sky.c	/^  int loopcount;$/;"	m	struct:__anon112	file:
loops	src/gl_intern.h	/^  GLLoopDef *loops; \/\/ the loops itself$/;"	m	struct:__anon95
loops	src/gl_intern.h	/^  GLLoopDef *loops; \/\/ the loops itself$/;"	m	struct:__anon96
loops	src/gl_sky.c	/^  GLSkyLoopDef *loops;$/;"	m	struct:__anon112	file:
los	src/p_sight.c	/^static los_t los; \/\/ cph - made static$/;"	v	file:
los_t	src/p_sight.c	/^} los_t;$/;"	t	typeref:struct:__anon234	file:
low	src/p_spec.h	/^  fixed_t low;$/;"	m	struct:__anon266
lowerAndChange	src/p_spec.h	/^  lowerAndChange,$/;"	e	enum:__anon255
lowerAndCrush	src/p_spec.h	/^  lowerAndCrush,$/;"	e	enum:__anon254
lowerFloor	src/p_spec.h	/^  lowerFloor,$/;"	e	enum:__anon255
lowerFloor24	src/p_spec.h	/^  lowerFloor24,$/;"	e	enum:__anon255
lowerFloor32Turbo	src/p_spec.h	/^  lowerFloor32Turbo,$/;"	e	enum:__anon255
lowerFloorToLowest	src/p_spec.h	/^  lowerFloorToLowest,$/;"	e	enum:__anon255
lowerFloorToNearest	src/p_spec.h	/^  lowerFloorToNearest,$/;"	e	enum:__anon255
lowerToFloor	src/p_spec.h	/^  lowerToFloor,$/;"	e	enum:__anon254
lowerToLowest	src/p_spec.h	/^  lowerToLowest,$/;"	e	enum:__anon254
lowerToMaxFloor	src/p_spec.h	/^  lowerToMaxFloor,$/;"	e	enum:__anon254
lowfloor	src/p_maputl.c	/^fixed_t lowfloor;$/;"	v
lpSurface	src/gl_hires.c	/^  void *lpSurface;               \/\/ pointer to the associated surface memory$/;"	m	struct:_DDRAW_H_DDSURFACEDESC2	file:
lprintf	src/lprintf.c	/^void lprintf(OutputLevels pri, const char *s, ...) {$/;"	f
ls_x	src/p_map.c	/^static int ls_x; \/\/ Lost Soul position for Lost Soul checks      \/\/ phares$/;"	v	file:
ls_y	src/p_map.c	/^static int ls_y; \/\/ Lost Soul position for Lost Soul checks      \/\/ phares$/;"	v	file:
lsuperdown	src/d_main.h	/^  bool lsuperdown;$/;"	m	struct:keybindings_s
lump	src/d_deh.c	/^  const byte *inp, *lump;$/;"	m	struct:__anon9	file:
lump	src/hu_stuff.h	/^  int lump;$/;"	m	struct:crosshair_s
lump	src/r_defs.h	/^  short lump[16];$/;"	m	struct:__anon290
lump	src/r_demo.c	/^  int lump;$/;"	m	struct:__anon292	file:
lumpinfo	src/w_wad.c	/^lumpinfo_t *lumpinfo;$/;"	v
lumpinfo_t	src/w_wad.h	/^} lumpinfo_t;$/;"	t	typeref:struct:__anon358
lumpnum	src/d_deh.h	/^  int lumpnum;$/;"	m	struct:deh_file_s
lumpnum	src/gl_struct.h	/^  int lumpnum;$/;"	m	struct:am_icon_s
lumpnum	src/r_defs.h	/^  int lumpnum;$/;"	m	struct:__anon289
lumpnum	src/sounds.h	/^  int lumpnum;$/;"	m	struct:__anon316
lumpnum	src/sounds.h	/^  int lumpnum;$/;"	m	struct:sfxinfo_struct
lumps	src/r_demo.h	/^  filelump_t *lumps;$/;"	m	struct:__anon293
lxdoom_1_compatibility	src/doomtype.h	/^  lxdoom_1_compatibility,                \/* LxDoom v1.3.2+ *\/$/;"	e	enum:__anon57
m_file_error_quark	src/m_file.c	/^static GQuark m_file_error_quark(void) {$/;"	f	file:
m_flags	src/m_menu.h	/^  int         m_flags;  \/* phares 4\/17\/98: flag bits S_* (defined above) *\/$/;"	m	struct:setup_menu_s
m_group	src/m_menu.h	/^  setup_group m_group;  \/* Group *\/$/;"	m	struct:setup_menu_s
m_h	src/am_map.c	/^static fixed_t  m_h;$/;"	v	file:
m_joy	src/m_menu.h	/^  int         *m_joy;   \/* joystick button value, or 0 if not shown *\/$/;"	m	struct:setup_menu_s
m_key	src/m_menu.h	/^    int                 *m_key; \/* key value, or 0 if not shown *\/$/;"	m	union:setup_menu_s::__anon167
m_map	src/m_menu.h	/^  m_map,        \/\/ in the same group. A key can be assigned to one$/;"	e	enum:__anon166
m_menu	src/m_menu.h	/^  m_menu,       \/\/ action in one group, and another action in another.$/;"	e	enum:__anon166
m_mouse	src/m_menu.h	/^  int         *m_mouse; \/* mouse button value, or 0 if not shown *\/$/;"	m	struct:setup_menu_s
m_null	src/m_menu.h	/^  m_null,       \/\/ Has no meaning; not applicable$/;"	e	enum:__anon166
m_paninc	src/am_map.c	/^static mpoint_t m_paninc;    \/\/ how far the window pans each tic (map coords)$/;"	v	file:
m_scrn	src/m_menu.h	/^  m_scrn,       \/\/ A key can not be assigned to more than one action$/;"	e	enum:__anon166
m_sector	src/r_defs.h	/^  sector_t          *m_sector; \/\/ a sector containing this object$/;"	m	struct:msecnode_s
m_snext	src/r_defs.h	/^  struct msecnode_s *m_snext;  \/\/ next msecnode_t for this sector$/;"	m	struct:msecnode_s	typeref:struct:msecnode_s::msecnode_s
m_sprev	src/r_defs.h	/^  struct msecnode_s *m_sprev;  \/\/ prev msecnode_t for this sector$/;"	m	struct:msecnode_s	typeref:struct:msecnode_s::msecnode_s
m_text	src/m_menu.h	/^  const char  *m_text;  \/* text to display *\/$/;"	m	struct:setup_menu_s
m_thing	src/r_defs.h	/^  struct mobj_s     *m_thing;  \/\/ this object$/;"	m	struct:msecnode_s	typeref:struct:msecnode_s::mobj_s
m_tnext	src/r_defs.h	/^  struct msecnode_s *m_tnext;  \/\/ next msecnode_t for this thing$/;"	m	struct:msecnode_s	typeref:struct:msecnode_s::msecnode_s
m_tprev	src/r_defs.h	/^  struct msecnode_s *m_tprev;  \/\/ prev msecnode_t for this thing$/;"	m	struct:msecnode_s	typeref:struct:msecnode_s::msecnode_s
m_w	src/am_map.c	/^static fixed_t  m_w;$/;"	v	file:
m_x	src/am_map.c	/^static fixed_t m_x, m_y;     \/\/ LL x,y window location on the map (map coords)$/;"	v	file:
m_x	src/m_menu.h	/^  short       m_x;      \/* screen x position (left is 0) *\/$/;"	m	struct:setup_menu_s
m_x2	src/am_map.c	/^static fixed_t m_x2, m_y2;   \/\/ UR x,y window location on the map (map coords)$/;"	v	file:
m_y	src/am_map.c	/^static fixed_t m_x, m_y;     \/\/ LL x,y window location on the map (map coords)$/;"	v	file:
m_y	src/m_menu.h	/^  short       m_y;      \/* screen y position (top is 0) *\/$/;"	m	struct:setup_menu_s
m_y2	src/am_map.c	/^static fixed_t m_x2, m_y2;   \/\/ UR x,y window location on the map (map coords)$/;"	v	file:
mag_filter	src/gl_intern.h	/^  int mag_filter;$/;"	m	struct:tex_filter_s
mag_threshold	src/r_draw.h	/^  fixed_t mag_threshold;$/;"	m	struct:__anon299
magic_number	src/PCRELIB/pcre_internal.h	/^  pcre_uint32 magic_number;$/;"	m	struct:real_pcre
magnitude	src/p_spec.h	/^  int magnitude;       \/\/ Vector strength for point pusher$/;"	m	struct:__anon274
main	src/MUSIC/midifile.c	/^int main(int argc, char *argv[])$/;"	f
main	src/MUSIC/opl_queue.c	/^int main()$/;"	f
main	src/PCRELIB/dftables.c	/^int main(int argc, char **argv)$/;"	f
main	src/PCRELIB/pcre_scanner_unittest.cc	/^int main(int argc, char** argv) {$/;"	f
main	src/PCRELIB/pcre_stringpiece_unittest.cc	/^int main(int argc, char** argv) {$/;"	f
main	src/PCRELIB/pcrecpp_unittest.cc	/^int main(int argc, char** argv) {$/;"	f
main	src/PCRELIB/pcredemo.c	/^int main(int argc, char **argv)$/;"	f
main	src/PCRELIB/pcregrep.c	/^main(int argc, char **argv)$/;"	f
main	src/PCRELIB/pcretest.c	/^int main(int argc, char **argv)$/;"	f
main	src/SDL/SDL_win32_main.c	79;"	d	file:
main	src/SDL/i_main.c	/^int main(int argc, char **argv)$/;"	f
main	src/TEXTSCREEN/examples/calculator.c	/^int main(int argc, char *argv[])$/;"	f
main	src/TEXTSCREEN/examples/guitest.c	/^int main(int argc, char *argv[])$/;"	f
main	src/d_ipxgate.c	/^int main(int argc, char**argv) {$/;"	f
main	src/d_server.c	/^int main(int argc, char** argv)$/;"	f
main_e	src/m_menu.c	/^} main_e;$/;"	v	typeref:enum:__anon148
main_end	src/m_menu.c	/^  main_end$/;"	e	enum:__anon148	file:
main_font	src/TEXTSCREEN/txt_font.h	/^static txt_font_t main_font =$/;"	v
main_font_data	src/TEXTSCREEN/txt_font.h	/^static unsigned char main_font_data[] =$/;"	v
main_instrs	src/MUSIC/oplplayer.c	/^static const genmidi_instr_t *main_instrs;$/;"	v	file:
main_loop_running	src/TEXTSCREEN/txt_desktop.c	/^static int main_loop_running = 0;$/;"	v	file:
main_tranmap	src/r_draw.c	/^const byte *main_tranmap;     \/\/ killough 4\/11\/98$/;"	v
malloc	src/z_zone.h	170;"	d
malloc	src/z_zone.h	176;"	d
malloc_IfSameLevel	src/p_setup.c	/^static void *malloc_IfSameLevel(void* p, size_t size)$/;"	f	file:
malloc_history	src/z_zone.c	/^enum {malloc_history, free_history, NUM_HISTORY_TYPES};$/;"	e	enum:__anon360	file:
map	src/d_net.h	/^    short               map;            \/\/ 1-9$/;"	m	struct:__anon27
map	src/e6y.h	/^  char map[16];$/;"	m	struct:timetable_s
map	src/v_video.c	/^  const byte **map;$/;"	m	struct:__anon338	file:
map_always_updates	src/am_map.c	/^int map_always_updates;$/;"	v
map_grid_size	src/am_map.c	/^int map_grid_size;$/;"	v
map_level_stat	src/m_misc.c	/^int map_level_stat;$/;"	v
map_line_s	src/am_map.h	/^typedef struct map_line_s$/;"	s
map_line_t	src/am_map.h	/^} PACKEDATTR map_line_t;$/;"	t	typeref:struct:map_line_s
map_lines	src/am_map.c	/^array_t map_lines;$/;"	v
map_lines_overlay_trans	src/am_map.c	/^int map_lines_overlay_trans;$/;"	v
map_nice_thing_s	src/gl_map.c	/^typedef struct map_nice_thing_s$/;"	s	file:
map_nice_thing_t	src/gl_map.c	/^} PACKEDATTR map_nice_thing_t;$/;"	t	typeref:struct:map_nice_thing_s	file:
map_overlay_pos_height	src/am_map.c	/^int map_overlay_pos_height;$/;"	v
map_overlay_pos_width	src/am_map.c	/^int map_overlay_pos_width;$/;"	v
map_overlay_pos_x	src/am_map.c	/^int map_overlay_pos_x;$/;"	v
map_overlay_pos_y	src/am_map.c	/^int map_overlay_pos_y;$/;"	v
map_point_coordinates	src/m_misc.c	/^int map_point_coordinates;$/;"	v
map_point_s	src/am_map.h	/^typedef struct map_point_s$/;"	s
map_point_t	src/am_map.h	/^} PACKEDATTR map_point_t;$/;"	t	typeref:struct:map_point_s
map_scroll_speed	src/am_map.c	/^int map_scroll_speed;$/;"	v
map_secret_after	src/am_map.c	/^int map_secret_after;$/;"	v
map_size	src/cmp.h	/^  uint32_t  map_size;$/;"	m	union:cmp_object_data_u
map_subsectors	src/p_setup.c	/^byte     *map_subsectors;$/;"	v
map_textured	src/am_map.c	/^int map_textured;$/;"	v
map_textured_overlay_trans	src/am_map.c	/^int map_textured_overlay_trans;$/;"	v
map_textured_trans	src/am_map.c	/^int map_textured_trans;$/;"	v
map_things	src/gl_map.c	/^static array_t map_things[am_icon_count];$/;"	v	file:
map_things_appearance	src/am_map.c	/^map_things_appearance_t map_things_appearance;$/;"	v
map_things_appearance_classic	src/am_map.h	/^  map_things_appearance_classic,$/;"	e	enum:__anon4
map_things_appearance_icon	src/am_map.h	/^  map_things_appearance_icon,$/;"	e	enum:__anon4
map_things_appearance_list	src/am_map.c	/^const char *map_things_appearance_list[map_things_appearance_max] =$/;"	v
map_things_appearance_max	src/am_map.h	/^  map_things_appearance_max$/;"	e	enum:__anon4
map_things_appearance_scaled	src/am_map.h	/^  map_things_appearance_scaled,$/;"	e	enum:__anon4
map_things_appearance_t	src/am_map.h	/^} map_things_appearance_t;$/;"	t	typeref:enum:__anon4
map_use_multisamling	src/am_map.c	/^int map_use_multisamling;$/;"	v
map_wheel_zoom	src/am_map.c	/^int map_wheel_zoom;$/;"	v
mapcolor_back	src/am_map.c	/^int mapcolor_back;    \/\/ map background$/;"	v
mapcolor_bdor	src/am_map.c	/^int mapcolor_bdor;    \/\/ blue door color (of enabling one but not other )$/;"	v
mapcolor_bkey	src/am_map.c	/^int mapcolor_bkey;    \/\/ blue key color$/;"	v
mapcolor_cchg	src/am_map.c	/^int mapcolor_cchg;    \/\/ line at ceiling height change color$/;"	v
mapcolor_clsd	src/am_map.c	/^int mapcolor_clsd;    \/\/ line at sector with floor=ceiling color$/;"	v
mapcolor_enemy	src/am_map.c	/^int mapcolor_enemy;   \/\/ enemy sprite color$/;"	v
mapcolor_exit	src/am_map.c	/^int mapcolor_exit;    \/\/ jff 4\/23\/98 add exit line color$/;"	v
mapcolor_fchg	src/am_map.c	/^int mapcolor_fchg;    \/\/ line at floor height change color$/;"	v
mapcolor_flat	src/am_map.c	/^int mapcolor_flat;    \/\/ line with no floor\/ceiling changes$/;"	v
mapcolor_frnd	src/am_map.c	/^int mapcolor_frnd;    \/\/ friendly sprite color$/;"	v
mapcolor_grid	src/am_map.c	/^int mapcolor_grid;    \/\/ grid lines color$/;"	v
mapcolor_hair	src/am_map.c	/^int mapcolor_hair;    \/\/ crosshair color$/;"	v
mapcolor_item	src/am_map.c	/^int mapcolor_item;    \/\/ item sprite color$/;"	v
mapcolor_me	src/m_menu.c	/^int mapcolor_me;    \/\/ cph$/;"	v
mapcolor_plyr	src/am_map.c	/^int mapcolor_plyr[4] = { 112, 88, 64, 32 }; \/\/ colors for player arrows in multiplayer$/;"	v
mapcolor_rdor	src/am_map.c	/^int mapcolor_rdor;    \/\/ red door color  (diff from keys to allow option)$/;"	v
mapcolor_rkey	src/am_map.c	/^int mapcolor_rkey;    \/\/ red key color$/;"	v
mapcolor_secr	src/am_map.c	/^int mapcolor_secr;    \/\/ secret sector boundary color$/;"	v
mapcolor_sngl	src/am_map.c	/^int mapcolor_sngl;    \/\/ single player arrow color$/;"	v
mapcolor_sprt	src/am_map.c	/^int mapcolor_sprt;    \/\/ general sprite color$/;"	v
mapcolor_tele	src/am_map.c	/^int mapcolor_tele;    \/\/ teleporter line color$/;"	v
mapcolor_unsn	src/am_map.c	/^int mapcolor_unsn;    \/\/ computer map unseen line color$/;"	v
mapcolor_wall	src/am_map.c	/^int mapcolor_wall;    \/\/ normal 1s wall color$/;"	v
mapcolor_ydor	src/am_map.c	/^int mapcolor_ydor;    \/\/ yellow door color$/;"	v
mapcolor_ykey	src/am_map.c	/^int mapcolor_ykey;    \/\/ yellow key color$/;"	v
mapglvertex_t	src/p_setup.c	/^} mapglvertex_t;$/;"	t	typeref:struct:__anon232	file:
maplinedef_t	src/doomdata.h	/^} PACKEDATTR maplinedef_t;$/;"	t	typeref:struct:__anon31
mapnames	src/d_deh.c	/^const char **const mapnames[] =$/;"	v
mapnames2	src/d_deh.c	/^const char **const mapnames2[] = \/\/ DOOM 2 map names.$/;"	v
mapnamesp	src/d_deh.c	/^const char **const mapnamesp[] = \/\/ Plutonia WAD map names.$/;"	v
mapnamest	src/d_deh.c	/^const char **const mapnamest[] = \/\/ TNT WAD map names.$/;"	v
mapnode_t	src/doomdata.h	/^} PACKEDATTR mapnode_t;$/;"	t	typeref:struct:__anon39
mapnode_v4_t	src/doomdata.h	/^} PACKEDATTR mapnode_v4_t;$/;"	t	typeref:struct:__anon40
mapnode_znod_t	src/doomdata.h	/^} PACKEDATTR mapnode_znod_t;$/;"	t	typeref:struct:__anon41
mappatch_t	src/r_data.c	/^} PACKEDATTR mappatch_t;$/;"	t	typeref:struct:__anon277	file:
mapped_wad	src/w_mmap.c	/^mmap_info_t *mapped_wad;$/;"	v
mapped_wad	src/w_mmap.c	/^void **mapped_wad;$/;"	v
mapsector_t	src/doomdata.h	/^} PACKEDATTR mapsector_t;$/;"	t	typeref:struct:__anon32
mapseg_t	src/doomdata.h	/^} PACKEDATTR mapseg_t;$/;"	t	typeref:struct:__anon36
mapseg_v4_t	src/doomdata.h	/^} PACKEDATTR mapseg_v4_t;$/;"	t	typeref:struct:__anon37
mapseg_znod_t	src/doomdata.h	/^} PACKEDATTR mapseg_znod_t;$/;"	t	typeref:struct:__anon38
mapsidedef_t	src/doomdata.h	/^} PACKEDATTR mapsidedef_t;$/;"	t	typeref:struct:__anon30
mapsubsector_t	src/doomdata.h	/^} PACKEDATTR mapsubsector_t;$/;"	t	typeref:struct:__anon33
mapsubsector_v4_t	src/doomdata.h	/^} PACKEDATTR mapsubsector_v4_t;$/;"	t	typeref:struct:__anon34
mapsubsector_znod_t	src/doomdata.h	/^} PACKEDATTR mapsubsector_znod_t;$/;"	t	typeref:struct:__anon35
maptexture_t	src/r_data.c	/^} PACKEDATTR maptexture_t;$/;"	t	typeref:struct:__anon278	file:
mapthing	src/s_advsound.h	/^  mobj_t *mapthing;$/;"	m	struct:musinfo_s
mapthing_t	src/doomdata.h	/^} PACKEDATTR mapthing_t;$/;"	t	typeref:struct:__anon42
mapvertex_t	src/doomdata.h	/^} PACKEDATTR mapvertex_t;$/;"	t	typeref:struct:__anon29
markceiling	src/r_segs.c	/^static dboolean  markceiling;$/;"	v	file:
markfloor	src/r_segs.c	/^static dboolean  markfloor;      \/\/ False if the back side is the same plane.$/;"	v	file:
markpoint_t	src/am_map.h	/^} markpoint_t;$/;"	t	typeref:struct:__anon3
markpointnum	src/am_map.c	/^int markpointnum = 0; \/\/ next point to be assigned (also number of points now)$/;"	v
markpointnum_max	src/am_map.c	/^int markpointnum_max = 0;       \/\/ killough 2\/22\/98$/;"	v
markpoints	src/am_map.c	/^markpoint_t *markpoints = NULL;    \/\/ where the points are$/;"	v
mask	src/m_cheat.h	/^  uint_64_t code, mask;$/;"	m	struct:cheatseq_s
maskLeft	src/MUSIC/dbopl.h	/^  Bit8s maskLeft;   \/\/Sign extended values for both channel's panning$/;"	m	struct:_Channel
maskRight	src/MUSIC/dbopl.h	/^  Bit8s maskRight;$/;"	m	struct:_Channel
maskedtexture	src/r_segs.c	/^static dboolean  maskedtexture;$/;"	v	file:
maskedtexturecol	src/r_defs.h	/^  int *sprtopclip, *sprbottomclip, *maskedtexturecol; \/\/ dropoff overflow$/;"	m	struct:drawseg_s
maskedtexturecol	src/r_segs.c	/^static int      *maskedtexturecol; \/\/ dropoff overflow$/;"	v	file:
mass	src/info.h	/^  int mass;         \/* How much an impact will move it.  Cacodemons$/;"	m	struct:__anon138
match	src/PCRELIB/pcre_exec.c	/^match(REGISTER USPTR eptr, REGISTER const uschar *ecode,$/;"	f	file:
match_call_count	src/PCRELIB/pcre_internal.h	/^  unsigned long int match_call_count;      \/* As it says *\/$/;"	m	struct:match_data
match_condassert	src/PCRELIB/pcre_exec.c	85;"	d	file:
match_data	src/PCRELIB/pcre_internal.h	/^typedef struct match_data {$/;"	s
match_data	src/PCRELIB/pcre_internal.h	/^} match_data;$/;"	t	typeref:struct:match_data
match_isgroup	src/PCRELIB/pcre_exec.c	86;"	d	file:
match_limit	src/PCRELIB/pcre.h	/^  unsigned long int match_limit;  \/* Maximum number of calls to match() *\/$/;"	m	struct:pcre_extra
match_limit	src/PCRELIB/pcre_internal.h	/^  unsigned long int match_limit;           \/* As it says *\/$/;"	m	struct:match_data
match_limit	src/PCRELIB/pcrecpp.h	/^  int match_limit() const { return match_limit_; };$/;"	f	class:pcrecpp::RE_Options
match_limit_	src/PCRELIB/pcrecpp.h	/^  int match_limit_;$/;"	m	class:pcrecpp::RE_Options
match_limit_recursion	src/PCRELIB/pcre.h	/^  unsigned long int match_limit_recursion; \/* Max recursive calls to match() *\/$/;"	m	struct:pcre_extra
match_limit_recursion	src/PCRELIB/pcre_internal.h	/^  unsigned long int match_limit_recursion; \/* As it says *\/$/;"	m	struct:match_data
match_limit_recursion	src/PCRELIB/pcrecpp.h	/^  int match_limit_recursion() const { return match_limit_recursion_; };$/;"	f	class:pcrecpp::RE_Options
match_limit_recursion_	src/PCRELIB/pcrecpp.h	/^  int match_limit_recursion_;$/;"	m	class:pcrecpp::RE_Options
match_ref	src/PCRELIB/pcre_exec.c	/^match_ref(int offset, register USPTR eptr, int length, match_data *md,$/;"	f	file:
max	src/PCRELIB/pcre_exec.c	3444;"	d	file:
max	src/PCRELIB/pcre_exec.c	479;"	d	file:
max	src/TEXTSCREEN/txt_spinctrl.h	/^    union { float f; int i; } min, max, *value, step; $/;"	m	struct:txt_spincontrol_s	typeref:union:txt_spincontrol_s::__anon335
maxViewPitch	src/e6y.c	/^int maxViewPitch;$/;"	v
max_armor	src/p_inter.c	/^int max_armor = 200;$/;"	v
max_dist	src/gl_struct.h	/^  int max_dist;$/;"	m	struct:shadow_params_s
max_h	src/am_map.c	/^static fixed_t  max_h;          \/\/ max_y-min_y$/;"	v	file:
max_height	src/c_main.c	/^  int max_height;$/;"	m	struct:console_s	file:
max_height	src/hu_cons.c	/^  int max_height;$/;"	m	struct:console_widget_s	file:
max_id	src/p_ident.c	/^static uint32_t max_id = 0;$/;"	v	file:
max_items	src/gl_intern.h	/^  int max_items[GLDIT_TYPES];$/;"	m	struct:__anon105
max_numswitches	src/p_switch.c	/^static int max_numswitches;                       \/\/ killough$/;"	v	file:
max_radius	src/gl_struct.h	/^  int max_radius;$/;"	m	struct:shadow_params_s
max_scale_mtof	src/am_map.c	/^static fixed_t  max_scale_mtof; \/\/ used to tell when to stop zooming in$/;"	v	file:
max_soul	src/p_inter.c	/^int max_soul = 200;$/;"	v
max_w	src/am_map.c	/^static fixed_t  max_w;          \/\/ max_x-min_x,$/;"	v	file:
max_width	src/c_main.c	/^  int max_width;$/;"	m	struct:console_s	file:
max_width	src/hu_cons.c	/^  int max_width;$/;"	m	struct:console_widget_s	file:
max_x	src/am_map.c	/^static fixed_t  max_x;$/;"	v	file:
max_y	src/am_map.c	/^static fixed_t  max_y;$/;"	v	file:
maxammo	src/d_player.h	/^  int                 maxammo[NUMAMMO];$/;"	m	struct:player_s
maxammo	src/p_inter.c	/^int maxammo[NUMAMMO]  = {200, 50, 300, 50};$/;"	v
maxanims	src/p_spec.c	/^static size_t maxanims;$/;"	v	file:
maxdrawsegs	src/r_bsp.c	/^unsigned  maxdrawsegs;$/;"	v
maxfrags	src/d_player.h	/^  int         maxfrags;$/;"	m	struct:__anon61
maxframe	src/r_things.c	/^static int maxframe;$/;"	v	file:
maxhealth	src/p_inter.c	/^int maxhealth = 100; \/\/ was MAXHEALTH as a #define, used only in this module$/;"	v
maxhealthbonus	src/p_inter.c	/^int maxhealthbonus = 200;$/;"	v
maxitems	src/d_player.h	/^  int         maxitems;$/;"	m	struct:__anon61
maxkills	src/d_player.h	/^  int         maxkills;$/;"	m	struct:__anon61
maxlight	src/p_spec.h	/^  int maxlight;$/;"	m	struct:__anon262
maxlight	src/p_spec.h	/^  int maxlight;$/;"	m	struct:__anon263
maxlight	src/p_spec.h	/^  int maxlight;$/;"	m	struct:__anon264
maxlight	src/p_spec.h	/^  int maxlight;$/;"	m	struct:__anon265
maxopenings	src/r_plane.c	/^size_t maxopenings;$/;"	v
maxsecret	src/d_player.h	/^  int         maxsecret;$/;"	m	struct:__anon61
maxsize	src/gl_intern.h	/^  int maxsize;$/;"	m	struct:GLDrawDataItem_s
maxsize	src/gl_intern.h	/^  int maxsize;$/;"	m	struct:__anon105
maxtick	src/r_demo.c	/^  size_t maxtick;$/;"	m	struct:__anon292	file:
maxtime	src/p_spec.h	/^  int maxtime;$/;"	m	struct:__anon263
maxvalue	src/m_misc.h	/^  int   maxvalue;         \/\/ jff 3\/3\/98 maximum allowed value$/;"	m	struct:default_s
maxver	src/e6y.h	/^  unsigned int maxver;$/;"	m	struct:prboom_comp_s
maxx	src/r_defs.h	/^  int picnum, lightlevel, minx, maxx;$/;"	m	struct:visplane
maxz	src/p_sight.c	/^  fixed_t maxz,minz;               \/\/ cph - z optimisations for 2sided lines$/;"	m	struct:__anon234	file:
mbf_compatibility	src/doomtype.h	/^  mbf_compatibility,                     \/* MBF *\/$/;"	e	enum:__anon57
mbf_features	src/doomstat.h	60;"	d
mceilingclip	src/r_things.c	/^int   *mceilingclip; \/\/ dropoff overflow$/;"	v
md5byte	src/md5.h	57;"	d
md5global	src/p_checksum.c	/^static struct MD5Context md5global;$/;"	v	typeref:struct:MD5Context	file:
me	src/wi_stuff.c	/^static int    me;$/;"	v	file:
mega_health	src/p_inter.c	/^int mega_health = 200;$/;"	v
meleestate	src/info.h	/^  int meleestate;   \/* Melee==close attack *\/$/;"	m	struct:__anon138
mem_dump_dos622	src/g_overflow.c	/^unsigned char mem_dump_dos622[DOS_MEM_DUMP_SIZE] = {$/;"	v
mem_dump_dosbox	src/g_overflow.c	/^unsigned char mem_dump_dosbox[DOS_MEM_DUMP_SIZE] = {$/;"	v
mem_dump_win98	src/g_overflow.c	/^unsigned char mem_dump_win98[DOS_MEM_DUMP_SIZE] = {$/;"	v
mem_fclose	src/memio.c	/^void mem_fclose(MEMFILE *stream)$/;"	f
mem_fopen_read	src/memio.c	/^MEMFILE *mem_fopen_read(const void *buf, size_t buflen)$/;"	f
mem_fopen_write	src/memio.c	/^MEMFILE *mem_fopen_write(void)$/;"	f
mem_fread	src/memio.c	/^size_t mem_fread(void *buf, size_t size, size_t nmemb, MEMFILE *stream)$/;"	f
mem_fseek	src/memio.c	/^int mem_fseek(MEMFILE *stream, signed long position, mem_rel_t whence)$/;"	f
mem_ftell	src/memio.c	/^long mem_ftell(MEMFILE *stream)$/;"	f
mem_fwrite	src/memio.c	/^size_t mem_fwrite(const void *ptr, size_t size, size_t nmemb, MEMFILE *stream)$/;"	f
mem_get_buf	src/memio.c	/^void mem_get_buf(MEMFILE *stream, void **buf, size_t *buflen)$/;"	f
mem_rel_t	src/memio.h	/^} mem_rel_t;$/;"	t	typeref:enum:__anon147
memblock	src/z_zone.c	/^typedef struct memblock {$/;"	s	file:
memblock_t	src/z_zone.c	/^} memblock_t;$/;"	t	typeref:struct:memblock	file:
memcpy	src/PCRELIB/pcre_internal.h	177;"	d
memfile_mode_t	src/memio.c	/^} memfile_mode_t;$/;"	t	typeref:enum:__anon146	file:
memmove	src/PCRELIB/pcre_internal.h	178;"	d
memmove	src/PCRELIB/pcre_internal.h	190;"	d
memmove	src/PCRELIB/pcre_internal.h	192;"	d
memmove	src/PCRELIB/pcre_internal.h	203;"	d
memory_size	src/z_zone.c	/^static int memory_size = 0;$/;"	v	file:
memset	src/PCRELIB/pcre_internal.h	179;"	d
menu	src/m_menu.h	/^    struct setup_menu_s *menu;  \/* next or prev menu *\/$/;"	m	union:setup_menu_s::__anon167	typeref:struct:setup_menu_s::__anon167::setup_menu_s
menu_background	src/m_menu.c	/^dboolean menu_background = 1; \/\/ do Boom fullscreen menus have backgrounds?$/;"	v
menu_buffer	src/m_menu.c	/^static char menu_buffer[64];$/;"	v	file:
menu_s	src/m_menu.h	/^typedef struct menu_s {$/;"	s
menu_t	src/m_menu.h	/^} menu_t;$/;"	t	typeref:struct:menu_s
menuactive	src/m_menu.c	/^enum menuactive_e menuactive;    \/\/ The menus are up$/;"	v	typeref:enum:menuactive_e
menuactive_e	src/doomstat.h	/^enum menuactive_e {$/;"	g
menuitem_s	src/m_menu.h	/^typedef struct menuitem_s {$/;"	s
menuitem_t	src/m_menu.h	/^} menuitem_t;$/;"	t	typeref:struct:menuitem_s
menuitems	src/m_menu.h	/^  menuitem_t*     menuitems;    \/\/ menu items$/;"	m	struct:menu_s
mess_background	src/m_menu.c	/^  mess_background,$/;"	e	enum:__anon162	file:
mess_chat_timer	src/m_menu.c	/^  mess_chat_timer,$/;"	e	enum:__anon162	file:
mess_color_chat	src/m_menu.c	/^  mess_color_chat,$/;"	e	enum:__anon162	file:
mess_color_play	src/m_menu.c	/^  mess_color_play,$/;"	e	enum:__anon162	file:
mess_color_review	src/m_menu.c	/^  mess_color_review,$/;"	e	enum:__anon162	file:
mess_hud_timer	src/m_menu.c	/^  mess_hud_timer,$/;"	e	enum:__anon162	file:
mess_lines	src/m_menu.c	/^  mess_lines,$/;"	e	enum:__anon162	file:
mess_scrollup	src/m_menu.c	/^  mess_scrollup,$/;"	e	enum:__anon162	file:
mess_settings	src/m_menu.c	/^setup_menu_t* mess_settings[] =$/;"	v
mess_settings1	src/m_menu.c	/^setup_menu_t mess_settings1[] =  \/\/ Messages screen$/;"	v
mess_settings1	src/m_menu.c	/^setup_menu_t mess_settings1[];$/;"	v
mess_timed	src/m_menu.c	/^  mess_timed,$/;"	e	enum:__anon162	file:
mess_timer	src/m_menu.c	/^  mess_timer,$/;"	e	enum:__anon162	file:
messageLastMenuActive	src/m_menu.c	/^int     messageLastMenuActive;$/;"	v
messageNeedsInput	src/m_menu.c	/^dboolean messageNeedsInput; \/\/ timed message = no input from user$/;"	v
messageRoutine	src/m_menu.c	/^void (*messageRoutine)(int response);$/;"	v
messageString	src/m_menu.c	/^static const char* messageString; \/\/ ...and here is the message string!$/;"	v	file:
messageToPrint	src/m_menu.c	/^int messageToPrint;  \/\/ 1 = message to be printed$/;"	v
message_dontfuckwithme	src/hu_stuff.c	/^dboolean        message_dontfuckwithme;$/;"	v
message_list	src/hu_stuff.c	/^static dboolean message_list; \/\/2\/26\/98 enable showing list of messages$/;"	v	file:
message_nottobefuckedwith	src/hu_stuff.c	/^static dboolean message_nottobefuckedwith;$/;"	v	file:
message_on	src/hu_stuff.c	/^static dboolean message_on;$/;"	v	file:
message_thinker_s	src/hu_stuff.h	/^typedef struct message_thinker_s$/;"	s
message_thinker_t	src/hu_stuff.h	/^} message_thinker_t;$/;"	t	typeref:struct:message_thinker_s
message_widget_s	src/hu_msg.c	/^struct message_widget_s {$/;"	s	file:
message_widget_t	src/hu_msg.h	/^typedef struct message_widget_s message_widget_t;$/;"	t	typeref:struct:message_widget_s
messages	src/d_player.h	/^  GPtrArray          *messages;$/;"	m	struct:player_s
messages	src/m_menu.c	/^  messages,$/;"	e	enum:__anon155	file:
messages	src/n_peer.h	/^  pbuf_t  messages;$/;"	m	struct:netchan_s
messx	src/m_menu.c	/^int     messx;$/;"	v
messy	src/m_menu.c	/^int     messy;$/;"	v
meta	src/MUSIC/midifile.h	/^        midi_meta_event_data_t meta;$/;"	m	union:__anon191::__anon192
metadown	src/d_main.h	/^  bool metadown;$/;"	m	struct:keybindings_s
mfloorclip	src/r_things.c	/^int   *mfloorclip;   \/\/ dropoff overflow$/;"	v
middle	src/p_spec.h	/^    middle,$/;"	e	enum:__anon258
midi_aftertouchchannel	src/mus2mid.c	/^  midi_aftertouchchannel = 0xD0,$/;"	e	enum:__anon175	file:
midi_aftertouchkey	src/mus2mid.c	/^  midi_aftertouchkey = 0xA0,$/;"	e	enum:__anon175	file:
midi_changecontroller	src/mus2mid.c	/^  midi_changecontroller = 0xB0,$/;"	e	enum:__anon175	file:
midi_changepatch	src/mus2mid.c	/^  midi_changepatch = 0xC0,$/;"	e	enum:__anon175	file:
midi_channel_event_data_t	src/MUSIC/midifile.h	/^} midi_channel_event_data_t;$/;"	t	typeref:struct:__anon190
midi_controller_t	src/MUSIC/midifile.h	/^} midi_controller_t;$/;"	t	typeref:enum:__anon186
midi_event_t	src/MUSIC/midifile.h	/^} midi_event_t;$/;"	t	typeref:struct:__anon191
midi_event_type_t	src/MUSIC/midifile.h	/^} midi_event_type_t;$/;"	t	typeref:enum:__anon185
midi_file_s	src/MUSIC/midifile.c	/^struct midi_file_s$/;"	s	file:
midi_file_t	src/MUSIC/midifile.h	/^typedef struct midi_file_s midi_file_t;$/;"	t	typeref:struct:midi_file_s
midi_header_t	src/MUSIC/midifile.c	/^} PACKEDATTR midi_header_t;$/;"	t	typeref:struct:__anon180	file:
midi_meta_event_data_t	src/MUSIC/midifile.h	/^} midi_meta_event_data_t;$/;"	t	typeref:struct:__anon188
midi_meta_event_type_t	src/MUSIC/midifile.h	/^} midi_meta_event_type_t;$/;"	t	typeref:enum:__anon187
midi_pitchwheel	src/mus2mid.c	/^  midi_pitchwheel = 0xE0$/;"	e	enum:__anon175	file:
midi_player_fluidsynth	src/i_sound.h	/^  midi_player_fluidsynth,$/;"	e	enum:__anon141
midi_player_last	src/i_sound.h	/^  midi_player_last$/;"	e	enum:__anon141
midi_player_name_t	src/i_sound.h	/^} midi_player_name_t;$/;"	t	typeref:enum:__anon141
midi_player_opl2	src/i_sound.h	/^  midi_player_opl2,$/;"	e	enum:__anon141
midi_player_portmidi	src/i_sound.h	/^  midi_player_portmidi,$/;"	e	enum:__anon141
midi_player_sdl	src/i_sound.h	/^  midi_player_sdl,$/;"	e	enum:__anon141
midi_presskey	src/mus2mid.c	/^  midi_presskey = 0x90,$/;"	e	enum:__anon175	file:
midi_releasekey	src/mus2mid.c	/^  midi_releasekey = 0x80,$/;"	e	enum:__anon175	file:
midi_sysex_event_data_t	src/MUSIC/midifile.h	/^} midi_sysex_event_data_t;$/;"	t	typeref:struct:__anon189
midi_track_iter_s	src/MUSIC/midifile.c	/^struct midi_track_iter_s$/;"	s	file:
midi_track_iter_t	src/MUSIC/midifile.h	/^typedef struct midi_track_iter_s midi_track_iter_t;$/;"	t	typeref:struct:midi_track_iter_s
midi_track_t	src/MUSIC/midifile.c	/^} midi_track_t;$/;"	t	typeref:struct:__anon181	file:
midievent	src/mus2mid.c	/^} midievent;$/;"	t	typeref:enum:__anon175	file:
midifile	src/MUSIC/flplayer.c	/^static midi_file_t *midifile;$/;"	v	file:
midifile	src/MUSIC/portmidiplayer.c	/^static midi_file_t *midifile;$/;"	v	file:
midiheader	src/mus2mid.c	/^static const byte midiheader[] =$/;"	v	file:
midimem_t	src/MUSIC/midifile.h	/^} midimem_t;$/;"	t	typeref:struct:__anon184
midiplayers	src/SDL/i_emusic.c	/^const char *midiplayers[midi_player_last + 1] = {$/;"	v
midmap	src/r_defs.h	/^  int bottommap, midmap, topmap; \/\/ killough 4\/4\/98: dynamic colormaps$/;"	m	struct:__anon283
midstage	src/f_finale.c	/^static int midstage;                 \/\/ whether we're in "mid-stage"$/;"	v	file:
midtexheight	src/r_segs.c	/^static fixed_t  toptexheight, midtexheight, bottomtexheight; \/\/ cph$/;"	v	file:
midtexture	src/doomdata.h	/^  char  midtexture[8];$/;"	m	struct:__anon30
midtexture	src/r_defs.h	/^  short midtexture;$/;"	m	struct:__anon284
midtexture	src/r_segs.c	/^static int      midtexture;$/;"	v	file:
min	src/PCRELIB/pcre_exec.c	3445;"	d	file:
min	src/PCRELIB/pcre_exec.c	480;"	d	file:
min	src/TEXTSCREEN/txt_spinctrl.h	/^    union { float f; int i; } min, max, *value, step; $/;"	m	struct:txt_spincontrol_s	typeref:union:txt_spincontrol_s::__anon335
minViewPitch	src/e6y.c	/^int minViewPitch;$/;"	v
min_filter	src/gl_intern.h	/^  int min_filter;$/;"	m	struct:tex_filter_s
min_scale_mtof	src/am_map.c	/^static fixed_t  min_scale_mtof; \/\/ used to tell when to stop zooming out$/;"	v	file:
min_x	src/am_map.c	/^static fixed_t  min_x;$/;"	v	file:
min_y	src/am_map.c	/^static fixed_t  min_y;$/;"	v	file:
minangle	src/gl_struct.h	/^  int minangle;$/;"	m	struct:motion_blur_params_s
minimize	src/PCRELIB/pcre_exec.c	3437;"	d	file:
minimize	src/PCRELIB/pcre_exec.c	460;"	d	file:
miniseg	src/r_defs.h	/^  dboolean   miniseg;$/;"	m	struct:__anon287
minlight	src/p_spec.h	/^  int minlight;$/;"	m	struct:__anon262
minlight	src/p_spec.h	/^  int minlight;$/;"	m	struct:__anon263
minlight	src/p_spec.h	/^  int minlight;$/;"	m	struct:__anon264
minlight	src/p_spec.h	/^  int minlight;$/;"	m	struct:__anon265
minspeed_pow2	src/gl_struct.h	/^  float minspeed_pow2;$/;"	m	struct:motion_blur_params_s
mintime	src/p_spec.h	/^  int mintime;$/;"	m	struct:__anon263
minvalue	src/m_misc.h	/^  int   minvalue;         \/\/ jff 3\/3\/98 minimum allowed value$/;"	m	struct:default_s
minver	src/e6y.h	/^  unsigned int minver;$/;"	m	struct:prboom_comp_s
minx	src/r_defs.h	/^  int picnum, lightlevel, minx, maxx;$/;"	m	struct:visplane
minz	src/p_sight.c	/^  fixed_t maxz,minz;               \/\/ cph - z optimisations for 2sided lines$/;"	m	struct:__anon234	file:
mipBlendColors	src/gl_texture.c	/^byte	mipBlendColors[16][4] =$/;"	v
mipmap	src/gl_intern.h	/^  int mipmap;$/;"	m	struct:tex_filter_s
misc1	src/info.h	/^  long        misc1, misc2; \/* apparently never used in DOOM               *\/$/;"	m	struct:__anon136
misc2	src/info.h	/^  long        misc1, misc2; \/* apparently never used in DOOM               *\/$/;"	m	struct:__anon136
missed	src/r_demo.h	/^  char *missed;$/;"	m	struct:__anon295
missilestate	src/info.h	/^  int missilestate; \/* What states to use when it's in the air, if$/;"	m	struct:__anon138
mix_buffer	src/MUSIC/opl.c	/^static int *mix_buffer = NULL;$/;"	v	file:
mixing_freq	src/PCSOUND/pcsound_sdl.c	/^static int mixing_freq;$/;"	v	file:
mline_t	src/am_map.c	/^} mline_t;$/;"	t	typeref:struct:__anon1	file:
mlook_lump	src/r_demo.c	/^mlooklump_t mlook_lump = {DEMOEX_MLOOK_LUMPNAME, NULL, -2, 0, 0};$/;"	v
mlook_or_fov	src/e6y.c	/^dboolean mlook_or_fov;$/;"	v
mlooklump_t	src/r_demo.c	/^} mlooklump_t;$/;"	t	typeref:struct:__anon292	file:
mlooky	src/e6y.c	/^int mlooky = 0;$/;"	v
mmap_info_t	src/w_mmap.c	/^} mmap_info_t;$/;"	t	typeref:struct:__anon352	file:
mnact_float	src/doomstat.h	/^  mnact_float, \/\/ doom-style large font menu, doesn't overlap anything$/;"	e	enum:menuactive_e
mnact_full	src/doomstat.h	/^  mnact_full, \/\/ boom-style small font menu, may overlap status bar$/;"	e	enum:menuactive_e
mnact_inactive	src/doomstat.h	/^  mnact_inactive, \/\/ no menu$/;"	e	enum:menuactive_e
mo	src/d_player.h	/^  mobj_t*             mo;$/;"	m	struct:player_s
mobj_s	src/p_mobj.h	/^typedef struct mobj_s {$/;"	s
mobj_t	src/p_mobj.h	/^} mobj_t;$/;"	t	typeref:struct:mobj_s
mobjflags	src/r_defs.h	/^  uint_64_t mobjflags;$/;"	m	struct:vissprite_s
mobjinfo	src/info.c	/^mobjinfo_t mobjinfo[NUMMOBJTYPES] = {$/;"	v
mobjinfo_t	src/info.h	/^} mobjinfo_t;$/;"	t	typeref:struct:__anon138
mobjtype_t	src/info.h	/^} mobjtype_t;$/;"	t	typeref:enum:__anon137
mode	src/gl_intern.h	/^  GLenum mode; \/\/ GL_TRIANGLES, GL_TRIANGLE_STRIP or GL_TRIANGLE_FAN$/;"	m	struct:__anon94
mode	src/gl_sky.c	/^  int mode;$/;"	m	struct:__anon111	file:
mode	src/memio.c	/^  memfile_mode_t mode;$/;"	m	struct:_MEMFILE	file:
modelMatrix	src/r_main.c	/^float modelMatrix[16];$/;"	v
modifiedgame	src/doomstat.c	/^dboolean modifiedgame;$/;"	v
modulator	src/MUSIC/oplplayer.c	/^    genmidi_op_t modulator;$/;"	m	struct:__anon195	file:
momx	src/d_player.h	/^  fixed_t             momx, momy;      \/\/ killough 10\/98$/;"	m	struct:player_s
momx	src/p_mobj.h	/^    fixed_t             momx;$/;"	m	struct:mobj_s
momy	src/d_player.h	/^  fixed_t             momx, momy;      \/\/ killough 10\/98$/;"	m	struct:player_s
momy	src/p_mobj.h	/^    fixed_t             momy;$/;"	m	struct:mobj_s
momz	src/p_mobj.h	/^    fixed_t             momz;$/;"	m	struct:mobj_s
monkeys	src/doomstat.c	/^int monkeys, default_monkeys;$/;"	v
monster_avoid_hazards	src/doomstat.c	/^int monster_avoid_hazards, default_monster_avoid_hazards;$/;"	v
monster_backing	src/doomstat.c	/^int monster_backing, default_monster_backing;$/;"	v
monster_friction	src/doomstat.c	/^int monster_friction=1;       \/\/ killough 10\/98: monsters affected by friction$/;"	v
monster_infighting	src/doomstat.c	/^int monster_infighting=1;       \/\/ killough 7\/19\/98: monster<=>monster attacks$/;"	v
monsters_infight	src/p_inter.c	/^int monsters_infight = 0; \/\/ e6y: Dehacked support - monsters infight$/;"	v
monsters_remember	src/d_net.h	/^  byte monsters_remember;$/;"	m	struct:__anon24
monsters_remember	src/doomstat.c	/^int monsters_remember;          \/\/ killough 3\/1\/98$/;"	v
moptions	src/PCRELIB/pcre_internal.h	/^  int   moptions;               \/* Match options *\/$/;"	m	struct:dfa_match_data
motion_blur	src/gl_fbo.c	/^motion_blur_params_t motion_blur;$/;"	v
motion_blur_params_s	src/gl_struct.h	/^typedef struct motion_blur_params_s$/;"	s
motion_blur_params_t	src/gl_struct.h	/^} motion_blur_params_t;$/;"	t	typeref:struct:motion_blur_params_s
motionspeed_e	src/p_spec.h	/^} motionspeed_e;$/;"	t	typeref:enum:__anon239
mouseSensitivity_horiz	src/m_menu.c	/^int mouseSensitivity_horiz; \/\/ has default   \/\/  killough$/;"	v
mouseSensitivity_mlook	src/e6y.c	/^int mouseSensitivity_mlook;$/;"	v
mouseSensitivity_vert	src/m_menu.c	/^int mouseSensitivity_vert;  \/\/ has default$/;"	v
mouse_accel	src/m_menu.c	/^  mouse_accel,$/;"	e	enum:__anon156	file:
mouse_acceleration	src/e6y.c	/^int mouse_acceleration;$/;"	v
mouse_accelfactor	src/e6y.c	/^float mouse_accelfactor;$/;"	v
mouse_doubleclick_as_use	src/e6y.c	/^int mouse_doubleclick_as_use;$/;"	v
mouse_e	src/m_menu.c	/^} mouse_e;$/;"	v	typeref:enum:__anon156
mouse_empty1	src/m_menu.c	/^  mouse_empty1,$/;"	e	enum:__anon156	file:
mouse_empty2	src/m_menu.c	/^  mouse_empty2,$/;"	e	enum:__anon156	file:
mouse_empty3	src/m_menu.c	/^  mouse_empty3,$/;"	e	enum:__anon156	file:
mouse_empty4	src/m_menu.c	/^  mouse_empty4,$/;"	e	enum:__anon156	file:
mouse_enabled	src/SDL/i_video.c	/^static dboolean mouse_enabled; \/\/ usemouse, but can be overriden by -nomouse$/;"	v	file:
mouse_end	src/m_menu.c	/^  mouse_end$/;"	e	enum:__anon156	file:
mouse_handler	src/e6y.c	/^int mouse_handler;$/;"	v
mouse_horiz	src/m_menu.c	/^  mouse_horiz,$/;"	e	enum:__anon156	file:
mouse_listener	src/TEXTSCREEN/txt_window.h	/^    TxtWindowMousePress mouse_listener;$/;"	m	struct:txt_window_s
mouse_listener_data	src/TEXTSCREEN/txt_window.h	/^    void *mouse_listener_data;$/;"	m	struct:txt_window_s
mouse_mlook	src/m_menu.c	/^  mouse_mlook,$/;"	e	enum:__anon156	file:
mouse_press	src/TEXTSCREEN/txt_widget.h	/^    TxtMousePressFunc mouse_press;$/;"	m	struct:txt_widget_class_s
mouse_vert	src/m_menu.c	/^  mouse_vert,$/;"	e	enum:__anon156	file:
mousearray	src/g_game.c	/^static int mousearray[6];$/;"	v	file:
mousebbackward	src/g_keys.c	/^int mousebbackward;$/;"	v
mousebfire	src/g_keys.c	/^int mousebfire;$/;"	v
mousebforward	src/g_keys.c	/^int mousebforward;$/;"	v
mousebstrafe	src/g_keys.c	/^int mousebstrafe;$/;"	v
mousebuse	src/g_keys.c	/^int mousebuse;$/;"	v
mousebuttons	src/g_game.c	/^static int *mousebuttons = &mousearray[1];    \/\/ allow [-1]$/;"	v	file:
mousesens	src/m_menu.c	/^  mousesens,$/;"	e	enum:__anon155	file:
mousex	src/g_game.c	/^static int   mousex;$/;"	v	file:
mousey	src/g_game.c	/^static int   mousey;$/;"	v	file:
move_cursor_left	src/hu_input.c	/^static bool move_cursor_left(input_widget_t *iw) {$/;"	f	file:
move_cursor_right	src/hu_input.c	/^static bool move_cursor_right(input_widget_t *iw) {$/;"	f	file:
movecount	src/p_mobj.h	/^    short               movecount;      \/\/ when 0, select a new dir$/;"	m	struct:mobj_s
movedir	src/p_mobj.h	/^    short               movedir;        \/\/ 0-7$/;"	m	struct:mobj_s
movefactor	src/p_mobj.h	/^    int movefactor;$/;"	m	struct:mobj_s
movefactor	src/p_spec.h	/^  int movefactor;      \/\/ inertia factor when adding to momentum$/;"	m	struct:__anon273
movefactor	src/r_defs.h	/^  int friction,movefactor;$/;"	m	struct:__anon283
movement_maxviewpitch	src/e6y.c	/^int movement_maxviewpitch;$/;"	v
movement_mouseinvert	src/e6y.c	/^int movement_mouseinvert;$/;"	v
movement_mouselook	src/e6y.c	/^int movement_mouselook;$/;"	v
movement_shorttics	src/e6y.c	/^int movement_shorttics;$/;"	v
movement_smooth	src/r_fps.c	/^int movement_smooth;$/;"	v
movement_smooth_default	src/r_fps.c	/^int movement_smooth_default;$/;"	v
movement_strafe50	src/e6y.c	/^int movement_strafe50;$/;"	v
movement_strafe50onturns	src/e6y.c	/^int movement_strafe50onturns;$/;"	v
mp_data	src/MUSIC/madplayer.c	/^static const void *mp_data;$/;"	v	file:
mp_fixtoshort	src/MUSIC/madplayer.c	/^static inline short mp_fixtoshort (mad_fixed_t f)$/;"	f	file:
mp_init	src/MUSIC/madplayer.c	/^static int mp_init (int samplerate)$/;"	f	file:
mp_leftoversamppos	src/MUSIC/madplayer.c	/^static int mp_leftoversamppos = 0;$/;"	v	file:
mp_leftoversamps	src/MUSIC/madplayer.c	/^static int mp_leftoversamps = 0; \/\/ number of extra samples$/;"	v	file:
mp_len	src/MUSIC/madplayer.c	/^static int mp_len;$/;"	v	file:
mp_looping	src/MUSIC/madplayer.c	/^static int mp_looping = 0;$/;"	v	file:
mp_name	src/MUSIC/madplayer.c	/^static const char *mp_name (void)$/;"	f	file:
mp_pause	src/MUSIC/madplayer.c	/^static void mp_pause (void)$/;"	f	file:
mp_paused	src/MUSIC/madplayer.c	/^static int mp_paused = 0;$/;"	v	file:
mp_play	src/MUSIC/madplayer.c	/^static void mp_play (const void *handle, int looping)$/;"	f	file:
mp_player	src/MUSIC/madplayer.c	/^const music_player_t mp_player =$/;"	v
mp_playing	src/MUSIC/madplayer.c	/^static int mp_playing = 0;$/;"	v	file:
mp_registersong	src/MUSIC/madplayer.c	/^static const void *mp_registersong (const void *data, unsigned len)$/;"	f	file:
mp_render	src/MUSIC/madplayer.c	/^static void mp_render (void *dest, unsigned nsamp)$/;"	f	file:
mp_render_ex	src/MUSIC/madplayer.c	/^static void mp_render_ex (void *dest, unsigned nsamp)$/;"	f	file:
mp_resume	src/MUSIC/madplayer.c	/^static void mp_resume (void)$/;"	f	file:
mp_samplerate_target	src/MUSIC/madplayer.c	/^static int mp_samplerate_target = 0;$/;"	v	file:
mp_setvolume	src/MUSIC/madplayer.c	/^static void mp_setvolume (int v)$/;"	f	file:
mp_shutdown	src/MUSIC/madplayer.c	/^static void mp_shutdown (void)$/;"	f	file:
mp_stop	src/MUSIC/madplayer.c	/^static void mp_stop (void)$/;"	f	file:
mp_unregistersong	src/MUSIC/madplayer.c	/^static void mp_unregistersong (const void *handle)$/;"	f	file:
mp_version	src/cmp.c	/^static const uint32_t mp_version = 5;$/;"	v	file:
mp_volume	src/MUSIC/madplayer.c	/^static int mp_volume = 0; \/\/ 0-15$/;"	v	file:
mpoint_t	src/am_map.h	/^} mpoint_t;$/;"	t	typeref:struct:__anon2
ms_per_beat	src/MUSIC/oplplayer.c	/^    unsigned int ms_per_beat;$/;"	m	struct:__anon198	file:
ms_to_next_tick	src/SDL/i_system.c	/^int ms_to_next_tick;$/;"	v
msec	src/r_fps.h	/^  float msec;$/;"	m	struct:__anon302
msecnode_s	src/r_defs.h	/^typedef struct msecnode_s$/;"	s
msecnode_t	src/r_defs.h	/^} msecnode_t;$/;"	t	typeref:struct:msecnode_s
msg	src/hu_stuff.h	/^  const char *msg;$/;"	m	struct:custom_message_s
msg	src/hu_stuff.h	/^  custom_message_t msg;$/;"	m	struct:message_thinker_s
msgNames	src/m_menu.c	/^char msgNames[2][9]  = {"M_MSGOFF","M_MSGON"};$/;"	v
msort	src/r_things.c	/^static void msort(vissprite_t **s, vissprite_t **t, int n)$/;"	f	file:
mtof_zoommul	src/am_map.c	/^static fixed_t mtof_zoommul; \/\/ how far the window zooms each tic (map coords)$/;"	v	file:
mult_screens_index	src/m_menu.c	/^int mult_screens_index; \/\/ the index of the current screen in a set$/;"	v
multiline	src/PCRELIB/pcrecpp.h	/^  bool multiline() const {$/;"	f	class:pcrecpp::RE_Options
multiline	src/PCRELIB/pcregrep.c	/^static BOOL multiline = FALSE;$/;"	v	file:
mus2mid	src/mus2mid.c	/^dboolean mus2mid(MEMFILE *musinput, MEMFILE *midioutput)$/;"	f
mus_None	src/sounds.h	/^  mus_None,$/;"	e	enum:__anon317
mus_adrian	src/sounds.h	/^  mus_adrian,$/;"	e	enum:__anon317
mus_ampie	src/sounds.h	/^  mus_ampie,$/;"	e	enum:__anon317
mus_betwee	src/sounds.h	/^  mus_betwee,$/;"	e	enum:__anon317
mus_bunny	src/sounds.h	/^  mus_bunny,$/;"	e	enum:__anon317
mus_card	src/SDL/i_sound.c	/^int mus_card = 1;           \/\/ created here to avoid changes to core Boom files$/;"	v
mus_changecontroller	src/mus2mid.c	/^  mus_changecontroller = 0x40,$/;"	e	enum:__anon174	file:
mus_count2	src/sounds.h	/^  mus_count2,$/;"	e	enum:__anon317
mus_countd	src/sounds.h	/^  mus_countd,$/;"	e	enum:__anon317
mus_ddtbl2	src/sounds.h	/^  mus_ddtbl2,$/;"	e	enum:__anon317
mus_ddtbl3	src/sounds.h	/^  mus_ddtbl3,$/;"	e	enum:__anon317
mus_ddtblu	src/sounds.h	/^  mus_ddtblu,$/;"	e	enum:__anon317
mus_dead	src/sounds.h	/^  mus_dead,$/;"	e	enum:__anon317
mus_dead2	src/sounds.h	/^  mus_dead2,$/;"	e	enum:__anon317
mus_dm2int	src/sounds.h	/^  mus_dm2int,$/;"	e	enum:__anon317
mus_dm2ttl	src/sounds.h	/^  mus_dm2ttl,$/;"	e	enum:__anon317
mus_doom	src/sounds.h	/^  mus_doom,$/;"	e	enum:__anon317
mus_doom2	src/sounds.h	/^  mus_doom2,$/;"	e	enum:__anon317
mus_e1m1	src/sounds.h	/^  mus_e1m1,$/;"	e	enum:__anon317
mus_e1m2	src/sounds.h	/^  mus_e1m2,$/;"	e	enum:__anon317
mus_e1m3	src/sounds.h	/^  mus_e1m3,$/;"	e	enum:__anon317
mus_e1m4	src/sounds.h	/^  mus_e1m4,$/;"	e	enum:__anon317
mus_e1m5	src/sounds.h	/^  mus_e1m5,$/;"	e	enum:__anon317
mus_e1m6	src/sounds.h	/^  mus_e1m6,$/;"	e	enum:__anon317
mus_e1m7	src/sounds.h	/^  mus_e1m7,$/;"	e	enum:__anon317
mus_e1m8	src/sounds.h	/^  mus_e1m8,$/;"	e	enum:__anon317
mus_e1m9	src/sounds.h	/^  mus_e1m9,$/;"	e	enum:__anon317
mus_e2m1	src/sounds.h	/^  mus_e2m1,$/;"	e	enum:__anon317
mus_e2m2	src/sounds.h	/^  mus_e2m2,$/;"	e	enum:__anon317
mus_e2m3	src/sounds.h	/^  mus_e2m3,$/;"	e	enum:__anon317
mus_e2m4	src/sounds.h	/^  mus_e2m4,$/;"	e	enum:__anon317
mus_e2m5	src/sounds.h	/^  mus_e2m5,$/;"	e	enum:__anon317
mus_e2m6	src/sounds.h	/^  mus_e2m6,$/;"	e	enum:__anon317
mus_e2m7	src/sounds.h	/^  mus_e2m7,$/;"	e	enum:__anon317
mus_e2m8	src/sounds.h	/^  mus_e2m8,$/;"	e	enum:__anon317
mus_e2m9	src/sounds.h	/^  mus_e2m9,$/;"	e	enum:__anon317
mus_e3m1	src/sounds.h	/^  mus_e3m1,$/;"	e	enum:__anon317
mus_e3m2	src/sounds.h	/^  mus_e3m2,$/;"	e	enum:__anon317
mus_e3m3	src/sounds.h	/^  mus_e3m3,$/;"	e	enum:__anon317
mus_e3m4	src/sounds.h	/^  mus_e3m4,$/;"	e	enum:__anon317
mus_e3m5	src/sounds.h	/^  mus_e3m5,$/;"	e	enum:__anon317
mus_e3m6	src/sounds.h	/^  mus_e3m6,$/;"	e	enum:__anon317
mus_e3m7	src/sounds.h	/^  mus_e3m7,$/;"	e	enum:__anon317
mus_e3m8	src/sounds.h	/^  mus_e3m8,$/;"	e	enum:__anon317
mus_e3m9	src/sounds.h	/^  mus_e3m9,$/;"	e	enum:__anon317
mus_evil	src/sounds.h	/^  mus_evil,$/;"	e	enum:__anon317
mus_extend_volume	src/e6y.c	/^int mus_extend_volume;$/;"	v
mus_fluidsynth_gain	src/SDL/i_emusic.c	/^int mus_fluidsynth_gain; \/\/ NSM  fine tune fluidsynth output level$/;"	v
mus_in_cit	src/sounds.h	/^  mus_in_cit,$/;"	e	enum:__anon317
mus_inter	src/sounds.h	/^  mus_inter,$/;"	e	enum:__anon317
mus_intro	src/sounds.h	/^  mus_intro,$/;"	e	enum:__anon317
mus_introa	src/sounds.h	/^  mus_introa,$/;"	e	enum:__anon317
mus_messag	src/sounds.h	/^  mus_messag,$/;"	e	enum:__anon317
mus_messg2	src/sounds.h	/^  mus_messg2,$/;"	e	enum:__anon317
mus_openin	src/sounds.h	/^  mus_openin,$/;"	e	enum:__anon317
mus_opl_gain	src/SDL/i_emusic.c	/^int mus_opl_gain;        \/\/ NSM  fine tune OPL output level$/;"	v
mus_pause_opt	src/m_misc.c	/^int         mus_pause_opt; \/\/ 0 = kill music, 1 = pause, 2 = continue$/;"	v
mus_paused	src/s_sound.c	/^static dboolean mus_paused;$/;"	v	file:
mus_pitchwheel	src/mus2mid.c	/^  mus_pitchwheel = 0x20,$/;"	e	enum:__anon174	file:
mus_playing	src/s_sound.c	/^static musicinfo_t *mus_playing;$/;"	v	file:
mus_presskey	src/mus2mid.c	/^  mus_presskey = 0x10,$/;"	e	enum:__anon174	file:
mus_read_m	src/sounds.h	/^  mus_read_m,$/;"	e	enum:__anon317
mus_releasekey	src/mus2mid.c	/^  mus_releasekey = 0x00,$/;"	e	enum:__anon174	file:
mus_romer2	src/sounds.h	/^  mus_romer2,$/;"	e	enum:__anon317
mus_romero	src/sounds.h	/^  mus_romero,$/;"	e	enum:__anon317
mus_runni2	src/sounds.h	/^  mus_runni2,$/;"	e	enum:__anon317
mus_runnin	src/sounds.h	/^  mus_runnin,$/;"	e	enum:__anon317
mus_scoreend	src/mus2mid.c	/^  mus_scoreend = 0x60$/;"	e	enum:__anon174	file:
mus_shawn	src/sounds.h	/^  mus_shawn,$/;"	e	enum:__anon317
mus_shawn2	src/sounds.h	/^  mus_shawn2,$/;"	e	enum:__anon317
mus_shawn3	src/sounds.h	/^  mus_shawn3,$/;"	e	enum:__anon317
mus_stalks	src/sounds.h	/^  mus_stalks,$/;"	e	enum:__anon317
mus_stlks2	src/sounds.h	/^  mus_stlks2,$/;"	e	enum:__anon317
mus_stlks3	src/sounds.h	/^  mus_stlks3,$/;"	e	enum:__anon317
mus_systemevent	src/mus2mid.c	/^  mus_systemevent = 0x30,$/;"	e	enum:__anon174	file:
mus_tense	src/sounds.h	/^  mus_tense,$/;"	e	enum:__anon317
mus_the_da	src/sounds.h	/^  mus_the_da,$/;"	e	enum:__anon317
mus_theda2	src/sounds.h	/^  mus_theda2,$/;"	e	enum:__anon317
mus_theda3	src/sounds.h	/^  mus_theda3,$/;"	e	enum:__anon317
mus_ultima	src/sounds.h	/^  mus_ultima,$/;"	e	enum:__anon317
mus_victor	src/sounds.h	/^  mus_victor,$/;"	e	enum:__anon317
musevent	src/mus2mid.c	/^} musevent;$/;"	t	typeref:enum:__anon174	file:
musheader	src/mus2mid.h	/^} musheader;$/;"	t	typeref:struct:__anon176
music	src/SDL/i_music.c	/^static Mix_Music *music[2] = { NULL, NULL };$/;"	v	file:
music_handle	src/SDL/i_emusic.c	/^static const void *music_handle = NULL;$/;"	v	file:
music_initialized	src/MUSIC/oplplayer.c	/^static dboolean music_initialized = false;$/;"	v	file:
music_player_order	src/SDL/i_emusic.c	/^const char *music_player_order[NUM_MUS_PLAYERS] = {$/;"	v
music_player_t	src/MUSIC/musicplayer.h	/^} music_player_t;$/;"	t	typeref:struct:__anon177
music_player_was_init	src/SDL/i_emusic.c	/^static int music_player_was_init[NUM_MUS_PLAYERS];$/;"	v	file:
music_players	src/SDL/i_emusic.c	/^static const music_player_t *music_players[] = {$/;"	v	file:
music_tmp	src/SDL/i_music.c	/^static char *music_tmp = NULL;    \/* cph - name of music temporary file *\/$/;"	v	file:
music_tmp_ext	src/SDL/i_music.c	/^static const char *music_tmp_ext[] = { \/\/ List of extensions that can be$/;"	v	file:
music_vol	src/m_menu.h	/^  music_vol,$/;"	e	enum:__anon165
musicenum_t	src/sounds.h	/^} musicenum_t;$/;"	t	typeref:enum:__anon317
musicinfo_t	src/sounds.h	/^} musicinfo_t;$/;"	t	typeref:struct:__anon316
musicnum_current	src/s_sound.c	/^static int musicnum_current;$/;"	v	file:
musinfo	src/s_advsound.c	/^musinfo_t musinfo;$/;"	v
musinfo_s	src/s_advsound.h	/^typedef struct musinfo_s$/;"	s
musinfo_t	src/s_advsound.h	/^} musinfo_t;$/;"	t	typeref:struct:musinfo_s
musmutex	src/SDL/i_sound.c	/^SDL_mutex *musmutex;        \/\/ lock for updating any params related to music$/;"	v
muxpipe	src/i_capture.c	/^static pipeinfo_t muxpipe;$/;"	v	file:
my_pclose3	src/i_capture.c	/^static void my_pclose3 (pipeinfo_t *p)$/;"	f	file:
my_popen3	src/i_capture.c	/^static int my_popen3 (pipeinfo_t *p)$/;"	f	file:
myargc	src/d_server.c	/^int myargc;$/;"	v
myargc	src/m_argv.c	/^int    myargc;$/;"	v
myargv	src/d_server.c	/^char** myargv;$/;"	v
myargv	src/m_argv.c	/^char **myargv;$/;"	v
n	src/st_lib.h	/^  st_number_t   n;$/;"	m	struct:__anon321
n_players_in_state	src/d_server.c	/^dboolean n_players_in_state(int n, int ps) {$/;"	f
name	src/MUSIC/musicplayer.h	/^  const char *(*name)(void);$/;"	m	struct:__anon177
name	src/PCRELIB/pcre_internal.h	/^  const char *name;$/;"	m	struct:__anon212
name	src/PCSOUND/pcsound.h	/^  const char *name;$/;"	m	struct:pcsound_driver_s
name	src/TEXTSCREEN/txt_io.c	/^    const char *name;$/;"	m	struct:__anon327	file:
name	src/d_deh.c	/^  const char *name; \/\/ CPhipps - const*$/;"	m	struct:deh_mobjflags_s	file:
name	src/d_main.c	/^  const char *name;$/;"	m	struct:__anon21	file:
name	src/d_player.h	/^  char   *name;$/;"	m	struct:player_s
name	src/e6y_launcher.c	/^  char name[PATH_MAX];$/;"	m	struct:__anon67	file:
name	src/f_finale.c	/^  const char **name; \/\/ CPhipps - const**$/;"	m	struct:__anon70	file:
name	src/gl_intern.h	/^  char name[256];$/;"	m	struct:GLShader_s
name	src/gl_intern.h	/^  char name[9];$/;"	m	struct:box_skybox_s
name	src/gl_struct.h	/^  const char* name;$/;"	m	struct:am_icon_s
name	src/hu_stuff.c	/^  char name[80];$/;"	m	struct:hud_cfg_item_s	file:
name	src/hu_stuff.c	/^  const char *name;$/;"	m	struct:hud_widget_s	file:
name	src/m_menu.h	/^    const char          *name;  \/* name *\/$/;"	m	union:setup_menu_s::__anon167
name	src/m_menu.h	/^  char  name[10];$/;"	m	struct:menuitem_s
name	src/m_misc.h	/^  const char* name;$/;"	m	struct:default_s
name	src/r_data.c	/^  char       name[8];$/;"	m	struct:__anon278	file:
name	src/r_data.h	/^  char  name[8];         \/\/ Keep name for switch changing, etc.$/;"	m	struct:__anon280
name	src/r_demo.c	/^  const char name[9];$/;"	m	struct:__anon292	file:
name	src/sounds.h	/^  const char *name; \/\/ CPhipps - const$/;"	m	struct:__anon316
name	src/sounds.h	/^  const char *name; \/\/ CPhipps - const$/;"	m	struct:sfxinfo_struct
name	src/v_video.c	/^  const char *name;$/;"	m	struct:__anon338	file:
name	src/w_wad.h	/^  char  name[9];$/;"	m	struct:__anon358
name	src/w_wad.h	/^  char name[8];$/;"	m	struct:__anon354
name	src/w_wad.h	/^  char* name;$/;"	m	struct:__anon356
name1	src/p_spec.h	/^  char name1[9];$/;"	m	struct:__anon260
name2	src/p_spec.h	/^  char name2[9];$/;"	m	struct:__anon260
name_count	src/PCRELIB/pcre_internal.h	/^  pcre_uint16 name_count;         \/* Number of name items *\/$/;"	m	struct:real_pcre
name_entry_size	src/PCRELIB/pcre_internal.h	/^  int  name_entry_size;         \/* Size of each entry *\/$/;"	m	struct:compile_data
name_entry_size	src/PCRELIB/pcre_internal.h	/^  pcre_uint16 name_entry_size;    \/* Size of any name items *\/$/;"	m	struct:real_pcre
name_table	src/PCRELIB/pcre_internal.h	/^  uschar *name_table;           \/* The name\/number table *\/$/;"	m	struct:compile_data
name_table_offset	src/PCRELIB/pcre_internal.h	/^  pcre_uint16 name_table_offset;  \/* Offset to name table that follows *\/$/;"	m	struct:real_pcre
names_found	src/PCRELIB/pcre_internal.h	/^  int  names_found;             \/* Number of entries so far *\/$/;"	m	struct:compile_data
nanims	src/wi_stuff.c	/^  int   nanims;$/;"	m	struct:__anon348	file:
needs_rebuilding	src/hu_input.c	/^  bool needs_rebuilding;$/;"	m	struct:input_widget_s	file:
needs_rebuilding	src/hu_msg.c	/^  bool needs_rebuilding;$/;"	m	struct:message_widget_s	file:
needsupdate	src/hu_lib.h	/^  int   needsupdate;$/;"	m	struct:__anon121
negonearray	src/r_things.c	/^int *negonearray;        \/\/ killough 2\/8\/98: \/\/ dropoff overflow$/;"	v
net_channel_e	src/n_net.h	/^} net_channel_e;$/;"	t	typeref:enum:__anon204
net_host	src/n_net.c	/^static ENetHost    *net_host = NULL;$/;"	v	file:
net_peers	src/n_peer.c	/^static GHashTable *net_peers = NULL;$/;"	v	file:
net_sync_type_e	src/n_net.h	/^} net_sync_type_e;$/;"	t	typeref:enum:__anon205
netchan_s	src/n_peer.h	/^typedef struct netchan_s {$/;"	s
netchan_t	src/n_peer.h	/^} netchan_t;$/;"	t	typeref:struct:netchan_s
netcmds	src/d_client.c	/^ticcmd_t         netcmds[MAXPLAYERS][BACKUPTICS];$/;"	v
netcom	src/n_peer.h	/^  netcom_t      netcom;$/;"	m	struct:netpeer_s
netcom_s	src/n_peer.h	/^typedef struct netcom_s {$/;"	s
netcom_t	src/n_peer.h	/^} netcom_t;$/;"	t	typeref:struct:netcom_s
netdemo	src/g_game.c	/^static dboolean    netdemo;$/;"	v	file:
netgame	src/n_net.c	/^dboolean        netgame   = false;$/;"	v
netmisc_t	src/d_net.h	/^} netmisc_t;$/;"	t	typeref:struct:__anon26
netmisctype_t	src/d_net.h	/^} netmisctype_t;$/;"	t	typeref:enum:__anon25
netpeer_iter_t	src/n_peer.h	/^typedef void netpeer_iter_t;$/;"	t
netpeer_s	src/n_peer.h	/^typedef struct netpeer_s {$/;"	s
netpeer_t	src/n_peer.h	/^} netpeer_t;$/;"	t	typeref:struct:netpeer_s
netpeeriternode_s	src/n_peer.h	/^typedef struct netpeeriternode_s {$/;"	s
netpeeriternode_t	src/n_peer.h	/^} netpeeriternode_t;$/;"	t	typeref:struct:netpeeriternode_s
netserver	src/n_net.c	/^dboolean        netserver = false;$/;"	v
netsync	src/n_net.c	/^net_sync_type_e netsync   = NET_SYNC_TYPE_NONE;$/;"	v
netsync_s	src/n_peer.h	/^typedef struct netsync_s {$/;"	s
netsync_t	src/n_peer.h	/^} netsync_t;$/;"	t	typeref:struct:netsync_s
netticcmd_s	src/n_net.h	/^typedef struct netticcmd_s {$/;"	s
netticcmd_t	src/n_net.h	/^} netticcmd_t;$/;"	t	typeref:struct:netticcmd_s
new_free	src/PCRELIB/pcretest.c	/^static void new_free(void *block)$/;"	f	file:
new_info	src/PCRELIB/pcretest.c	/^static void new_info(pcre *re, pcre_extra *study, int option, void *ptr)$/;"	f	file:
new_malloc	src/PCRELIB/pcretest.c	/^static void *new_malloc(size_t size)$/;"	f	file:
new_recursive	src/PCRELIB/pcre_exec.c	3433;"	d	file:
new_recursive	src/PCRELIB/pcre_exec.c	456;"	d	file:
new_visplane	src/r_plane.c	/^static visplane_t *new_visplane(unsigned hash)$/;"	f	file:
newg_end	src/m_menu.c	/^  newg_end$/;"	e	enum:__anon153	file:
newgame	src/m_menu.c	/^  newgame = 0,$/;"	e	enum:__anon148	file:
newgame_e	src/m_menu.c	/^} newgame_e;$/;"	v	typeref:enum:__anon153
newline	src/PCRELIB/pcregrep.c	/^static char *newline = NULL;$/;"	v	file:
newpal	src/SDL/i_video.c	/^static int newpal = 0;$/;"	v	file:
newptrb	src/PCRELIB/pcre_exec.c	3455;"	d	file:
newptrb	src/PCRELIB/pcre_exec.c	490;"	d	file:
newspecial	src/p_spec.h	/^  int newspecial;$/;"	m	struct:__anon268
newspecial	src/p_spec.h	/^  int newspecial;$/;"	m	struct:__anon269
newthinkerpresent	src/p_tick.c	/^static dboolean newthinkerpresent;$/;"	v	file:
next	src/MUSIC/oplplayer.c	/^    opl_voice_t *next;$/;"	m	struct:opl_voice_s	file:
next	src/PCRELIB/pcre_exec.c	3428;"	d	file:
next	src/PCRELIB/pcre_exec.c	451;"	d	file:
next	src/TEXTSCREEN/txt_gui.c	/^    txt_cliparea_t *next;$/;"	m	struct:txt_cliparea_s	file:
next	src/d_player.h	/^  int         next;$/;"	m	struct:__anon61
next	src/d_think.h	/^  struct thinker_s*   next;$/;"	m	struct:thinker_s	typeref:struct:thinker_s::thinker_s
next	src/gl_clipper.c	/^  struct clipnode_s *prev, *next;$/;"	m	struct:clipnode_s	typeref:struct:clipnode_s::	file:
next	src/p_setup.c	/^  struct linelist_t *next;$/;"	m	struct:linelist_t	typeref:struct:linelist_t::linelist_t	file:
next	src/p_spec.h	/^  struct ceilinglist *next,**prev;$/;"	m	struct:ceilinglist	typeref:struct:ceilinglist::ceilinglist
next	src/p_spec.h	/^  struct platlist *next,**prev;$/;"	m	struct:platlist	typeref:struct:platlist::platlist
next	src/r_data.h	/^  int   next, index;     \/\/ killough 1\/31\/98: used in hashing algorithm$/;"	m	struct:__anon280
next	src/r_defs.h	/^  struct visplane *next;        \/\/ Next visplane in hash chain -- killough$/;"	m	struct:visplane	typeref:struct:visplane::visplane
next	src/r_fps.h	/^  unsigned int next;$/;"	m	struct:__anon302
next	src/w_wad.h	/^  int index, next;$/;"	m	struct:__anon358
next	src/z_zone.c	/^  struct memblock *next,*prev;$/;"	m	struct:memblock	typeref:struct:memblock::memblock	file:
next_item_length	src/PCRELIB/pcre.h	/^  int          next_item_length;  \/* Length of next item in the pattern *\/$/;"	m	struct:pcre_callout_block
next_weapon	src/g_game.c	/^static int next_weapon = 0;$/;"	v	file:
nextcolormap	src/r_draw.h	/^  const lighttable_t  *nextcolormap;$/;"	m	struct:__anon298
nextcolormap	src/r_draw.h	/^  const lighttable_t  *nextcolormap;$/;"	m	struct:draw_column_vars_s
nextpool	src/z_bmalloc.c	/^  struct bmalpool_s *nextpool;$/;"	m	struct:bmalpool_s	typeref:struct:bmalpool_s::bmalpool_s	file:
nextsec	src/r_defs.h	/^  int nextsec;     \/\/ -1 or number of next step sector$/;"	m	struct:__anon283
nextsource	src/r_draw.h	/^  const byte          *nextsource; \/\/ first pixel in next column$/;"	m	struct:draw_column_vars_s
nextstate	src/info.h	/^  statenum_t  nextstate;    \/* linked list pointer to next state or zero   *\/$/;"	m	struct:__anon136
nexttag	src/r_defs.h	/^  int firsttag,nexttag;  \/\/ killough 4\/17\/98: improves searches for tags.$/;"	m	struct:line_s
nexttag	src/r_defs.h	/^  int nexttag,firsttag;  \/\/ killough 1\/30\/98: improves searches for tags.$/;"	m	struct:__anon283
nexttic	src/wi_stuff.c	/^  int   nexttic;$/;"	m	struct:__anon348	file:
ng_state	src/wi_stuff.c	/^static int    ng_state;$/;"	v	file:
nightmare	src/m_menu.c	/^  nightmare,$/;"	e	enum:__anon153	file:
nl	src/PCRELIB/pcre_internal.h	/^  uschar nl[4];                 \/* Newline string *\/$/;"	m	struct:compile_data
nl	src/PCRELIB/pcre_internal.h	/^  uschar nl[4];                 \/* Newline string *\/$/;"	m	struct:dfa_match_data
nl	src/PCRELIB/pcre_internal.h	/^  uschar nl[4];                 \/* Newline string *\/$/;"	m	struct:match_data
nl	src/hu_lib.h	/^  int     nl;                          \/\/ height in lines$/;"	m	struct:__anon123
nllen	src/PCRELIB/pcre_internal.h	/^  int    nllen;                 \/* 1 or 2 for newline string length *\/$/;"	m	struct:dfa_match_data
nllen	src/PCRELIB/pcre_internal.h	/^  int    nllen;                 \/* 1 or 2 for newline string length *\/$/;"	m	struct:match_data
nllen	src/PCRELIB/pcre_internal.h	/^  int  nllen;                   \/* 1 or 2 for newline string length *\/$/;"	m	struct:compile_data
nm_authrequest	src/n_proto.h	37;"	d
nm_authresponse	src/n_proto.h	32;"	d
nm_names	src/n_proto.c	/^const char *nm_names[9] = {$/;"	v
nm_playermessage	src/n_proto.h	35;"	d
nm_playerpreferencechange	src/n_proto.h	36;"	d
nm_plcolour	src/d_net.h	/^  nm_plcolour = 3,$/;"	e	enum:__anon25
nm_rconcommand	src/n_proto.h	38;"	d
nm_savegamename	src/d_net.h	/^  nm_savegamename = 4,$/;"	e	enum:__anon25
nm_servermessage	src/n_proto.h	33;"	d
nm_setup	src/n_proto.h	31;"	d
nm_sync	src/n_proto.h	34;"	d
nm_voterequest	src/n_proto.h	39;"	d
no_auto_capture	src/PCRELIB/pcrecpp.h	/^  bool no_auto_capture() const {$/;"	f	class:pcrecpp::RE_Options
no_overlapped_sprites	src/gl_main.c	/^static int no_overlapped_sprites;$/;"	v	file:
no_overlapped_sprites	src/p_setup.c	/^static int no_overlapped_sprites;$/;"	v	file:
noblit	src/g_game.c	/^dboolean        noblit;        \/\/ for comparative timing purposes$/;"	v
node_t	src/r_defs.h	/^} node_t;$/;"	t	typeref:struct:__anon288
nodes	src/d_ipxgate.c	/^int nodes;$/;"	v
nodes	src/p_setup.c	/^node_t   *nodes;$/;"	v
nodesVersion	src/p_setup.c	/^int     nodesVersion  = 0;$/;"	v
nodesfound	src/d_ipxgate.c	/^  short     nodesfound;$/;"	m	struct:__anon17	file:
nodeswanted	src/d_ipxgate.c	/^  short     nodeswanted;$/;"	m	struct:__anon17	file:
nodrawers	src/g_game.c	/^dboolean        nodrawers;     \/\/ for comparative timing purposes$/;"	v
nofit	src/g_overflow.h	/^  dboolean *nofit;$/;"	m	struct:spechit_overrun_param_s
nofit	src/p_map.c	/^static dboolean crushchange, nofit;$/;"	v	file:
noiseAdd	src/MUSIC/dbopl.h	/^  Bit32u noiseAdd;$/;"	m	struct:_Chip
noiseCounter	src/MUSIC/dbopl.h	/^  Bit32u noiseCounter;$/;"	m	struct:_Chip
noiseValue	src/MUSIC/dbopl.h	/^  Bit32u noiseValue;$/;"	m	struct:_Chip
nomonsters	src/d_main.c	/^dboolean nomonsters;     \/\/ working -nomonsters$/;"	v
nomusicparm	src/d_main.c	/^dboolean nomusicparm;$/;"	v
none	src/doomdef.h	/^  none$/;"	e	enum:__anon44
nopartial	src/PCRELIB/pcre_internal.h	/^  BOOL nopartial;               \/* Set TRUE if partial won't work *\/$/;"	m	struct:compile_data
normal	src/p_spec.h	/^  normal,$/;"	e	enum:__anon253
normalize	src/hu_input.c	/^static void normalize(input_widget_t *iw) {$/;"	f	file:
nosfxparm	src/d_main.c	/^dboolean nosfxparm;$/;"	v
nosuch	src/d_server.c	242;"	d	file:
not_coop	src/m_cheat.h	/^    not_coop = 2,$/;"	e	enum:cheatseq_s::__anon145
not_deh	src/m_cheat.h	/^    not_deh = 16,$/;"	e	enum:cheatseq_s::__anon145
not_demo	src/m_cheat.h	/^    not_demo = 4,$/;"	e	enum:cheatseq_s::__anon145
not_dm	src/m_cheat.h	/^    not_dm   = 1,$/;"	e	enum:cheatseq_s::__anon145
not_menu	src/m_cheat.h	/^    not_menu = 8,$/;"	e	enum:cheatseq_s::__anon145
not_net	src/m_cheat.h	/^    not_net = not_dm | not_coop,$/;"	e	enum:cheatseq_s::__anon145
not_on_heap	src/v_video.h	/^  dboolean not_on_heap; \/\/ if set, no malloc or free is preformed and$/;"	m	struct:__anon342
notbol	src/PCRELIB/pcre_internal.h	/^  BOOL   notbol;                \/* NOTBOL flag *\/$/;"	m	struct:match_data
note	src/MUSIC/oplplayer.c	/^    unsigned int note;$/;"	m	struct:opl_voice_s	file:
note_volume	src/MUSIC/oplplayer.c	/^    unsigned int note_volume;$/;"	m	struct:opl_voice_s	file:
notempty	src/PCRELIB/pcre_internal.h	/^  BOOL   notempty;              \/* Empty string match not wanted *\/$/;"	m	struct:match_data
noteol	src/PCRELIB/pcre_internal.h	/^  BOOL   noteol;                \/* NOTEOL flag *\/$/;"	m	struct:match_data
np	src/n_peer.h	/^  netpeer_t *np;$/;"	m	struct:netpeeriternode_s
nr	src/hu_lib.h	/^  int     nr;                          \/\/ total height in rows$/;"	m	struct:__anon123
ns_colormaps	src/w_wad.h	/^  ns_colormaps,$/;"	e	enum:__anon357
ns_demos	src/w_wad.h	/^  ns_demos,$/;"	e	enum:__anon357
ns_flats	src/w_wad.h	/^  ns_flats,$/;"	e	enum:__anon357
ns_global	src/w_wad.h	/^  ns_global=0,$/;"	e	enum:__anon357
ns_hires	src/w_wad.h	/^  ns_hires \/\/e6y$/;"	e	enum:__anon357
ns_prboom	src/w_wad.h	/^  ns_prboom,$/;"	e	enum:__anon357
ns_sprites	src/w_wad.h	/^  ns_sprites,$/;"	e	enum:__anon357
nstandard_iwads	src/d_main.c	/^const int nstandard_iwads = sizeof(standard_iwads) \/ sizeof(*standard_iwads);$/;"	v
ntessBegin	src/gl_preprocess.c	/^static void CALLBACK ntessBegin( GLenum type )$/;"	f	file:
ntessCombine	src/gl_preprocess.c	/^static void CALLBACK ntessCombine( GLdouble coords[3], vertex_t *vert[4], GLfloat w[4], void **dataOut )$/;"	f	file:
ntessEnd	src/gl_preprocess.c	/^static void CALLBACK ntessEnd( void )$/;"	f	file:
ntessError	src/gl_preprocess.c	/^static void CALLBACK ntessError(GLenum error)$/;"	f	file:
ntessVertex	src/gl_preprocess.c	/^static void CALLBACK ntessVertex( vertex_t *vert )$/;"	f	file:
ntohl	src/MUSIC/midifile.c	52;"	d	file:
ntohl	src/MUSIC/midifile.c	56;"	d	file:
ntohs	src/MUSIC/midifile.c	53;"	d	file:
ntohs	src/MUSIC/midifile.c	62;"	d	file:
nullpad	src/PCRELIB/pcre_internal.h	/^  const unsigned char *nullpad;   \/* NULL padding *\/$/;"	m	struct:real_pcre
num	src/p_setup.c	/^  long num;$/;"	m	struct:linelist_t	file:
num	src/st_lib.h	/^  int*  num;$/;"	m	struct:__anon320
num	src/wi_stuff.c	/^static patchnum_t num[10];$/;"	v	file:
numChangeOnly	src/p_spec.h	/^  numChangeOnly,$/;"	e	enum:__anon250
numChannels	src/s_sound.c	/^int numChannels;$/;"	v
numPosts	src/r_patch.h	/^  int numPosts;$/;"	m	struct:__anon310
num_callbacks	src/TEXTSCREEN/txt_widget.c	/^    int num_callbacks;$/;"	m	struct:txt_callback_table_s	file:
num_deathmatchstarts	src/p_setup.c	/^size_t     num_deathmatchstarts;   \/\/ killough$/;"	v
num_deathmatchstarts_indexes	src/hu_tracers.c	/^int num_deathmatchstarts_indexes = 0;$/;"	v
num_entries	src/MUSIC/opl_queue.c	/^    int num_entries;$/;"	m	struct:opl_callback_queue_s	file:
num_event_mem	src/MUSIC/midifile.c	/^    unsigned int num_event_mem; \/\/ NSM track size of structure$/;"	m	struct:__anon181	file:
num_events	src/MUSIC/midifile.c	/^    unsigned int num_events;$/;"	m	struct:__anon181	file:
num_gameopts	src/d_server.c	/^const int num_gameopts = sizeof gameopt_config_names \/ sizeof gameopt_config_names[0];$/;"	v
num_items	src/gl_intern.h	/^  int num_items[GLDIT_TYPES];$/;"	m	struct:__anon105
num_tracks	src/MUSIC/midifile.c	/^    unsigned int num_tracks;$/;"	m	struct:midi_file_s	file:
num_tracks	src/MUSIC/midifile.c	/^    unsigned short num_tracks;$/;"	m	struct:__anon180	file:
num_tracks	src/MUSIC/oplplayer.c	/^static unsigned int num_tracks = 0;$/;"	v	file:
num_values	src/TEXTSCREEN/txt_dropdown.h	/^    int num_values;$/;"	m	struct:txt_dropdown_list_s
num_version_headers	src/g_save.c	/^static const size_t num_version_headers =$/;"	v	file:
num_vissprite	src/r_things.c	/^static int num_vissprite, num_vissprite_alloc, num_vissprite_ptrs;$/;"	v	file:
num_vissprite_alloc	src/r_things.c	/^static int num_vissprite, num_vissprite_alloc, num_vissprite_ptrs;$/;"	v	file:
num_vissprite_ptrs	src/r_things.c	/^static int num_vissprite, num_vissprite_alloc, num_vissprite_ptrs;$/;"	v	file:
num_widgets	src/TEXTSCREEN/txt_table.h	/^    int num_widgets;$/;"	m	struct:txt_table_s
num_windows	src/TEXTSCREEN/txt_desktop.c	/^static int num_windows = 0;$/;"	v	file:
number	src/PCRELIB/pcre_exec.c	3446;"	d	file:
number	src/PCRELIB/pcre_exec.c	481;"	d	file:
number	src/PCRELIB/pcregrep.c	/^static BOOL number = FALSE;$/;"	v	file:
numbox_value	src/TEXTSCREEN/examples/guitest.c	/^int numbox_value = 0;$/;"	v
numbraintargets	src/p_enemy.c	/^int    numbraintargets;$/;"	v
numbraintargets_alloc	src/p_enemy.c	/^int    numbraintargets_alloc;$/;"	v
numcolormaps	src/r_main.c	/^int numcolormaps;$/;"	v
numdefaults	src/m_misc.c	/^int numdefaults;$/;"	v
numfakeplanes	src/gl_missingtexture.c	/^static int numfakeplanes = 0;$/;"	v	file:
numflats	src/r_data.c	/^int       firstflat, lastflat, numflats;$/;"	v
numframes	src/r_defs.h	/^  int numframes;$/;"	m	struct:__anon291
numheights	src/gl_vertex.c	/^  int numheights;$/;"	m	struct:vertexsplit_info_s	file:
numinterpolations	src/r_fps.c	/^static int numinterpolations = 0;$/;"	v	file:
numitems	src/m_menu.h	/^  short           numitems;     \/\/ # of menu items$/;"	m	struct:menu_s
numlevels	src/e6y.c	/^int numlevels = 0;$/;"	v
numlines	src/p_setup.c	/^int      numlines;$/;"	v
numlines	src/r_defs.h	/^  int numlines, firstline;$/;"	m	struct:subsector_s
numlumps	src/w_wad.c	/^int        numlumps;         \/\/ killough$/;"	v
numlumps	src/w_wad.h	/^  int  numlumps;$/;"	m	struct:__anon353
numnodes	src/d_net.h	/^    short               numnodes;$/;"	m	struct:__anon27
numnodes	src/p_setup.c	/^int      numnodes;$/;"	v
numpics	src/p_spec.h	/^    int         numpics;$/;"	m	struct:__anon236
numplayers	src/d_net.h	/^    short               numplayers;$/;"	m	struct:__anon27
numqueuedpackets	src/d_client.c	/^static unsigned          numqueuedpackets;$/;"	v	file:
numsectors	src/gl_vertex.c	/^  int numsectors;$/;"	m	struct:vertexsplit_info_s	file:
numsectors	src/p_setup.c	/^int      numsectors;$/;"	v
numsegs	src/doomdata.h	/^  unsigned int numsegs;$/;"	m	struct:__anon35
numsegs	src/doomdata.h	/^  unsigned short numsegs;$/;"	m	struct:__anon33
numsegs	src/doomdata.h	/^  unsigned short numsegs;$/;"	m	struct:__anon34
numsegs	src/p_setup.c	/^int      numsegs;$/;"	v
numsides	src/p_setup.c	/^int      numsides;$/;"	v
numspechit	src/g_overflow.h	/^  int *numspechit;$/;"	m	struct:spechit_overrun_param_s
numspechit	src/p_map.c	/^int numspechit;$/;"	v
numsplits	src/gl_vertex.c	/^  int numsplits;$/;"	m	struct:splitsbysector_s	file:
numspritelumps	src/r_data.c	/^int       firstspritelump, lastspritelump, numspritelumps;$/;"	v
numsprites	src/r_things.c	/^int numsprites;$/;"	v
numsubsectors	src/p_setup.c	/^int      numsubsectors;$/;"	v
numswitches	src/p_switch.c	/^static int numswitches;                           \/\/ killough$/;"	v	file:
numtextures	src/r_data.c	/^int       numtextures;$/;"	v
numtics	src/d_ipxgate.c	/^    byte                numtics;$/;"	m	struct:a	file:
numtics	src/d_net.h	/^    byte                numtics;$/;"	m	struct:__anon23
numvertexes	src/p_setup.c	/^int      numvertexes;$/;"	v
numwadfiles	src/r_demo.h	/^  size_t numwadfiles;$/;"	m	struct:__anon294
numwads	src/protocol.h	/^  byte numwads;$/;"	m	struct:setup_packet_s
objcTask	src/MAC/macsupport.rb	/^def objcTask(object, source)$/;"	f
objcxxTask	src/MAC/macsupport.rb	/^def objcxxTask(object, source)$/;"	f
offset	src/PCRELIB/pcre_dfa_exec.c	/^  int offset;                     \/* Offset to opcode *\/$/;"	m	struct:stateblock	file:
offset	src/PCRELIB/pcre_exec.c	3447;"	d	file:
offset	src/PCRELIB/pcre_exec.c	482;"	d	file:
offset	src/doomdata.h	/^  short offset;$/;"	m	struct:__anon36
offset	src/doomdata.h	/^  unsigned short offset;$/;"	m	struct:__anon37
offset	src/hu_msg.c	/^  double offset;$/;"	m	struct:message_widget_s	file:
offset	src/r_defs.h	/^  fixed_t offset;$/;"	m	struct:__anon287
offset_end	src/PCRELIB/pcre_internal.h	/^  int    offset_end;            \/* One past the end *\/$/;"	m	struct:match_data
offset_max	src/PCRELIB/pcre_internal.h	/^  int    offset_max;            \/* The maximum usable for return data *\/$/;"	m	struct:match_data
offset_overflow	src/PCRELIB/pcre_internal.h	/^  BOOL   offset_overflow;       \/* Set if too many extractions *\/$/;"	m	struct:match_data
offset_save	src/PCRELIB/pcre_internal.h	/^  int *offset_save;             \/* Pointer to start of saved offsets *\/$/;"	m	struct:recursion_info
offset_top	src/PCRELIB/pcre_exec.c	3420;"	d	file:
offset_top	src/PCRELIB/pcre_exec.c	438;"	d	file:
offset_vector	src/PCRELIB/pcre.h	/^  int         *offset_vector;     \/* The offset vector *\/$/;"	m	struct:pcre_callout_block
offset_vector	src/PCRELIB/pcre_internal.h	/^  int   *offset_vector;         \/* Offset vector *\/$/;"	m	struct:match_data
offsetof	src/PCRELIB/pcre_internal.h	399;"	d
offsetx	src/gl_intern.h	/^  float offsetx, offsety;$/;"	m	struct:detail_s
offsety	src/gl_intern.h	/^  float offsetx, offsety;$/;"	m	struct:detail_s
ok	src/p_spec.h	/^  ok,$/;"	e	enum:__anon259
old	src/MUSIC/dbopl.h	/^  Bit32s old[2];      \/\/Old data for feedback$/;"	m	struct:_Channel
old_m_h	src/am_map.c	/^static fixed_t old_m_w, old_m_h;$/;"	v	file:
old_m_w	src/am_map.c	/^static fixed_t old_m_w, old_m_h;$/;"	v	file:
old_m_x	src/am_map.c	/^static fixed_t old_m_x, old_m_y;$/;"	v	file:
old_m_y	src/am_map.c	/^static fixed_t old_m_x, old_m_y;$/;"	v	file:
olddirection	src/p_spec.h	/^  int olddirection;$/;"	m	struct:__anon268
oldinum	src/st_lib.h	/^  int     oldinum;$/;"	m	struct:__anon322
oldipos	src/r_fps.c	/^static fixed2_t *oldipos;$/;"	v	file:
oldnum	src/st_lib.h	/^  int   oldnum;$/;"	m	struct:__anon320
oldspecial	src/p_spec.h	/^  int oldspecial;   \/\/jff 3\/14\/98 add to fix bug in change transfers$/;"	m	struct:__anon269
oldspecial	src/p_spec.h	/^  int oldspecial; \/\/jff 3\/14\/98 add to fix bug in change transfers$/;"	m	struct:__anon268
oldspecial	src/r_defs.h	/^  short oldspecial;      \/\/jff 2\/16\/98 remembers if sector WAS secret (automap)$/;"	m	struct:__anon283
oldspeed	src/p_spec.h	/^  fixed_t oldspeed;$/;"	m	struct:__anon268
oldstatus	src/p_spec.h	/^  plat_e oldstatus;$/;"	m	struct:__anon266
oldval	src/st_lib.h	/^  dboolean oldval;$/;"	m	struct:__anon323
oldweaponsowned	src/st_stuff.c	/^static dboolean  oldweaponsowned[NUMWEAPONS];$/;"	v	file:
on	src/hu_lib.h	/^  dboolean*    on;$/;"	m	struct:__anon122
on	src/hu_lib.h	/^  dboolean*    on;$/;"	m	struct:__anon123
on	src/hu_lib.h	/^  dboolean*    on;$/;"	m	struct:__anon124
on	src/st_lib.h	/^  dboolean*    on;$/;"	m	struct:__anon322
on	src/st_lib.h	/^  dboolean*    on;$/;"	m	struct:__anon323
on	src/st_lib.h	/^  dboolean*  on;$/;"	m	struct:__anon320
one_char	src/PCRELIB/pcregrep.c	/^  int one_char;$/;"	m	struct:option_item	file:
onground	src/p_user.c	/^dboolean onground; \/\/ whether player is on ground or in air$/;"	v
only_matching	src/PCRELIB/pcregrep.c	/^static BOOL only_matching = FALSE;$/;"	v	file:
op	src/MUSIC/dbopl.h	/^  Operator op[2];$/;"	m	struct:_Channel
op	src/PCRELIB/pcre_exec.c	3448;"	d	file:
op	src/PCRELIB/pcre_exec.c	483;"	d	file:
op1	src/MUSIC/oplplayer.c	/^    int op1, op2;$/;"	m	struct:opl_voice_s	file:
op2	src/MUSIC/oplplayer.c	/^    int op1, op2;$/;"	m	struct:opl_voice_s	file:
openDoor	src/p_spec.h	/^  openDoor,$/;"	e	enum:__anon253
openbacksector	src/p_maputl.c	/^sector_t *openbacksector;  \/\/ made global$/;"	v
openbottom	src/p_maputl.c	/^fixed_t openbottom;$/;"	v
opendirectory	src/PCRELIB/pcregrep.c	/^directory_type * opendirectory(char *filename) {}$/;"	f
opendirectory	src/PCRELIB/pcregrep.c	/^opendirectory(char *filename)$/;"	f	file:
opendirectory	src/PCRELIB/pcregrep.c	/^opendirectory(char *filename)$/;"	f
openfrontsector	src/p_maputl.c	/^sector_t *openfrontsector; \/\/ made global                    \/\/ phares$/;"	v
openings	src/r_plane.c	/^int *openings,*lastopening; \/\/ dropoff overflow$/;"	v
openrange	src/p_maputl.c	/^fixed_t openrange;$/;"	v
opentop	src/p_maputl.c	/^fixed_t opentop;$/;"	v
operator	src/TEXTSCREEN/examples/calculator.c	/^operator_t operator = OP_NONE;$/;"	v
operator <<	src/PCRELIB/pcre_stringpiece.cc	/^std::ostream& operator<<(std::ostream& o, const pcrecpp::StringPiece& piece) {$/;"	f
operator_t	src/TEXTSCREEN/examples/calculator.c	/^} operator_t;$/;"	t	typeref:enum:__anon332	file:
opl3Active	src/MUSIC/dbopl.h	/^  Bit8s opl3Active;$/;"	m	struct:_Chip
opl_callback_queue_s	src/MUSIC/opl_queue.c	/^struct opl_callback_queue_s$/;"	s	file:
opl_callback_queue_t	src/MUSIC/opl_queue.h	/^typedef struct opl_callback_queue_s opl_callback_queue_t;$/;"	t	typeref:struct:opl_callback_queue_s
opl_callback_t	src/MUSIC/opl.h	/^typedef void (*opl_callback_t)(void *data);$/;"	t
opl_channel_data_t	src/MUSIC/oplplayer.c	/^} opl_channel_data_t;$/;"	t	typeref:struct:__anon197	file:
opl_chip	src/MUSIC/opl.c	/^static Chip opl_chip;$/;"	v	file:
opl_io_port	src/MUSIC/oplplayer.c	/^int opl_io_port = 0x388;$/;"	v
opl_paused	src/MUSIC/opl.c	/^static int opl_paused;$/;"	v	file:
opl_port_t	src/MUSIC/opl.h	/^} opl_port_t;$/;"	t	typeref:enum:__anon193
opl_queue_entry_t	src/MUSIC/opl_queue.c	/^} opl_queue_entry_t;$/;"	t	typeref:struct:__anon182	file:
opl_sample_rate	src/MUSIC/opl.c	/^unsigned int opl_sample_rate = 22050;$/;"	v
opl_synth_player	src/MUSIC/oplplayer.c	/^const music_player_t opl_synth_player =$/;"	v
opl_timer_t	src/MUSIC/opl.c	/^} opl_timer_t;$/;"	t	typeref:struct:__anon183	file:
opl_track_data_t	src/MUSIC/oplplayer.c	/^} opl_track_data_t;$/;"	t	typeref:struct:__anon198	file:
opl_voice_s	src/MUSIC/oplplayer.c	/^struct opl_voice_s$/;"	s	file:
opl_voice_t	src/MUSIC/oplplayer.c	/^typedef struct opl_voice_s opl_voice_t;$/;"	t	typeref:struct:opl_voice_s	file:
opt_end	src/m_menu.c	/^  opt_end$/;"	e	enum:__anon155	file:
optarg	src/d_server.c	/^char  *optarg;    \/* argument associated with option *\/$/;"	v
opterr	src/d_server.c	/^int opterr = 1,   \/* if error message should be printed *\/$/;"	v
optind	src/d_server.c	/^  optind = 1,   \/* index into parent argv vector *\/$/;"	v
option_empty1	src/m_menu.c	/^  option_empty1,$/;"	e	enum:__anon155	file:
option_item	src/PCRELIB/pcregrep.c	/^typedef struct option_item {$/;"	s	file:
option_item	src/PCRELIB/pcregrep.c	/^} option_item;$/;"	t	typeref:struct:option_item	file:
optionlist	src/PCRELIB/pcregrep.c	/^static option_item optionlist[] = {$/;"	v	file:
options	src/PCRELIB/pcre_internal.h	/^  pcre_uint32 options;$/;"	m	struct:pcre_study_data
options	src/PCRELIB/pcre_internal.h	/^  pcre_uint32 options;$/;"	m	struct:real_pcre
options	src/doomdata.h	/^  short options;$/;"	m	struct:__anon42
options	src/m_menu.c	/^  options,$/;"	e	enum:__anon148	file:
options_	src/PCRELIB/pcrecpp.h	/^  RE_Options    options_;$/;"	m	class:pcrecpp::RE
options_e	src/m_menu.c	/^} options_e;$/;"	v	typeref:enum:__anon155
optopt	src/d_server.c	/^  optopt,     \/* character checked for validity *\/$/;"	v
optreset	src/d_server.c	/^  optreset;   \/* reset getopt *\/$/;"	v
ord2utf8	src/PCRELIB/pcretest.c	/^ord2utf8(int cvalue, uschar *utf8bytes)$/;"	f	file:
ordin	src/PCRELIB/pcregrep.c	/^ordin(int n)$/;"	f	file:
orig	src/d_deh.c	/^  const char *orig;$/;"	m	struct:__anon10	file:
origin	src/s_sound.c	/^  mobj_t *origin;      \/\/ origin of sound$/;"	m	struct:__anon319	file:
origin_id	src/s_sound.c	/^  uint32_t origin_id;  \/\/ sound origin ID$/;"	m	struct:__anon319	file:
original_ims	src/PCRELIB/pcre_exec.c	3440;"	d	file:
original_ims	src/PCRELIB/pcre_exec.c	463;"	d	file:
originx	src/r_data.c	/^  short originx;$/;"	m	struct:__anon277	file:
originx	src/r_data.h	/^  int originx, originy;  \/\/ Block origin, which has already accounted$/;"	m	struct:__anon279
originy	src/r_data.c	/^  short originy;$/;"	m	struct:__anon277	file:
originy	src/r_data.h	/^  int originx, originy;  \/\/ Block origin, which has already accounted$/;"	m	struct:__anon279
outdated	src/n_peer.h	/^  bool               outdated;$/;"	m	struct:netsync_s
outer	src/PCRELIB/pcre_internal.h	/^  struct branch_chain *outer;$/;"	m	struct:branch_chain	typeref:struct:branch_chain::branch_chain
outfile	src/PCRELIB/pcretest.c	/^static FILE *outfile;$/;"	v	file:
outfile	src/p_checksum.c	/^static FILE *outfile = NULL;$/;"	v	file:
outfilename	src/d_deh.h	/^  char *outfilename;$/;"	m	struct:deh_file_s
outthread	src/i_capture.c	/^  SDL_Thread *outthread;$/;"	m	struct:__anon128	file:
over_under	src/d_net.h	/^  byte over_under;$/;"	m	struct:__anon24
overflow_cfgname	src/g_overflow.c	/^const char *overflow_cfgname[OVERFLOW_MAX] =$/;"	v
overflows	src/g_overflow.c	/^overrun_param_t overflows[OVERFLOW_MAX];$/;"	v
overlay_tex_id	src/SDL/i_video.c	/^static GLuint overlay_tex_id = 0;$/;"	v	file:
overrun_list_s	src/g_overflow.h	/^typedef enum overrun_list_s$/;"	g
overrun_list_t	src/g_overflow.h	/^} overrun_list_t;$/;"	t	typeref:enum:overrun_list_s
overrun_param_s	src/g_overflow.h	/^typedef struct overrun_param_s$/;"	s
overrun_param_t	src/g_overflow.h	/^} overrun_param_t;$/;"	t	typeref:struct:overrun_param_s
p	src/st_lib.h	/^  const patchnum_t*    p;  \/\/ icon$/;"	m	struct:__anon323
p	src/st_lib.h	/^  const patchnum_t*    p;$/;"	m	struct:__anon321
p	src/st_lib.h	/^  const patchnum_t*   p;$/;"	m	struct:__anon322
p	src/st_lib.h	/^  const patchnum_t* p;$/;"	m	struct:__anon320
p	src/wi_stuff.c	/^  patchnum_t p[3];$/;"	m	struct:__anon348	file:
p_checksum_cleanup	src/p_checksum.c	/^static void p_checksum_cleanup(void) {$/;"	f	file:
p_checksum_nop	src/p_checksum.c	/^static void p_checksum_nop(int tic){} \/* do nothing *\/$/;"	f	file:
p_current	src/p_spec.h	/^    p_current,$/;"	e	enum:__anon274::__anon275
p_pull	src/p_spec.h	/^    p_pull,$/;"	e	enum:__anon274::__anon275
p_push	src/p_spec.h	/^    p_push,$/;"	e	enum:__anon274::__anon275
p_wind	src/p_spec.h	/^    p_wind,$/;"	e	enum:__anon274::__anon275
pack_commands	src/n_pack.c	/^static void pack_commands(pbuf_t *pbuf, netpeer_t *np, int playernum) {$/;"	f	file:
pack_nerve	src/doomdef.h	/^  pack_nerve,   \/\/ No Rest For The Living$/;"	e	enum:__anon44
pack_player_preference_change	src/n_pack.c	288;"	d	file:
pack_plut	src/doomdef.h	/^  pack_plut,    \/\/ Plutonia pack$/;"	e	enum:__anon44
pack_tnt	src/doomdef.h	/^  pack_tnt,     \/\/ TNT mission pack$/;"	e	enum:__anon44
packed_toc	src/n_peer.h	/^  pbuf_t  packed_toc;$/;"	m	struct:netchan_s
packet_buf_s	src/n_peer.c	/^typedef struct packet_buf_s {$/;"	s	file:
packet_buf_t	src/n_peer.c	/^} packet_buf_t;$/;"	t	typeref:struct:packet_buf_s	file:
packet_data	src/n_peer.h	/^  pbuf_t  packet_data;$/;"	m	struct:netchan_s
packet_header_t	src/protocol.h	/^} PACKEDATTR packet_header_t;$/;"	t	typeref:struct:__anon228
packet_read	src/n_peer.c	/^static bool packet_read(cmp_ctx_t *ctx, void *data, size_t limit) {$/;"	f	file:
packet_set	src/protocol.h	/^static inline void packet_set(packet_header_t* p, enum packet_type_e t, unsigned long tic)$/;"	f
packet_type_e	src/protocol.h	/^enum packet_type_e {$/;"	g
pad	src/p_mobj.h	/^    fixed_t             pad; \/\/ cph - needed so I can get the size unambiguously on amd64$/;"	m	struct:mobj_s
pad	src/r_data.c	/^  char       pad[4];       \/\/ unused in Doom but might be used in Boom Phase 2$/;"	m	struct:__anon278	file:
pad1	src/r_defs.h	/^  unsigned short pad1;          \/\/ leave pads for [minx-1]\/[maxx+1]$/;"	m	struct:visplane
pad2	src/r_data.c	/^  char       pad2[4];      \/\/ unused$/;"	m	struct:__anon278	file:
pagename	src/d_main.c	/^static const char *pagename; \/\/ CPhipps - const$/;"	v	file:
pagetic	src/d_main.c	/^static int  pagetic;$/;"	v	file:
pagex	src/TEXTSCREEN/txt_table.c	/^int TXT_PageTable(TXT_UNCAST_ARG(table), int pagex, int pagey)$/;"	v
pagex	src/TEXTSCREEN/txt_table.h	/^int TXT_PageTable(TXT_UNCAST_ARG(table), int pagex, int pagey);$/;"	v
pagey	src/TEXTSCREEN/txt_table.h	/^int TXT_PageTable(TXT_UNCAST_ARG(table), int pagex, int pagey);$/;"	v
painchance	src/info.h	/^  int painchance;   \/* A number that is checked against a random$/;"	m	struct:__anon138
painsound	src/info.h	/^  int painsound;    \/* The sound it emits when it feels pain *\/$/;"	m	struct:__anon138
painstate	src/info.h	/^  int painstate;    \/* The state to indicate pain *\/$/;"	m	struct:__anon138
palette	src/i_video.h	/^  int palette;$/;"	m	struct:vid_8ingl_s
palette_background	src/m_menu.c	/^byte palette_background[16*(CHIP_SIZE+1)+8];$/;"	v
palette_onbonus	src/e6y.c	/^int palette_onbonus;$/;"	v
palette_ondamage	src/e6y.c	/^int palette_ondamage;$/;"	v
palette_onpowers	src/e6y.c	/^int palette_onpowers;$/;"	v
paperitems_pitch	src/gl_main.c	/^float paperitems_pitch;$/;"	v
par	src/wi_stuff.c	/^static const char par[] = {"WIPAR"};$/;"	v	file:
param1	src/MUSIC/midifile.h	/^    unsigned int param1;$/;"	m	struct:__anon190
param2	src/MUSIC/midifile.h	/^    unsigned int param2;$/;"	m	struct:__anon190
param_chars_read	src/m_cheat.h	/^  int param_chars_read;$/;"	m	struct:cheatseq_s
parameter_buf	src/m_cheat.h	/^  char parameter_buf[CHEAT_ARGS_MAX];$/;"	m	struct:cheatseq_s
pars	src/g_game.c	/^int pars[5][10] = {$/;"	v
parse_char	src/PCRELIB/pcrecpp.cc	/^bool Arg::parse_char(const char* str, int n, void* dest) {$/;"	f	class:pcrecpp::Arg
parse_double	src/PCRELIB/pcrecpp.cc	/^bool Arg::parse_double(const char* str, int n, void* dest) {$/;"	f	class:pcrecpp::Arg
parse_float	src/PCRELIB/pcrecpp.cc	/^bool Arg::parse_float(const char* str, int n, void* dest) {$/;"	f	class:pcrecpp::Arg
parse_int_radix	src/PCRELIB/pcrecpp.cc	/^bool Arg::parse_int_radix(const char* str,$/;"	f	class:pcrecpp::Arg
parse_long_radix	src/PCRELIB/pcrecpp.cc	/^bool Arg::parse_long_radix(const char* str,$/;"	f	class:pcrecpp::Arg
parse_longlong_radix	src/PCRELIB/pcrecpp.cc	/^bool Arg::parse_longlong_radix(const char* str,$/;"	f	class:pcrecpp::Arg
parse_null	src/PCRELIB/pcrecpp.cc	/^bool Arg::parse_null(const char* str, int n, void* dest) {$/;"	f	class:pcrecpp::Arg
parse_short_radix	src/PCRELIB/pcrecpp.cc	/^bool Arg::parse_short_radix(const char* str,$/;"	f	class:pcrecpp::Arg
parse_shorthand_command	src/c_main.c	/^static const char* parse_shorthand_command(const char *short_command) {$/;"	f	file:
parse_string	src/PCRELIB/pcrecpp.cc	/^bool Arg::parse_string(const char* str, int n, void* dest) {$/;"	f	class:pcrecpp::Arg
parse_stringpiece	src/PCRELIB/pcrecpp.cc	/^bool Arg::parse_stringpiece(const char* str, int n, void* dest) {$/;"	f	class:pcrecpp::Arg
parse_uchar	src/PCRELIB/pcrecpp.cc	/^bool Arg::parse_uchar(const char* str, int n, void* dest) {$/;"	f	class:pcrecpp::Arg
parse_uint_radix	src/PCRELIB/pcrecpp.cc	/^bool Arg::parse_uint_radix(const char* str,$/;"	f	class:pcrecpp::Arg
parse_ulong_radix	src/PCRELIB/pcrecpp.cc	/^bool Arg::parse_ulong_radix(const char* str,$/;"	f	class:pcrecpp::Arg
parse_ulonglong_radix	src/PCRELIB/pcrecpp.cc	/^bool Arg::parse_ulonglong_radix(const char* str,$/;"	f	class:pcrecpp::Arg
parse_ushort_radix	src/PCRELIB/pcrecpp.cc	/^bool Arg::parse_ushort_radix(const char* str,$/;"	f	class:pcrecpp::Arg
parsecommand	src/i_capture.c	/^static int parsecommand (char *out, const char *in, int len)$/;"	f	file:
parsetag	src/MUSIC/vorbisplayer.c	/^static unsigned parsetag (const char *str, int samplerate)$/;"	f	file:
partial	src/PCRELIB/pcre_internal.h	/^  BOOL   partial;               \/* PARTIAL flag *\/$/;"	m	struct:match_data
partime	src/d_player.h	/^  int         partime;$/;"	m	struct:__anon61
partner	src/p_setup.c	/^  unsigned short  partner; \/\/ corresponding partner seg, or -1 on one-sided walls$/;"	m	struct:__anon231	file:
pastdest	src/p_spec.h	/^  pastdest$/;"	e	enum:__anon259
patch	src/r_data.c	/^  short patch;$/;"	m	struct:__anon277	file:
patch	src/r_data.h	/^  int patch;             \/\/ for the internal origin of the patch.$/;"	m	struct:__anon279
patch	src/r_defs.h	/^  int patch;$/;"	m	struct:vissprite_s
patch_edges	src/r_draw.h	/^  enum sloped_edge_type_e patch_edges;$/;"	m	struct:__anon299	typeref:enum:__anon299::sloped_edge_type_e
patch_stretch_16x10	src/v_video.h	/^  patch_stretch_16x10,$/;"	e	enum:__anon339
patch_stretch_4x3	src/v_video.h	/^  patch_stretch_4x3,$/;"	e	enum:__anon339
patch_stretch_full	src/v_video.h	/^  patch_stretch_full,$/;"	e	enum:__anon339
patch_stretch_max	src/v_video.h	/^  patch_stretch_max$/;"	e	enum:__anon339
patch_stretch_t	src/v_video.h	/^} patch_stretch_t;$/;"	t	typeref:enum:__anon339
patch_t	src/r_patch.c	/^} patch_t;$/;"	t	typeref:struct:__anon305	file:
patch_translation_e	src/doomtype.h	/^enum patch_translation_e {$/;"	g
patch_width	src/p_mobj.h	/^    short patch_width;$/;"	m	struct:mobj_s
patchcount	src/r_data.c	/^  short      patchcount;$/;"	m	struct:__anon278	file:
patchcount	src/r_data.h	/^  short patchcount;      \/\/ All the patches[patchcount] are drawn$/;"	m	struct:__anon280
patches	src/r_data.c	/^  mappatch_t patches[1];$/;"	m	struct:__anon278	file:
patches	src/r_data.h	/^  texpatch_t patches[1]; \/\/ back-to-front into the cached texture.$/;"	m	struct:__anon280
patches	src/r_patch.c	/^  unsigned short patches;$/;"	m	struct:__anon306	file:
patches	src/r_patch.c	/^static rpatch_t *patches = 0;$/;"	v	file:
patches_scalex	src/v_video.c	/^int patches_scalex;$/;"	v
patches_scaley	src/v_video.c	/^int patches_scaley;$/;"	v
patchnum_t	src/r_defs.h	/^} patchnum_t;$/;"	t	typeref:struct:__anon289
pattern	src/PCRELIB/pcrecpp.h	/^  const string& pattern() const { return pattern_; }$/;"	f	class:pcrecpp::RE
pattern_	src/PCRELIB/pcrecpp.h	/^  string        pattern_;$/;"	m	class:pcrecpp::RE
pattern_count	src/PCRELIB/pcregrep.c	/^static int  pattern_count = 0;$/;"	v	file:
pattern_filename	src/PCRELIB/pcregrep.c	/^static char *pattern_filename = NULL;$/;"	v	file:
pattern_list	src/PCRELIB/pcregrep.c	/^static pcre **pattern_list;$/;"	v	file:
pattern_name	src/r_demo.h	/^  char pattern_name[80];$/;"	m	struct:__anon295
pattern_num	src/r_demo.h	/^  int pattern_num;$/;"	m	struct:__anon295
pattern_position	src/PCRELIB/pcre.h	/^  int          pattern_position;  \/* Offset to next item in the pattern *\/$/;"	m	struct:pcre_callout_block
patterndata_t	src/r_demo.h	/^} patterndata_t;$/;"	t	typeref:struct:__anon295
pause	src/MUSIC/musicplayer.h	/^  void (*pause)(void);$/;"	m	struct:__anon177
pause_offset	src/MUSIC/opl.c	/^static unsigned int pause_offset;$/;"	v	file:
paused	src/g_game.c	/^dboolean        paused;$/;"	v
pboids	src/i_video.h	/^  GLuint pboids[2];$/;"	m	struct:vid_8ingl_s
pbuf_s	src/m_pbuf.h	/^typedef struct pbuf_s {$/;"	s
pbuf_t	src/m_pbuf.h	/^} pbuf_t;$/;"	t	typeref:struct:pbuf_s
pbuffer	src/PCRELIB/pcretest.c	/^static uschar *pbuffer = NULL;$/;"	v	file:
pc_confirmedready	src/d_server.c	/^enum { pc_unused, pc_connected, pc_ready, pc_confirmedready, pc_playing, pc_quit } playerstate[MAXPLAYERS];$/;"	e	enum:__anon62	file:
pc_connected	src/d_server.c	/^enum { pc_unused, pc_connected, pc_ready, pc_confirmedready, pc_playing, pc_quit } playerstate[MAXPLAYERS];$/;"	e	enum:__anon62	file:
pc_playing	src/d_server.c	/^enum { pc_unused, pc_connected, pc_ready, pc_confirmedready, pc_playing, pc_quit } playerstate[MAXPLAYERS];$/;"	e	enum:__anon62	file:
pc_quit	src/d_server.c	/^enum { pc_unused, pc_connected, pc_ready, pc_confirmedready, pc_playing, pc_quit } playerstate[MAXPLAYERS];$/;"	e	enum:__anon62	file:
pc_ready	src/d_server.c	/^enum { pc_unused, pc_connected, pc_ready, pc_confirmedready, pc_playing, pc_quit } playerstate[MAXPLAYERS];$/;"	e	enum:__anon62	file:
pc_unused	src/d_server.c	/^enum { pc_unused, pc_connected, pc_ready, pc_confirmedready, pc_playing, pc_quit } playerstate[MAXPLAYERS];$/;"	e	enum:__anon62	file:
pchars	src/PCRELIB/pcre_dfa_exec.c	/^pchars(unsigned char *p, int length, FILE *f)$/;"	f	file:
pchars	src/PCRELIB/pcre_exec.c	/^pchars(const uschar *p, int length, BOOL is_subject, match_data *md)$/;"	f	file:
pchars	src/PCRELIB/pcretest.c	/^static int pchars(unsigned char *p, int length, FILE *f)$/;"	f	file:
pcre	src/PCRELIB/pcre.h	/^typedef struct real_pcre pcre;$/;"	t	typeref:struct:real_pcre
pcre_callout	src/PCRELIB/pcre.h	/^PCRE_DATA_SCOPE int   (*pcre_callout)(pcre_callout_block *);$/;"	v
pcre_callout	src/PCRELIB/pcre_globals.c	/^extern "C" int   (*pcre_callout)(pcre_callout_block *) = NULL;$/;"	v
pcre_callout	src/PCRELIB/pcre_globals.c	/^int   (*pcre_callout)(pcre_callout_block *) = NULL;$/;"	v
pcre_callout_block	src/PCRELIB/pcre.h	/^typedef struct pcre_callout_block {$/;"	s
pcre_callout_block	src/PCRELIB/pcre.h	/^} pcre_callout_block;$/;"	t	typeref:struct:pcre_callout_block
pcre_compile	src/PCRELIB/pcre_compile.c	/^pcre_compile(const char *pattern, int options, const char **errorptr,$/;"	f
pcre_compile2	src/PCRELIB/pcre_compile.c	/^pcre_compile2(const char *pattern, int options, int *errorcodeptr,$/;"	f
pcre_config	src/PCRELIB/pcre_config.c	/^pcre_config(int what, void *where)$/;"	f
pcre_copy_named_substring	src/PCRELIB/pcre_get.c	/^pcre_copy_named_substring(const pcre *code, const char *subject, int *ovector,$/;"	f
pcre_copy_substring	src/PCRELIB/pcre_get.c	/^pcre_copy_substring(const char *subject, int *ovector, int stringcount,$/;"	f
pcre_dfa_exec	src/PCRELIB/pcre_dfa_exec.c	/^pcre_dfa_exec(const pcre *argument_re, const pcre_extra *extra_data,$/;"	f
pcre_exec	src/PCRELIB/pcre_exec.c	/^pcre_exec(const pcre *argument_re, const pcre_extra *extra_data,$/;"	f
pcre_extra	src/PCRELIB/pcre.h	/^typedef struct pcre_extra {$/;"	s
pcre_extra	src/PCRELIB/pcre.h	/^} pcre_extra;$/;"	t	typeref:struct:pcre_extra
pcre_free	src/PCRELIB/pcre.h	/^PCRE_DATA_SCOPE void  (*pcre_free)(void *);$/;"	v
pcre_free	src/PCRELIB/pcre_globals.c	/^extern "C" void  (*pcre_free)(void *) = free;$/;"	v
pcre_free	src/PCRELIB/pcre_globals.c	/^void  (*pcre_free)(void *) = free;$/;"	v
pcre_free_substring	src/PCRELIB/pcre_get.c	/^pcre_free_substring(const char *pointer)$/;"	f
pcre_free_substring_list	src/PCRELIB/pcre_get.c	/^pcre_free_substring_list(const char **pointer)$/;"	f
pcre_fullinfo	src/PCRELIB/pcre_fullinfo.c	/^pcre_fullinfo(const pcre *argument_re, const pcre_extra *extra_data, int what,$/;"	f
pcre_get_named_substring	src/PCRELIB/pcre_get.c	/^pcre_get_named_substring(const pcre *code, const char *subject, int *ovector,$/;"	f
pcre_get_stringnumber	src/PCRELIB/pcre_get.c	/^pcre_get_stringnumber(const pcre *code, const char *stringname)$/;"	f
pcre_get_stringtable_entries	src/PCRELIB/pcre_get.c	/^pcre_get_stringtable_entries(const pcre *code, const char *stringname,$/;"	f
pcre_get_substring	src/PCRELIB/pcre_get.c	/^pcre_get_substring(const char *subject, int *ovector, int stringcount,$/;"	f
pcre_get_substring_list	src/PCRELIB/pcre_get.c	/^pcre_get_substring_list(const char *subject, int *ovector, int stringcount,$/;"	f
pcre_info	src/PCRELIB/pcre_info.c	/^pcre_info(const pcre *argument_re, int *optptr, int *first_byte)$/;"	f
pcre_maketables	src/PCRELIB/pcre_maketables.c	/^pcre_maketables(void)$/;"	f
pcre_malloc	src/PCRELIB/pcre.h	/^PCRE_DATA_SCOPE void *(*pcre_malloc)(size_t);$/;"	v
pcre_malloc	src/PCRELIB/pcre_globals.c	/^extern "C" void *(*pcre_malloc)(size_t) = malloc;$/;"	v
pcre_malloc	src/PCRELIB/pcre_globals.c	/^void *(*pcre_malloc)(size_t) = malloc;$/;"	v
pcre_memmove	src/PCRELIB/pcre_internal.h	/^pcre_memmove(unsigned char *dest, const unsigned char *src, size_t n)$/;"	f
pcre_refcount	src/PCRELIB/pcre_refcount.c	/^pcre_refcount(pcre *argument_re, int adjust)$/;"	f
pcre_stack_free	src/PCRELIB/pcre.h	/^PCRE_DATA_SCOPE void  (*pcre_stack_free)(void *);$/;"	v
pcre_stack_free	src/PCRELIB/pcre_globals.c	/^extern "C" void  (*pcre_stack_free)(void *) = free;$/;"	v
pcre_stack_free	src/PCRELIB/pcre_globals.c	/^void  (*pcre_stack_free)(void *) = free;$/;"	v
pcre_stack_malloc	src/PCRELIB/pcre.h	/^PCRE_DATA_SCOPE void *(*pcre_stack_malloc)(size_t);$/;"	v
pcre_stack_malloc	src/PCRELIB/pcre_globals.c	/^extern "C" void *(*pcre_stack_malloc)(size_t) = malloc;$/;"	v
pcre_stack_malloc	src/PCRELIB/pcre_globals.c	/^void *(*pcre_stack_malloc)(size_t) = malloc;$/;"	v
pcre_study	src/PCRELIB/pcre_study.c	/^pcre_study(const pcre *external_re, int options, const char **errorptr)$/;"	f
pcre_study_data	src/PCRELIB/pcre_internal.h	/^typedef struct pcre_study_data {$/;"	s
pcre_study_data	src/PCRELIB/pcre_internal.h	/^} pcre_study_data;$/;"	t	typeref:struct:pcre_study_data
pcre_uint16	src/PCRELIB/pcre_internal.h	/^  typedef unsigned int pcre_uint16;$/;"	t
pcre_uint16	src/PCRELIB/pcre_internal.h	/^  typedef unsigned short pcre_uint16;$/;"	t
pcre_uint32	src/PCRELIB/pcre_internal.h	/^  typedef unsigned int pcre_uint32;$/;"	t
pcre_uint32	src/PCRELIB/pcre_internal.h	/^  typedef unsigned long int pcre_uint32;$/;"	t
pcre_version	src/PCRELIB/pcre_version.c	/^pcre_version(void)$/;"	f
pcrecpp	src/PCRELIB/pcre_scanner.cc	/^namespace pcrecpp {$/;"	n	file:
pcrecpp	src/PCRELIB/pcre_scanner.h	/^namespace pcrecpp {$/;"	n
pcrecpp	src/PCRELIB/pcrecpp.cc	/^namespace pcrecpp {$/;"	n	file:
pcrecpp	src/PCRELIB/pcrecpp.h	/^namespace pcrecpp {$/;"	n
pcregrep	src/PCRELIB/pcregrep.c	/^pcregrep(FILE *in, char *printname)$/;"	f	file:
pcretables	src/PCRELIB/pcregrep.c	/^static const unsigned char *pcretables = NULL;$/;"	v	file:
pcs_initialised	src/i_pcsound.c	/^static dboolean pcs_initialised = false;$/;"	v	file:
pcsound_callback_func	src/PCSOUND/pcsound.h	/^typedef void (*pcsound_callback_func)(int *duration, int *frequency);$/;"	t
pcsound_driver	src/PCSOUND/pcsound.c	/^static pcsound_driver_t *pcsound_driver = NULL;$/;"	v	file:
pcsound_driver_s	src/PCSOUND/pcsound.h	/^struct pcsound_driver_s {$/;"	s
pcsound_driver_t	src/PCSOUND/pcsound.h	/^typedef struct pcsound_driver_s pcsound_driver_t;$/;"	t	typeref:struct:pcsound_driver_s
pcsound_init_func	src/PCSOUND/pcsound.h	/^typedef int (*pcsound_init_func)(pcsound_callback_func callback);$/;"	t
pcsound_inited	src/PCSOUND/pcsound_sdl.c	/^static int pcsound_inited = 0;$/;"	v	file:
pcsound_linux_driver	src/PCSOUND/pcsound_linux.c	/^pcsound_driver_t pcsound_linux_driver =$/;"	v
pcsound_sdl_driver	src/PCSOUND/pcsound_sdl.c	/^pcsound_driver_t pcsound_sdl_driver =$/;"	v
pcsound_shutdown_func	src/PCSOUND/pcsound.h	/^typedef void (*pcsound_shutdown_func)(void);$/;"	t
pcsound_win32_driver	src/PCSOUND/pcsound_win32.c	/^pcsound_driver_t pcsound_win32_driver = $/;"	v
pdraw_column_vars_s	src/r_draw.h	/^typedef struct draw_column_vars_s* pdraw_column_vars_s;$/;"	t	typeref:struct:draw_column_vars_s
pe_x	src/p_map.c	/^static int pe_x; \/\/ Pain Elemental position for Lost Soul checks \/\/ phares$/;"	v	file:
pe_y	src/p_map.c	/^static int pe_y; \/\/ Pain Elemental position for Lost Soul checks \/\/ phares$/;"	v	file:
peer	src/n_peer.h	/^  ENetPeer     *peer;$/;"	m	struct:netpeer_s
peer_destroy_func	src/n_peer.c	/^static void peer_destroy_func(gpointer data) {$/;"	f	file:
peernum	src/n_peer.h	/^  unsigned int  peernum;$/;"	m	struct:netpeer_s
pendingweapon	src/d_player.h	/^  weapontype_t        pendingweapon;$/;"	m	struct:player_s
percent	src/wi_stuff.c	/^static const char percent[] = {"WIPCNT"};$/;"	v	file:
percussion_instrs	src/MUSIC/oplplayer.c	/^static const genmidi_instr_t *percussion_instrs;$/;"	v	file:
period	src/wi_stuff.c	/^  int   period;$/;"	m	struct:__anon348	file:
perpetualRaise	src/p_spec.h	/^  perpetualRaise,$/;"	e	enum:__anon252
perpool	src/z_bmalloc.h	/^  size_t perpool;$/;"	m	struct:block_memory_alloc_s
pfub1	src/f_finale.c	/^static const char pfub1[] = { "PFUB1" };$/;"	v	file:
pfub2	src/f_finale.c	/^static const char pfub2[] = { "PFUB2" };$/;"	v	file:
phase_offset	src/PCSOUND/pcsound_sdl.c	/^static int phase_offset = 0;$/;"	v	file:
pi	src/m_misc.h	/^    int* pi;$/;"	m	struct:default_s::__anon169
picnum	src/p_spec.h	/^    int         picnum;$/;"	m	struct:__anon236
picnum	src/r_defs.h	/^  int picnum, lightlevel, minx, maxx;$/;"	m	struct:visplane
pid	src/i_capture.c	/^  int pid;$/;"	m	struct:__anon130	file:
pipeinfo_t	src/i_capture.c	/^} pipeinfo_t;$/;"	t	typeref:struct:__anon128	file:
pitch	src/e6y.h	/^  angle_t pitch;$/;"	m	struct:camera_s
pitch	src/gl_main.c	/^float pitch    = 0.0f;$/;"	v
pitch	src/p_mobj.h	/^    angle_t             pitch;  \/\/ orientation$/;"	m	struct:mobj_s
pitch	src/s_sound.c	/^  int pitch;$/;"	m	struct:__anon319	file:
pitch	src/sounds.h	/^  int pitch;$/;"	m	struct:sfxinfo_struct
pitched_sounds	src/doomstat.c	/^int pitched_sounds;        \/\/ killough$/;"	v
pixel_size	src/SDL/i_sshot.c	/^  const size_t pixel_size;$/;"	m	struct:screenshot_sdl_func	file:
pixels	src/gl_hires.c	/^  GLubyte *pixels;$/;"	m	struct:__anon85	file:
pixels	src/r_patch.h	/^  unsigned char *pixels;$/;"	m	struct:__anon310
pixels	src/r_patch.h	/^  unsigned char *pixels;$/;"	m	struct:__anon311
pixhigh	src/r_segs.c	/^static fixed_t  pixhigh;$/;"	v	file:
pixhighstep	src/r_segs.c	/^static fixed_t  pixhighstep;$/;"	v	file:
pixlow	src/r_segs.c	/^static fixed_t  pixlow;$/;"	v	file:
pixlowstep	src/r_segs.c	/^static fixed_t  pixlowstep;$/;"	v	file:
planeheight	src/r_plane.c	/^static fixed_t planeheight;$/;"	v	file:
planezlight	src/r_plane.c	/^static const lighttable_t **planezlight;$/;"	v	file:
plat	src/p_spec.h	/^  plat_t *plat;$/;"	m	struct:platlist
plat_e	src/p_spec.h	/^} plat_e;$/;"	t	typeref:enum:__anon251
plat_t	src/p_spec.h	/^} plat_t;$/;"	t	typeref:struct:__anon266
platlist	src/p_spec.h	/^typedef struct platlist {$/;"	s
platlist_t	src/p_spec.h	/^} platlist_t;$/;"	t	typeref:struct:platlist
plattype_e	src/p_spec.h	/^} plattype_e;$/;"	t	typeref:enum:__anon252
play	src/MUSIC/musicplayer.h	/^  void (*play)(const void *handle, int looping);$/;"	m	struct:__anon177
player	src/d_ipxgate.c	/^    byte                player; $/;"	m	struct:a	file:
player	src/d_net.h	/^    byte                player;$/;"	m	struct:__anon23
player	src/p_mobj.h	/^    struct player_s*    player;$/;"	m	struct:mobj_s	typeref:struct:mobj_s::player_s
player_arrow	src/am_map.c	/^mline_t player_arrow[] =$/;"	v
player_bobbing	src/d_net.h	/^  byte player_bobbing;$/;"	m	struct:__anon24
player_bobbing	src/doomstat.c	/^int player_bobbing;  \/\/ whether player bobs or not          \/\/ phares 2\/25\/98$/;"	v
player_center_message_buffers	src/hu_stuff.c	/^static GString *player_center_message_buffers[MAXPLAYERS] = {$/;"	v	file:
player_cm	src/gl_intern.h	/^  int player_cm;$/;"	m	struct:__anon89
player_message_buffers	src/hu_stuff.c	/^static GString *player_message_buffers[MAXPLAYERS] = {$/;"	v	file:
player_message_s	src/p_user.h	/^typedef struct player_message_s {$/;"	s
player_message_t	src/p_user.h	/^} player_message_t;$/;"	t	typeref:struct:player_message_s
player_names	src/hu_stuff.c	/^const char* player_names[] =$/;"	v
player_s	src/d_player.h	/^typedef struct player_s$/;"	s
player_t	src/d_player.h	/^} player_t;$/;"	t	typeref:struct:player_s
playeringame	src/g_game.c	/^dboolean        playeringame[MAXPLAYERS];$/;"	v
playerjoingame	src/d_server.c	/^int playerjoingame[MAXPLAYERS], playerleftgame[MAXPLAYERS];$/;"	v
playerleftgame	src/d_server.c	/^int playerjoingame[MAXPLAYERS], playerleftgame[MAXPLAYERS];$/;"	v
playernum	src/n_peer.h	/^  unsigned int  playernum;$/;"	m	struct:netpeer_s
playernumtotrans	src/r_draw.c	/^byte playernumtotrans[MAXPLAYERS];$/;"	v
players	src/g_game.c	/^player_t        players[MAXPLAYERS];$/;"	v
players	src/protocol.h	/^  byte players, yourplayer, skill, episode, level, deathmatch, complevel, ticdup, extratic;$/;"	m	struct:setup_packet_s
playerstarts	src/p_setup.c	/^mapthing_t playerstarts[MAXPLAYERS];$/;"	v
playerstarts_indexes	src/hu_tracers.c	/^static tracer_mapthing_t playerstarts_indexes[MAXPLAYERS];$/;"	v	file:
playerstate	src/d_player.h	/^  playerstate_t       playerstate;$/;"	m	struct:player_s
playerstate	src/d_server.c	/^enum { pc_unused, pc_connected, pc_ready, pc_confirmedready, pc_playing, pc_quit } playerstate[MAXPLAYERS];$/;"	v	typeref:enum:__anon62
playerstate_t	src/d_player.h	/^} playerstate_t;$/;"	t	typeref:enum:__anon58
playpal_data	src/v_video.c	/^static unsigned char *playpal_data = NULL;$/;"	v	file:
plr	src/am_map.c	/^static player_t *plr;           \/\/ the player represented by an arrow$/;"	v	file:
plr	src/hu_stuff.c	/^static player_t *plr;$/;"	v	file:
plr	src/hu_stuff.h	/^  int plr;$/;"	m	struct:message_thinker_s
plrs	src/wi_stuff.c	/^static wbplayerstruct_t* plrs;  \/\/ wbs->plyr[]$/;"	v	file:
plyr	src/d_player.h	/^  wbplayerstruct_t    plyr[MAXPLAYERS];$/;"	m	struct:__anon61
plyr	src/m_cheat.c	43;"	d	file:
plyr	src/st_stuff.c	/^static player_t *plyr;$/;"	v	file:
plyrcoltran	src/hu_stuff.c	/^int plyrcoltran[MAXPLAYERS] = {CR_GREEN, CR_GRAY, CR_BROWN, CR_RED};$/;"	v
pm_clearchvolume	src/MUSIC/portmidiplayer.c	/^static void pm_clearchvolume (void)$/;"	f	file:
pm_delta	src/MUSIC/portmidiplayer.c	/^static double pm_delta;$/;"	v	file:
pm_init	src/MUSIC/portmidiplayer.c	/^static int pm_init (int samplerate)$/;"	f	file:
pm_looping	src/MUSIC/portmidiplayer.c	/^static int pm_looping;$/;"	v	file:
pm_name	src/MUSIC/portmidiplayer.c	/^static const char *pm_name (void)$/;"	f	file:
pm_pause	src/MUSIC/portmidiplayer.c	/^static void pm_pause (void)$/;"	f	file:
pm_paused	src/MUSIC/portmidiplayer.c	/^static int pm_paused;$/;"	v	file:
pm_play	src/MUSIC/portmidiplayer.c	/^static void pm_play (const void *handle, int looping)$/;"	f	file:
pm_player	src/MUSIC/portmidiplayer.c	/^const music_player_t pm_player =$/;"	v
pm_playing	src/MUSIC/portmidiplayer.c	/^static int pm_playing;$/;"	v	file:
pm_refreshvolume	src/MUSIC/portmidiplayer.c	/^static void pm_refreshvolume (void)$/;"	f	file:
pm_registersong	src/MUSIC/portmidiplayer.c	/^static const void *pm_registersong (const void *data, unsigned len)$/;"	f	file:
pm_render	src/MUSIC/portmidiplayer.c	/^static void pm_render (void *vdest, unsigned bufflen)$/;"	f	file:
pm_resume	src/MUSIC/portmidiplayer.c	/^static void pm_resume (void)$/;"	f	file:
pm_setchvolume	src/MUSIC/portmidiplayer.c	/^static void pm_setchvolume (int ch, int v, unsigned long when)$/;"	f	file:
pm_setvolume	src/MUSIC/portmidiplayer.c	/^static void pm_setvolume (int v)$/;"	f	file:
pm_shutdown	src/MUSIC/portmidiplayer.c	/^static void pm_shutdown (void)$/;"	f	file:
pm_stop	src/MUSIC/portmidiplayer.c	/^static void pm_stop (void)$/;"	f	file:
pm_stream	src/MUSIC/portmidiplayer.c	/^static PortMidiStream *pm_stream;$/;"	v	file:
pm_unregistersong	src/MUSIC/portmidiplayer.c	/^static void pm_unregistersong (const void *handle)$/;"	f	file:
pm_volume	src/MUSIC/portmidiplayer.c	/^static int pm_volume;$/;"	v	file:
png_error_ptr_NULL	src/SDL/i_sshot.c	42;"	d	file:
png_infopp_NULL	src/SDL/i_sshot.c	46;"	d	file:
pnum	src/d_player.h	/^  int         pnum;$/;"	m	struct:__anon61
point	src/am_map.h	/^  map_point_t point[2];$/;"	m	struct:map_line_s
point_t	src/wi_stuff.c	/^} point_t;$/;"	t	typeref:struct:__anon347	file:
poptions	src/PCRELIB/pcre_internal.h	/^  int   poptions;               \/* Pattern options *\/$/;"	m	struct:dfa_match_data
port	src/d_ipxgate.c	/^unsigned short port = 0x869b;$/;"	v
pos	src/MUSIC/midifile.h	/^    size_t pos;$/;"	m	struct:__anon184
position	src/MUSIC/midifile.c	/^    unsigned int position;$/;"	m	struct:midi_track_iter_s	file:
position	src/memio.c	/^  unsigned int position;$/;"	m	struct:_MEMFILE	file:
position	src/w_wad.h	/^  int position;$/;"	m	struct:__anon358
posix_class_maps	src/PCRELIB/pcre_compile.c	/^static const int posix_class_maps[] = {$/;"	v	file:
posix_name_lengths	src/PCRELIB/pcre_compile.c	/^static const uschar posix_name_lengths[] = {$/;"	v	file:
posix_names	src/PCRELIB/pcre_compile.c	/^static const char *const posix_names[] = {$/;"	v	file:
post_t	src/r_patch.c	/^} post_t;$/;"	t	typeref:struct:__anon304	file:
posts	src/r_patch.c	/^  unsigned short posts;$/;"	m	struct:__anon306	file:
posts	src/r_patch.h	/^  rpost_t *posts;$/;"	m	struct:__anon310
posts	src/r_patch.h	/^  rpost_t *posts;$/;"	m	struct:__anon311
posts_used	src/r_patch.c	/^  unsigned short posts_used;$/;"	m	struct:__anon306	file:
powerduration_t	src/doomdef.h	/^} powerduration_t;$/;"	t	typeref:enum:__anon52
powers	src/d_player.h	/^  int                 powers[NUMPOWERS];$/;"	m	struct:player_s
powertype_t	src/doomdef.h	/^} powertype_t;$/;"	t	typeref:enum:__anon51
pp	src/PCRELIB/pcre_exec.c	3429;"	d	file:
pp	src/PCRELIB/pcre_exec.c	452;"	d	file:
ppstr	src/d_deh.c	/^  const char **ppstr;  \/\/ doubly indirect pointer to string$/;"	m	struct:__anon10	file:
ppsz	src/m_misc.h	/^    const char** ppsz;$/;"	m	struct:default_s::__anon169
pr_all_in_one	src/m_random.h	/^  pr_all_in_one,              \/\/ #49$/;"	e	enum:__anon172
pr_avoidcrush	src/m_random.h	/^  pr_avoidcrush,              \/\/ #57$/;"	e	enum:__anon172
pr_bfg	src/m_random.h	/^  pr_bfg,                     \/\/ #24$/;"	e	enum:__anon172
pr_brainexp	src/m_random.h	/^  pr_brainexp,                \/\/ #46$/;"	e	enum:__anon172
pr_brainscream	src/m_random.h	/^  pr_brainscream,             \/\/ #44$/;"	e	enum:__anon172
pr_bruisattack	src/m_random.h	/^  pr_bruisattack,             \/\/ #40$/;"	e	enum:__anon172
pr_class_t	src/m_random.h	/^} pr_class_t;$/;"	t	typeref:enum:__anon172
pr_cposattack	src/m_random.h	/^  pr_cposattack,              \/\/ #35$/;"	e	enum:__anon172
pr_cposrefire	src/m_random.h	/^  pr_cposrefire,              \/\/ #45$/;"	e	enum:__anon172
pr_crush	src/m_random.h	/^  pr_crush,                   \/\/ #2$/;"	e	enum:__anon172
pr_damage	src/m_random.h	/^  pr_damage,                  \/\/ #1$/;"	e	enum:__anon172
pr_damagemobj	src/m_random.h	/^  pr_damagemobj,              \/\/ #5$/;"	e	enum:__anon172
pr_defect	src/m_random.h	/^  pr_defect,                  \/\/ #61  \/\/ Start new entries -- add new entries below$/;"	e	enum:__anon172
pr_dmspawn	src/m_random.h	/^  pr_dmspawn,                 \/\/ #26$/;"	e	enum:__anon172
pr_dropoff	src/m_random.h	/^  pr_dropoff,                 \/\/ #59$/;"	e	enum:__anon172
pr_enemystrafe	src/m_random.h	/^  pr_enemystrafe,             \/\/ #55$/;"	e	enum:__anon172
pr_explode	src/m_random.h	/^  pr_explode,                 \/\/ #8$/;"	e	enum:__anon172
pr_facetarget	src/m_random.h	/^  pr_facetarget,              \/\/ #32$/;"	e	enum:__anon172
pr_friends	src/m_random.h	/^  pr_friends,                 \/\/ #52$/;"	e	enum:__anon172
pr_genlift	src/m_random.h	/^  pr_genlift,                 \/\/ #3$/;"	e	enum:__anon172
pr_gunshot	src/m_random.h	/^  pr_gunshot,                 \/\/ #21$/;"	e	enum:__anon172
pr_headattack	src/m_random.h	/^  pr_headattack,              \/\/ #39$/;"	e	enum:__anon172
pr_helpfriend	src/m_random.h	/^  pr_helpfriend,              \/\/ #58$/;"	e	enum:__anon172
pr_killtics	src/m_random.h	/^  pr_killtics,                \/\/ #4$/;"	e	enum:__anon172
pr_lastlook	src/m_random.h	/^  pr_lastlook,                \/\/ #10$/;"	e	enum:__anon172
pr_lights	src/m_random.h	/^  pr_lights,                  \/\/ #7$/;"	e	enum:__anon172
pr_misc	src/m_random.h	/^  pr_misc,                    \/\/ #48$/;"	e	enum:__anon172
pr_misfire	src/m_random.h	/^  pr_misfire,                 \/\/ #22$/;"	e	enum:__anon172
pr_missile	src/m_random.h	/^  pr_missile,                 \/\/ #14$/;"	e	enum:__anon172
pr_missrange	src/m_random.h	/^  pr_missrange,               \/\/ #27$/;"	e	enum:__anon172
pr_newchase	src/m_random.h	/^  pr_newchase,                \/\/ #29$/;"	e	enum:__anon172
pr_newchasedir	src/m_random.h	/^  pr_newchasedir,             \/\/ #30$/;"	e	enum:__anon172
pr_opendoor	src/m_random.h	/^  pr_opendoor,                \/\/ #50$/;"	e	enum:__anon172
pr_painchance	src/m_random.h	/^  pr_painchance,              \/\/ #6$/;"	e	enum:__anon172
pr_plasma	src/m_random.h	/^  pr_plasma,                  \/\/ #20$/;"	e	enum:__anon172
pr_plats	src/m_random.h	/^  pr_plats,                   \/\/ #16$/;"	e	enum:__anon172
pr_posattack	src/m_random.h	/^  pr_posattack,               \/\/ #33$/;"	e	enum:__anon172
pr_punch	src/m_random.h	/^  pr_punch,                   \/\/ #17$/;"	e	enum:__anon172
pr_punchangle	src/m_random.h	/^  pr_punchangle,              \/\/ #18$/;"	e	enum:__anon172
pr_randomjump	src/m_random.h	/^  pr_randomjump,              \/\/ #60$/;"	e	enum:__anon172
pr_respawn	src/m_random.h	/^  pr_respawn,                 \/\/ #9$/;"	e	enum:__anon172
pr_sargattack	src/m_random.h	/^  pr_sargattack,              \/\/ #38$/;"	e	enum:__anon172
pr_saw	src/m_random.h	/^  pr_saw,                     \/\/ #19$/;"	e	enum:__anon172
pr_scream	src/m_random.h	/^  pr_scream,                  \/\/ #43$/;"	e	enum:__anon172
pr_see	src/m_random.h	/^  pr_see,                     \/\/ #31$/;"	e	enum:__anon172
pr_shadow	src/m_random.h	/^  pr_shadow,                  \/\/ #15$/;"	e	enum:__anon172
pr_shotgun	src/m_random.h	/^  pr_shotgun,                 \/\/ #23$/;"	e	enum:__anon172
pr_skelfist	src/m_random.h	/^  pr_skelfist,                \/\/ #42$/;"	e	enum:__anon172
pr_skiptarget	src/m_random.h	/^  pr_skiptarget,              \/\/ #54$/;"	e	enum:__anon172
pr_skullfly	src/m_random.h	/^  pr_skullfly,                \/\/ #0$/;"	e	enum:__anon172
pr_slimehurt	src/m_random.h	/^  pr_slimehurt,               \/\/ #25$/;"	e	enum:__anon172
pr_spawnblood	src/m_random.h	/^  pr_spawnblood,              \/\/ #13$/;"	e	enum:__anon172
pr_spawnfly	src/m_random.h	/^  pr_spawnfly,                \/\/ #47$/;"	e	enum:__anon172
pr_spawnpuff	src/m_random.h	/^  pr_spawnpuff,               \/\/ #12$/;"	e	enum:__anon172
pr_spawnthing	src/m_random.h	/^  pr_spawnthing,              \/\/ #11$/;"	e	enum:__anon172
pr_spidrefire	src/m_random.h	/^  pr_spidrefire,              \/\/ #36$/;"	e	enum:__anon172
pr_sposattack	src/m_random.h	/^  pr_sposattack,              \/\/ #34$/;"	e	enum:__anon172
pr_stayonlift	src/m_random.h	/^  pr_stayonlift,              \/\/ #57$/;"	e	enum:__anon172
pr_targetsearch	src/m_random.h	/^  pr_targetsearch,            \/\/ #51$/;"	e	enum:__anon172
pr_threshold	src/m_random.h	/^  pr_threshold,               \/\/ #53$/;"	e	enum:__anon172
pr_tracer	src/m_random.h	/^  pr_tracer,                  \/\/ #41$/;"	e	enum:__anon172
pr_troopattack	src/m_random.h	/^  pr_troopattack,             \/\/ #37$/;"	e	enum:__anon172
pr_trywalk	src/m_random.h	/^  pr_trywalk,                 \/\/ #28$/;"	e	enum:__anon172
prb_isspace	src/e6y_launcher.c	161;"	d	file:
prb_isspace	src/e6y_launcher.c	173;"	d	file:
prboom_1_compatibility	src/doomtype.h	/^  prboom_1_compatibility,                \/* PrBoom 2.03beta? *\/$/;"	e	enum:__anon57
prboom_2_compatibility	src/doomtype.h	/^  prboom_2_compatibility,                \/* PrBoom 2.1.0-2.1.1 *\/$/;"	e	enum:__anon57
prboom_3_compatibility	src/doomtype.h	/^  prboom_3_compatibility,                \/* PrBoom 2.2.x *\/$/;"	e	enum:__anon57
prboom_4_compatibility	src/doomtype.h	/^  prboom_4_compatibility,                \/* PrBoom 2.3.x *\/$/;"	e	enum:__anon57
prboom_5_compatibility	src/doomtype.h	/^  prboom_5_compatibility,                \/* PrBoom 2.4.0 *\/$/;"	e	enum:__anon57
prboom_6_compatibility	src/doomtype.h	/^  prboom_6_compatibility,                \/* Latest PrBoom *\/$/;"	e	enum:__anon57
prboom_comp	src/e6y.c	/^prboom_comp_t prboom_comp[PC_MAX] = {$/;"	v
prboom_comp_s	src/e6y.h	/^typedef struct prboom_comp_s$/;"	s
prboom_comp_t	src/e6y.h	/^} prboom_comp_t;$/;"	t	typeref:struct:prboom_comp_s
prboom_dir	src/SDL/i_system.c	/^static const char prboom_dir[] = {"\/." PACKAGE_TARNAME};$/;"	v	file:
precache	src/m_misc.c	/^dboolean    precache = true; \/* if true, load all graphics at start *\/$/;"	v
precache_lump	src/r_data.c	/^static inline void precache_lump(int l)$/;"	f	file:
precise	src/am_map.h	/^  int precise;$/;"	m	struct:am_frame_s
predict_player_position	src/p_cmd.c	/^void predict_player_position(player_t *player) {$/;"	f
prefix	src/PCRELIB/pcregrep.c	/^static const char *prefix[] = {$/;"	v	file:
prefix	src/hu_tracers.h	/^  char prefix[32];$/;"	m	struct:traceslist_s
prefix	src/hu_tracers.h	/^  char prefix[32];$/;"	m	struct:traceslistinit_s
prev	src/PCRELIB/pcre_exec.c	3430;"	d	file:
prev	src/PCRELIB/pcre_exec.c	453;"	d	file:
prev	src/d_think.h	/^  struct thinker_s*   prev;$/;"	m	struct:thinker_s	typeref:struct:thinker_s::thinker_s
prev	src/gl_clipper.c	/^  struct clipnode_s *prev, *next;$/;"	m	struct:clipnode_s	typeref:struct:clipnode_s::clipnode_s	file:
prev	src/p_spec.h	/^  struct ceilinglist *next,**prev;$/;"	m	struct:ceilinglist	typeref:struct:ceilinglist::
prev	src/p_spec.h	/^  struct platlist *next,**prev;$/;"	m	struct:platlist	typeref:struct:platlist::
prev	src/z_zone.c	/^  struct memblock *next,*prev;$/;"	m	struct:memblock	typeref:struct:memblock::	file:
prevMenu	src/m_menu.h	/^  struct menu_s*  prevMenu;     \/\/ previous menu$/;"	m	struct:menu_s	typeref:struct:menu_s::menu_s
prev_is_word	src/PCRELIB/pcre_exec.c	3438;"	d	file:
prev_is_word	src/PCRELIB/pcre_exec.c	461;"	d	file:
prev_m_x	src/am_map.c	/^static fixed_t prev_m_x, prev_m_y;$/;"	v	file:
prev_m_y	src/am_map.c	/^static fixed_t prev_m_x, prev_m_y;$/;"	v	file:
prev_scale_mtof	src/am_map.c	/^static fixed_t prev_scale_mtof = (fixed_t)INITSCALEMTOF;$/;"	v	file:
prev_viewangle	src/d_player.h	/^  angle_t prev_viewangle;$/;"	m	struct:player_s
prev_viewpitch	src/d_player.h	/^  angle_t prev_viewpitch;$/;"	m	struct:player_s
prev_viewz	src/d_player.h	/^  fixed_t prev_viewz;$/;"	m	struct:player_s
previous_host	src/n_net.c	/^static const char  *previous_host = NULL;$/;"	v	file:
previous_port	src/n_net.c	/^static short        previous_port = 0;$/;"	v	file:
prevrec	src/PCRELIB/pcre_internal.h	/^  struct recursion_info *prevrec; \/* Previous recursion record (or NULL) *\/$/;"	m	struct:recursion_info	typeref:struct:recursion_info::recursion_info
prevsec	src/r_defs.h	/^  int prevsec;     \/\/ -1 or number of sector for previous step$/;"	m	struct:__anon283
prevsource	src/r_draw.h	/^  const byte          *prevsource; \/\/ first pixel in previous column$/;"	m	struct:draw_column_vars_s
prevsubframe	src/SDL/i_system.c	/^static int prevsubframe = 0;$/;"	v	file:
primarychannels	src/mus2mid.h	/^  unsigned short primarychannels;$/;"	m	struct:__anon176
print_bandwidth_stats	src/n_main.c	/^static void print_bandwidth_stats(void) {$/;"	f	file:
print_command	src/p_cmd.c	/^static void print_command(gpointer data, gpointer user_data) {$/;"	f	file:
print_warning_about_changes	src/m_menu.c	/^int warning_about_changes, print_warning_about_changes;$/;"	v
priority	src/sounds.h	/^  int priority;$/;"	m	struct:sfxinfo_struct
prndindex	src/m_random.h	/^  int rndindex, prndindex;             \/\/ For compatibility support$/;"	m	struct:__anon173
proc	src/i_capture.c	/^  HANDLE proc;$/;"	m	struct:__anon129	file:
process_affinity_mask	src/SDL/i_video.c	/^int process_affinity_mask;$/;"	v
process_console_input	src/c_main.c	/^static void process_console_input(input_widget_t *iw) {$/;"	f	file:
process_options	src/PCRELIB/pcregrep.c	/^static int process_options = 0;$/;"	v	file:
process_priority	src/SDL/i_video.c	/^int process_priority;$/;"	v
process_tics	src/n_main.c	/^static int process_tics(int tics_elapsed) {$/;"	f	file:
processed	src/p_user.h	/^  bool processed;$/;"	m	struct:player_message_s
prog	src/m_menu.c	/^  prog,$/;"	e	enum:__anon163	file:
prog_stub	src/m_menu.c	/^  prog_stub,$/;"	e	enum:__anon163	file:
prog_stub1	src/m_menu.c	/^  prog_stub1,$/;"	e	enum:__anon163	file:
prog_stub2	src/m_menu.c	/^  prog_stub2,$/;"	e	enum:__anon163	file:
progress_texid	src/gl_hires.c	/^static GLuint progress_texid = 0;$/;"	v	file:
projMatrix	src/r_main.c	/^float projMatrix[16];$/;"	v
projection	src/r_main.c	/^fixed_t  projection;$/;"	v
projectiony	src/r_main.c	/^fixed_t  projectiony;$/;"	v
promted	src/g_overflow.h	/^  int promted;$/;"	m	struct:overrun_param_s
prop_category	src/PCRELIB/pcre_exec.c	469;"	d	file:
prop_chartype	src/PCRELIB/pcre_exec.c	470;"	d	file:
prop_fail_result	src/PCRELIB/pcre_exec.c	468;"	d	file:
prop_script	src/PCRELIB/pcre_exec.c	471;"	d	file:
prop_test_variable	src/PCRELIB/pcre_exec.c	472;"	d	file:
prop_type	src/PCRELIB/pcre_exec.c	466;"	d	file:
prop_value	src/PCRELIB/pcre_exec.c	467;"	d	file:
ps_flash	src/p_pspr.h	/^  ps_flash,$/;"	e	enum:__anon225
ps_weapon	src/p_pspr.h	/^  ps_weapon,$/;"	e	enum:__anon225
pspdef_t	src/p_pspr.h	/^} pspdef_t;$/;"	t	typeref:struct:__anon226
psprite_offset	src/v_video.c	/^int psprite_offset; \/\/ Needed for "tallscreen" modes$/;"	v
pspriteiscale	src/r_things.c	/^fixed_t pspriteiscale;$/;"	v
psprites	src/d_player.h	/^  pspdef_t            psprites[NUMPSPRITES];$/;"	m	struct:player_s
pspritexscale	src/r_things.c	/^fixed_t pspritexscale;$/;"	v
pspritexscale_f	src/r_things.c	/^float pspritexscale_f;$/;"	v
pspriteyscale	src/r_things.c	/^fixed_t pspriteyscale;$/;"	v
pspriteyscale_f	src/r_things.c	/^float pspriteyscale_f;$/;"	v
psprnum_t	src/p_pspr.h	/^} psprnum_t;$/;"	t	typeref:enum:__anon225
pstring	src/PCRELIB/pcreposix.c	/^static const char *const pstring[] = {$/;"	v	file:
psz	src/m_misc.h	/^    const char* psz;$/;"	m	struct:default_s::__anon170
ptic	src/d_server.c	/^long int ptic(packet_header_t* p)$/;"	f
ptr_lstrip	src/d_deh.c	/^char *ptr_lstrip(char *p)  \/\/ point past leading whitespace$/;"	f
purgable_memory	src/z_zone.c	/^static int purgable_memory = 0;$/;"	v	file:
pursuecount	src/p_mobj.h	/^    short               pursuecount;$/;"	m	struct:mobj_s
puser_t	src/i_capture.c	/^} puser_t;$/;"	t	typeref:struct:__anon129	file:
puser_t	src/i_capture.c	/^} puser_t;$/;"	t	typeref:struct:__anon130	file:
pusher_t	src/p_spec.h	/^} pusher_t;$/;"	t	typeref:struct:__anon274
pw_allmap	src/doomdef.h	/^  pw_allmap,$/;"	e	enum:__anon51
pw_infrared	src/doomdef.h	/^  pw_infrared,$/;"	e	enum:__anon51
pw_invisibility	src/doomdef.h	/^  pw_invisibility,$/;"	e	enum:__anon51
pw_invulnerability	src/doomdef.h	/^  pw_invulnerability,$/;"	e	enum:__anon51
pw_ironfeet	src/doomdef.h	/^  pw_ironfeet,$/;"	e	enum:__anon51
pw_strength	src/doomdef.h	/^  pw_strength,$/;"	e	enum:__anon51
queuedpacket	src/d_client.c	/^static packet_header_t** queuedpacket;$/;"	v	file:
queuedtime	src/mus2mid.c	/^static unsigned int queuedtime = 0;$/;"	v	file:
quickSaveSlot	src/m_menu.c	/^int quickSaveSlot;   \/\/ -1 = no quicksave slot picked!$/;"	v
quiet	src/PCRELIB/pcregrep.c	/^static BOOL quiet = FALSE;$/;"	v	file:
quitdoom	src/m_menu.c	/^  quitdoom,$/;"	e	enum:__anon148	file:
quitsounds	src/m_menu.c	/^int quitsounds[8] =$/;"	v
quitsounds2	src/m_menu.c	/^int quitsounds2[8] =$/;"	v
r	src/am_map.h	/^  unsigned char r, g, b, a;$/;"	m	struct:map_point_s
r	src/gl_intern.h	/^  unsigned char r, g, b, a;$/;"	m	struct:vbo_vertex_s
r	src/gl_intern.h	/^  unsigned char r, g, b, a;$/;"	m	struct:vbo_xy_uv_rgba_s
r	src/gl_intern.h	/^  unsigned char r, g, b;$/;"	m	struct:PalEntry_s
r	src/hu_lib.h	/^  float r;$/;"	m	struct:hu_color_s
r_flags	src/r_defs.h	/^  } r_flags;$/;"	m	struct:line_s	typeref:enum:line_s::__anon286
r_frame_count	src/r_main.c	/^int r_frame_count;$/;"	v
r_have_internal_hires	src/r_main.c	/^int r_have_internal_hires = false;$/;"	v
r_near_clip_plane	src/r_things.c	/^int r_near_clip_plane = MINZ;$/;"	v
r_stretchsky	src/r_sky.c	/^int r_stretchsky = 1;$/;"	v
r_validcount	src/r_defs.h	/^  int r_validcount;      \/\/ cph: if == gametic, r_flags already done$/;"	m	struct:line_s
radio_values	src/TEXTSCREEN/examples/guitest.c	/^char *radio_values[] = { "Badger", "Mushroom", "Snake" };$/;"	v
radiobutton_value	src/TEXTSCREEN/examples/guitest.c	/^int radiobutton_value;$/;"	v
radius	src/gl_intern.h	/^  float radius;$/;"	m	struct:__anon100
radius	src/info.h	/^  int radius;       \/* An often incorrect radius *\/$/;"	m	struct:__anon138
radius	src/p_mobj.h	/^    fixed_t             radius;$/;"	m	struct:mobj_s
radius	src/p_spec.h	/^  int radius;          \/\/ Effective radius for point pusher$/;"	m	struct:__anon274
raiseAndChange	src/p_spec.h	/^  raiseAndChange,$/;"	e	enum:__anon252
raiseFloor	src/p_spec.h	/^  raiseFloor,$/;"	e	enum:__anon255
raiseFloor24	src/p_spec.h	/^  raiseFloor24,$/;"	e	enum:__anon255
raiseFloor24AndChange	src/p_spec.h	/^  raiseFloor24AndChange,$/;"	e	enum:__anon255
raiseFloor32Turbo	src/p_spec.h	/^  raiseFloor32Turbo,$/;"	e	enum:__anon255
raiseFloor512	src/p_spec.h	/^  raiseFloor512,$/;"	e	enum:__anon255
raiseFloorCrush	src/p_spec.h	/^  raiseFloorCrush,$/;"	e	enum:__anon255
raiseFloorToNearest	src/p_spec.h	/^  raiseFloorToNearest,$/;"	e	enum:__anon255
raiseFloorTurbo	src/p_spec.h	/^  raiseFloorTurbo,$/;"	e	enum:__anon255
raiseIn5Mins	src/p_spec.h	/^  raiseIn5Mins,$/;"	e	enum:__anon253
raiseToHighest	src/p_spec.h	/^  raiseToHighest,$/;"	e	enum:__anon254
raiseToNearestAndChange	src/p_spec.h	/^  raiseToNearestAndChange,$/;"	e	enum:__anon252
raiseToTexture	src/p_spec.h	/^  raiseToTexture,$/;"	e	enum:__anon255
raisestate	src/info.h	/^  int raisestate;   \/* The first state for an Archvile or respawn$/;"	m	struct:__anon138
rate	src/MUSIC/opl.c	/^    unsigned int rate;        \/\/ Number of times the timer is advanced per sec.$/;"	m	struct:__anon183	file:
rateIndex	src/MUSIC/dbopl.h	/^  Bit32u rateIndex;     \/\/Current position of the evenlope$/;"	m	struct:_Operator
rateZero	src/MUSIC/dbopl.h	/^  Bit8u rateZero;       \/\/Bits for the different states of the envelope having no changes$/;"	m	struct:_Operator
ratio_multiplier	src/v_video.c	/^unsigned int ratio_multiplier, ratio_scale;$/;"	v
ratio_scale	src/v_video.c	/^unsigned int ratio_multiplier, ratio_scale;$/;"	v
rcolumn_t	src/r_patch.h	/^} rcolumn_t;$/;"	t	typeref:struct:__anon310
rdepth	src/PCRELIB/pcre_exec.c	442;"	d	file:
rdthsempty1	src/m_menu.c	/^  rdthsempty1,$/;"	e	enum:__anon149	file:
rdthsempty2	src/m_menu.c	/^  rdthsempty2,$/;"	e	enum:__anon150	file:
re_erroffset	src/PCRELIB/pcreposix.h	/^  size_t re_erroffset;$/;"	m	struct:__anon218
re_full_	src/PCRELIB/pcrecpp.h	/^  pcre*         re_full_;       \/\/ For full matches$/;"	m	class:pcrecpp::RE
re_nsub	src/PCRELIB/pcreposix.h	/^  size_t re_nsub;$/;"	m	struct:__anon218
re_partial_	src/PCRELIB/pcrecpp.h	/^  pcre*         re_partial_;    \/\/ For partial matches$/;"	m	class:pcrecpp::RE
re_pcre	src/PCRELIB/pcreposix.h	/^  void *re_pcre;$/;"	m	struct:__anon218
reactiontime	src/info.h	/^  int reactiontime; \/* How many tics it waits after it wakes up$/;"	m	struct:__anon138
reactiontime	src/p_mobj.h	/^    short               reactiontime;$/;"	m	struct:mobj_s
read	src/cmp.h	/^  cmp_reader  read;$/;"	m	struct:cmp_ctx_s
read1_end	src/m_menu.c	/^  read1_end$/;"	e	enum:__anon149	file:
read2_end	src/m_menu.c	/^  read2_end$/;"	e	enum:__anon150	file:
read_array	src/n_pack.c	193;"	d	file:
read_bool	src/n_pack.c	184;"	d	file:
read_byte	src/cmp.c	/^static bool read_byte(cmp_ctx_t *ctx, uint8_t *x) {$/;"	f	file:
read_bytes	src/n_pack.c	211;"	d	file:
read_char	src/n_pack.c	66;"	d	file:
read_config_file	src/d_server.c	/^void read_config_file(FILE* fp, struct setup_packet_s* sp)$/;"	f
read_double	src/n_pack.c	171;"	d	file:
read_e	src/m_menu.c	/^} read_e;$/;"	v	typeref:enum:__anon149
read_e2	src/m_menu.c	/^} read_e2;$/;"	v	typeref:enum:__anon150
read_int	src/n_pack.c	118;"	d	file:
read_long	src/n_pack.c	145;"	d	file:
read_map	src/n_pack.c	202;"	d	file:
read_message_recipient	src/n_pack.c	273;"	d	file:
read_packed_game_state	src/n_pack.c	221;"	d	file:
read_player	src/n_pack.c	259;"	d	file:
read_ranged_char	src/n_pack.c	75;"	d	file:
read_ranged_double	src/n_pack.c	180;"	d	file:
read_ranged_int	src/n_pack.c	128;"	d	file:
read_ranged_long	src/n_pack.c	154;"	d	file:
read_ranged_short	src/n_pack.c	101;"	d	file:
read_ranged_uchar	src/n_pack.c	88;"	d	file:
read_ranged_uint	src/n_pack.c	141;"	d	file:
read_ranged_ulong	src/n_pack.c	167;"	d	file:
read_ranged_ushort	src/n_pack.c	114;"	d	file:
read_recipient_array	src/n_pack.c	250;"	d	file:
read_repeat_counts	src/PCRELIB/pcre_compile.c	/^read_repeat_counts(const uschar *p, int *minp, int *maxp, int *errorcodeptr)$/;"	f	file:
read_short	src/n_pack.c	92;"	d	file:
read_string	src/n_pack.c	231;"	d	file:
read_string_array	src/n_pack.c	241;"	d	file:
read_type_marker	src/cmp.c	/^static bool read_type_marker(cmp_ctx_t *ctx, uint8_t *marker) {$/;"	f	file:
read_uchar	src/n_pack.c	79;"	d	file:
read_uint	src/n_pack.c	132;"	d	file:
read_ulong	src/n_pack.c	158;"	d	file:
read_ushort	src/n_pack.c	105;"	d	file:
readdirectory	src/PCRELIB/pcregrep.c	/^char *readdirectory(directory_type *dir) {}$/;"	f
readdirectory	src/PCRELIB/pcregrep.c	/^readdirectory(directory_type *dir)$/;"	f	file:
readdirectory	src/PCRELIB/pcregrep.c	/^readdirectory(directory_type *dir)$/;"	f
readthis	src/m_menu.c	/^  readthis,$/;"	e	enum:__anon148	file:
readystate	src/d_items.h	/^  int         readystate;$/;"	m	struct:__anon19
readyweapon	src/d_player.h	/^  weapontype_t        readyweapon;$/;"	m	struct:player_s
real_pcre	src/PCRELIB/pcre_internal.h	/^typedef struct real_pcre {$/;"	s
real_pcre	src/PCRELIB/pcre_internal.h	/^} real_pcre;$/;"	t	typeref:struct:real_pcre
realframe	src/SDL/i_system.c	/^dboolean realframe = false;$/;"	v
realloc	src/z_zone.h	172;"	d
realloc	src/z_zone.h	178;"	d
realtexheight	src/gl_intern.h	/^  int realtexwidth, realtexheight;$/;"	m	struct:__anon89
realtexwidth	src/gl_intern.h	/^  int realtexwidth, realtexheight;$/;"	m	struct:__anon89
realtic_clock_rate	src/SDL/i_main.c	/^int realtic_clock_rate = 100;$/;"	v
recoil_values	src/p_pspr.c	/^static const int recoil_values[] = {    \/\/ phares$/;"	v	file:
recursion_info	src/PCRELIB/pcre_internal.h	/^typedef struct recursion_info {$/;"	s
recursion_info	src/PCRELIB/pcre_internal.h	/^} recursion_info;$/;"	t	typeref:struct:recursion_info
recursive	src/PCRELIB/pcre_internal.h	/^  recursion_info *recursive;    \/* Linked list of recursion data *\/$/;"	m	struct:match_data
recvdbytes	src/SDL/i_network.c	/^size_t sentbytes, recvdbytes;$/;"	v
ref_count	src/PCRELIB/pcre_internal.h	/^  pcre_uint16 ref_count;          \/* Reference count *\/$/;"	m	struct:real_pcre
refcount	src/TEXTSCREEN/txt_widget.c	/^    int refcount;$/;"	m	struct:txt_callback_table_s	file:
references	src/d_think.h	/^  unsigned references;$/;"	m	struct:thinker_s
refire	src/d_player.h	/^  int                 refire;$/;"	m	struct:player_s
reg04	src/MUSIC/dbopl.h	/^  Bit8u reg04;$/;"	m	struct:_Chip
reg08	src/MUSIC/dbopl.h	/^  Bit8u reg08;$/;"	m	struct:_Chip
reg104	src/MUSIC/dbopl.h	/^  Bit8u reg104;$/;"	m	struct:_Chip
reg20	src/MUSIC/dbopl.h	/^  Bit8u reg20, reg40, reg60, reg80, regE0;$/;"	m	struct:_Operator
reg40	src/MUSIC/dbopl.h	/^  Bit8u reg20, reg40, reg60, reg80, regE0;$/;"	m	struct:_Operator
reg60	src/MUSIC/dbopl.h	/^  Bit8u reg20, reg40, reg60, reg80, regE0;$/;"	m	struct:_Operator
reg80	src/MUSIC/dbopl.h	/^  Bit8u reg20, reg40, reg60, reg80, regE0;$/;"	m	struct:_Operator
regB0	src/MUSIC/dbopl.h	/^  Bit8u regB0;      \/\/Register values to check for changes$/;"	m	struct:_Channel
regBD	src/MUSIC/dbopl.h	/^  Bit8u regBD;$/;"	m	struct:_Chip
regC0	src/MUSIC/dbopl.h	/^  Bit8u regC0;$/;"	m	struct:_Channel
regE0	src/MUSIC/dbopl.h	/^  Bit8u reg20, reg40, reg60, reg80, regE0;$/;"	m	struct:_Operator
reg_volume	src/MUSIC/oplplayer.c	/^    unsigned int reg_volume;$/;"	m	struct:opl_voice_s	file:
regcomp	src/PCRELIB/pcreposix.c	/^regcomp(regex_t *preg, const char *pattern, int cflags)$/;"	f
regerror	src/PCRELIB/pcreposix.c	/^regerror(int errcode, const regex_t *preg, char *errbuf, size_t errbuf_size)$/;"	f
regex_t	src/PCRELIB/pcreposix.h	/^} regex_t;$/;"	t	typeref:struct:__anon218
regexec	src/PCRELIB/pcreposix.c	/^regexec(const regex_t *preg, const char *string, size_t nmatch,$/;"	f
regfree	src/PCRELIB/pcreposix.c	/^regfree(regex_t *preg)$/;"	f
register_num	src/MUSIC/opl.c	/^static int register_num = 0;$/;"	v	file:
registered	src/doomdef.h	/^  registered,   \/\/ DOOM 1 registered, E3, M27$/;"	e	enum:__anon43
registersong	src/MUSIC/musicplayer.h	/^  const void *(*registersong)(const void *data, unsigned len);$/;"	m	struct:__anon177
regmatch_t	src/PCRELIB/pcreposix.h	/^} regmatch_t;$/;"	t	typeref:struct:__anon219
regoff_t	src/PCRELIB/pcreposix.h	/^typedef int regoff_t;$/;"	t
rejectlump	src/p_setup.c	/^static int rejectlump = -1;\/\/ cph - store reject lump num if cached$/;"	v	file:
rejectmatrix	src/p_setup.c	/^const byte *rejectmatrix; \/\/ cph - const*$/;"	v
releaseAdd	src/MUSIC/dbopl.h	/^  Bit32u releaseAdd;$/;"	m	struct:_Operator
reliable	src/n_peer.h	/^  netchan_t reliable;$/;"	m	struct:netcom_s
rellight	src/gl_light.c	/^  int rellight;$/;"	m	struct:__anon106	file:
remoteaddr	src/d_server.c	/^UDP_CHANNEL remoteaddr[MAXPLAYERS];$/;"	v
remotenode	src/d_net.h	/^    short               remotenode;$/;"	m	struct:__anon27
remotesend	src/d_client.c	/^static int       remotesend; \/\/ Tic expected by the remote$/;"	v	file:
remotetic	src/d_client.c	/^static int       remotetic; \/\/ Tic expected from the remote$/;"	v	file:
remove	src/SDL/SDL_win32_main.c	38;"	d	file:
removePostFromColumn	src/r_patch.c	/^static void removePostFromColumn(rcolumn_t *column, int post) {$/;"	f	file:
render	src/MUSIC/musicplayer.h	/^  void (*render)(void *dest, unsigned nsamp);$/;"	m	struct:__anon177
renderCommandsEvent	src/i_smp.c	/^static SDL_cond *renderCommandsEvent;$/;"	v	file:
renderCompletedEvent	src/i_smp.c	/^static SDL_cond *renderCompletedEvent;$/;"	v	file:
render_aspect	src/e6y.c	/^int render_aspect;$/;"	v
render_aspects_list	src/v_video.c	/^const char *render_aspects_list[5] = {"auto", "16:9", "16:10", "4:3", "5:4"};$/;"	v
render_context	src/SDL/i_video.c	/^static cairo_t *render_context = NULL;$/;"	v	file:
render_doom_lightmaps	src/r_main.c	/^int render_doom_lightmaps;$/;"	v
render_fov	src/e6y.c	/^int render_fov;$/;"	v
render_fovratio	src/e6y.c	/^float render_fovratio;$/;"	v
render_fovy	src/e6y.c	/^float render_fovy = FOV90;$/;"	v
render_interlaced_scanning	src/r_screenmultiply.c	/^int render_interlaced_scanning;$/;"	v
render_multiplier	src/e6y.c	/^float render_multiplier;$/;"	v
render_multisampling	src/e6y.c	/^int render_multisampling;$/;"	v
render_paperitems	src/e6y.c	/^int render_paperitems;$/;"	v
render_patches_scalex	src/v_video.c	/^int render_patches_scalex;$/;"	v
render_patches_scaley	src/v_video.c	/^int render_patches_scaley;$/;"	v
render_precise	src/r_main.c	/^render_precise_t render_precise = render_precise_speed;$/;"	v
render_precise_quality	src/r_main.h	/^typedef enum { render_precise_speed, render_precise_quality } render_precise_t;$/;"	e	enum:__anon303
render_precise_speed	src/r_main.h	/^typedef enum { render_precise_speed, render_precise_quality } render_precise_t;$/;"	e	enum:__anon303
render_precise_t	src/r_main.h	/^typedef enum { render_precise_speed, render_precise_quality } render_precise_t;$/;"	t	typeref:enum:__anon303
render_precises	src/r_main.c	/^const char *render_precises[] = {"Speed","Quality"};$/;"	v
render_ratio	src/e6y.c	/^float render_ratio;$/;"	v
render_screen_multiply	src/r_screenmultiply.c	/^int render_screen_multiply;$/;"	v
render_stretch_hud	src/v_video.c	/^int render_stretch_hud;$/;"	v
render_stretch_hud_default	src/v_video.c	/^int render_stretch_hud_default;$/;"	v
render_stretch_list	src/v_video.c	/^const char *render_stretch_list[patch_stretch_max] = {"not adjusted", "Doom format", "fit to width"};$/;"	v
render_surface	src/SDL/i_video.c	/^static cairo_surface_t *render_surface = NULL;$/;"	v	file:
render_thread_func	src/i_smp.c	/^int render_thread_func(void *unused)$/;"	f
render_usedetail	src/gl_detail.c	/^int render_usedetail;$/;"	v
render_wipescreen	src/e6y.c	/^int render_wipescreen;$/;"	v
rendered_segs	src/r_main.c	/^int rendered_visplanes, rendered_segs, rendered_vissprites;$/;"	v
rendered_visplanes	src/r_main.c	/^int rendered_visplanes, rendered_segs, rendered_vissprites;$/;"	v
rendered_vissprites	src/r_main.c	/^int rendered_visplanes, rendered_segs, rendered_vissprites;$/;"	v
renderer_fps	src/r_main.c	/^int renderer_fps = 0;$/;"	v
renderfilters	src/m_menu.c	/^static const char *renderfilters[] = {"none", "point", "linear", "rounded"};$/;"	v	file:
rendering_stats	src/r_main.c	/^dboolean rendering_stats;$/;"	v
rendermarker	src/gl_main.c	/^byte rendermarker=0;$/;"	v
rep_max	src/PCRELIB/pcre_exec.c	/^static const char rep_max[] = { 0, 0, 0, 0, 1, 1 };$/;"	v	file:
rep_min	src/PCRELIB/pcre_exec.c	/^static const char rep_min[] = { 0, 0, 1, 1, 0, 0 };$/;"	v	file:
req_byte	src/PCRELIB/pcre_internal.h	/^  pcre_uint16 req_byte;$/;"	m	struct:real_pcre
req_varyopt	src/PCRELIB/pcre_internal.h	/^  int  req_varyopt;             \/* "After variable item" flag for reqbyte *\/$/;"	m	struct:compile_data
reserved	src/protocol.h	/^  byte reserved[2];	\/* Was random in prboom <=2.2.4, now 0 *\/$/;"	m	struct:__anon228
reset_retraction_target	src/hu_msg.c	/^static void reset_retraction_target(message_widget_t *mw, bool reset_timeout) {$/;"	f	file:
resolutions	src/MAC/ResolutionDataSource.h	/^+ (NSArray *)resolutions;$/;"	v
resource_files	src/d_main.c	/^GPtrArray *resource_files = NULL;$/;"	v
respawnmonsters	src/g_game.c	/^dboolean        respawnmonsters;$/;"	v
respawnparm	src/d_main.c	/^dboolean respawnparm;    \/\/ working -respawn$/;"	v
result_e	src/p_spec.h	/^} result_e;$/;"	t	typeref:enum:__anon259
resume	src/MUSIC/musicplayer.h	/^  void (*resume)(void);$/;"	m	struct:__anon177
resurectedkillcount	src/d_player.h	/^  int                 resurectedkillcount;$/;"	m	struct:player_s
retail	src/doomdef.h	/^  retail,       \/\/ DOOM 1 retail, E4, M36$/;"	e	enum:__anon43
retractable	src/hu_msg.c	/^  bool retractable;$/;"	m	struct:message_widget_s	file:
retraction_rate	src/hu_msg.c	/^  double retraction_rate;$/;"	m	struct:message_widget_s	file:
retraction_target	src/hu_msg.c	/^  double retraction_target;$/;"	m	struct:message_widget_s	file:
retraction_timeout	src/hu_msg.c	/^  int retraction_timeout;$/;"	m	struct:message_widget_s	file:
retransmitfrom	src/d_ipxgate.c	/^    byte                retransmitfrom;$/;"	m	struct:a	file:
retransmitfrom	src/d_net.h	/^    byte                retransmitfrom;$/;"	m	struct:__anon23
rightvol	src/SDL/i_sound.c	/^  int rightvol;                 \/\/ right channel volume (0-127)$/;"	m	struct:__anon313	file:
rm_eo	src/PCRELIB/pcreposix.h	/^  regoff_t rm_eo;$/;"	m	struct:__anon219
rm_so	src/PCRELIB/pcreposix.h	/^  regoff_t rm_so;$/;"	m	struct:__anon219
rndindex	src/m_random.h	/^  int rndindex, prndindex;             \/\/ For compatibility support$/;"	m	struct:__anon173
rndtable	src/m_random.c	/^static const unsigned char rndtable[256] = { \/\/ 1\/19\/98 killough -- made const$/;"	v	file:
rng	src/m_random.c	/^rng_t rng;     \/\/ the random number state$/;"	v
rng_t	src/m_random.h	/^} rng_t;$/;"	t	typeref:struct:__anon173
rngseed	src/d_net.h	/^  unsigned int rngseed;$/;"	m	struct:__anon24
rngseed	src/m_random.c	/^unsigned int rngseed = 1993;   \/\/ killough 3\/26\/98: The seed$/;"	v
roll	src/gl_main.c	/^float roll     = 0.0f;$/;"	v
rotate	src/r_defs.h	/^  int rotate;$/;"	m	struct:__anon290
routine	src/m_menu.h	/^  void            (*routine)(); \/\/ draw routine$/;"	m	struct:menu_s
routine	src/m_menu.h	/^  void  (*routine)(int choice);$/;"	m	struct:menuitem_s
rowoffset	src/doomdata.h	/^  short rowoffset;$/;"	m	struct:__anon30
rowoffset	src/r_defs.h	/^  fixed_t rowoffset;     \/\/ add this to the calculated texture top$/;"	m	struct:__anon284
rows	src/gl_sky.c	/^  int rows, columns;$/;"	m	struct:__anon112	file:
rows	src/gl_sky.c	/^static int rows, columns;	$/;"	v	file:
rpatch_flag_t	src/r_patch.h	/^} rpatch_flag_t;$/;"	t	typeref:enum:__anon308
rpatch_t	src/r_patch.h	/^} rpatch_t;$/;"	t	typeref:struct:__anon311
rpost_t	src/r_patch.h	/^} rpost_t;$/;"	t	typeref:struct:__anon309
rstrip	src/d_deh.c	/^void rstrip(char *s)  \/\/ strip trailing whitespace$/;"	f
rsuperdown	src/d_main.h	/^  bool rsuperdown;$/;"	m	struct:keybindings_s
run_commandsync_tics	src/n_main.c	/^static int run_commandsync_tics(int command_count) {$/;"	f	file:
run_player_command	src/p_cmd.c	/^static void run_player_command(player_t *player) {$/;"	f	file:
run_queue	src/n_peer.h	/^  GQueue *run_queue;$/;"	m	struct:command_queue_s
run_queued_player_commands	src/p_cmd.c	/^void run_queued_player_commands(int playernum) {$/;"	f
run_regular_tic	src/p_tick.c	/^static void run_regular_tic(void) {$/;"	f	file:
run_thinkers_and_specials	src/p_tick.c	/^static void run_thinkers_and_specials(void) {$/;"	f	file:
run_tic	src/n_main.c	/^static void run_tic(void) {$/;"	f	file:
run_tics	src/n_main.c	/^static int run_tics(int tic_count) {$/;"	f	file:
running_tracks	src/MUSIC/oplplayer.c	/^static unsigned int running_tracks = 0;$/;"	v	file:
rw_angle1	src/r_segs.c	/^int             rw_angle1;$/;"	v
rw_bottomtexturemid	src/r_segs.c	/^static fixed_t  rw_bottomtexturemid;$/;"	v	file:
rw_centerangle	src/r_defs.h	/^  fixed_t rw_offset, rw_distance, rw_centerangle; $/;"	m	struct:drawseg_s
rw_centerangle	src/r_segs.c	/^static angle_t  rw_centerangle;$/;"	v	file:
rw_distance	src/r_defs.h	/^  fixed_t rw_offset, rw_distance, rw_centerangle; $/;"	m	struct:drawseg_s
rw_distance	src/r_segs.c	/^fixed_t         rw_distance;$/;"	v
rw_lightlevel	src/r_segs.c	/^static int      rw_lightlevel;$/;"	v	file:
rw_midi	src/SDL/i_music.c	/^static SDL_RWops *rw_midi = NULL; \/\/ Some tracks are directly streamed from the RWops;$/;"	v	file:
rw_midtexturemid	src/r_segs.c	/^static fixed_t  rw_midtexturemid;$/;"	v	file:
rw_normalangle	src/r_segs.c	/^angle_t         rw_normalangle; \/\/ angle to line origin$/;"	v
rw_offset	src/r_defs.h	/^  fixed_t rw_offset, rw_distance, rw_centerangle; $/;"	m	struct:drawseg_s
rw_offset	src/r_segs.c	/^static fixed_t  rw_offset;$/;"	v	file:
rw_scale	src/r_segs.c	/^static fixed_t  rw_scale;$/;"	v	file:
rw_scalestep	src/r_segs.c	/^static fixed_t  rw_scalestep;$/;"	v	file:
rw_stopx	src/r_segs.c	/^static int      rw_stopx;$/;"	v	file:
rw_toptexturemid	src/r_segs.c	/^static fixed_t  rw_toptexturemid;$/;"	v	file:
rw_x	src/r_segs.c	/^static int      rw_x;$/;"	v	file:
s	src/d_ipxgate.c	/^    setupdata_t s;$/;"	m	union:__anon18::altu	file:
s16	src/cmp.h	/^  int16_t   s16;$/;"	m	union:cmp_object_data_u
s32	src/cmp.h	/^  int32_t   s32;$/;"	m	union:cmp_object_data_u
s64	src/cmp.h	/^  int64_t   s64;$/;"	m	union:cmp_object_data_u
s8	src/cmp.h	/^  int8_t    s8;$/;"	m	union:cmp_object_data_u
s_AMSTR_FOLLOWOFF	src/d_deh.c	/^const char *s_AMSTR_FOLLOWOFF    = AMSTR_FOLLOWOFF;$/;"	v
s_AMSTR_FOLLOWON	src/d_deh.c	/^const char *s_AMSTR_FOLLOWON     = AMSTR_FOLLOWON;$/;"	v
s_AMSTR_GRIDOFF	src/d_deh.c	/^const char *s_AMSTR_GRIDOFF      = AMSTR_GRIDOFF;$/;"	v
s_AMSTR_GRIDON	src/d_deh.c	/^const char *s_AMSTR_GRIDON       = AMSTR_GRIDON;$/;"	v
s_AMSTR_MARKEDSPOT	src/d_deh.c	/^const char *s_AMSTR_MARKEDSPOT   = AMSTR_MARKEDSPOT;$/;"	v
s_AMSTR_MARKSCLEARED	src/d_deh.c	/^const char *s_AMSTR_MARKSCLEARED = AMSTR_MARKSCLEARED;$/;"	v
s_AMSTR_OVERLAYOFF	src/d_deh.c	/^const char* s_AMSTR_OVERLAYOFF   = AMSTR_OVERLAYOFF;$/;"	v
s_AMSTR_OVERLAYON	src/d_deh.c	/^const char* s_AMSTR_OVERLAYON    = AMSTR_OVERLAYON;$/;"	v
s_AMSTR_ROTATEOFF	src/d_deh.c	/^const char* s_AMSTR_ROTATEOFF    = AMSTR_ROTATEOFF;$/;"	v
s_AMSTR_ROTATEON	src/d_deh.c	/^const char* s_AMSTR_ROTATEON     = AMSTR_ROTATEON;$/;"	v
s_AMSTR_TEXTUREDOFF	src/d_deh.c	/^const char* s_AMSTR_TEXTUREDOFF  = AMSTR_TEXTUREDOFF;$/;"	v
s_AMSTR_TEXTUREDON	src/d_deh.c	/^const char* s_AMSTR_TEXTUREDON   = AMSTR_TEXTUREDON;$/;"	v
s_C1TEXT	src/d_deh.c	/^const char *s_C1TEXT     = C1TEXT;$/;"	v
s_C2TEXT	src/d_deh.c	/^const char *s_C2TEXT     = C2TEXT;$/;"	v
s_C3TEXT	src/d_deh.c	/^const char *s_C3TEXT     = C3TEXT;$/;"	v
s_C4TEXT	src/d_deh.c	/^const char *s_C4TEXT     = C4TEXT;$/;"	v
s_C5TEXT	src/d_deh.c	/^const char *s_C5TEXT     = C5TEXT;$/;"	v
s_C6TEXT	src/d_deh.c	/^const char *s_C6TEXT     = C6TEXT;$/;"	v
s_CC_ARACH	src/d_deh.c	/^const char *s_CC_ARACH   = CC_ARACH;$/;"	v
s_CC_ARCH	src/d_deh.c	/^const char *s_CC_ARCH    = CC_ARCH;$/;"	v
s_CC_BARON	src/d_deh.c	/^const char *s_CC_BARON   = CC_BARON;$/;"	v
s_CC_CACO	src/d_deh.c	/^const char *s_CC_CACO    = CC_CACO;$/;"	v
s_CC_CYBER	src/d_deh.c	/^const char *s_CC_CYBER   = CC_CYBER;$/;"	v
s_CC_DEMON	src/d_deh.c	/^const char *s_CC_DEMON   = CC_DEMON;$/;"	v
s_CC_HEAVY	src/d_deh.c	/^const char *s_CC_HEAVY   = CC_HEAVY;$/;"	v
s_CC_HELL	src/d_deh.c	/^const char *s_CC_HELL    = CC_HELL;$/;"	v
s_CC_HERO	src/d_deh.c	/^const char *s_CC_HERO    = CC_HERO;$/;"	v
s_CC_IMP	src/d_deh.c	/^const char *s_CC_IMP     = CC_IMP;$/;"	v
s_CC_LOST	src/d_deh.c	/^const char *s_CC_LOST    = CC_LOST;$/;"	v
s_CC_MANCU	src/d_deh.c	/^const char *s_CC_MANCU   = CC_MANCU;$/;"	v
s_CC_PAIN	src/d_deh.c	/^const char *s_CC_PAIN    = CC_PAIN;$/;"	v
s_CC_REVEN	src/d_deh.c	/^const char *s_CC_REVEN   = CC_REVEN;$/;"	v
s_CC_SHOTGUN	src/d_deh.c	/^const char *s_CC_SHOTGUN = CC_SHOTGUN;$/;"	v
s_CC_SPIDER	src/d_deh.c	/^const char *s_CC_SPIDER  = CC_SPIDER;$/;"	v
s_CC_ZOMBIE	src/d_deh.c	/^const char *s_CC_ZOMBIE  = CC_ZOMBIE;$/;"	v
s_DETAILHI	src/d_deh.c	/^const char *s_DETAILHI    = DETAILHI;$/;"	v
s_DETAILLO	src/d_deh.c	/^const char *s_DETAILLO    = DETAILLO;$/;"	v
s_DOSY	src/d_deh.c	/^const char *s_DOSY        = DOSY;$/;"	v
s_D_CDROM	src/d_deh.c	/^const char *s_D_CDROM     = D_CDROM;$/;"	v
s_D_DEVSTR	src/d_deh.c	/^const char *s_D_DEVSTR    = D_DEVSTR;$/;"	v
s_E1TEXT	src/d_deh.c	/^const char *s_E1TEXT     = E1TEXT;$/;"	v
s_E2TEXT	src/d_deh.c	/^const char *s_E2TEXT     = E2TEXT;$/;"	v
s_E3TEXT	src/d_deh.c	/^const char *s_E3TEXT     = E3TEXT;$/;"	v
s_E4TEXT	src/d_deh.c	/^const char *s_E4TEXT     = E4TEXT;$/;"	v
s_EMPTYSTRING	src/d_deh.c	/^const char *s_EMPTYSTRING = EMPTYSTRING;$/;"	v
s_ENDGAME	src/d_deh.c	/^const char *s_ENDGAME     = ENDGAME;   \/\/ PRESSYN; \/\/ killough 4\/4\/98: end$/;"	v
s_GAMMALVL0	src/d_deh.c	/^const char *s_GAMMALVL0   = GAMMALVL0;$/;"	v
s_GAMMALVL1	src/d_deh.c	/^const char *s_GAMMALVL1   = GAMMALVL1;$/;"	v
s_GAMMALVL2	src/d_deh.c	/^const char *s_GAMMALVL2   = GAMMALVL2;$/;"	v
s_GAMMALVL3	src/d_deh.c	/^const char *s_GAMMALVL3   = GAMMALVL3;$/;"	v
s_GAMMALVL4	src/d_deh.c	/^const char *s_GAMMALVL4   = GAMMALVL4;$/;"	v
s_GGSAVED	src/d_deh.c	/^const char *s_GGSAVED     = GGSAVED;$/;"	v
s_GOTARMBONUS	src/d_deh.c	/^const char *s_GOTARMBONUS = GOTARMBONUS;$/;"	v
s_GOTARMOR	src/d_deh.c	/^const char *s_GOTARMOR    = GOTARMOR;$/;"	v
s_GOTBACKPACK	src/d_deh.c	/^const char *s_GOTBACKPACK = GOTBACKPACK;$/;"	v
s_GOTBERSERK	src/d_deh.c	/^const char *s_GOTBERSERK  = GOTBERSERK;$/;"	v
s_GOTBFG9000	src/d_deh.c	/^const char *s_GOTBFG9000  = GOTBFG9000;$/;"	v
s_GOTBLUECARD	src/d_deh.c	/^const char *s_GOTBLUECARD = GOTBLUECARD;$/;"	v
s_GOTBLUESKUL	src/d_deh.c	/^const char *s_GOTBLUESKUL = GOTBLUESKUL;$/;"	v
s_GOTCELL	src/d_deh.c	/^const char *s_GOTCELL     = GOTCELL;$/;"	v
s_GOTCELLBOX	src/d_deh.c	/^const char *s_GOTCELLBOX  = GOTCELLBOX;$/;"	v
s_GOTCHAINGUN	src/d_deh.c	/^const char *s_GOTCHAINGUN = GOTCHAINGUN;$/;"	v
s_GOTCHAINSAW	src/d_deh.c	/^const char *s_GOTCHAINSAW = GOTCHAINSAW;$/;"	v
s_GOTCLIP	src/d_deh.c	/^const char *s_GOTCLIP     = GOTCLIP;$/;"	v
s_GOTCLIPBOX	src/d_deh.c	/^const char *s_GOTCLIPBOX  = GOTCLIPBOX;$/;"	v
s_GOTHTHBONUS	src/d_deh.c	/^const char *s_GOTHTHBONUS = GOTHTHBONUS;$/;"	v
s_GOTINVIS	src/d_deh.c	/^const char *s_GOTINVIS    = GOTINVIS;$/;"	v
s_GOTINVUL	src/d_deh.c	/^const char *s_GOTINVUL    = GOTINVUL;$/;"	v
s_GOTLAUNCHER	src/d_deh.c	/^const char *s_GOTLAUNCHER = GOTLAUNCHER;$/;"	v
s_GOTMAP	src/d_deh.c	/^const char *s_GOTMAP      = GOTMAP;$/;"	v
s_GOTMEDIKIT	src/d_deh.c	/^const char *s_GOTMEDIKIT  = GOTMEDIKIT;$/;"	v
s_GOTMEDINEED	src/d_deh.c	/^const char *s_GOTMEDINEED = GOTMEDINEED;$/;"	v
s_GOTMEGA	src/d_deh.c	/^const char *s_GOTMEGA     = GOTMEGA;$/;"	v
s_GOTMSPHERE	src/d_deh.c	/^const char *s_GOTMSPHERE  = GOTMSPHERE;$/;"	v
s_GOTPLASMA	src/d_deh.c	/^const char *s_GOTPLASMA   = GOTPLASMA;$/;"	v
s_GOTREDCARD	src/d_deh.c	/^const char *s_GOTREDCARD  = GOTREDCARD;$/;"	v
s_GOTREDSKULL	src/d_deh.c	/^const char *s_GOTREDSKULL = GOTREDSKULL;$/;"	v
s_GOTROCKBOX	src/d_deh.c	/^const char *s_GOTROCKBOX  = GOTROCKBOX;$/;"	v
s_GOTROCKET	src/d_deh.c	/^const char *s_GOTROCKET   = GOTROCKET;$/;"	v
s_GOTSHELLBOX	src/d_deh.c	/^const char *s_GOTSHELLBOX = GOTSHELLBOX;$/;"	v
s_GOTSHELLS	src/d_deh.c	/^const char *s_GOTSHELLS   = GOTSHELLS;$/;"	v
s_GOTSHOTGUN	src/d_deh.c	/^const char *s_GOTSHOTGUN  = GOTSHOTGUN;$/;"	v
s_GOTSHOTGUN2	src/d_deh.c	/^const char *s_GOTSHOTGUN2 = GOTSHOTGUN2;$/;"	v
s_GOTSTIM	src/d_deh.c	/^const char *s_GOTSTIM     = GOTSTIM;$/;"	v
s_GOTSUIT	src/d_deh.c	/^const char *s_GOTSUIT     = GOTSUIT;$/;"	v
s_GOTSUPER	src/d_deh.c	/^const char *s_GOTSUPER    = GOTSUPER;$/;"	v
s_GOTVISOR	src/d_deh.c	/^const char *s_GOTVISOR    = GOTVISOR;$/;"	v
s_GOTYELWCARD	src/d_deh.c	/^const char *s_GOTYELWCARD = GOTYELWCARD;$/;"	v
s_GOTYELWSKUL	src/d_deh.c	/^const char *s_GOTYELWSKUL = GOTYELWSKUL;$/;"	v
s_HUSTR_1	src/d_deh.c	/^const char *s_HUSTR_1     = HUSTR_1;$/;"	v
s_HUSTR_10	src/d_deh.c	/^const char *s_HUSTR_10    = HUSTR_10;$/;"	v
s_HUSTR_11	src/d_deh.c	/^const char *s_HUSTR_11    = HUSTR_11;$/;"	v
s_HUSTR_12	src/d_deh.c	/^const char *s_HUSTR_12    = HUSTR_12;$/;"	v
s_HUSTR_13	src/d_deh.c	/^const char *s_HUSTR_13    = HUSTR_13;$/;"	v
s_HUSTR_14	src/d_deh.c	/^const char *s_HUSTR_14    = HUSTR_14;$/;"	v
s_HUSTR_15	src/d_deh.c	/^const char *s_HUSTR_15    = HUSTR_15;$/;"	v
s_HUSTR_16	src/d_deh.c	/^const char *s_HUSTR_16    = HUSTR_16;$/;"	v
s_HUSTR_17	src/d_deh.c	/^const char *s_HUSTR_17    = HUSTR_17;$/;"	v
s_HUSTR_18	src/d_deh.c	/^const char *s_HUSTR_18    = HUSTR_18;$/;"	v
s_HUSTR_19	src/d_deh.c	/^const char *s_HUSTR_19    = HUSTR_19;$/;"	v
s_HUSTR_2	src/d_deh.c	/^const char *s_HUSTR_2     = HUSTR_2;$/;"	v
s_HUSTR_20	src/d_deh.c	/^const char *s_HUSTR_20    = HUSTR_20;$/;"	v
s_HUSTR_21	src/d_deh.c	/^const char *s_HUSTR_21    = HUSTR_21;$/;"	v
s_HUSTR_22	src/d_deh.c	/^const char *s_HUSTR_22    = HUSTR_22;$/;"	v
s_HUSTR_23	src/d_deh.c	/^const char *s_HUSTR_23    = HUSTR_23;$/;"	v
s_HUSTR_24	src/d_deh.c	/^const char *s_HUSTR_24    = HUSTR_24;$/;"	v
s_HUSTR_25	src/d_deh.c	/^const char *s_HUSTR_25    = HUSTR_25;$/;"	v
s_HUSTR_26	src/d_deh.c	/^const char *s_HUSTR_26    = HUSTR_26;$/;"	v
s_HUSTR_27	src/d_deh.c	/^const char *s_HUSTR_27    = HUSTR_27;$/;"	v
s_HUSTR_28	src/d_deh.c	/^const char *s_HUSTR_28    = HUSTR_28;$/;"	v
s_HUSTR_29	src/d_deh.c	/^const char *s_HUSTR_29    = HUSTR_29;$/;"	v
s_HUSTR_3	src/d_deh.c	/^const char *s_HUSTR_3     = HUSTR_3;$/;"	v
s_HUSTR_30	src/d_deh.c	/^const char *s_HUSTR_30    = HUSTR_30;$/;"	v
s_HUSTR_31	src/d_deh.c	/^const char *s_HUSTR_31    = HUSTR_31;$/;"	v
s_HUSTR_32	src/d_deh.c	/^const char *s_HUSTR_32    = HUSTR_32;$/;"	v
s_HUSTR_33	src/d_deh.c	/^const char *s_HUSTR_33    = HUSTR_33;$/;"	v
s_HUSTR_4	src/d_deh.c	/^const char *s_HUSTR_4     = HUSTR_4;$/;"	v
s_HUSTR_5	src/d_deh.c	/^const char *s_HUSTR_5     = HUSTR_5;$/;"	v
s_HUSTR_6	src/d_deh.c	/^const char *s_HUSTR_6     = HUSTR_6;$/;"	v
s_HUSTR_7	src/d_deh.c	/^const char *s_HUSTR_7     = HUSTR_7;$/;"	v
s_HUSTR_8	src/d_deh.c	/^const char *s_HUSTR_8     = HUSTR_8;$/;"	v
s_HUSTR_9	src/d_deh.c	/^const char *s_HUSTR_9     = HUSTR_9;$/;"	v
s_HUSTR_CHATMACRO0	src/d_deh.c	/^const char *s_HUSTR_CHATMACRO0   = HUSTR_CHATMACRO0;$/;"	v
s_HUSTR_CHATMACRO1	src/d_deh.c	/^const char *s_HUSTR_CHATMACRO1   = HUSTR_CHATMACRO1;$/;"	v
s_HUSTR_CHATMACRO2	src/d_deh.c	/^const char *s_HUSTR_CHATMACRO2   = HUSTR_CHATMACRO2;$/;"	v
s_HUSTR_CHATMACRO3	src/d_deh.c	/^const char *s_HUSTR_CHATMACRO3   = HUSTR_CHATMACRO3;$/;"	v
s_HUSTR_CHATMACRO4	src/d_deh.c	/^const char *s_HUSTR_CHATMACRO4   = HUSTR_CHATMACRO4;$/;"	v
s_HUSTR_CHATMACRO5	src/d_deh.c	/^const char *s_HUSTR_CHATMACRO5   = HUSTR_CHATMACRO5;$/;"	v
s_HUSTR_CHATMACRO6	src/d_deh.c	/^const char *s_HUSTR_CHATMACRO6   = HUSTR_CHATMACRO6;$/;"	v
s_HUSTR_CHATMACRO7	src/d_deh.c	/^const char *s_HUSTR_CHATMACRO7   = HUSTR_CHATMACRO7;$/;"	v
s_HUSTR_CHATMACRO8	src/d_deh.c	/^const char *s_HUSTR_CHATMACRO8   = HUSTR_CHATMACRO8;$/;"	v
s_HUSTR_CHATMACRO9	src/d_deh.c	/^const char *s_HUSTR_CHATMACRO9   = HUSTR_CHATMACRO9;$/;"	v
s_HUSTR_E1M1	src/d_deh.c	/^const char *s_HUSTR_E1M1  = HUSTR_E1M1;$/;"	v
s_HUSTR_E1M2	src/d_deh.c	/^const char *s_HUSTR_E1M2  = HUSTR_E1M2;$/;"	v
s_HUSTR_E1M3	src/d_deh.c	/^const char *s_HUSTR_E1M3  = HUSTR_E1M3;$/;"	v
s_HUSTR_E1M4	src/d_deh.c	/^const char *s_HUSTR_E1M4  = HUSTR_E1M4;$/;"	v
s_HUSTR_E1M5	src/d_deh.c	/^const char *s_HUSTR_E1M5  = HUSTR_E1M5;$/;"	v
s_HUSTR_E1M6	src/d_deh.c	/^const char *s_HUSTR_E1M6  = HUSTR_E1M6;$/;"	v
s_HUSTR_E1M7	src/d_deh.c	/^const char *s_HUSTR_E1M7  = HUSTR_E1M7;$/;"	v
s_HUSTR_E1M8	src/d_deh.c	/^const char *s_HUSTR_E1M8  = HUSTR_E1M8;$/;"	v
s_HUSTR_E1M9	src/d_deh.c	/^const char *s_HUSTR_E1M9  = HUSTR_E1M9;$/;"	v
s_HUSTR_E2M1	src/d_deh.c	/^const char *s_HUSTR_E2M1  = HUSTR_E2M1;$/;"	v
s_HUSTR_E2M2	src/d_deh.c	/^const char *s_HUSTR_E2M2  = HUSTR_E2M2;$/;"	v
s_HUSTR_E2M3	src/d_deh.c	/^const char *s_HUSTR_E2M3  = HUSTR_E2M3;$/;"	v
s_HUSTR_E2M4	src/d_deh.c	/^const char *s_HUSTR_E2M4  = HUSTR_E2M4;$/;"	v
s_HUSTR_E2M5	src/d_deh.c	/^const char *s_HUSTR_E2M5  = HUSTR_E2M5;$/;"	v
s_HUSTR_E2M6	src/d_deh.c	/^const char *s_HUSTR_E2M6  = HUSTR_E2M6;$/;"	v
s_HUSTR_E2M7	src/d_deh.c	/^const char *s_HUSTR_E2M7  = HUSTR_E2M7;$/;"	v
s_HUSTR_E2M8	src/d_deh.c	/^const char *s_HUSTR_E2M8  = HUSTR_E2M8;$/;"	v
s_HUSTR_E2M9	src/d_deh.c	/^const char *s_HUSTR_E2M9  = HUSTR_E2M9;$/;"	v
s_HUSTR_E3M1	src/d_deh.c	/^const char *s_HUSTR_E3M1  = HUSTR_E3M1;$/;"	v
s_HUSTR_E3M2	src/d_deh.c	/^const char *s_HUSTR_E3M2  = HUSTR_E3M2;$/;"	v
s_HUSTR_E3M3	src/d_deh.c	/^const char *s_HUSTR_E3M3  = HUSTR_E3M3;$/;"	v
s_HUSTR_E3M4	src/d_deh.c	/^const char *s_HUSTR_E3M4  = HUSTR_E3M4;$/;"	v
s_HUSTR_E3M5	src/d_deh.c	/^const char *s_HUSTR_E3M5  = HUSTR_E3M5;$/;"	v
s_HUSTR_E3M6	src/d_deh.c	/^const char *s_HUSTR_E3M6  = HUSTR_E3M6;$/;"	v
s_HUSTR_E3M7	src/d_deh.c	/^const char *s_HUSTR_E3M7  = HUSTR_E3M7;$/;"	v
s_HUSTR_E3M8	src/d_deh.c	/^const char *s_HUSTR_E3M8  = HUSTR_E3M8;$/;"	v
s_HUSTR_E3M9	src/d_deh.c	/^const char *s_HUSTR_E3M9  = HUSTR_E3M9;$/;"	v
s_HUSTR_E4M1	src/d_deh.c	/^const char *s_HUSTR_E4M1  = HUSTR_E4M1;$/;"	v
s_HUSTR_E4M2	src/d_deh.c	/^const char *s_HUSTR_E4M2  = HUSTR_E4M2;$/;"	v
s_HUSTR_E4M3	src/d_deh.c	/^const char *s_HUSTR_E4M3  = HUSTR_E4M3;$/;"	v
s_HUSTR_E4M4	src/d_deh.c	/^const char *s_HUSTR_E4M4  = HUSTR_E4M4;$/;"	v
s_HUSTR_E4M5	src/d_deh.c	/^const char *s_HUSTR_E4M5  = HUSTR_E4M5;$/;"	v
s_HUSTR_E4M6	src/d_deh.c	/^const char *s_HUSTR_E4M6  = HUSTR_E4M6;$/;"	v
s_HUSTR_E4M7	src/d_deh.c	/^const char *s_HUSTR_E4M7  = HUSTR_E4M7;$/;"	v
s_HUSTR_E4M8	src/d_deh.c	/^const char *s_HUSTR_E4M8  = HUSTR_E4M8;$/;"	v
s_HUSTR_E4M9	src/d_deh.c	/^const char *s_HUSTR_E4M9  = HUSTR_E4M9;$/;"	v
s_HUSTR_MESSAGESENT	src/d_deh.c	/^const char *s_HUSTR_MESSAGESENT  = HUSTR_MESSAGESENT;$/;"	v
s_HUSTR_MSGU	src/d_deh.c	/^const char *s_HUSTR_MSGU  = HUSTR_MSGU;$/;"	v
s_HUSTR_PLRBROWN	src/d_deh.c	/^const char *s_HUSTR_PLRBROWN     = HUSTR_PLRBROWN;$/;"	v
s_HUSTR_PLRGREEN	src/d_deh.c	/^const char *s_HUSTR_PLRGREEN     = HUSTR_PLRGREEN;$/;"	v
s_HUSTR_PLRINDIGO	src/d_deh.c	/^const char *s_HUSTR_PLRINDIGO    = HUSTR_PLRINDIGO;$/;"	v
s_HUSTR_PLRRED	src/d_deh.c	/^const char *s_HUSTR_PLRRED       = HUSTR_PLRRED;$/;"	v
s_HUSTR_TALKTOSELF1	src/d_deh.c	/^const char *s_HUSTR_TALKTOSELF1  = HUSTR_TALKTOSELF1;$/;"	v
s_HUSTR_TALKTOSELF2	src/d_deh.c	/^const char *s_HUSTR_TALKTOSELF2  = HUSTR_TALKTOSELF2;$/;"	v
s_HUSTR_TALKTOSELF3	src/d_deh.c	/^const char *s_HUSTR_TALKTOSELF3  = HUSTR_TALKTOSELF3;$/;"	v
s_HUSTR_TALKTOSELF4	src/d_deh.c	/^const char *s_HUSTR_TALKTOSELF4  = HUSTR_TALKTOSELF4;$/;"	v
s_HUSTR_TALKTOSELF5	src/d_deh.c	/^const char *s_HUSTR_TALKTOSELF5  = HUSTR_TALKTOSELF5;$/;"	v
s_MSGOFF	src/d_deh.c	/^const char *s_MSGOFF      = MSGOFF;$/;"	v
s_MSGON	src/d_deh.c	/^const char *s_MSGON       = MSGON;$/;"	v
s_NETEND	src/d_deh.c	/^const char *s_NETEND      = NETEND;    \/\/ PRESSKEY;$/;"	v
s_NEWGAME	src/d_deh.c	/^const char *s_NEWGAME     = NEWGAME;   \/\/ PRESSKEY;$/;"	v
s_NIGHTMARE	src/d_deh.c	/^const char *s_NIGHTMARE   = NIGHTMARE; \/\/ PRESSYN;$/;"	v
s_P1TEXT	src/d_deh.c	/^const char *s_P1TEXT     = P1TEXT;$/;"	v
s_P2TEXT	src/d_deh.c	/^const char *s_P2TEXT     = P2TEXT;$/;"	v
s_P3TEXT	src/d_deh.c	/^const char *s_P3TEXT     = P3TEXT;$/;"	v
s_P4TEXT	src/d_deh.c	/^const char *s_P4TEXT     = P4TEXT;$/;"	v
s_P5TEXT	src/d_deh.c	/^const char *s_P5TEXT     = P5TEXT;$/;"	v
s_P6TEXT	src/d_deh.c	/^const char *s_P6TEXT     = P6TEXT;$/;"	v
s_PD_ALL3	src/d_deh.c	/^const char *s_PD_ALL3     = PD_ALL3;$/;"	v
s_PD_ALL6	src/d_deh.c	/^const char *s_PD_ALL6     = PD_ALL6;$/;"	v
s_PD_ANY	src/d_deh.c	/^const char *s_PD_ANY      = PD_ANY;$/;"	v
s_PD_BLUEC	src/d_deh.c	/^const char *s_PD_BLUEC    = PD_BLUEC;$/;"	v
s_PD_BLUEK	src/d_deh.c	/^const char *s_PD_BLUEK    = PD_BLUEK;$/;"	v
s_PD_BLUEO	src/d_deh.c	/^const char *s_PD_BLUEO    = PD_BLUEO;$/;"	v
s_PD_BLUES	src/d_deh.c	/^const char *s_PD_BLUES    = PD_BLUES;$/;"	v
s_PD_REDC	src/d_deh.c	/^const char *s_PD_REDC     = PD_REDC;$/;"	v
s_PD_REDK	src/d_deh.c	/^const char *s_PD_REDK     = PD_REDK;$/;"	v
s_PD_REDO	src/d_deh.c	/^const char *s_PD_REDO     = PD_REDO;$/;"	v
s_PD_REDS	src/d_deh.c	/^const char *s_PD_REDS     = PD_REDS;$/;"	v
s_PD_YELLOWC	src/d_deh.c	/^const char *s_PD_YELLOWC  = PD_YELLOWC;$/;"	v
s_PD_YELLOWK	src/d_deh.c	/^const char *s_PD_YELLOWK  = PD_YELLOWK;$/;"	v
s_PD_YELLOWO	src/d_deh.c	/^const char *s_PD_YELLOWO  = PD_YELLOWO;$/;"	v
s_PD_YELLOWS	src/d_deh.c	/^const char *s_PD_YELLOWS  = PD_YELLOWS;$/;"	v
s_PHUSTR_1	src/d_deh.c	/^const char *s_PHUSTR_1    = PHUSTR_1;$/;"	v
s_PHUSTR_10	src/d_deh.c	/^const char *s_PHUSTR_10   = PHUSTR_10;$/;"	v
s_PHUSTR_11	src/d_deh.c	/^const char *s_PHUSTR_11   = PHUSTR_11;$/;"	v
s_PHUSTR_12	src/d_deh.c	/^const char *s_PHUSTR_12   = PHUSTR_12;$/;"	v
s_PHUSTR_13	src/d_deh.c	/^const char *s_PHUSTR_13   = PHUSTR_13;$/;"	v
s_PHUSTR_14	src/d_deh.c	/^const char *s_PHUSTR_14   = PHUSTR_14;$/;"	v
s_PHUSTR_15	src/d_deh.c	/^const char *s_PHUSTR_15   = PHUSTR_15;$/;"	v
s_PHUSTR_16	src/d_deh.c	/^const char *s_PHUSTR_16   = PHUSTR_16;$/;"	v
s_PHUSTR_17	src/d_deh.c	/^const char *s_PHUSTR_17   = PHUSTR_17;$/;"	v
s_PHUSTR_18	src/d_deh.c	/^const char *s_PHUSTR_18   = PHUSTR_18;$/;"	v
s_PHUSTR_19	src/d_deh.c	/^const char *s_PHUSTR_19   = PHUSTR_19;$/;"	v
s_PHUSTR_2	src/d_deh.c	/^const char *s_PHUSTR_2    = PHUSTR_2;$/;"	v
s_PHUSTR_20	src/d_deh.c	/^const char *s_PHUSTR_20   = PHUSTR_20;$/;"	v
s_PHUSTR_21	src/d_deh.c	/^const char *s_PHUSTR_21   = PHUSTR_21;$/;"	v
s_PHUSTR_22	src/d_deh.c	/^const char *s_PHUSTR_22   = PHUSTR_22;$/;"	v
s_PHUSTR_23	src/d_deh.c	/^const char *s_PHUSTR_23   = PHUSTR_23;$/;"	v
s_PHUSTR_24	src/d_deh.c	/^const char *s_PHUSTR_24   = PHUSTR_24;$/;"	v
s_PHUSTR_25	src/d_deh.c	/^const char *s_PHUSTR_25   = PHUSTR_25;$/;"	v
s_PHUSTR_26	src/d_deh.c	/^const char *s_PHUSTR_26   = PHUSTR_26;$/;"	v
s_PHUSTR_27	src/d_deh.c	/^const char *s_PHUSTR_27   = PHUSTR_27;$/;"	v
s_PHUSTR_28	src/d_deh.c	/^const char *s_PHUSTR_28   = PHUSTR_28;$/;"	v
s_PHUSTR_29	src/d_deh.c	/^const char *s_PHUSTR_29   = PHUSTR_29;$/;"	v
s_PHUSTR_3	src/d_deh.c	/^const char *s_PHUSTR_3    = PHUSTR_3;$/;"	v
s_PHUSTR_30	src/d_deh.c	/^const char *s_PHUSTR_30   = PHUSTR_30;$/;"	v
s_PHUSTR_31	src/d_deh.c	/^const char *s_PHUSTR_31   = PHUSTR_31;$/;"	v
s_PHUSTR_32	src/d_deh.c	/^const char *s_PHUSTR_32   = PHUSTR_32;$/;"	v
s_PHUSTR_4	src/d_deh.c	/^const char *s_PHUSTR_4    = PHUSTR_4;$/;"	v
s_PHUSTR_5	src/d_deh.c	/^const char *s_PHUSTR_5    = PHUSTR_5;$/;"	v
s_PHUSTR_6	src/d_deh.c	/^const char *s_PHUSTR_6    = PHUSTR_6;$/;"	v
s_PHUSTR_7	src/d_deh.c	/^const char *s_PHUSTR_7    = PHUSTR_7;$/;"	v
s_PHUSTR_8	src/d_deh.c	/^const char *s_PHUSTR_8    = PHUSTR_8;$/;"	v
s_PHUSTR_9	src/d_deh.c	/^const char *s_PHUSTR_9    = PHUSTR_9;$/;"	v
s_PRESSKEY	src/d_deh.c	/^const char *s_PRESSKEY    = PRESSKEY;$/;"	v
s_PRESSYN	src/d_deh.c	/^const char *s_PRESSYN     = PRESSYN;$/;"	v
s_QLPROMPT	src/d_deh.c	/^const char *s_QLPROMPT    = QLPROMPT;  \/\/ PRESSYN;$/;"	v
s_QSAVESPOT	src/d_deh.c	/^const char *s_QSAVESPOT   = QSAVESPOT; \/\/ PRESSKEY;$/;"	v
s_QSPROMPT	src/d_deh.c	/^const char *s_QSPROMPT    = QSPROMPT;  \/\/ PRESSYN;$/;"	v
s_QUITMSG	src/d_deh.c	/^const char *s_QUITMSG     = QUITMSG;$/;"	v
s_RESTARTLEVEL	src/d_deh.c	/^const char *s_RESTARTLEVEL= RESTARTLEVEL; \/\/ PRESSYN;$/;"	v
s_SAVEDEAD	src/d_deh.c	/^const char *s_SAVEDEAD    = SAVEDEAD;  \/\/ PRESSKEY; \/\/ remove duplicate y\/n$/;"	v
s_STSTR_BEHOLD	src/d_deh.c	/^const char *s_STSTR_BEHOLD       = STSTR_BEHOLD;$/;"	v
s_STSTR_BEHOLDX	src/d_deh.c	/^const char *s_STSTR_BEHOLDX      = STSTR_BEHOLDX;$/;"	v
s_STSTR_CHOPPERS	src/d_deh.c	/^const char *s_STSTR_CHOPPERS     = STSTR_CHOPPERS;$/;"	v
s_STSTR_CLEV	src/d_deh.c	/^const char *s_STSTR_CLEV         = STSTR_CLEV;$/;"	v
s_STSTR_COMPOFF	src/d_deh.c	/^const char *s_STSTR_COMPOFF      = STSTR_COMPOFF;$/;"	v
s_STSTR_COMPON	src/d_deh.c	/^const char *s_STSTR_COMPON       = STSTR_COMPON;$/;"	v
s_STSTR_DQDOFF	src/d_deh.c	/^const char *s_STSTR_DQDOFF       = STSTR_DQDOFF;$/;"	v
s_STSTR_DQDON	src/d_deh.c	/^const char *s_STSTR_DQDON        = STSTR_DQDON;$/;"	v
s_STSTR_FAADDED	src/d_deh.c	/^const char *s_STSTR_FAADDED      = STSTR_FAADDED;$/;"	v
s_STSTR_KFAADDED	src/d_deh.c	/^const char *s_STSTR_KFAADDED     = STSTR_KFAADDED;$/;"	v
s_STSTR_MUS	src/d_deh.c	/^const char *s_STSTR_MUS          = STSTR_MUS;$/;"	v
s_STSTR_NCOFF	src/d_deh.c	/^const char *s_STSTR_NCOFF        = STSTR_NCOFF;$/;"	v
s_STSTR_NCON	src/d_deh.c	/^const char *s_STSTR_NCON         = STSTR_NCON;$/;"	v
s_STSTR_NOMUS	src/d_deh.c	/^const char *s_STSTR_NOMUS        = STSTR_NOMUS;$/;"	v
s_SWSTRING	src/d_deh.c	/^const char *s_SWSTRING    = SWSTRING;  \/\/ PRESSKEY;$/;"	v
s_T1TEXT	src/d_deh.c	/^const char *s_T1TEXT     = T1TEXT;$/;"	v
s_T2TEXT	src/d_deh.c	/^const char *s_T2TEXT     = T2TEXT;$/;"	v
s_T3TEXT	src/d_deh.c	/^const char *s_T3TEXT     = T3TEXT;$/;"	v
s_T4TEXT	src/d_deh.c	/^const char *s_T4TEXT     = T4TEXT;$/;"	v
s_T5TEXT	src/d_deh.c	/^const char *s_T5TEXT     = T5TEXT;$/;"	v
s_T6TEXT	src/d_deh.c	/^const char *s_T6TEXT     = T6TEXT;$/;"	v
s_THUSTR_1	src/d_deh.c	/^const char *s_THUSTR_1    = THUSTR_1;$/;"	v
s_THUSTR_10	src/d_deh.c	/^const char *s_THUSTR_10   = THUSTR_10;$/;"	v
s_THUSTR_11	src/d_deh.c	/^const char *s_THUSTR_11   = THUSTR_11;$/;"	v
s_THUSTR_12	src/d_deh.c	/^const char *s_THUSTR_12   = THUSTR_12;$/;"	v
s_THUSTR_13	src/d_deh.c	/^const char *s_THUSTR_13   = THUSTR_13;$/;"	v
s_THUSTR_14	src/d_deh.c	/^const char *s_THUSTR_14   = THUSTR_14;$/;"	v
s_THUSTR_15	src/d_deh.c	/^const char *s_THUSTR_15   = THUSTR_15;$/;"	v
s_THUSTR_16	src/d_deh.c	/^const char *s_THUSTR_16   = THUSTR_16;$/;"	v
s_THUSTR_17	src/d_deh.c	/^const char *s_THUSTR_17   = THUSTR_17;$/;"	v
s_THUSTR_18	src/d_deh.c	/^const char *s_THUSTR_18   = THUSTR_18;$/;"	v
s_THUSTR_19	src/d_deh.c	/^const char *s_THUSTR_19   = THUSTR_19;$/;"	v
s_THUSTR_2	src/d_deh.c	/^const char *s_THUSTR_2    = THUSTR_2;$/;"	v
s_THUSTR_20	src/d_deh.c	/^const char *s_THUSTR_20   = THUSTR_20;$/;"	v
s_THUSTR_21	src/d_deh.c	/^const char *s_THUSTR_21   = THUSTR_21;$/;"	v
s_THUSTR_22	src/d_deh.c	/^const char *s_THUSTR_22   = THUSTR_22;$/;"	v
s_THUSTR_23	src/d_deh.c	/^const char *s_THUSTR_23   = THUSTR_23;$/;"	v
s_THUSTR_24	src/d_deh.c	/^const char *s_THUSTR_24   = THUSTR_24;$/;"	v
s_THUSTR_25	src/d_deh.c	/^const char *s_THUSTR_25   = THUSTR_25;$/;"	v
s_THUSTR_26	src/d_deh.c	/^const char *s_THUSTR_26   = THUSTR_26;$/;"	v
s_THUSTR_27	src/d_deh.c	/^const char *s_THUSTR_27   = THUSTR_27;$/;"	v
s_THUSTR_28	src/d_deh.c	/^const char *s_THUSTR_28   = THUSTR_28;$/;"	v
s_THUSTR_29	src/d_deh.c	/^const char *s_THUSTR_29   = THUSTR_29;$/;"	v
s_THUSTR_3	src/d_deh.c	/^const char *s_THUSTR_3    = THUSTR_3;$/;"	v
s_THUSTR_30	src/d_deh.c	/^const char *s_THUSTR_30   = THUSTR_30;$/;"	v
s_THUSTR_31	src/d_deh.c	/^const char *s_THUSTR_31   = THUSTR_31;$/;"	v
s_THUSTR_32	src/d_deh.c	/^const char *s_THUSTR_32   = THUSTR_32;$/;"	v
s_THUSTR_4	src/d_deh.c	/^const char *s_THUSTR_4    = THUSTR_4;$/;"	v
s_THUSTR_5	src/d_deh.c	/^const char *s_THUSTR_5    = THUSTR_5;$/;"	v
s_THUSTR_6	src/d_deh.c	/^const char *s_THUSTR_6    = THUSTR_6;$/;"	v
s_THUSTR_7	src/d_deh.c	/^const char *s_THUSTR_7    = THUSTR_7;$/;"	v
s_THUSTR_8	src/d_deh.c	/^const char *s_THUSTR_8    = THUSTR_8;$/;"	v
s_THUSTR_9	src/d_deh.c	/^const char *s_THUSTR_9    = THUSTR_9;$/;"	v
samelevel	src/p_setup.c	/^static int samelevel = false;$/;"	v	file:
samplerate	src/SDL/i_sound.c	/^  unsigned int samplerate;$/;"	m	struct:__anon313	file:
saveCharIndex	src/m_menu.c	/^int saveCharIndex;   \/\/ which char we're editing$/;"	v
saveOldString	src/m_menu.c	/^char saveOldString[SAVESTRINGSIZE];$/;"	v
saveSlot	src/m_menu.c	/^int saveSlot;        \/\/ which slot to save in$/;"	v
saveStringEnter	src/m_menu.c	/^bool saveStringEnter;$/;"	v
save_capture_last	src/PCRELIB/pcre_exec.c	3449;"	d	file:
save_capture_last	src/PCRELIB/pcre_exec.c	484;"	d	file:
save_comments	src/PCRELIB/pcre_scanner.h	/^  bool save_comments() {$/;"	f	class:pcrecpp::Scanner
save_comments_	src/PCRELIB/pcre_scanner.h	/^  bool          save_comments_; \/\/ If true, aggregate the skip expression$/;"	m	class:pcrecpp::Scanner
save_offset1	src/PCRELIB/pcre_exec.c	3450;"	d	file:
save_offset1	src/PCRELIB/pcre_exec.c	485;"	d	file:
save_offset2	src/PCRELIB/pcre_exec.c	3451;"	d	file:
save_offset2	src/PCRELIB/pcre_exec.c	486;"	d	file:
save_offset3	src/PCRELIB/pcre_exec.c	3452;"	d	file:
save_offset3	src/PCRELIB/pcre_exec.c	487;"	d	file:
save_start	src/PCRELIB/pcre_internal.h	/^  USPTR save_start;             \/* Old value of md->start_match *\/$/;"	m	struct:recursion_info
saved_eptr	src/PCRELIB/pcre_exec.c	3431;"	d	file:
saved_eptr	src/PCRELIB/pcre_exec.c	454;"	d	file:
saved_fastdemo	src/e6y.c	/^static dboolean saved_fastdemo;$/;"	v	file:
saved_game_states	src/n_state.c	/^static GHashTable *saved_game_states = NULL;$/;"	v	file:
saved_gametic	src/SDL/i_system.c	/^static int saved_gametic = -1;$/;"	v	file:
saved_max	src/PCRELIB/pcre_internal.h	/^  int saved_max;                \/* Number of saved offsets *\/$/;"	m	struct:recursion_info
saved_nodrawers	src/e6y.c	/^static dboolean saved_nodrawers;$/;"	v	file:
saved_nomusicparm	src/e6y.c	/^static dboolean saved_nomusicparm;$/;"	v	file:
saved_nosfxparm	src/e6y.c	/^static dboolean saved_nosfxparm;$/;"	v	file:
saved_render_precise	src/e6y.c	/^static int saved_render_precise;$/;"	v	file:
saved_sfx_volume	src/s_sound.c	/^static int saved_sfx_volume;$/;"	v	file:
savedescription	src/g_save.c	/^char savedescription[SAVEDESCLEN];$/;"	v
savegame	src/d_net.h	/^    short               savegame;$/;"	m	struct:__anon27
savegame	src/m_menu.c	/^  savegame,$/;"	e	enum:__anon148	file:
savegamename	src/d_deh.c	/^const char *savegamename = PACKAGE_TARNAME"-savegame";$/;"	v
savegameslot	src/g_game.c	/^static byte savegameslot; \/\/ Slot to load if gameaction == ga_loadgame$/;"	v	file:
savegamestrings	src/m_menu.c	/^char savegamestrings[10][SAVESTRINGSIZE];$/;"	v
sc	src/hu_lib.h	/^  int   sc;                             \/\/ start character$/;"	m	struct:__anon121
sc_Crossed	src/sc_man.c	/^dboolean sc_Crossed;$/;"	v
sc_End	src/sc_man.c	/^dboolean sc_End;$/;"	v
sc_FileScripts	src/sc_man.c	/^dboolean sc_FileScripts = false;$/;"	v
sc_Line	src/sc_man.c	/^int sc_Line;$/;"	v
sc_Number	src/sc_man.c	/^int sc_Number;$/;"	v
sc_String	src/sc_man.c	/^char *sc_String;$/;"	v
sc_carry	src/p_spec.h	/^    sc_carry,$/;"	e	enum:__anon271::__anon272
sc_carry_ceiling	src/p_spec.h	/^    sc_carry_ceiling,  \/\/ killough 4\/11\/98: carry objects hanging on ceilings$/;"	e	enum:__anon271::__anon272
sc_ceiling	src/p_spec.h	/^    sc_ceiling,$/;"	e	enum:__anon271::__anon272
sc_floor	src/p_spec.h	/^    sc_floor,$/;"	e	enum:__anon271::__anon272
sc_side	src/p_spec.h	/^    sc_side,$/;"	e	enum:__anon271::__anon272
scale	src/MUSIC/oplplayer.c	/^    byte scale;$/;"	m	struct:__anon194	file:
scale	src/gl_intern.h	/^  fixed_t scale;$/;"	m	struct:__anon102
scale	src/r_defs.h	/^  fixed_t scale;$/;"	m	struct:vissprite_s
scale1	src/r_defs.h	/^  fixed_t scale1, scale2, scalestep;$/;"	m	struct:drawseg_s
scale2	src/r_defs.h	/^  fixed_t scale1, scale2, scalestep;$/;"	m	struct:drawseg_s
scale2x	src/gl_hqresize.c	/^static void scale2x ( unsigned int* inputBuffer, unsigned int* outputBuffer, int inWidth, int inHeight, int seamlessWidth, int seamlessHeight )$/;"	f	file:
scale3x	src/gl_hqresize.c	/^static void scale3x ( unsigned int* inputBuffer, unsigned int* outputBuffer, int inWidth, int inHeight, int seamlessWidth, int seamlessHeight )$/;"	f	file:
scale4x	src/gl_hqresize.c	/^static void scale4x ( unsigned int* inputBuffer, unsigned int* outputBuffer, int inWidth, int inHeight, int seamlessWidth, int seamlessHeight )$/;"	f	file:
scale_ftom	src/am_map.c	/^static fixed_t scale_ftom;$/;"	v	file:
scale_mtof	src/am_map.c	/^static fixed_t scale_mtof = (fixed_t)INITSCALEMTOF;$/;"	v	file:
scaledviewwidth	src/r_draw.c	/^int  scaledviewwidth;$/;"	v
scalelight	src/r_main.c	/^const lighttable_t *(*scalelight)[MAXLIGHTSCALE];$/;"	v
scalestep	src/r_defs.h	/^  fixed_t scale1, scale2, scalestep;$/;"	m	struct:drawseg_s
scalexfac	src/gl_intern.h	/^  float scalexfac, scaleyfac; \/\/e6y: right\/bottom UV coordinates for patch drawing$/;"	m	struct:__anon89
scaleyfac	src/gl_intern.h	/^  float scalexfac, scaleyfac; \/\/e6y: right\/bottom UV coordinates for patch drawing$/;"	m	struct:__anon89
sccsid	src/d_server.c	/^static char sccsid[] = "@(#)getopt.c  8.3 (Berkeley) 4\/27\/95";$/;"	v	file:
scene_has_details	src/gl_detail.c	/^int scene_has_details;$/;"	v
scene_has_flat_details	src/gl_detail.c	/^int scene_has_flat_details;$/;"	v
scene_has_overlapped_sprites	src/gl_main.c	/^int scene_has_overlapped_sprites;$/;"	v
scene_has_wall_details	src/gl_detail.c	/^int scene_has_wall_details;$/;"	v
score	src/d_player.h	/^  int         score;  \/\/ current score on entry, modified on return$/;"	m	struct:__anon60
scorelength	src/mus2mid.h	/^  unsigned short scorelength;$/;"	m	struct:__anon176
scorestart	src/mus2mid.h	/^  unsigned short scorestart;$/;"	m	struct:__anon176
screen	src/SDL/i_video.c	/^SDL_Surface *screen;$/;"	v
screen	src/TEXTSCREEN/txt_sdl.c	/^static SDL_Surface *screen;$/;"	v	file:
screen	src/i_video.h	/^  PSDL_Surface screen;$/;"	m	struct:vid_8ingl_s
screenSize	src/m_menu.c	/^int screenSize;      \/\/ temp for screenblocks (0-9)$/;"	v
screen_multiply	src/r_screenmultiply.c	/^int screen_multiply;$/;"	v
screen_resolution	src/SDL/i_video.c	/^const char *screen_resolution = NULL;$/;"	v
screen_resolution_lowest	src/SDL/i_video.c	/^const char *screen_resolution_lowest;$/;"	v
screen_resolutions_list	src/SDL/i_video.c	/^const char *screen_resolutions_list[MAX_RESOLUTIONS_COUNT] = {NULL};$/;"	v
screen_skybox_zplane	src/e6y.c	/^float screen_skybox_zplane;$/;"	v
screenblocks	src/m_menu.c	/^int screenblocks;    \/\/ has default$/;"	v
screendata	src/TEXTSCREEN/txt_sdl.c	/^static unsigned char *screendata;$/;"	v	file:
screenheightarray	src/r_things.c	/^int *screenheightarray;  \/\/ change to MAX_* \/\/ dropoff overflow$/;"	v
screeninfo_t	src/v_video.h	/^} screeninfo_t;$/;"	t	typeref:struct:__anon342
screens	src/v_video.c	/^screeninfo_t screens[NUM_SCREENS];$/;"	v
screenshot_dir	src/m_misc.c	/^const char *screenshot_dir;$/;"	v
screenshot_gl	src/SDL/i_sshot.c	/^static int screenshot_gl(png_struct *png_ptr, png_info *info_ptr)$/;"	f	file:
screenshot_sdl	src/SDL/i_sshot.c	/^static int screenshot_sdl($/;"	f	file:
screenshot_sdl_func	src/SDL/i_sshot.c	/^static const struct screenshot_sdl_func {$/;"	s	file:
screenshot_sdl_funcs	src/SDL/i_sshot.c	/^} screenshot_sdl_funcs[SCREENSHOT_SDL_MODES] = {$/;"	v	typeref:struct:screenshot_sdl_func	file:
scrnsize	src/m_menu.c	/^  scrnsize,$/;"	e	enum:__anon155	file:
scroll_amount	src/hu_msg.c	/^  int scroll_amount;$/;"	m	struct:message_widget_s	file:
scroll_down	src/hu_msg.c	/^static void scroll_down(message_widget_t *mw) {$/;"	f	file:
scroll_rate	src/c_main.c	/^  double scroll_rate;$/;"	m	struct:console_s	file:
scroll_rate	src/hu_cons.c	/^  double scroll_rate;$/;"	m	struct:console_widget_s	file:
scroll_t	src/p_spec.h	/^} scroll_t;$/;"	t	typeref:struct:__anon271
scroll_up	src/hu_msg.c	/^static void scroll_up(message_widget_t *mw) {$/;"	f	file:
scrollable	src/hu_msg.c	/^  bool scrollable;$/;"	m	struct:message_widget_s	file:
scrollback	src/c_main.c	/^  message_widget_t *scrollback;$/;"	m	struct:console_s	file:
scrollback	src/hu_cons.c	/^  message_widget_t *scrollback;$/;"	m	struct:console_widget_s	file:
sdl_video_window_pos	src/SDL/i_video.c	/^const char *sdl_video_window_pos;$/;"	v
sdl_videodriver	src/SDL/i_video.c	/^const char *sdl_videodriver;$/;"	v
secondarychannels	src/mus2mid.h	/^  unsigned short secondarychannels;$/;"	m	struct:__anon176
secret	src/e6y.c	/^  char secret[200];$/;"	m	struct:tmpdata_s	file:
secret	src/e6y.h	/^  int secret[MAXPLAYERS];$/;"	m	struct:timetable_s
secret	src/wi_stuff.c	/^static const char secret[] = {"WIOSTS"};$/;"	v	file:
secretcount	src/d_player.h	/^  int                 secretcount;$/;"	m	struct:player_s
secretexit	src/g_game.c	/^static dboolean secretexit;$/;"	v	file:
secretfound	src/e6y.c	/^int secretfound;$/;"	v
sector	src/doomdata.h	/^  short sector;  \/\/ Front sector, towards viewer.$/;"	m	struct:__anon30
sector	src/gl_missingtexture.c	/^  sector_t *sector; \/\/ sector with the 'best' height for the sectors in list$/;"	m	struct:__anon108	file:
sector	src/p_spec.h	/^  sector_t* sector;$/;"	m	struct:__anon262
sector	src/p_spec.h	/^  sector_t* sector;$/;"	m	struct:__anon263
sector	src/p_spec.h	/^  sector_t* sector;$/;"	m	struct:__anon264
sector	src/p_spec.h	/^  sector_t* sector;$/;"	m	struct:__anon265
sector	src/p_spec.h	/^  sector_t* sector;$/;"	m	struct:__anon266
sector	src/p_spec.h	/^  sector_t* sector;$/;"	m	struct:__anon267
sector	src/p_spec.h	/^  sector_t* sector;$/;"	m	struct:__anon268
sector	src/p_spec.h	/^  sector_t* sector;$/;"	m	struct:__anon269
sector	src/p_spec.h	/^  sector_t* sector;$/;"	m	struct:__anon270
sector	src/r_defs.h	/^  sector_t *sector;$/;"	m	struct:subsector_s
sector	src/r_defs.h	/^  sector_t* sector;      \/\/ Sector the SideDef is facing.$/;"	m	struct:__anon284
sector_list	src/p_map.c	/^msecnode_t* sector_list = NULL;                             \/\/ phares 3\/16\/98$/;"	v
sector_t	src/r_defs.h	/^} sector_t;$/;"	t	typeref:struct:__anon283
sectorloops	src/gl_preprocess.c	/^GLSector *sectorloops;$/;"	v
sectornum	src/gl_intern.h	/^  int sectornum;$/;"	m	struct:__anon93
sectors	src/gl_vertex.c	/^  sector_t **sectors;$/;"	m	struct:vertexsplit_info_s	file:
sectors	src/p_setup.c	/^sector_t *sectors;$/;"	v
sectors2	src/gl_missingtexture.c	/^static sector_t **sectors2 = NULL;$/;"	v	file:
seed	src/m_random.h	/^  unsigned int seed[NUMPRCLASS];       \/\/ Each block's random seed$/;"	m	struct:__anon173
seesound	src/info.h	/^  int seesound;     \/* The sound it makes when waking *\/$/;"	m	struct:__anon138
seestate	src/info.h	/^  int seestate;     \/* The state when it sees you or wakes up *\/$/;"	m	struct:__anon138
seg	src/gl_intern.h	/^  seg_t *seg;$/;"	m	struct:__anon91
seg	src/r_defs.h	/^  seg_t *seg;$/;"	m	struct:ssline_s
seg_t	src/r_defs.h	/^} seg_t;$/;"	t	typeref:struct:__anon287
segrendered	src/gl_main.c	/^byte *segrendered; \/\/ true if sector rendered (only here for malloc)$/;"	v
segs	src/i_smp.h	/^    draw_column_vars_t* segs;$/;"	m	union:smp_item_s::__anon140
segs	src/p_setup.c	/^seg_t    *segs;$/;"	v
segtextured	src/r_segs.c	/^static dboolean  segtextured;$/;"	v	file:
selectable	src/TEXTSCREEN/txt_widget.h	/^    int selectable;$/;"	m	struct:txt_widget_s
selected	src/TEXTSCREEN/txt_widget.h	/^typedef void (*TxtWidgetDrawer)(TXT_UNCAST_ARG(widget), int selected);$/;"	t
selected	src/TEXTSCREEN/txt_widget.h	/^void TXT_DrawWidget(TXT_UNCAST_ARG(widget), int selected);$/;"	v
selected_x	src/TEXTSCREEN/txt_table.h	/^    int selected_x;$/;"	m	struct:txt_table_s
selected_y	src/TEXTSCREEN/txt_table.h	/^    int selected_y;$/;"	m	struct:txt_table_s
selection	src/e6y_launcher.c	/^  int *selection;$/;"	m	struct:__anon68	file:
selectioncount	src/e6y_launcher.c	/^  size_t selectioncount;$/;"	m	struct:__anon68	file:
selectstrings	src/m_menu.h	/^  const char **selectstrings; \/* list of strings for choice value *\/$/;"	m	struct:setup_menu_s
send_chat_message	src/hu_stuff.c	/^static void send_chat_message(chat_widget_t *cw) {$/;"	f	file:
send_udp_packet	src/d_ipxgate.c	/^void send_udp_packet(enum packet_type_e type, unsigned tic, void* data, size_t len) {$/;"	f
sentbytes	src/SDL/i_network.c	/^size_t sentbytes, recvdbytes;$/;"	v
sentfrom	src/SDL/i_network.c	/^UDP_CHANNEL sentfrom;$/;"	v
sentfrom_addr	src/SDL/i_network.c	/^IPaddress sentfrom_addr;$/;"	v
sentient	src/p_mobj.h	393;"	d
sequence_len	src/m_cheat.h	/^  size_t sequence_len;$/;"	m	struct:cheatseq_s
serialize_corpse	src/p_saveg.c	/^static void serialize_corpse(gpointer data, gpointer user_data) {$/;"	f	file:
serialize_toc	src/n_peer.c	/^static void serialize_toc(netchan_t *chan) {$/;"	f	file:
server	src/d_client.c	/^static dboolean   server;$/;"	v	file:
serverIP	src/SDL/i_network.c	/^IPaddress serverIP;$/;"	v
setCurrentVersion	src/MAC/macsupport.rb	/^def setCurrentVersion(taskName)$/;"	f	class:installTask
setMobjInfoValue	src/d_deh.c	/^static void setMobjInfoValue(int mobjInfoIndex, int keyIndex, uint_64_t value) {$/;"	f	file:
set_all_options	src/PCRELIB/pcrecpp.h	/^  RE_Options &set_all_options(int opt) {$/;"	f	class:pcrecpp::RE_Options
set_auto_active	src/m_menu.c	/^dboolean set_auto_active   = false; \/\/ in automap setup screen$/;"	v
set_automap	src/m_menu.c	/^  set_automap,$/;"	e	enum:__anon157	file:
set_bit	src/PCRELIB/pcre_study.c	/^set_bit(uschar *start_bits, unsigned int c, BOOL caseless, compile_data *cd)$/;"	f	file:
set_caseless	src/PCRELIB/pcrecpp.h	/^  RE_Options &set_caseless(bool x) {$/;"	f	class:pcrecpp::RE_Options
set_chat_active	src/m_menu.c	/^dboolean set_chat_active   = false; \/\/ in chat string setup screen$/;"	v
set_chatstrings	src/m_menu.c	/^  set_chatstrings,$/;"	e	enum:__anon157	file:
set_compat	src/m_menu.c	/^  set_compat,$/;"	e	enum:__anon157	file:
set_compat_active	src/m_menu.c	/^dboolean set_compat_active = false;$/;"	v
set_dollar_endonly	src/PCRELIB/pcrecpp.h	/^  RE_Options &set_dollar_endonly(bool x) {$/;"	f	class:pcrecpp::RE_Options
set_dotall	src/PCRELIB/pcrecpp.h	/^  RE_Options &set_dotall(bool x) {$/;"	f	class:pcrecpp::RE_Options
set_enemy	src/m_menu.c	/^  set_enemy,$/;"	e	enum:__anon157	file:
set_enemy_active	src/m_menu.c	/^dboolean set_enemy_active  = false; \/\/ in enemies setup screen$/;"	v
set_error	src/x_main.c	/^static void set_error(const char *message) {$/;"	f	file:
set_extended	src/PCRELIB/pcrecpp.h	/^  RE_Options &set_extended(bool x) {$/;"	f	class:pcrecpp::RE_Options
set_extra	src/PCRELIB/pcrecpp.h	/^  RE_Options &set_extra(bool x) {$/;"	f	class:pcrecpp::RE_Options
set_file_error	src/m_file.c	/^static void set_file_error(GQuark domain, gint code, gchar *message) {$/;"	f	file:
set_file_error_from_errno	src/m_file.c	/^static void set_file_error_from_errno(void) {$/;"	f	file:
set_general_active	src/m_menu.c	/^dboolean set_general_active = false;$/;"	v
set_key_bindings	src/m_menu.c	/^  set_key_bindings,$/;"	e	enum:__anon157	file:
set_keybnd_active	src/m_menu.c	/^dboolean set_keybnd_active = false; \/\/ in key binding setup screens$/;"	v
set_match_limit	src/PCRELIB/pcrecpp.h	/^  RE_Options &set_match_limit(int limit) {$/;"	f	class:pcrecpp::RE_Options
set_match_limit_recursion	src/PCRELIB/pcrecpp.h	/^  RE_Options &set_match_limit_recursion(int limit) {$/;"	f	class:pcrecpp::RE_Options
set_menu_itemon	src/m_menu.c	/^static int set_menu_itemon; \/\/ which setup item is selected?   \/\/ phares 3\/98$/;"	v	file:
set_mess_active	src/m_menu.c	/^dboolean set_mess_active   = false; \/\/ in messages setup screen$/;"	v
set_messages	src/m_menu.c	/^  set_messages,$/;"	e	enum:__anon157	file:
set_multiline	src/PCRELIB/pcrecpp.h	/^  RE_Options &set_multiline(bool x) {$/;"	f	class:pcrecpp::RE_Options
set_no_auto_capture	src/PCRELIB/pcrecpp.h	/^  RE_Options &set_no_auto_capture(bool x) {$/;"	f	class:pcrecpp::RE_Options
set_save_comments	src/PCRELIB/pcre_scanner.h	/^  void set_save_comments(bool comments) {$/;"	f	class:pcrecpp::Scanner
set_setup_end	src/m_menu.c	/^  set_setup_end$/;"	e	enum:__anon157	file:
set_start_bits	src/PCRELIB/pcre_study.c	/^set_start_bits(const uschar *code, uschar *start_bits, BOOL caseless,$/;"	f	file:
set_statbar	src/m_menu.c	/^  set_statbar,$/;"	e	enum:__anon157	file:
set_status_active	src/m_menu.c	/^dboolean set_status_active = false; \/\/ in status bar\/hud setup screen$/;"	v
set_ungreedy	src/PCRELIB/pcrecpp.h	/^  RE_Options &set_ungreedy(bool x) {$/;"	f	class:pcrecpp::RE_Options
set_utf8	src/PCRELIB/pcrecpp.h	/^  RE_Options &set_utf8(bool x) {$/;"	f	class:pcrecpp::RE_Options
set_weapon_active	src/m_menu.c	/^dboolean set_weapon_active = false; \/\/ in weapons setup screen$/;"	v
set_weapons	src/m_menu.c	/^  set_weapons,$/;"	e	enum:__anon157	file:
setblocks	src/r_main.c	/^int     setblocks;$/;"	v
setbuf	src/SDL/SDL_win32_main.c	34;"	d	file:
setsizeneeded	src/r_main.c	/^dboolean setsizeneeded;$/;"	v
setup	src/m_menu.c	/^  setup,                                                    \/\/ phares 3\/21\/98$/;"	e	enum:__anon155	file:
setup_active	src/m_menu.c	/^dboolean setup_active      = false; \/\/ in one of the setup screens$/;"	v
setup_e	src/m_menu.c	/^} setup_e;$/;"	v	typeref:enum:__anon157
setup_gather	src/m_menu.c	/^dboolean setup_gather      = false; \/\/ gathering keys for value$/;"	v
setup_group	src/m_menu.h	/^} setup_group;$/;"	t	typeref:enum:__anon166
setup_menu	src/m_misc.h	/^  struct setup_menu_s *setup_menu;   \/* Xref to setup menu item, if any *\/$/;"	m	struct:default_s	typeref:struct:default_s::setup_menu_s
setup_menu_s	src/m_menu.h	/^typedef struct setup_menu_s$/;"	s
setup_menu_t	src/m_menu.h	/^} setup_menu_t;$/;"	t	typeref:struct:setup_menu_s
setup_packet_s	src/protocol.h	/^struct setup_packet_s {$/;"	s
setup_screen	src/m_menu.c	/^int setup_screen; \/\/ the current setup screen. takes values from setup_e$/;"	v
setup_screens	src/m_menu.c	/^static setup_menu_t **setup_screens[] =$/;"	v	file:
setup_select	src/m_menu.c	/^dboolean setup_select      = false; \/\/ changing an item$/;"	v
setup_tic	src/p_tick.c	/^static dboolean setup_tic(void) {$/;"	f	file:
setupdata_t	src/d_ipxgate.c	/^} setupdata_t;$/;"	t	typeref:struct:__anon17	file:
setupscreen	src/m_misc.h	/^  int   setupscreen;      \/\/ phares 4\/19\/98: setup screen where this appears$/;"	m	struct:default_s
setvbuf	src/SDL/SDL_win32_main.c	35;"	d	file:
setvolume	src/MUSIC/musicplayer.h	/^  void (*setvolume)(int v);$/;"	m	struct:__anon177
sfx	src/hu_stuff.h	/^  int sfx;$/;"	m	struct:custom_message_s
sfx	src/p_user.h	/^  int sfx;$/;"	m	struct:player_message_s
sfx_None	src/sounds.h	/^  sfx_None,$/;"	e	enum:__anon318
sfx_barexp	src/sounds.h	/^  sfx_barexp,$/;"	e	enum:__anon318
sfx_bdcls	src/sounds.h	/^  sfx_bdcls,$/;"	e	enum:__anon318
sfx_bdopn	src/sounds.h	/^  sfx_bdopn,$/;"	e	enum:__anon318
sfx_bfg	src/sounds.h	/^  sfx_bfg,$/;"	e	enum:__anon318
sfx_bgact	src/sounds.h	/^  sfx_bgact,$/;"	e	enum:__anon318
sfx_bgdth1	src/sounds.h	/^  sfx_bgdth1,$/;"	e	enum:__anon318
sfx_bgdth2	src/sounds.h	/^  sfx_bgdth2,$/;"	e	enum:__anon318
sfx_bgsit1	src/sounds.h	/^  sfx_bgsit1,$/;"	e	enum:__anon318
sfx_bgsit2	src/sounds.h	/^  sfx_bgsit2,$/;"	e	enum:__anon318
sfx_boscub	src/sounds.h	/^  sfx_boscub,$/;"	e	enum:__anon318
sfx_bosdth	src/sounds.h	/^  sfx_bosdth,$/;"	e	enum:__anon318
sfx_bospit	src/sounds.h	/^  sfx_bospit,$/;"	e	enum:__anon318
sfx_bospn	src/sounds.h	/^  sfx_bospn,$/;"	e	enum:__anon318
sfx_bossit	src/sounds.h	/^  sfx_bossit,$/;"	e	enum:__anon318
sfx_brsdth	src/sounds.h	/^  sfx_brsdth,$/;"	e	enum:__anon318
sfx_brssit	src/sounds.h	/^  sfx_brssit,$/;"	e	enum:__anon318
sfx_bspact	src/sounds.h	/^  sfx_bspact,$/;"	e	enum:__anon318
sfx_bspdth	src/sounds.h	/^  sfx_bspdth,$/;"	e	enum:__anon318
sfx_bspsit	src/sounds.h	/^  sfx_bspsit,$/;"	e	enum:__anon318
sfx_bspwlk	src/sounds.h	/^  sfx_bspwlk,$/;"	e	enum:__anon318
sfx_cacdth	src/sounds.h	/^  sfx_cacdth,$/;"	e	enum:__anon318
sfx_cacsit	src/sounds.h	/^  sfx_cacsit,$/;"	e	enum:__anon318
sfx_chgun	src/sounds.h	/^  sfx_chgun,$/;"	e	enum:__anon318
sfx_claw	src/sounds.h	/^  sfx_claw,$/;"	e	enum:__anon318
sfx_cybdth	src/sounds.h	/^  sfx_cybdth,$/;"	e	enum:__anon318
sfx_cybsit	src/sounds.h	/^  sfx_cybsit,$/;"	e	enum:__anon318
sfx_dbcls	src/sounds.h	/^  sfx_dbcls,$/;"	e	enum:__anon318
sfx_dbload	src/sounds.h	/^  sfx_dbload,$/;"	e	enum:__anon318
sfx_dbopn	src/sounds.h	/^  sfx_dbopn,$/;"	e	enum:__anon318
sfx_dgact	src/sounds.h	/^  sfx_dgact,$/;"	e	enum:__anon318
sfx_dgatk	src/sounds.h	/^  sfx_dgatk,$/;"	e	enum:__anon318
sfx_dgdth	src/sounds.h	/^  sfx_dgdth,$/;"	e	enum:__anon318
sfx_dgpain	src/sounds.h	/^  sfx_dgpain,$/;"	e	enum:__anon318
sfx_dgsit	src/sounds.h	/^  sfx_dgsit,$/;"	e	enum:__anon318
sfx_dmact	src/sounds.h	/^  sfx_dmact,$/;"	e	enum:__anon318
sfx_dmpain	src/sounds.h	/^  sfx_dmpain,$/;"	e	enum:__anon318
sfx_dorcls	src/sounds.h	/^  sfx_dorcls,$/;"	e	enum:__anon318
sfx_doropn	src/sounds.h	/^  sfx_doropn,$/;"	e	enum:__anon318
sfx_dshtgn	src/sounds.h	/^  sfx_dshtgn,$/;"	e	enum:__anon318
sfx_empty1	src/m_menu.h	/^  sfx_empty1,$/;"	e	enum:__anon165
sfx_empty2	src/m_menu.h	/^  sfx_empty2,$/;"	e	enum:__anon165
sfx_firsht	src/sounds.h	/^  sfx_firsht,$/;"	e	enum:__anon318
sfx_firxpl	src/sounds.h	/^  sfx_firxpl,$/;"	e	enum:__anon318
sfx_flame	src/sounds.h	/^  sfx_flame,$/;"	e	enum:__anon318
sfx_flamst	src/sounds.h	/^  sfx_flamst,$/;"	e	enum:__anon318
sfx_getpow	src/sounds.h	/^  sfx_getpow,$/;"	e	enum:__anon318
sfx_gibdth	src/sounds.h	/^  sfx_gibdth,$/;"	e	enum:__anon318
sfx_hoof	src/sounds.h	/^  sfx_hoof,$/;"	e	enum:__anon318
sfx_itemup	src/sounds.h	/^  sfx_itemup,$/;"	e	enum:__anon318
sfx_itmbk	src/sounds.h	/^  sfx_itmbk,$/;"	e	enum:__anon318
sfx_keendt	src/sounds.h	/^  sfx_keendt,$/;"	e	enum:__anon318
sfx_keenpn	src/sounds.h	/^  sfx_keenpn,$/;"	e	enum:__anon318
sfx_kntdth	src/sounds.h	/^  sfx_kntdth,$/;"	e	enum:__anon318
sfx_kntsit	src/sounds.h	/^  sfx_kntsit,$/;"	e	enum:__anon318
sfx_manatk	src/sounds.h	/^  sfx_manatk,$/;"	e	enum:__anon318
sfx_mandth	src/sounds.h	/^  sfx_mandth,$/;"	e	enum:__anon318
sfx_mansit	src/sounds.h	/^  sfx_mansit,$/;"	e	enum:__anon318
sfx_metal	src/sounds.h	/^  sfx_metal,$/;"	e	enum:__anon318
sfx_mnpain	src/sounds.h	/^  sfx_mnpain,$/;"	e	enum:__anon318
sfx_noway	src/sounds.h	/^  sfx_noway,$/;"	e	enum:__anon318
sfx_oof	src/sounds.h	/^  sfx_oof,$/;"	e	enum:__anon318
sfx_pdiehi	src/sounds.h	/^  sfx_pdiehi,$/;"	e	enum:__anon318
sfx_pedth	src/sounds.h	/^  sfx_pedth,$/;"	e	enum:__anon318
sfx_pepain	src/sounds.h	/^  sfx_pepain,$/;"	e	enum:__anon318
sfx_pesit	src/sounds.h	/^  sfx_pesit,$/;"	e	enum:__anon318
sfx_pistol	src/sounds.h	/^  sfx_pistol,$/;"	e	enum:__anon318
sfx_plasma	src/sounds.h	/^  sfx_plasma,$/;"	e	enum:__anon318
sfx_pldeth	src/sounds.h	/^  sfx_pldeth,$/;"	e	enum:__anon318
sfx_plpain	src/sounds.h	/^  sfx_plpain,$/;"	e	enum:__anon318
sfx_podth1	src/sounds.h	/^  sfx_podth1,$/;"	e	enum:__anon318
sfx_podth2	src/sounds.h	/^  sfx_podth2,$/;"	e	enum:__anon318
sfx_podth3	src/sounds.h	/^  sfx_podth3,$/;"	e	enum:__anon318
sfx_popain	src/sounds.h	/^  sfx_popain,$/;"	e	enum:__anon318
sfx_posact	src/sounds.h	/^  sfx_posact,$/;"	e	enum:__anon318
sfx_posit1	src/sounds.h	/^  sfx_posit1,$/;"	e	enum:__anon318
sfx_posit2	src/sounds.h	/^  sfx_posit2,$/;"	e	enum:__anon318
sfx_posit3	src/sounds.h	/^  sfx_posit3,$/;"	e	enum:__anon318
sfx_pstart	src/sounds.h	/^  sfx_pstart,$/;"	e	enum:__anon318
sfx_pstop	src/sounds.h	/^  sfx_pstop,$/;"	e	enum:__anon318
sfx_punch	src/sounds.h	/^  sfx_punch,$/;"	e	enum:__anon318
sfx_radio	src/sounds.h	/^  sfx_radio,$/;"	e	enum:__anon318
sfx_rlaunc	src/sounds.h	/^  sfx_rlaunc,$/;"	e	enum:__anon318
sfx_rxplod	src/sounds.h	/^  sfx_rxplod,$/;"	e	enum:__anon318
sfx_sawful	src/sounds.h	/^  sfx_sawful,$/;"	e	enum:__anon318
sfx_sawhit	src/sounds.h	/^  sfx_sawhit,$/;"	e	enum:__anon318
sfx_sawidl	src/sounds.h	/^  sfx_sawidl,$/;"	e	enum:__anon318
sfx_sawup	src/sounds.h	/^  sfx_sawup,$/;"	e	enum:__anon318
sfx_secret	src/sounds.h	/^  sfx_secret,$/;"	e	enum:__anon318
sfx_sgcock	src/sounds.h	/^  sfx_sgcock,$/;"	e	enum:__anon318
sfx_sgtatk	src/sounds.h	/^  sfx_sgtatk,$/;"	e	enum:__anon318
sfx_sgtdth	src/sounds.h	/^  sfx_sgtdth,$/;"	e	enum:__anon318
sfx_sgtsit	src/sounds.h	/^  sfx_sgtsit,$/;"	e	enum:__anon318
sfx_shotgn	src/sounds.h	/^  sfx_shotgn,$/;"	e	enum:__anon318
sfx_skeact	src/sounds.h	/^  sfx_skeact,$/;"	e	enum:__anon318
sfx_skeatk	src/sounds.h	/^  sfx_skeatk,$/;"	e	enum:__anon318
sfx_skedth	src/sounds.h	/^  sfx_skedth,$/;"	e	enum:__anon318
sfx_skepch	src/sounds.h	/^  sfx_skepch,$/;"	e	enum:__anon318
sfx_skesit	src/sounds.h	/^  sfx_skesit,$/;"	e	enum:__anon318
sfx_skeswg	src/sounds.h	/^  sfx_skeswg,$/;"	e	enum:__anon318
sfx_sklatk	src/sounds.h	/^  sfx_sklatk,$/;"	e	enum:__anon318
sfx_skldth	src/sounds.h	/^  sfx_skldth,$/;"	e	enum:__anon318
sfx_slop	src/sounds.h	/^  sfx_slop,$/;"	e	enum:__anon318
sfx_spidth	src/sounds.h	/^  sfx_spidth,$/;"	e	enum:__anon318
sfx_spisit	src/sounds.h	/^  sfx_spisit,$/;"	e	enum:__anon318
sfx_ssdth	src/sounds.h	/^  sfx_ssdth,$/;"	e	enum:__anon318
sfx_sssit	src/sounds.h	/^  sfx_sssit,$/;"	e	enum:__anon318
sfx_stnmov	src/sounds.h	/^  sfx_stnmov,$/;"	e	enum:__anon318
sfx_swtchn	src/sounds.h	/^  sfx_swtchn,$/;"	e	enum:__anon318
sfx_swtchx	src/sounds.h	/^  sfx_swtchx,$/;"	e	enum:__anon318
sfx_telept	src/sounds.h	/^  sfx_telept,$/;"	e	enum:__anon318
sfx_tink	src/sounds.h	/^  sfx_tink,$/;"	e	enum:__anon318
sfx_vilact	src/sounds.h	/^  sfx_vilact,$/;"	e	enum:__anon318
sfx_vilatk	src/sounds.h	/^  sfx_vilatk,$/;"	e	enum:__anon318
sfx_vildth	src/sounds.h	/^  sfx_vildth,$/;"	e	enum:__anon318
sfx_vilsit	src/sounds.h	/^  sfx_vilsit,$/;"	e	enum:__anon318
sfx_vipain	src/sounds.h	/^  sfx_vipain,$/;"	e	enum:__anon318
sfx_vol	src/m_menu.h	/^  sfx_vol,$/;"	e	enum:__anon165
sfx_wpnup	src/sounds.h	/^  sfx_wpnup,$/;"	e	enum:__anon318
sfxenum_t	src/sounds.h	/^} sfxenum_t;$/;"	t	typeref:enum:__anon318
sfxinfo	src/s_sound.c	/^  sfxinfo_t *sfxinfo;  \/\/ sound information (if null, channel avail.)$/;"	m	struct:__anon319	file:
sfxinfo_struct	src/sounds.h	/^struct sfxinfo_struct {$/;"	s
sfxinfo_t	src/sounds.h	/^typedef struct sfxinfo_struct sfxinfo_t;$/;"	t	typeref:struct:sfxinfo_struct
sfxmutex	src/SDL/i_sound.c	/^SDL_mutex *sfxmutex;        \/\/ lock for updating any params related to sfx$/;"	v
sh_main	src/gl_shader.c	/^GLShader *sh_main = NULL;$/;"	v
shadow	src/gl_intern.h	/^    GLShadow *shadow;$/;"	m	union:GLDrawItem_s::__anon104
shadow_params_s	src/gl_struct.h	/^typedef struct shadow_params_s$/;"	s
sharedQueue	src/MAC/UKKQueue.h	/^+(UKKQueue*)    sharedQueue;        \/\/ Returns a singleton, a shared kqueue object Handy if you're subscribing to the notifications. Use this, or just create separate objects using alloc\/init. Whatever floats your boat.$/;"	v
shareware	src/doomdef.h	/^  shareware,    \/\/ DOOM 1 shareware, E1, M9$/;"	e	enum:__anon43
shiftdown	src/d_main.h	/^  bool shiftdown;$/;"	m	struct:keybindings_s
shiftxform	src/hu_stuff.c	/^const char* shiftxform;$/;"	v
shit_happens	src/g_overflow.h	/^  int shit_happens;$/;"	m	struct:overrun_param_s
shootthing	src/p_map.c	/^static mobj_t*   shootthing;$/;"	v	file:
shootz	src/p_map.c	/^fixed_t   shootz;$/;"	v
shorthand_regex	src/c_main.c	/^static GRegex *shorthand_regex = NULL;$/;"	v	file:
shortnum	src/st_stuff.c	/^static patchnum_t shortnum[10];$/;"	v	file:
shorttics	src/g_game.c	/^int shorttics;$/;"	v
should_exit	src/lprintf.c	/^static dboolean should_exit = 0;$/;"	v	file:
should_render	src/n_main.c	/^static bool should_render(void) {$/;"	f	file:
should_skip_	src/PCRELIB/pcre_scanner.h	/^  bool          should_skip_;   \/\/ If true, use skip_$/;"	m	class:pcrecpp::Scanner
showMessages	src/m_menu.c	/^int showMessages;    \/\/ Show messages has default, 0 = off, 1 = on$/;"	v
show_alive	src/g_game.c	/^int             show_alive;$/;"	v
show_malloc	src/PCRELIB/pcretest.c	/^static int show_malloc;$/;"	v	file:
showendoom	src/e6y.c	/^int showendoom;$/;"	v
shutdown	src/MUSIC/musicplayer.h	/^  void (*shutdown)(void);$/;"	m	struct:__anon177
shutdown_func	src/PCSOUND/pcsound.h	/^  pcsound_shutdown_func shutdown_func;$/;"	m	struct:pcsound_driver_s
side	src/doomdata.h	/^  short side;$/;"	m	struct:__anon36
side	src/doomdata.h	/^  short side;$/;"	m	struct:__anon37
side	src/doomdata.h	/^  unsigned char side;$/;"	m	struct:__anon38
side	src/gl_intern.h	/^  side_t *side;$/;"	m	struct:SkyBoxParams_s
side	src/p_setup.c	/^  short     side;  \/\/ side on linedef: 0 for right, 1 for left$/;"	m	struct:__anon231	file:
side_t	src/r_defs.h	/^} side_t;$/;"	t	typeref:struct:__anon284
sidedef	src/r_bsp.c	/^side_t    *sidedef;$/;"	v
sidedef	src/r_defs.h	/^  side_t* sidedef;$/;"	m	struct:__anon287
sidemove	src/d_ticcmd.h	/^  char   sidemove;     \/* *2048 for move       *\/$/;"	m	struct:__anon63
sidemove	src/g_game.c	/^fixed_t sidemove[2]    = {0x18, 0x28};$/;"	v
sidemove_normal	src/g_game.c	/^fixed_t sidemove_normal[2]    = {0x18, 0x28};$/;"	v
sidemove_strafe50	src/g_game.c	/^fixed_t sidemove_strafe50[2]  = {0x19, 0x32};$/;"	v
sidenum	src/doomdata.h	/^  unsigned short sidenum[2];$/;"	m	struct:__anon31
sidenum	src/r_defs.h	/^  unsigned short sidenum[2];        \/\/ Visual appearance: SideDefs.$/;"	m	struct:line_s
sides	src/p_setup.c	/^side_t   *sides;$/;"	v
sig_handler	src/d_server.c	/^void NORETURN sig_handler(int signum)$/;"	f
sightcounts	src/p_sight.c	/^int sightcounts[3];$/;"	v
sightzstart	src/p_sight.c	/^  fixed_t sightzstart, t2x, t2y;   \/\/ eye z of looker$/;"	m	struct:__anon234	file:
sightzstart	src/p_sight.c	/^fixed_t sightzstart;            \/\/ eye z of looker$/;"	v
signal_name	src/TEXTSCREEN/txt_widget.c	/^                       const char *signal_name,$/;"	v
signal_name	src/TEXTSCREEN/txt_widget.c	/^    char *signal_name;$/;"	m	struct:__anon333	file:
signal_name	src/TEXTSCREEN/txt_widget.h	/^void TXT_EmitSignal(TXT_UNCAST_ARG(widget), const char *signal_name);$/;"	v
signal_name	src/TEXTSCREEN/txt_widget.h	/^void TXT_SignalConnect(TXT_UNCAST_ARG(widget), const char *signal_name,$/;"	v
silent	src/PCRELIB/pcregrep.c	/^static BOOL silent = FALSE;$/;"	v	file:
silentCrushAndRaise	src/p_spec.h	/^  silentCrushAndRaise,$/;"	e	enum:__anon254
silhouette	src/r_defs.h	/^  int silhouette;                       \/\/ 0=none, 1=bottom, 2=top, 3=both$/;"	m	struct:drawseg_s
simple_shadow_params_t	src/gl_struct.h	/^} simple_shadow_params_t;$/;"	t	typeref:struct:shadow_params_s
simple_shadows	src/gl_shadow.c	/^simple_shadow_params_t simple_shadows =$/;"	v
sin	src/am_map.h	/^  fixed_t sin, cos;$/;"	m	struct:am_frame_s
sin_f	src/am_map.h	/^  float sin_f, cos_f;$/;"	m	struct:am_frame_s
sin_inv_yaw	src/gl_main.c	/^float cos_inv_yaw, sin_inv_yaw;$/;"	v
sin_paperitems_pitch	src/gl_main.c	/^float cos_paperitems_pitch, sin_paperitems_pitch;$/;"	v
singledemo	src/g_game.c	/^dboolean        singledemo;           \/\/ quit after playing a demo from cmdline$/;"	v
singleplayer	src/g_game.h	160;"	d
singletics	src/d_main.c	/^dboolean singletics = false; \/\/ debug flag to cancel adaptiveness$/;"	v
singularity	src/sounds.h	/^  int singularity;$/;"	m	struct:sfxinfo_struct
sitems	src/d_player.h	/^  int         sitems;$/;"	m	struct:__anon60
size	src/PCRELIB/pcre_internal.h	/^  pcre_uint32 size;               \/* Total that was malloced *\/$/;"	m	struct:pcre_study_data
size	src/PCRELIB/pcre_internal.h	/^  pcre_uint32 size;               \/* Total that was malloced *\/$/;"	m	struct:real_pcre
size	src/TEXTSCREEN/txt_inputbox.h	/^    unsigned int size;$/;"	m	struct:txt_inputbox_s
size	src/cmp.h	/^  uint32_t size;$/;"	m	struct:cmp_ext_s
size	src/d_deh.c	/^  long size;$/;"	m	struct:__anon9	file:
size	src/gl_intern.h	/^  int size;$/;"	m	struct:GLDrawDataItem_s
size	src/gl_intern.h	/^  int size;$/;"	m	struct:__anon105
size	src/i_smp.h	/^  volatile int size;$/;"	m	struct:smp_item_s
size	src/i_video.h	/^  int width, height, size;$/;"	m	struct:vid_8ingl_s
size	src/m_buf.h	/^  size_t size;$/;"	m	struct:buf_s
size	src/n_peer.c	/^  unsigned int size;$/;"	m	struct:packet_buf_s	file:
size	src/w_wad.h	/^  int   size;$/;"	m	struct:__anon358
size	src/w_wad.h	/^  int  size;$/;"	m	struct:__anon354
size	src/z_bmalloc.h	/^  size_t size;$/;"	m	struct:block_memory_alloc_s
size	src/z_zone.c	/^  size_t size;$/;"	m	struct:memblock	file:
size_calc	src/TEXTSCREEN/txt_widget.h	/^    TxtWidgetSizeCalc size_calc;$/;"	m	struct:txt_widget_class_s
size_t	src/PCRELIB/config.h	63;"	d
sk_baby	src/doomdef.h	/^  sk_baby=0,$/;"	e	enum:__anon47
sk_easy	src/doomdef.h	/^  sk_easy,$/;"	e	enum:__anon47
sk_hard	src/doomdef.h	/^  sk_hard,$/;"	e	enum:__anon47
sk_medium	src/doomdef.h	/^  sk_medium,$/;"	e	enum:__anon47
sk_nightmare	src/doomdef.h	/^  sk_nightmare$/;"	e	enum:__anon47
sk_none	src/doomdef.h	/^  sk_none=-1, \/\/jff 3\/24\/98 create unpicked skill setting$/;"	e	enum:__anon47
skill	src/d_net.h	/^    short               skill;          \/\/ 1-5$/;"	m	struct:__anon27
skill	src/protocol.h	/^  byte players, yourplayer, skill, episode, level, deathmatch, complevel, ticdup, extratic;$/;"	m	struct:setup_packet_s
skill_t	src/doomdef.h	/^} skill_t;$/;"	t	typeref:enum:__anon47
skills	src/d_player.h	/^  int         skills;$/;"	m	struct:__anon60
skip_	src/PCRELIB/pcre_scanner.h	/^  RE*           skip_;          \/\/ If non-NULL, RE for skipping input$/;"	m	class:pcrecpp::Scanner
skullAnimCounter	src/m_menu.c	/^short skullAnimCounter; \/\/ skull animation counter$/;"	v
skullName	src/m_menu.c	/^const char skullName[2][\/*8*\/9] = {"M_SKULL1","M_SKULL2"};$/;"	v
sky	src/r_defs.h	/^  int sky;$/;"	m	struct:__anon283
skyUpAngle	src/e6y.c	/^float skyUpAngle;$/;"	v
skyUpShift	src/e6y.c	/^float skyUpShift;$/;"	v
skyXShift	src/e6y.c	/^float skyXShift;$/;"	v
skyYShift	src/e6y.c	/^float skyYShift;$/;"	v
sky_vbo	src/gl_sky.c	/^GLSkyVBO sky_vbo[2];$/;"	v
sky_vbo_r	src/gl_intern.h	509;"	d
sky_vbo_u	src/gl_intern.h	508;"	d
sky_vbo_x	src/gl_intern.h	507;"	d
skybox_index	src/r_defs.h	/^  int skybox_index;$/;"	m	struct:__anon284
skyflatnum	src/r_sky.c	/^int skyflatnum;$/;"	v
skyiscale	src/r_main.c	/^fixed_t  skyiscale;$/;"	v
skyscale	src/e6y.c	/^float skyscale;$/;"	v
skystretch	src/r_sky.c	/^int skystretch;$/;"	v
skytexture	src/r_sky.c	/^int skytexture;$/;"	v
skytexturemid	src/r_sky.c	/^int skytexturemid;$/;"	v
skytype_auto	src/gl_struct.h	/^  skytype_auto,$/;"	e	enum:__anon114
skytype_count	src/gl_struct.h	/^  skytype_count$/;"	e	enum:__anon114
skytype_none	src/gl_struct.h	/^  skytype_none,$/;"	e	enum:__anon114
skytype_screen	src/gl_struct.h	/^  skytype_screen,$/;"	e	enum:__anon114
skytype_skydome	src/gl_struct.h	/^  skytype_skydome,$/;"	e	enum:__anon114
skytype_standard	src/gl_struct.h	/^  skytype_standard,$/;"	e	enum:__anon114
skytype_t	src/gl_struct.h	/^} skytype_t;$/;"	t	typeref:enum:__anon114
skyyaw	src/gl_intern.h	/^  float skyyaw;$/;"	m	struct:__anon91
skyymid	src/gl_intern.h	/^  float skyymid;$/;"	m	struct:__anon91
slidemo	src/p_map.c	/^static mobj_t*   slidemo;$/;"	v	file:
slope	src/r_patch.h	/^  edgeslope_t slope;$/;"	m	struct:__anon309
sloped_edge_type_e	src/r_draw.h	/^enum sloped_edge_type_e {$/;"	g
slopetype	src/r_defs.h	/^  slopetype_t slopetype; \/\/ To aid move clipping.$/;"	m	struct:line_s
slopetype_t	src/r_defs.h	/^} slopetype_t;$/;"	t	typeref:enum:__anon285
sm2AM	src/MUSIC/dbopl.h	/^  sm2AM,$/;"	e	enum:__anon199
sm2FM	src/MUSIC/dbopl.h	/^  sm2FM,$/;"	e	enum:__anon199
sm2Percussion	src/MUSIC/dbopl.h	/^  sm2Percussion,$/;"	e	enum:__anon199
sm3AM	src/MUSIC/dbopl.h	/^  sm3AM,$/;"	e	enum:__anon199
sm3AMAM	src/MUSIC/dbopl.h	/^  sm3AMAM,$/;"	e	enum:__anon199
sm3AMFM	src/MUSIC/dbopl.h	/^  sm3AMFM,$/;"	e	enum:__anon199
sm3FM	src/MUSIC/dbopl.h	/^  sm3FM,$/;"	e	enum:__anon199
sm3FMAM	src/MUSIC/dbopl.h	/^  sm3FMAM,$/;"	e	enum:__anon199
sm3FMFM	src/MUSIC/dbopl.h	/^  sm3FMFM,$/;"	e	enum:__anon199
sm3Percussion	src/MUSIC/dbopl.h	/^  sm3Percussion,$/;"	e	enum:__anon199
sm4Start	src/MUSIC/dbopl.h	/^  sm4Start,$/;"	e	enum:__anon199
sm6Start	src/MUSIC/dbopl.h	/^  sm6Start,$/;"	e	enum:__anon199
small_font	src/TEXTSCREEN/txt_smallfont.h	/^static txt_font_t small_font =$/;"	v
small_font_data	src/TEXTSCREEN/txt_smallfont.h	/^static unsigned char small_font_data[] = {$/;"	v
smooth_playing_angle	src/r_demo.c	/^static angle_t smooth_playing_angle;$/;"	v	file:
smooth_playing_index	src/r_demo.c	/^static int smooth_playing_index;$/;"	v	file:
smooth_playing_sum	src/r_demo.c	/^static int_64_t smooth_playing_sum;$/;"	v	file:
smooth_playing_turns	src/r_demo.c	/^static int smooth_playing_turns[SMOOTH_PLAYING_MAXFACTOR];$/;"	v	file:
smp_data	src/i_smp.c	/^static smp_item_t smp_data[SMP_DATA_MAX];$/;"	v	file:
smp_datatype_e	src/i_smp.c	/^} smp_datatype_e;$/;"	t	typeref:enum:__anon139	file:
smp_draw	src/i_smp.c	/^static inline void smp_draw(void)$/;"	f	file:
smp_item_s	src/i_smp.h	/^typedef struct smp_item_s$/;"	s
smp_item_t	src/i_smp.h	/^} smp_item_t;$/;"	t	typeref:struct:smp_item_s
smp_mutex	src/i_smp.c	/^static SDL_mutex *smp_mutex;$/;"	v	file:
smp_ready	src/i_smp.c	/^static volatile int smp_ready;$/;"	v	file:
smp_state	src/i_smp.c	/^static volatile int smp_state;$/;"	v	file:
smp_thread	src/i_smp.c	/^static SDL_Thread *smp_thread;$/;"	v	file:
snd_MusicVolume	src/s_sound.c	/^int snd_MusicVolume = 15;$/;"	v
snd_SfxVolume	src/s_sound.c	/^int snd_SfxVolume = 15;$/;"	v
snd_card	src/SDL/i_sound.c	/^int snd_card = 1;           \/\/ Variables used by Boom from Allegro$/;"	v
snd_mididev	src/SDL/i_emusic.c	/^const char *snd_mididev;    \/\/ midi device to use (portmidiplayer)$/;"	v
snd_midiplayer	src/SDL/i_emusic.c	/^const char *snd_midiplayer; \/\/ prefered MIDI device$/;"	v
snd_pcspeaker	src/SDL/i_sound.c	/^int snd_pcspeaker;$/;"	v
snd_samplerate	src/SDL/i_sound.c	/^int snd_samplerate = 11025; \/\/ MWM 2000-01-08: Sample rate in samples\/second$/;"	v
snd_soundfont	src/SDL/i_emusic.c	/^const char *snd_soundfont;  \/\/ soundfont name for synths that use it$/;"	v
snext	src/p_mobj.h	/^    struct mobj_s*      snext;$/;"	m	struct:mobj_s	typeref:struct:mobj_s::mobj_s
snl_pointeron	src/wi_stuff.c	/^static dboolean    snl_pointeron = false;$/;"	v	file:
solidcol	src/r_bsp.c	/^byte *solidcol;$/;"	v
solonet	src/n_net.c	/^dboolean        solonet   = false;$/;"	v
song_data	src/SDL/i_emusic.c	/^static void *song_data = NULL;$/;"	v	file:
song_looping	src/MUSIC/oplplayer.c	/^static dboolean song_looping;$/;"	v	file:
soul_health	src/p_inter.c	/^int soul_health = 100;$/;"	v
sound_e	src/m_menu.h	/^} sound_e;$/;"	v	typeref:enum:__anon165
sound_end	src/m_menu.h	/^  sound_end$/;"	e	enum:__anon165
sound_inited	src/SDL/i_sound.c	/^static dboolean sound_inited = false;$/;"	v	file:
sound_inited_once	src/e6y.c	/^dboolean sound_inited_once = false;$/;"	v
sound_lock	src/i_pcsound.c	/^static SDL_mutex *sound_lock;$/;"	v	file:
sound_thread_handle	src/PCSOUND/pcsound_linux.c	/^static SDL_Thread *sound_thread_handle;$/;"	v	file:
sound_thread_handle	src/PCSOUND/pcsound_win32.c	/^static SDL_Thread *sound_thread_handle;$/;"	v	file:
sound_thread_running	src/PCSOUND/pcsound_linux.c	/^static int sound_thread_running = 0;$/;"	v	file:
sound_thread_running	src/PCSOUND/pcsound_win32.c	/^static int sound_thread_running;$/;"	v	file:
soundorg	src/p_spec.h	/^  mobj_t* soundorg;$/;"	m	struct:__anon261
soundorg	src/r_defs.h	/^  degenmobj_t soundorg;  \/\/ origin for any sounds played by the sector$/;"	m	struct:__anon283
soundorg	src/r_defs.h	/^  degenmobj_t soundorg;  \/\/ sound origin for switches\/buttons$/;"	m	struct:line_s
soundpipe	src/i_capture.c	/^static pipeinfo_t soundpipe;$/;"	v	file:
soundtarget	src/r_defs.h	/^  mobj_t *soundtarget;   \/\/ thing that made a sound (or null)$/;"	m	struct:__anon283
soundtraversed	src/r_defs.h	/^  int soundtraversed;    \/\/ 0 = untraversed, 1,2 = sndlines-1$/;"	m	struct:__anon283
soundvol	src/m_menu.c	/^  soundvol,$/;"	e	enum:__anon155	file:
source	src/e6y_launcher.c	/^  wad_source_t source;$/;"	m	struct:__anon67	file:
source	src/p_spec.h	/^  mobj_t* source;      \/\/ Point source if point pusher$/;"	m	struct:__anon274
source	src/r_draw.h	/^  const byte          *source; \/\/ first pixel in a column$/;"	m	struct:draw_column_vars_s
source	src/r_draw.h	/^  const byte          *source; \/\/ start of a 64*64 tile image$/;"	m	struct:__anon298
source	src/w_wad.h	/^  wad_source_t source;$/;"	m	struct:__anon358
source_auto_load	src/w_wad.h	/^  source_auto_load, \/\/ lump auto-loaded by config file$/;"	e	enum:__anon355
source_deh	src/w_wad.h	/^  ,source_deh$/;"	e	enum:__anon355
source_err	src/w_wad.h	/^  ,source_err$/;"	e	enum:__anon355
source_iwad	src/w_wad.h	/^  source_iwad=0,    \/\/ iwad file load $/;"	e	enum:__anon355
source_lmp	src/w_wad.h	/^  source_lmp,       \/\/ lmp file load$/;"	e	enum:__anon355
source_net	src/w_wad.h	/^  source_net        \/\/ CPhipps$/;"	e	enum:__anon355
source_pre	src/w_wad.h	/^  source_pre,       \/\/ predefined lump$/;"	e	enum:__anon355
source_pwad	src/w_wad.h	/^  source_pwad,      \/\/ pwad file load$/;"	e	enum:__anon355
sp_secret	src/wi_stuff.c	/^static const char sp_secret[] = {"WISCRT2"};$/;"	v	file:
sp_state	src/wi_stuff.c	/^static int  sp_state;$/;"	v	file:
spans	src/i_smp.h	/^    draw_span_vars_t* spans;$/;"	m	union:smp_item_s::__anon140
spanstart	src/r_plane.c	/^static int *spanstart = NULL;                \/\/ killough 2\/8\/98$/;"	v	file:
spawnhealth	src/info.h	/^  int spawnhealth;  \/* The initial hit points for this Thing *\/$/;"	m	struct:__anon138
spawnpoint	src/p_mobj.h	/^    mapthing_t          spawnpoint;$/;"	m	struct:mobj_s
spawnstate	src/info.h	/^  int spawnstate;   \/* The state (frame) index when this Thing is$/;"	m	struct:__anon138
spechit	src/g_overflow.h	/^  line_t ***spechit;$/;"	m	struct:spechit_overrun_param_s
spechit	src/p_map.c	/^line_t **spechit;                \/\/ new code -- killough$/;"	v
spechit_baseaddr	src/g_overflow.c	/^unsigned int spechit_baseaddr = 0;$/;"	v
spechit_max	src/p_map.c	/^static int spechit_max;          \/\/ killough$/;"	v	file:
spechit_overrun_param_s	src/g_overflow.h	/^typedef struct spechit_overrun_param_s$/;"	s
spechit_overrun_param_t	src/g_overflow.h	/^} spechit_overrun_param_t;$/;"	t	typeref:struct:spechit_overrun_param_s
special	src/doomdata.h	/^  short special;$/;"	m	struct:__anon31
special	src/doomdata.h	/^  short special;$/;"	m	struct:__anon32
special	src/r_defs.h	/^  int special;$/;"	m	struct:__anon284
special	src/r_defs.h	/^  short special;$/;"	m	struct:__anon283
special	src/r_defs.h	/^  short special;$/;"	m	struct:line_s
special_e	src/p_spec.h	/^} special_e;$/;"	t	typeref:enum:__anon249
special_event	src/g_game.c	/^static buttoncode_t special_event; \/\/ Event triggered by local player, to send$/;"	v	file:
specialdata	src/r_defs.h	/^  void *specialdata;     \/\/ thinker_t for reversable actions$/;"	m	struct:line_s
specials_e	src/p_saveg.c	/^} specials_e;$/;"	v	typeref:enum:__anon230
speed	src/info.h	/^  int speed;        \/* How fast it moves.  Too fast and it can miss$/;"	m	struct:__anon138
speed	src/p_spec.c	/^  int         speed;$/;"	m	struct:__anon235	file:
speed	src/p_spec.h	/^    int         speed;$/;"	m	struct:__anon236
speed	src/p_spec.h	/^  fixed_t speed;$/;"	m	struct:__anon266
speed	src/p_spec.h	/^  fixed_t speed;$/;"	m	struct:__anon267
speed	src/p_spec.h	/^  fixed_t speed;$/;"	m	struct:__anon268
speed	src/p_spec.h	/^  fixed_t speed;$/;"	m	struct:__anon269
speed	src/p_spec.h	/^  fixed_t speed;$/;"	m	struct:__anon270
speed_step	src/e6y.c	/^int speed_step;$/;"	v
splat	src/wi_stuff.c	/^static const char* splat[2] = {"WISPLAT", 0};$/;"	v	file:
splits	src/gl_vertex.c	/^  vertexsplit_info_t **splits;$/;"	m	struct:splitsbysector_s	file:
splitsbysector_s	src/gl_vertex.c	/^typedef struct splitsbysector_s$/;"	s	file:
splitsbysector_t	src/gl_vertex.c	/^} splitsbysector_t;$/;"	t	typeref:struct:splitsbysector_s	file:
spmc	src/MUSIC/flplayer.c	/^static double spmc;$/;"	v	file:
spmc	src/MUSIC/portmidiplayer.c	/^static double spmc;$/;"	v	file:
sprbottomclip	src/r_defs.h	/^  int *sprtopclip, *sprbottomclip, *maskedtexturecol; \/\/ dropoff overflow$/;"	m	struct:drawseg_s
sprev	src/p_mobj.h	/^    struct mobj_s**     sprev; \/\/ killough 8\/10\/98: change to ptr-to-ptr$/;"	m	struct:mobj_s	typeref:struct:mobj_s::mobj_s
sprite	src/gl_intern.h	/^    GLSprite *sprite;$/;"	m	union:GLDrawItem_s::__anon104
sprite	src/info.h	/^  spritenum_t sprite;       \/* sprite number to show                       *\/$/;"	m	struct:__anon136
sprite	src/p_mobj.h	/^    spritenum_t         sprite; \/\/ used to find patch_t and flip value$/;"	m	struct:mobj_s
sprite_doom_order_t	src/r_things.h	/^} sprite_doom_order_t;$/;"	t	typeref:enum:__anon312
sprite_edges	src/r_draw.h	/^  enum sloped_edge_type_e sprite_edges;$/;"	m	struct:__anon299	typeref:enum:__anon299::sloped_edge_type_e
spriteclip_always	src/gl_struct.h	/^typedef enum { spriteclip_const, spriteclip_always, spriteclip_smart } spriteclipmode_t;$/;"	e	enum:__anon117
spriteclip_const	src/gl_struct.h	/^typedef enum { spriteclip_const, spriteclip_always, spriteclip_smart } spriteclipmode_t;$/;"	e	enum:__anon117
spriteclip_smart	src/gl_struct.h	/^typedef enum { spriteclip_const, spriteclip_always, spriteclip_smart } spriteclipmode_t;$/;"	e	enum:__anon117
spriteclipmode_t	src/gl_struct.h	/^typedef enum { spriteclip_const, spriteclip_always, spriteclip_smart } spriteclipmode_t;$/;"	t	typeref:enum:__anon117
spritedef_t	src/r_defs.h	/^} spritedef_t;$/;"	t	typeref:struct:__anon291
spriteframe_t	src/r_defs.h	/^} spriteframe_t;$/;"	t	typeref:struct:__anon290
spriteframes	src/r_defs.h	/^  spriteframe_t *spriteframes;$/;"	m	struct:__anon291
spritelights	src/r_things.c	/^static const lighttable_t **spritelights;        \/\/ killough 1\/25\/98 made static$/;"	v	file:
spritenum_t	src/info.h	/^} spritenum_t;$/;"	t	typeref:enum:__anon134
sprites	src/r_things.c	/^spritedef_t *sprites;$/;"	v
sprites_doom_order	src/r_things.c	/^int sprites_doom_order;$/;"	v
sprnames	src/info.c	/^const char *sprnames[NUMSPRITES+1] = {$/;"	v
sprtemp	src/r_things.c	/^static spriteframe_t sprtemp[MAX_SPRITE_FRAMES];$/;"	v	file:
sprtopclip	src/r_defs.h	/^  int *sprtopclip, *sprbottomclip, *maskedtexturecol; \/\/ dropoff overflow$/;"	m	struct:drawseg_s
sprtopscreen	src/r_things.c	/^fixed_t sprtopscreen;$/;"	v
spryscale	src/r_things.c	/^fixed_t spryscale;$/;"	v
src	src/w_wad.h	/^  wad_source_t src;$/;"	m	struct:__anon356
ss_auto	src/doomdef.h	/^  ss_auto,$/;"	e	enum:__anon53
ss_chat	src/doomdef.h	/^  ss_chat,$/;"	e	enum:__anon53
ss_comp	src/doomdef.h	/^  ss_comp,      \/* killough 10\/98 *\/$/;"	e	enum:__anon53
ss_enem	src/doomdef.h	/^  ss_enem,$/;"	e	enum:__anon53
ss_gen	src/doomdef.h	/^  ss_gen,       \/* killough 10\/98 *\/$/;"	e	enum:__anon53
ss_keys	src/doomdef.h	/^  ss_keys,$/;"	e	enum:__anon53
ss_max	src/doomdef.h	/^  ss_max$/;"	e	enum:__anon53
ss_mess	src/doomdef.h	/^  ss_mess,$/;"	e	enum:__anon53
ss_none	src/doomdef.h	/^  ss_none,$/;"	e	enum:__anon53
ss_stat	src/doomdef.h	/^  ss_stat,$/;"	e	enum:__anon53
ss_types	src/doomdef.h	/^} ss_types;$/;"	t	typeref:enum:__anon53
ss_weap	src/doomdef.h	/^  ss_weap,$/;"	e	enum:__anon53
ssecret	src/d_player.h	/^  int         ssecret;$/;"	m	struct:__anon60
ssline_s	src/r_defs.h	/^typedef struct ssline_s$/;"	s
ssline_t	src/r_defs.h	/^} ssline_t;$/;"	t	typeref:struct:ssline_s
sslines	src/p_setup.c	/^ssline_t *sslines;$/;"	v
sslines_indexes	src/p_setup.c	/^int      *sslines_indexes;$/;"	v
st_armson	src/st_stuff.c	/^static dboolean st_armson;$/;"	v	file:
st_binicon_t	src/st_lib.h	/^} st_binicon_t;$/;"	t	typeref:struct:__anon323
st_chat	src/st_stuff.c	/^static dboolean st_chat;$/;"	v	file:
st_chatstate	src/st_stuff.c	/^static st_chatstateenum_t st_chatstate;$/;"	v	file:
st_chatstateenum_t	src/st_stuff.h	/^} st_chatstateenum_t;$/;"	t	typeref:enum:__anon325
st_clock	src/st_stuff.c	/^static unsigned int st_clock;$/;"	v	file:
st_cursoron	src/st_stuff.c	/^static dboolean st_cursoron;$/;"	v	file:
st_facecount	src/st_stuff.c	/^static int      st_facecount = 0;$/;"	v	file:
st_faceindex	src/st_stuff.c	/^static int      st_faceindex = 0;$/;"	v	file:
st_firsttime	src/st_stuff.c	/^static dboolean st_firsttime;$/;"	v	file:
st_fragscount	src/st_stuff.c	/^static int      st_fragscount;$/;"	v	file:
st_fragson	src/st_stuff.c	/^static dboolean st_fragson;$/;"	v	file:
st_gamestate	src/st_stuff.c	/^static st_stateenum_t st_gamestate;$/;"	v	file:
st_msgcounter	src/st_stuff.c	/^static int st_msgcounter=0;$/;"	v	file:
st_multicon_t	src/st_lib.h	/^} st_multicon_t;$/;"	t	typeref:struct:__anon322
st_notdeathmatch	src/st_stuff.c	/^static dboolean st_notdeathmatch;$/;"	v	file:
st_number_t	src/st_lib.h	/^} st_number_t;$/;"	t	typeref:struct:__anon320
st_oldchat	src/st_stuff.c	/^static dboolean st_oldchat;$/;"	v	file:
st_oldhealth	src/st_stuff.c	/^static int      st_oldhealth = -1;$/;"	v	file:
st_palette	src/st_stuff.c	/^int st_palette = 0;$/;"	v
st_percent_t	src/st_lib.h	/^} st_percent_t;$/;"	t	typeref:struct:__anon321
st_randomnumber	src/st_stuff.c	/^static int      st_randomnumber;$/;"	v	file:
st_stateenum_t	src/st_stuff.h	/^} st_stateenum_t;$/;"	t	typeref:enum:__anon324
st_statusbaron	src/st_stuff.c	/^static dboolean st_statusbaron;$/;"	v	file:
st_stopped	src/st_stuff.c	/^static dboolean st_stopped = true;$/;"	v	file:
stack_free	src/PCRELIB/pcretest.c	/^static void stack_free(void *block)$/;"	f	file:
stack_malloc	src/PCRELIB/pcretest.c	/^static void *stack_malloc(size_t size)$/;"	f	file:
stacksave	src/PCRELIB/pcre_exec.c	3453;"	d	file:
stacksave	src/PCRELIB/pcre_exec.c	488;"	d	file:
stair_e	src/p_spec.h	/^} stair_e;$/;"	t	typeref:enum:__anon256
stairlock	src/r_defs.h	/^  int stairlock;   \/\/ -2 on first locked -1 after thinker done 0 normally$/;"	m	struct:__anon283
standard_iwads	src/d_main.c	/^const char *const standard_iwads[]=$/;"	v
star	src/wi_stuff.c	/^static const char star[] = {"STFST01"};$/;"	v	file:
start	src/gl_clipper.c	/^  angle_t start, end;$/;"	m	struct:clipnode_s	file:
start	src/r_fps.h	/^  unsigned int start;$/;"	m	struct:__anon302
start_bits	src/PCRELIB/pcre_internal.h	/^  uschar start_bits[32];$/;"	m	struct:pcre_study_data
start_code	src/PCRELIB/pcre_internal.h	/^  const uschar *start_code;     \/* For use when recursing *\/$/;"	m	struct:match_data
start_code	src/PCRELIB/pcre_internal.h	/^  const uschar *start_code;     \/* Start of the compiled pattern *\/$/;"	m	struct:dfa_match_data
start_code	src/PCRELIB/pcre_internal.h	/^  const uschar *start_code;     \/* The start of the compiled code *\/$/;"	m	struct:compile_data
start_displaytime	src/SDL/i_system.c	/^static unsigned int start_displaytime;$/;"	v	file:
start_match	src/PCRELIB/pcre.h	/^  int          start_match;       \/* Offset to start of this match attempt *\/$/;"	m	struct:pcre_callout_block
start_match	src/PCRELIB/pcre_internal.h	/^  USPTR  start_match;           \/* Start of this match attempt *\/$/;"	m	struct:match_data
start_offset	src/PCRELIB/pcre_internal.h	/^  int    start_offset;          \/* The start offset value *\/$/;"	m	struct:match_data
start_pattern	src/PCRELIB/pcre_internal.h	/^  const uschar *start_pattern;  \/* The start of the pattern *\/$/;"	m	struct:compile_data
start_sound_at_volume	src/s_sound.c	/^static void start_sound_at_volume(mobj_t *origin, int sfx_id, int volume) {$/;"	f	file:
start_subject	src/PCRELIB/pcre_internal.h	/^  USPTR  start_subject;         \/* Start of the subject string *\/$/;"	m	struct:match_data
start_subject	src/PCRELIB/pcre_internal.h	/^  const uschar *start_subject;  \/* Start of the subject string *\/$/;"	m	struct:dfa_match_data
startepisode	src/d_main.c	/^int     startepisode;$/;"	v
startfrac	src/r_defs.h	/^  fixed_t startfrac;           \/\/ horizontal position of x1$/;"	m	struct:vissprite_s
starting_input	src/TEXTSCREEN/examples/calculator.c	/^int starting_input = 0;$/;"	v
startmap	src/d_main.c	/^int     startmap;$/;"	v
startname	src/p_spec.c	/^  char        startname[9];$/;"	m	struct:__anon235	file:
startskill	src/d_main.c	/^skill_t startskill;$/;"	v
starttic	src/d_ipxgate.c	/^    byte                starttic;$/;"	m	struct:a	file:
starttic	src/d_net.h	/^    byte                starttic;$/;"	m	struct:__anon23
starttime	src/SDL/i_sound.c	/^  int starttime;                \/\/ Time\/gametic that the channel started$/;"	m	struct:__anon313	file:
starttime	src/g_game.c	/^int             starttime;     \/\/ for comparative timing purposes$/;"	v
startup1	src/d_deh.c	/^const char *startup1     = "";  \/\/ blank lines are default and are not printed$/;"	v
startup2	src/d_deh.c	/^const char *startup2     = "";$/;"	v
startup3	src/d_deh.c	/^const char *startup3     = "";$/;"	v
startup4	src/d_deh.c	/^const char *startup4     = "";$/;"	v
startup5	src/d_deh.c	/^const char *startup5     = "";$/;"	v
startup_t	src/d_net.h	/^} startup_t;$/;"	t	typeref:struct:__anon24
startx	src/r_draw.c	/^static int    startx = 0;$/;"	v	file:
stat	src/e6y.h	/^  int stat[TT_MAX];$/;"	m	struct:timetable_s
stat_settings	src/m_menu.c	/^setup_menu_t* stat_settings[] =$/;"	v
stat_settings1	src/m_menu.c	/^setup_menu_t stat_settings1[] =  \/\/ Status Bar and HUD Settings screen$/;"	v
stat_settings1	src/m_menu.c	/^setup_menu_t stat_settings1[];$/;"	v
stat_settings2	src/m_menu.c	/^setup_menu_t stat_settings2[] =$/;"	v
stat_settings2	src/m_menu.c	/^setup_menu_t stat_settings2[];$/;"	v
state	src/MUSIC/dbopl.h	/^  Bit8u state;$/;"	m	struct:_Operator
state	src/e6y.h	/^  dboolean state;$/;"	m	struct:prboom_comp_s
state	src/p_mobj.h	/^    state_t*            state;$/;"	m	struct:mobj_s
state	src/p_pspr.h	/^  state_t *state;       \/* a NULL state means not active *\/$/;"	m	struct:__anon226
state	src/wi_stuff.c	/^  int   state;$/;"	m	struct:__anon348	file:
state	src/wi_stuff.c	/^static stateenum_t  state;$/;"	v	file:
state_data_buffer_queue	src/n_state.c	/^static GQueue *state_data_buffer_queue = NULL;$/;"	v	file:
state_is_old	src/n_state.c	/^static gboolean state_is_old(gpointer key, gpointer value, gpointer user_data) {$/;"	f	file:
state_t	src/info.h	/^} state_t;$/;"	t	typeref:struct:__anon136
stateblock	src/PCRELIB/pcre_dfa_exec.c	/^typedef struct stateblock {$/;"	s	file:
stateblock	src/PCRELIB/pcre_dfa_exec.c	/^} stateblock;$/;"	t	typeref:struct:stateblock	file:
stateenum_t	src/wi_stuff.h	/^} stateenum_t;$/;"	t	typeref:enum:__anon349
statenum_t	src/info.h	/^} statenum_t;$/;"	t	typeref:enum:__anon135
states	src/info.c	/^state_t states[NUMSTATES] = {$/;"	v
staticFileName	src/e6y_launcher.c	/^  HWND staticFileName;$/;"	m	struct:__anon68	file:
stats	src/e6y.c	/^timetable_t *stats = NULL;$/;"	v
stats_level	src/e6y.c	/^int stats_level;$/;"	v
status	src/m_menu.h	/^  short status; \/\/ 0 = no cursor here, 1 = ok, 2 = arrows ok$/;"	m	struct:menuitem_s
status	src/p_spec.h	/^  plat_e status;$/;"	m	struct:__anon266
stbarbg	src/st_stuff.c	/^static patchnum_t stbarbg;$/;"	v	file:
stderrPath	src/SDL/SDL_win32_main.c	/^  static char stderrPath[MAX_PATH];$/;"	v	file:
stderrPath	src/SDL/SDL_win32_main.c	/^  static wchar_t stderrPath[MAX_PATH];$/;"	v	file:
stderrdumpname	src/i_capture.c	/^  const char *stderrdumpname;$/;"	m	struct:__anon128	file:
stdin_name	src/PCRELIB/pcregrep.c	/^static char *stdin_name = (char *)"(standard input)";$/;"	v	file:
stdoutPath	src/SDL/SDL_win32_main.c	/^  static char stdoutPath[MAX_PATH];$/;"	v	file:
stdoutPath	src/SDL/SDL_win32_main.c	/^  static wchar_t stdoutPath[MAX_PATH];$/;"	v	file:
stdoutdumpname	src/i_capture.c	/^  const char *stdoutdumpname;$/;"	m	struct:__anon128	file:
step	src/SDL/i_sound.c	/^  unsigned int step;            \/\/ The channel step amount...$/;"	m	struct:__anon313	file:
step	src/TEXTSCREEN/txt_spinctrl.h	/^    union { float f; int i; } min, max, *value, step; $/;"	m	struct:txt_spincontrol_s	typeref:union:txt_spincontrol_s::__anon335
step	src/r_fps.h	/^  unsigned int step;$/;"	m	struct:__anon302
stepdir	src/r_data.c	/^  short stepdir;         \/\/ unused in Doom but might be used in Phase 2 Boom$/;"	m	struct:__anon277	file:
stepremainder	src/SDL/i_sound.c	/^  unsigned int stepremainder;   \/\/ ... and a 0.16 bit remainder of last step.$/;"	m	struct:__anon313	file:
steptable	src/SDL/i_sound.c	/^int steptable[256];         \/\/ Pitch to stepping lookup, unused.$/;"	v
stime	src/d_player.h	/^  int         stime;$/;"	m	struct:__anon60
stop	src/MUSIC/musicplayer.h	/^  void (*stop)(void);$/;"	m	struct:__anon177
stop_chan	src/SDL/i_sound.c	/^static void stop_chan(int i) {$/;"	f	file:
stop_channel	src/s_sound.c	/^static void stop_channel(channel_t *c) {$/;"	f	file:
stopped	src/am_map.c	/^static dboolean stopped = true;$/;"	v	file:
stored_euid	src/SDL/i_main.c	/^uid_t stored_euid = -1;$/;"	v
str_att_a	src/gl_struct.h	/^  const char *str_att_a;$/;"	m	struct:motion_blur_params_s
str_att_b	src/gl_struct.h	/^  const char *str_att_b;$/;"	m	struct:motion_blur_params_s
str_att_c	src/gl_struct.h	/^  const char *str_att_c;$/;"	m	struct:motion_blur_params_s
str_min_angle	src/gl_struct.h	/^  const char *str_min_angle;$/;"	m	struct:motion_blur_params_s
str_min_speed	src/gl_struct.h	/^  const char *str_min_speed;$/;"	m	struct:motion_blur_params_s
str_size	src/cmp.h	/^  uint32_t  str_size;$/;"	m	union:cmp_object_data_u
strace	src/p_sight.c	/^  divline_t strace;                \/\/ from t1 to t2$/;"	m	struct:__anon234	file:
strafecount	src/p_mobj.h	/^    short               strafecount;    \/\/ killough 9\/8\/98: monster strafing$/;"	m	struct:mobj_s
strcasecmp	src/doomtype.h	72;"	d
strdup	src/z_zone.h	174;"	d
strdup	src/z_zone.h	180;"	d
strerror	src/PCRELIB/pcregrep.c	/^strerror(int n)$/;"	f
stretch_param_s	src/v_video.h	/^typedef struct stretch_param_s$/;"	s
stretch_param_t	src/v_video.h	/^} stretch_param_t;$/;"	t	typeref:struct:stretch_param_s
stretch_params	src/v_video.c	/^stretch_param_t *stretch_params;$/;"	v
stretch_params_table	src/v_video.c	/^stretch_param_t stretch_params_table[3][VPT_ALIGN_MAX];$/;"	v
stricmp	src/MAC/config.h	100;"	d
string_to_byte	src/n_net.c	55;"	d	file:
string_to_short	src/n_net.c	56;"	d	file:
strip_shorthand_marker	src/c_main.c	/^static const char* strip_shorthand_marker(const char *command) {$/;"	f	file:
strlcat	src/SDL/SDL_win32_main.c	/^size_t strlcat(char *dst, const char *src, size_t maxlen)$/;"	f
strlcpy	src/SDL/SDL_win32_main.c	/^size_t strlcpy(char *dst, const char *src, size_t maxlen)$/;"	f
strncasecmp	src/doomtype.h	73;"	d
strncmp	src/PCRELIB/pcre_internal.h	176;"	d
strnicmp	src/MAC/config.h	101;"	d
strobe_t	src/p_spec.h	/^} strobe_t;$/;"	t	typeref:struct:__anon264
strrtrm	src/e6y_launcher.c	/^char *strrtrm (char *str)$/;"	f
sts_always_red	src/st_lib.c	/^int sts_always_red;      \/\/jff 2\/18\/98 control to disable status color changes$/;"	v
sts_pct_always_gray	src/st_lib.c	/^int sts_pct_always_gray; \/\/ killough 2\/21\/98: always gray %'s? bug or feature?$/;"	v
sts_traditional_keys	src/st_stuff.c	/^int sts_traditional_keys; \/\/ killough 2\/28\/98: traditional status bar keys$/;"	v
study_data	src/PCRELIB/pcre.h	/^  void *study_data;               \/* Opaque data from pcre_study() *\/$/;"	m	struct:pcre_extra
subframe	src/SDL/i_system.c	/^static int subframe = 0;$/;"	v	file:
subject	src/PCRELIB/pcre.h	/^  PCRE_SPTR    subject;           \/* The subject being matched *\/$/;"	m	struct:pcre_callout_block
subject_length	src/PCRELIB/pcre.h	/^  int          subject_length;    \/* The length of the subject *\/$/;"	m	struct:pcre_callout_block
subsector	src/p_mobj.h	/^    struct subsector_s* subsector;$/;"	m	struct:mobj_s	typeref:struct:mobj_s::subsector_s
subsector_s	src/r_defs.h	/^typedef struct subsector_s$/;"	s
subsector_t	src/r_defs.h	/^} subsector_t;$/;"	t	typeref:struct:subsector_s
subsectorloops	src/gl_preprocess.c	/^GLMapSubsector *subsectorloops;$/;"	v
subsectors	src/p_setup.c	/^subsector_t *subsectors;$/;"	v
sucks	src/wi_stuff.c	/^static const char sucks[] = {"WISUCKS"};$/;"	v	file:
suffix	src/PCRELIB/pcregrep.c	/^static const char *suffix[] = {$/;"	v	file:
surface	src/i_video.h	/^  PSDL_Surface surface;$/;"	m	struct:vid_8ingl_s
sustain	src/MUSIC/oplplayer.c	/^    byte sustain;$/;"	m	struct:__anon194	file:
sustainLevel	src/MUSIC/dbopl.h	/^  Bit32s sustainLevel;    \/\/When stopping at sustain level stop here$/;"	m	struct:_Operator
sv_cleanup_old_commands_and_states	src/n_main.c	/^static void sv_cleanup_old_commands_and_states(void) {$/;"	f	file:
sv_remove_old_commands	src/n_main.c	/^static void sv_remove_old_commands(void) {$/;"	f	file:
sv_remove_old_states	src/n_main.c	/^static void sv_remove_old_states(void) {$/;"	f	file:
swap	src/v_video.c	/^static void swap(unsigned int *num1, unsigned int *num2)$/;"	f	file:
switchPosts	src/r_patch.c	/^static void switchPosts(rpost_t *post1, rpost_t *post2) {$/;"	f	file:
switchlist	src/p_switch.c	/^static int *switchlist;                           \/\/ killough$/;"	v	file:
switchlist_t	src/p_spec.h	/^} PACKEDATTR switchlist_t; \/\/jff 3\/23\/98 pack to read from memory$/;"	t	typeref:struct:__anon260
sx	src/p_pspr.h	/^  fixed_t sx;$/;"	m	struct:__anon226
sy	src/p_pspr.h	/^  fixed_t sy;$/;"	m	struct:__anon226
sync	src/n_peer.h	/^  netsync_t     sync;$/;"	m	struct:netpeer_s
sync_queue	src/n_peer.h	/^  GQueue *sync_queue;$/;"	m	struct:command_queue_s
synthHandler	src/MUSIC/dbopl.h	/^  SynthHandler synthHandler;$/;"	m	struct:_Channel
sysex	src/MUSIC/midifile.h	/^        midi_sysex_event_data_t sysex;$/;"	m	union:__anon191::__anon192
sysexbuff	src/MUSIC/flplayer.c	/^static unsigned char sysexbuff[SYSEX_BUFF_SIZE];$/;"	v	file:
sysexbuff	src/MUSIC/portmidiplayer.c	/^static unsigned char sysexbuff[SYSEX_BUFF_SIZE];$/;"	v	file:
sysexbufflen	src/MUSIC/flplayer.c	/^static int sysexbufflen = 0;$/;"	v	file:
sysexbufflen	src/MUSIC/portmidiplayer.c	/^static int sysexbufflen;$/;"	v	file:
szConName	src/lprintf.c	/^char szConName[] = "PrBoomConWinClass";$/;"	v
t	src/gl_intern.h	/^  GLfloat t[4][2];$/;"	m	struct:gl_strip_coords_s
t2x	src/p_sight.c	/^  fixed_t sightzstart, t2x, t2y;   \/\/ eye z of looker$/;"	m	struct:__anon234	file:
t2y	src/p_sight.c	/^  fixed_t sightzstart, t2x, t2y;   \/\/ eye z of looker$/;"	m	struct:__anon234	file:
table	src/TEXTSCREEN/txt_window.h	/^    txt_table_t table;$/;"	m	struct:txt_window_s
tables	src/PCRELIB/pcre.h	/^  const unsigned char *tables;    \/* Pointer to character tables *\/$/;"	m	struct:pcre_extra
tables	src/PCRELIB/pcre_internal.h	/^  const unsigned char *tables;    \/* Pointer to tables or NULL for std *\/$/;"	m	struct:real_pcre
tables	src/PCRELIB/pcre_internal.h	/^  const uschar *tables;         \/* Character tables *\/$/;"	m	struct:dfa_match_data
tables_length	src/PCRELIB/pcre_internal.h	927;"	d
tag	src/doomdata.h	/^  short tag;$/;"	m	struct:__anon31
tag	src/doomdata.h	/^  short tag;$/;"	m	struct:__anon32
tag	src/p_spec.h	/^  int tag;$/;"	m	struct:__anon266
tag	src/p_spec.h	/^  int tag;$/;"	m	struct:__anon268
tag	src/r_defs.h	/^  short tag;$/;"	m	struct:__anon283
tag	src/r_defs.h	/^  short tag;$/;"	m	struct:line_s
tag	src/z_bmalloc.h	/^  int    tag;$/;"	m	struct:block_memory_alloc_s
tag	src/z_zone.c	/^  unsigned char tag;$/;"	m	struct:memblock	file:
tag_detail_e	src/gl_detail.c	/^} tag_detail_e;$/;"	t	typeref:enum:__anon72	file:
tallnum	src/st_stuff.c	/^static patchnum_t tallnum[10];$/;"	v	file:
tallpercent	src/st_stuff.c	/^static patchnum_t tallpercent;$/;"	v	file:
tallscreen	src/v_video.c	/^dboolean tallscreen;$/;"	v
tan_pitch	src/e6y.c	/^float tan_pitch;$/;"	v
tantoangle	src/tables.c	/^angle_t tantoangle[2049];$/;"	v
target	src/p_mobj.h	/^    struct mobj_s*      target;$/;"	m	struct:mobj_s	typeref:struct:mobj_s::mobj_s
target_screen_x	src/hu_stuff.h	/^  float target_screen_x, target_screen_y;$/;"	m	struct:crosshair_s
target_screen_y	src/hu_stuff.h	/^  float target_screen_x, target_screen_y;$/;"	m	struct:crosshair_s
target_sprite	src/hu_stuff.h	/^  int target_x, target_y, target_z, target_sprite;$/;"	m	struct:crosshair_s
target_x	src/hu_stuff.h	/^  int target_x, target_y, target_z, target_sprite;$/;"	m	struct:crosshair_s
target_y	src/hu_stuff.h	/^  int target_x, target_y, target_z, target_sprite;$/;"	m	struct:crosshair_s
target_z	src/hu_stuff.h	/^  int target_x, target_y, target_z, target_sprite;$/;"	m	struct:crosshair_s
targeton	src/p_enemy.h	/^  int easy, targeton;$/;"	m	struct:brain_s
tasdoom_compatibility	src/doomtype.h	/^  tasdoom_compatibility,     \/* TASDoom *\/$/;"	e	enum:__anon57
tc_ceiling	src/p_saveg.c	/^  tc_ceiling,$/;"	e	enum:__anon230	file:
tc_door	src/p_saveg.c	/^  tc_door,$/;"	e	enum:__anon230	file:
tc_elevator	src/p_saveg.c	/^  tc_elevator,    \/\/jff 2\/22\/98 new elevator type thinker$/;"	e	enum:__anon230	file:
tc_end	src/p_saveg.c	/^  tc_end,$/;"	e	enum:__anon229	file:
tc_endspecials	src/p_saveg.c	/^  tc_endspecials$/;"	e	enum:__anon230	file:
tc_flash	src/p_saveg.c	/^  tc_flash,$/;"	e	enum:__anon230	file:
tc_flicker	src/p_saveg.c	/^  tc_flicker,     \/\/ killough 10\/4\/98$/;"	e	enum:__anon230	file:
tc_floor	src/p_saveg.c	/^  tc_floor,$/;"	e	enum:__anon230	file:
tc_glow	src/p_saveg.c	/^  tc_glow,$/;"	e	enum:__anon230	file:
tc_mobj	src/p_saveg.c	/^  tc_mobj$/;"	e	enum:__anon229	file:
tc_plat	src/p_saveg.c	/^  tc_plat,$/;"	e	enum:__anon230	file:
tc_pusher	src/p_saveg.c	/^  tc_pusher,      \/\/ phares 3\/22\/98:  new push\/pull effect thinker$/;"	e	enum:__anon230	file:
tc_scroll	src/p_saveg.c	/^  tc_scroll,      \/\/ killough 3\/7\/98: new scroll effect thinker$/;"	e	enum:__anon230	file:
tc_strobe	src/p_saveg.c	/^  tc_strobe,$/;"	e	enum:__anon230	file:
team	src/d_player.h	/^  byte    team;$/;"	m	struct:player_s
telefrag	src/p_map.c	/^static dboolean telefrag;   \/* killough 8\/9\/98: whether to telefrag at exit *\/$/;"	v	file:
temp_x	src/r_draw.c	/^static int    temp_x = 0;$/;"	v	file:
tempbuf	src/c_main.c	/^static GString *tempbuf = NULL;$/;"	v	file:
tempbuf_echo	src/c_main.c	/^static void tempbuf_echo(const char *message) {$/;"	f	file:
tempbuf_mecho	src/c_main.c	/^static void tempbuf_mecho(const char *message) {$/;"	f	file:
tempbuf_mvprintf	src/c_main.c	/^static void tempbuf_mvprintf(const char *fmt, va_list args) {$/;"	f	file:
tempbuf_mwrite	src/c_main.c	/^static void tempbuf_mwrite(const char *message) {$/;"	f	file:
tempbuf_vprintf	src/c_main.c	/^static void tempbuf_vprintf(const char *fmt, va_list args) {$/;"	f	file:
tempbuf_write	src/c_main.c	/^static void tempbuf_write(const char *message) {$/;"	f	file:
tempfuzzmap	src/r_draw.c	/^static const byte   *tempfuzzmap;$/;"	v	file:
tempstring	src/m_menu.c	/^char tempstring[80];$/;"	v
temptranmap	src/r_draw.c	/^static const byte *temptranmap = NULL;$/;"	v	file:
temptype	src/r_draw.c	/^static int    temptype = COL_NONE;$/;"	v	file:
tempyh	src/r_draw.c	/^static int    tempyl[4], tempyh[4];$/;"	v	file:
tempyl	src/r_draw.c	/^static int    tempyl[4], tempyh[4];$/;"	v	file:
tex_filter	src/gl_texture.c	/^tex_filter_t tex_filter[MIP_COUNT];$/;"	v
tex_filter_s	src/gl_intern.h	/^typedef struct tex_filter_s$/;"	s
tex_filter_t	src/gl_intern.h	/^} tex_filter_t;$/;"	t	typeref:struct:tex_filter_s
tex_height	src/gl_intern.h	/^  int tex_width,tex_height;$/;"	m	struct:__anon89
tex_id	src/gl_struct.h	/^  GLuint tex_id;$/;"	m	struct:am_icon_s
tex_id	src/gl_struct.h	/^  GLuint tex_id;$/;"	m	struct:shadow_params_s
tex_mode_e	src/gl_opengl.h	/^} tex_mode_e;$/;"	t	typeref:enum:__anon110
tex_width	src/gl_intern.h	/^  int tex_width,tex_height;$/;"	m	struct:__anon89
texel_length	src/r_defs.h	/^  float texel_length;$/;"	m	struct:line_s
texflags	src/gl_intern.h	/^  unsigned int texflags[CR_LIMIT+MAXPLAYERS][PLAYERCOLORMAP_COUNT];$/;"	m	struct:__anon89
texflags_p	src/gl_intern.h	/^  unsigned int *texflags_p;$/;"	m	struct:__anon89
texheight	src/r_draw.h	/^  int                 texheight;    \/\/ killough$/;"	m	struct:draw_column_vars_s
texid	src/gl_intern.h	/^  GLuint texid;$/;"	m	struct:detail_s
texid	src/i_video.h	/^  GLuint texid;$/;"	m	struct:vid_8ingl_s
texid_p	src/gl_intern.h	/^  GLuint *texid_p;$/;"	m	struct:__anon89
texpatch_t	src/r_data.h	/^} texpatch_t;$/;"	t	typeref:struct:__anon279
textbox_value	src/TEXTSCREEN/examples/guitest.c	/^char *textbox_value = NULL;$/;"	v
texture	src/gl_intern.h	/^  GLTexture texture[6];$/;"	m	struct:box_skybox_s
texture	src/p_spec.h	/^  short texture;$/;"	m	struct:__anon268
texture	src/p_spec.h	/^  short texture;$/;"	m	struct:__anon269
texture_composites	src/r_patch.c	/^static rpatch_t *texture_composites = 0;$/;"	v	file:
texture_num	src/gl_intern.h	/^  int texture_num;$/;"	m	struct:detail_s
texture_t	src/r_data.h	/^} texture_t;$/;"	t	typeref:struct:__anon280
textureheight	src/r_data.c	/^fixed_t   *textureheight; \/\/needed for texture pegging (and TFE fix - killough)$/;"	v
texturemid	src/r_defs.h	/^  fixed_t texturemid;$/;"	m	struct:vissprite_s
texturemid	src/r_draw.h	/^  fixed_t             texturemid;$/;"	m	struct:draw_column_vars_s
textureoffset	src/doomdata.h	/^  short textureoffset;$/;"	m	struct:__anon30
textureoffset	src/r_defs.h	/^  fixed_t textureoffset; \/\/ add this to the calculated texture column$/;"	m	struct:__anon284
textures	src/r_data.c	/^texture_t **textures; \/\/ proff - 04\/05\/2000 removed static for OpenGL$/;"	v
texturetranslation	src/r_data.c	/^int       *texturetranslation;$/;"	v
textype	src/gl_intern.h	/^  GLTexType textype;$/;"	m	struct:__anon89
texu	src/r_draw.h	/^  fixed_t             texu; \/\/ the current column u coord$/;"	m	struct:draw_column_vars_s
texw	src/gl_sky.c	/^static int texw;$/;"	v	file:
th_all	src/p_tick.h	/^  th_all = NUMTHCLASS, \/* For P_NextThinker, indicates "any class" *\/$/;"	e	enum:__anon276
th_class	src/p_tick.h	/^} th_class;$/;"	t	typeref:enum:__anon276
th_delete	src/p_tick.h	/^  th_delete,$/;"	e	enum:__anon276
th_enemies	src/p_tick.h	/^  th_enemies,$/;"	e	enum:__anon276
th_friends	src/p_tick.h	/^  th_friends,$/;"	e	enum:__anon276
th_misc	src/p_tick.h	/^  th_misc,$/;"	e	enum:__anon276
thing	src/p_maputl.h	/^    mobj_t* thing;$/;"	m	union:__anon222::__anon223
thinglist	src/r_defs.h	/^  mobj_t *thinglist;     \/\/ list of mobjs in sector$/;"	m	struct:__anon283
think_t	src/d_think.h	/^typedef actionf_t  think_t;$/;"	t
thinker	src/hu_stuff.h	/^  thinker_t thinker;$/;"	m	struct:message_thinker_s
thinker	src/p_mobj.h	/^    thinker_t           thinker;$/;"	m	struct:mobj_s
thinker	src/p_spec.h	/^  thinker_t thinker;   \/\/ Thinker structure for Pusher$/;"	m	struct:__anon274
thinker	src/p_spec.h	/^  thinker_t thinker;   \/\/ Thinker structure for friction$/;"	m	struct:__anon273
thinker	src/p_spec.h	/^  thinker_t thinker;   \/\/ Thinker structure for scrolling$/;"	m	struct:__anon271
thinker	src/p_spec.h	/^  thinker_t thinker;$/;"	m	struct:__anon262
thinker	src/p_spec.h	/^  thinker_t thinker;$/;"	m	struct:__anon263
thinker	src/p_spec.h	/^  thinker_t thinker;$/;"	m	struct:__anon264
thinker	src/p_spec.h	/^  thinker_t thinker;$/;"	m	struct:__anon265
thinker	src/p_spec.h	/^  thinker_t thinker;$/;"	m	struct:__anon266
thinker	src/p_spec.h	/^  thinker_t thinker;$/;"	m	struct:__anon267
thinker	src/p_spec.h	/^  thinker_t thinker;$/;"	m	struct:__anon268
thinker	src/p_spec.h	/^  thinker_t thinker;$/;"	m	struct:__anon269
thinker	src/p_spec.h	/^  thinker_t thinker;$/;"	m	struct:__anon270
thinker	src/r_defs.h	/^  thinker_t thinker;  \/\/ not used for anything$/;"	m	struct:__anon282
thinker_s	src/d_think.h	/^typedef struct thinker_s$/;"	s
thinker_t	src/d_think.h	/^} thinker_t;$/;"	t	typeref:struct:thinker_s
thinkercap	src/p_tick.h	60;"	d
thinkerclass_t	src/p_saveg.c	/^} thinkerclass_t;$/;"	t	typeref:enum:__anon229	file:
thinkerclasscap	src/p_tick.c	/^thinker_t thinkerclasscap[th_all + 1];$/;"	v
thintriangle_guy	src/am_map.c	/^mline_t thintriangle_guy[] =$/;"	v
thisframe	src/PCRELIB/pcre_internal.h	/^  struct heapframe *thisframe;  \/* Used only when compiling for no recursion *\/$/;"	m	struct:match_data	typeref:struct:match_data::heapframe
thread	src/i_capture.c	/^  HANDLE thread;$/;"	m	struct:__anon129	file:
threaddata_t	src/i_capture.c	/^} threaddata_t;$/;"	t	typeref:struct:__anon131	file:
threadstderrproc	src/i_capture.c	/^static int threadstderrproc (void *data)$/;"	f	file:
threadstdoutproc	src/i_capture.c	/^static int threadstdoutproc (void *data)$/;"	f	file:
threshold	src/p_mobj.h	/^    short               threshold;$/;"	m	struct:mobj_s
tic	src/d_ipxgate.c	/^  signed int tic;$/;"	m	struct:__anon18	file:
tic	src/n_net.h	/^  int      tic;$/;"	m	struct:netticcmd_s
tic	src/n_peer.h	/^  int                tic;$/;"	m	struct:netsync_s
tic	src/n_state.h	/^  int     tic;$/;"	m	struct:game_state_s
tic	src/protocol.h	/^  unsigned tic;        \/\/ Timestamp$/;"	m	struct:__anon228
tic	src/s_sound.c	/^  int tic;             \/\/ TIC at which this sound was started$/;"	m	struct:__anon319	file:
tic_vars	src/r_fps.c	/^tic_vars_t tic_vars;$/;"	v
tic_vars_t	src/r_fps.h	/^} tic_vars_t;$/;"	t	typeref:struct:__anon302
ticcmd_t	src/d_ticcmd.h	/^} ticcmd_t;$/;"	t	typeref:struct:__anon63
ticdup	src/d_client.c	/^static int ticdup = 1;$/;"	v	file:
ticdup	src/d_net.h	/^    short               ticdup;$/;"	m	struct:__anon27
ticdup	src/protocol.h	/^  byte players, yourplayer, skill, episode, level, deathmatch, complevel, ticdup, extratic;$/;"	m	struct:setup_packet_s
tick	src/r_demo.c	/^  size_t tick;$/;"	m	struct:__anon292	file:
ticks	src/hu_stuff.h	/^  int ticks;$/;"	m	struct:custom_message_s
ticks_per_beat	src/MUSIC/oplplayer.c	/^    unsigned int ticks_per_beat;$/;"	m	struct:__anon198	file:
tics	src/info.h	/^  long        tics;         \/* number of gametics this frame should last   *\/$/;"	m	struct:__anon136
tics	src/p_mobj.h	/^    int                 tics;   \/\/ state tic counter$/;"	m	struct:mobj_s
tics	src/p_pspr.h	/^  int     tics;$/;"	m	struct:__anon226
tics	src/s_advsound.h	/^  int tics;$/;"	m	struct:musinfo_s
time	src/MUSIC/opl_queue.c	/^    unsigned int time;$/;"	m	struct:__anon182	file:
time1	src/wi_stuff.c	/^static const char time1[] = {"WITIME"};$/;"	v	file:
time_division	src/MUSIC/midifile.c	/^    unsigned short time_division;$/;"	m	struct:__anon180	file:
timer1	src/MUSIC/opl.c	/^static opl_timer_t timer1 = { 12500, 0, 0, 0 };$/;"	v	file:
timer2	src/MUSIC/opl.c	/^static opl_timer_t timer2 = { 3125, 0, 0, 0 };$/;"	v	file:
timetable_s	src/e6y.h	/^typedef struct timetable_s$/;"	s
timetable_t	src/e6y.h	/^} timetable_t;$/;"	t	typeref:struct:timetable_s
timingdemo	src/g_game.c	/^dboolean        timingdemo;    \/\/ if true, exit with report on completion$/;"	v
title	src/TEXTSCREEN/txt_window.h	/^    char *title;$/;"	m	struct:txt_window_s
tmbbox	src/g_overflow.h	/^  fixed_t *tmbbox;$/;"	m	struct:spechit_overrun_param_s
tmbbox	src/p_map.c	/^fixed_t   tmbbox[4];  \/\/ bounding box for line intersection checks$/;"	v
tmceilingz	src/g_overflow.h	/^  fixed_t *tmceilingz;$/;"	m	struct:spechit_overrun_param_s
tmceilingz	src/p_map.c	/^fixed_t   tmceilingz; \/\/ ceiling of sector you're in$/;"	v
tmdropoffz	src/p_map.c	/^fixed_t   tmdropoffz; \/\/ dropoff on other side of line you're crossing$/;"	v
tmfloorz	src/g_overflow.h	/^  fixed_t *tmfloorz;$/;"	m	struct:spechit_overrun_param_s
tmfloorz	src/p_map.c	/^fixed_t   tmfloorz;   \/\/ floor you'd hit if free to fall$/;"	v
tmpdata_s	src/e6y.c	/^typedef struct tmpdata_s$/;"	s	file:
tmpdata_t	src/e6y.c	/^} tmpdata_t;$/;"	t	typeref:struct:tmpdata_s	file:
tmpusher	src/p_spec.c	/^pusher_t* tmpusher; \/\/ pusher structure for blockmap searches$/;"	v
tmthing	src/p_map.c	/^static mobj_t    *tmthing;$/;"	v	file:
tmunstuck	src/p_map.c	/^static int    tmunstuck;     \/* killough 8\/1\/98: whether to allow unsticking *\/$/;"	v	file:
tmx	src/p_map.c	/^static fixed_t   tmx;$/;"	v	file:
tmxmove	src/p_map.c	/^static fixed_t   tmxmove;$/;"	v	file:
tmy	src/p_map.c	/^static fixed_t   tmy;$/;"	v	file:
tmymove	src/p_map.c	/^static fixed_t   tmymove;$/;"	v	file:
to_byte	src/n_net.c	53;"	d	file:
to_short	src/n_net.c	54;"	d	file:
to_tic	src/n_state.h	/^  int   to_tic;$/;"	m	struct:game_state_delta_s
toc	src/n_peer.h	/^  GArray *toc;$/;"	m	struct:netchan_s
tocentry_s	src/n_peer.c	/^typedef struct tocentry_s {$/;"	s	file:
tocentry_t	src/n_peer.c	/^} tocentry_t;$/;"	t	typeref:struct:tocentry_s	file:
toggleUpDn	src/p_spec.h	/^  toggleUpDn,   \/\/jff 3\/14\/98 added to support instant toggle type$/;"	e	enum:__anon252
toorough	src/m_menu.c	/^  toorough,$/;"	e	enum:__anon153	file:
top	src/p_spec.h	/^    top,$/;"	e	enum:__anon258
top	src/r_defs.h	/^  unsigned short top[3];$/;"	m	struct:visplane
top_backref	src/PCRELIB/pcre_internal.h	/^  int  top_backref;             \/* Maximum back reference *\/$/;"	m	struct:compile_data
top_backref	src/PCRELIB/pcre_internal.h	/^  pcre_uint16 top_backref;$/;"	m	struct:real_pcre
top_bracket	src/PCRELIB/pcre_internal.h	/^  pcre_uint16 top_bracket;$/;"	m	struct:real_pcre
topcountdown	src/p_spec.h	/^  int topcountdown;$/;"	m	struct:__anon267
topdelta	src/r_patch.c	/^  byte topdelta; \/\/ -1 is the last post in a column$/;"	m	struct:__anon304	file:
topdelta	src/r_patch.h	/^  int topdelta;$/;"	m	struct:__anon309
topfrac	src/r_segs.c	/^static fixed_t  topfrac;$/;"	v	file:
topheight	src/p_spec.h	/^  fixed_t topheight;$/;"	m	struct:__anon267
topheight	src/p_spec.h	/^  fixed_t topheight;$/;"	m	struct:__anon268
topmap	src/r_defs.h	/^  int bottommap, midmap, topmap; \/\/ killough 4\/4\/98: dynamic colormaps$/;"	m	struct:__anon283
topoffset	src/gl_intern.h	/^  int leftoffset,topoffset;$/;"	m	struct:__anon89
topoffset	src/r_defs.h	/^  int leftoffset,topoffset;$/;"	m	struct:__anon289
topoffset	src/r_patch.c	/^  short topoffset;      \/\/ pixels below the origin$/;"	m	struct:__anon305	file:
topoffset	src/r_patch.h	/^  int topoffset;$/;"	m	struct:__anon311
topslope	src/p_map.c	/^static fixed_t  topslope;$/;"	v	file:
topslope	src/p_sight.c	/^  fixed_t topslope, bottomslope;   \/\/ slopes to top and bottom of target$/;"	m	struct:__anon234	file:
topslope	src/p_sight.c	/^fixed_t topslope, bottomslope;  \/\/ slopes to top and bottom of target$/;"	v
topstep	src/r_segs.c	/^static fixed_t  topstep;$/;"	v	file:
toptable1	src/PCRELIB/pcre_dfa_exec.c	/^static uschar toptable1[] = {$/;"	v	file:
toptable2	src/PCRELIB/pcre_dfa_exec.c	/^static uschar toptable2[] = {$/;"	v	file:
toptexheight	src/r_segs.c	/^static fixed_t  toptexheight, midtexheight, bottomtexheight; \/\/ cph$/;"	v	file:
toptexture	src/doomdata.h	/^  char  toptexture[8];$/;"	m	struct:__anon30
toptexture	src/r_defs.h	/^  short toptexture;      \/\/ Texture indices. We do not maintain names here.$/;"	m	struct:__anon284
toptexture	src/r_segs.c	/^static int      toptexture;$/;"	v	file:
topwait	src/p_spec.h	/^  int topwait;$/;"	m	struct:__anon267
total	src/wi_stuff.c	/^static const char total[] = {"WIMSTT"};$/;"	v	file:
totalLevel	src/MUSIC/dbopl.h	/^  Bit32s totalLevel;      \/\/totalLevel is added to every generated volume$/;"	m	struct:_Operator
totalitems	src/g_game.c	/^int             totalkills, totallive, totalitems, totalsecret;    \/\/ for intermission$/;"	v
totalkills	src/g_game.c	/^int             totalkills, totallive, totalitems, totalsecret;    \/\/ for intermission$/;"	v
totalleveltimes	src/g_game.c	/^int             totalleveltimes;      \/\/ CPhipps - total time for all completed levels$/;"	v
totallive	src/g_game.c	/^int             totalkills, totallive, totalitems, totalsecret;    \/\/ for intermission$/;"	v
totalsecret	src/g_game.c	/^int             totalkills, totallive, totalitems, totalsecret;    \/\/ for intermission$/;"	v
totaltimes	src/d_player.h	/^  int         totaltimes;$/;"	m	struct:__anon61
touching_sectorlist	src/p_mobj.h	/^    struct msecnode_s* touching_sectorlist;                 \/\/ phares 3\/14\/98$/;"	m	struct:mobj_s	typeref:struct:mobj_s::msecnode_s
touching_thinglist	src/r_defs.h	/^  struct msecnode_s *touching_thinglist;               \/\/ phares 3\/14\/98$/;"	m	struct:__anon283	typeref:struct:__anon283::msecnode_s
trace	src/p_maputl.c	/^divline_t trace;$/;"	v
traceitem_t	src/hu_tracers.h	/^} traceitem_t;$/;"	t	typeref:struct:__anon127
tracer	src/p_mobj.h	/^    struct mobj_s*      tracer;$/;"	m	struct:mobj_s	typeref:struct:mobj_s::mobj_s
tracer_mapthing_t	src/hu_tracers.c	/^} PACKEDATTR tracer_mapthing_t;$/;"	t	typeref:struct:__anon125	file:
tracertype_t	src/hu_tracers.h	/^} tracertype_t;$/;"	t	typeref:enum:__anon126
traces	src/hu_tracers.c	/^traceslist_t traces[NUMTRACES];$/;"	v
traces_present	src/hu_tracers.c	/^dboolean traces_present;$/;"	v
traceslist_s	src/hu_tracers.h	/^typedef struct traceslist_s$/;"	s
traceslist_t	src/hu_tracers.h	/^} traceslist_t;$/;"	t	typeref:struct:traceslist_s
traceslistinit_s	src/hu_tracers.h	/^typedef struct traceslistinit_s$/;"	s
traceslistinit_t	src/hu_tracers.h	/^} traceslistinit_t;$/;"	t	typeref:struct:traceslistinit_s
track	src/MUSIC/midifile.c	/^    midi_track_t *track;$/;"	m	struct:midi_track_iter_s	file:
tracks	src/MUSIC/midifile.c	/^    midi_track_t *tracks;$/;"	m	struct:midi_file_s	file:
tracks	src/MUSIC/oplplayer.c	/^static opl_track_data_t *tracks;$/;"	v	file:
tracksize	src/mus2mid.c	/^static unsigned int tracksize;$/;"	v	file:
trackstart	src/MUSIC/portmidiplayer.c	/^static unsigned long trackstart;$/;"	v	file:
tran_filter_pct	src/r_data.c	/^int tran_filter_pct = 66;       \/\/ filter percent$/;"	v
tranlump	src/r_defs.h	/^  int tranlump;          \/\/ killough 4\/11\/98: translucency filter, -1 == none$/;"	m	struct:line_s
tranmap	src/r_draw.c	/^const byte *tranmap;          \/\/ translucency filter maps 256x256   \/\/ phares$/;"	v
translation	src/r_draw.h	/^  const byte          *translation;$/;"	m	struct:draw_column_vars_s
translationtables	src/r_draw.c	/^byte *translationtables;$/;"	v
transparent_pal_index	src/gl_texture.c	/^int transparent_pal_index;$/;"	v
transparentpresent	src/e6y.c	/^dboolean transparentpresent;$/;"	v
traverser_t	src/p_maputl.h	/^typedef dboolean (*traverser_t)(intercept_t *in);$/;"	t
tremolo	src/MUSIC/oplplayer.c	/^    byte tremolo;$/;"	m	struct:__anon194	file:
tremoloIndex	src/MUSIC/dbopl.h	/^  Bit8u tremoloIndex;$/;"	m	struct:_Chip
tremoloMask	src/MUSIC/dbopl.h	/^  Bit8u tremoloMask;$/;"	m	struct:_Operator
tremoloStrength	src/MUSIC/dbopl.h	/^  Bit8u tremoloStrength;$/;"	m	struct:_Chip
tremoloValue	src/MUSIC/dbopl.h	/^  Bit8u tremoloValue;$/;"	m	struct:_Chip
triangulate_subsectors	src/gl_preprocess.c	/^static int triangulate_subsectors = 0;$/;"	v	file:
trigChangeOnly	src/p_spec.h	/^  trigChangeOnly,$/;"	e	enum:__anon250
triggertype_e	src/p_spec.h	/^} triggertype_e;$/;"	t	typeref:enum:__anon238
true	src/MAC/config.h	/^enum {false, true};$/;"	e	enum:__anon143
true	src/MUSIC/midifile.c	/^typedef enum {false, true} dboolean;$/;"	e	enum:__anon178	file:
true	src/doomtype.h	/^typedef enum {false, true} dboolean;$/;"	e	enum:__anon56
try_to_reduce_cpu_cache_misses	src/SDL/i_video.c	/^int try_to_reduce_cpu_cache_misses;$/;"	v
tsilheight	src/r_defs.h	/^  fixed_t tsilheight;                   \/\/ do not clip sprites below this$/;"	m	struct:drawseg_s
turbo16	src/p_spec.h	/^  turbo16 \/\/ quickly build by 16$/;"	e	enum:__anon256
turboLower	src/p_spec.h	/^  turboLower,$/;"	e	enum:__anon255
turnheld	src/g_game.c	/^static int turnheld;       \/\/ for accelerative turning$/;"	v	file:
twoSided	src/p_spec.c	/^int twoSided$/;"	f
txt_button_class	src/TEXTSCREEN/txt_button.c	/^txt_widget_class_t txt_button_class =$/;"	v
txt_button_s	src/TEXTSCREEN/txt_button.h	/^struct txt_button_s$/;"	s
txt_button_t	src/TEXTSCREEN/txt_button.h	/^typedef struct txt_button_s txt_button_t;$/;"	t	typeref:struct:txt_button_s
txt_callback_t	src/TEXTSCREEN/txt_widget.c	/^} txt_callback_t;$/;"	t	typeref:struct:__anon333	file:
txt_callback_table_s	src/TEXTSCREEN/txt_widget.c	/^struct txt_callback_table_s$/;"	s	file:
txt_callback_table_t	src/TEXTSCREEN/txt_widget.h	/^typedef struct txt_callback_table_s txt_callback_table_t;$/;"	t	typeref:struct:txt_callback_table_s
txt_checkbox_class	src/TEXTSCREEN/txt_checkbox.c	/^txt_widget_class_t txt_checkbox_class =$/;"	v
txt_checkbox_s	src/TEXTSCREEN/txt_checkbox.h	/^struct txt_checkbox_s$/;"	s
txt_checkbox_t	src/TEXTSCREEN/txt_checkbox.h	/^typedef struct txt_checkbox_s txt_checkbox_t;$/;"	t	typeref:struct:txt_checkbox_s
txt_cliparea_s	src/TEXTSCREEN/txt_gui.c	/^struct txt_cliparea_s$/;"	s	file:
txt_cliparea_t	src/TEXTSCREEN/txt_gui.c	/^typedef struct txt_cliparea_s txt_cliparea_t;$/;"	t	typeref:struct:txt_cliparea_s	file:
txt_color_t	src/TEXTSCREEN/txt_main.h	/^} txt_color_t;$/;"	t	typeref:enum:__anon336
txt_dropdown_list_class	src/TEXTSCREEN/txt_dropdown.c	/^txt_widget_class_t txt_dropdown_list_class =$/;"	v
txt_dropdown_list_s	src/TEXTSCREEN/txt_dropdown.h	/^struct txt_dropdown_list_s$/;"	s
txt_dropdown_list_t	src/TEXTSCREEN/txt_dropdown.h	/^typedef struct txt_dropdown_list_s txt_dropdown_list_t;$/;"	t	typeref:struct:txt_dropdown_list_s
txt_font_t	src/TEXTSCREEN/txt_sdl.c	/^} txt_font_t;$/;"	t	typeref:struct:__anon337	file:
txt_horiz_align_t	src/TEXTSCREEN/txt_widget.h	/^} txt_horiz_align_t;$/;"	t	typeref:enum:__anon330
txt_inputbox_class	src/TEXTSCREEN/txt_inputbox.c	/^txt_widget_class_t txt_inputbox_class =$/;"	v
txt_inputbox_s	src/TEXTSCREEN/txt_inputbox.h	/^struct txt_inputbox_s$/;"	s
txt_inputbox_t	src/TEXTSCREEN/txt_inputbox.h	/^typedef struct txt_inputbox_s txt_inputbox_t;$/;"	t	typeref:struct:txt_inputbox_s
txt_int_inputbox_class	src/TEXTSCREEN/txt_inputbox.c	/^txt_widget_class_t txt_int_inputbox_class =$/;"	v
txt_label_class	src/TEXTSCREEN/txt_label.c	/^txt_widget_class_t txt_label_class =$/;"	v
txt_label_s	src/TEXTSCREEN/txt_label.h	/^struct txt_label_s$/;"	s
txt_label_t	src/TEXTSCREEN/txt_label.h	/^typedef struct txt_label_s txt_label_t;$/;"	t	typeref:struct:txt_label_s
txt_radiobutton_class	src/TEXTSCREEN/txt_radiobutton.c	/^txt_widget_class_t txt_radiobutton_class =$/;"	v
txt_radiobutton_s	src/TEXTSCREEN/txt_radiobutton.h	/^struct txt_radiobutton_s$/;"	s
txt_radiobutton_t	src/TEXTSCREEN/txt_radiobutton.h	/^typedef struct txt_radiobutton_s txt_radiobutton_t;$/;"	t	typeref:struct:txt_radiobutton_s
txt_scrollpane_class	src/TEXTSCREEN/txt_scrollpane.c	/^txt_widget_class_t txt_scrollpane_class =$/;"	v
txt_scrollpane_s	src/TEXTSCREEN/txt_scrollpane.h	/^struct txt_scrollpane_s$/;"	s
txt_scrollpane_t	src/TEXTSCREEN/txt_scrollpane.h	/^typedef struct txt_scrollpane_s txt_scrollpane_t;$/;"	t	typeref:struct:txt_scrollpane_s
txt_separator_class	src/TEXTSCREEN/txt_separator.c	/^txt_widget_class_t txt_separator_class =$/;"	v
txt_separator_s	src/TEXTSCREEN/txt_separator.h	/^struct txt_separator_s$/;"	s
txt_separator_t	src/TEXTSCREEN/txt_separator.h	/^typedef struct txt_separator_s txt_separator_t;$/;"	t	typeref:struct:txt_separator_s
txt_spincontrol_class	src/TEXTSCREEN/txt_spinctrl.c	/^txt_widget_class_t txt_spincontrol_class =$/;"	v
txt_spincontrol_s	src/TEXTSCREEN/txt_spinctrl.h	/^struct txt_spincontrol_s$/;"	s
txt_spincontrol_t	src/TEXTSCREEN/txt_spinctrl.h	/^typedef struct txt_spincontrol_s txt_spincontrol_t;$/;"	t	typeref:struct:txt_spincontrol_s
txt_spincontrol_type_t	src/TEXTSCREEN/txt_spinctrl.h	/^} txt_spincontrol_type_t;$/;"	t	typeref:enum:__anon334
txt_strut_class	src/TEXTSCREEN/txt_strut.c	/^txt_widget_class_t txt_strut_class =$/;"	v
txt_strut_s	src/TEXTSCREEN/txt_strut.h	/^struct txt_strut_s$/;"	s
txt_strut_t	src/TEXTSCREEN/txt_strut.h	/^typedef struct txt_strut_s txt_strut_t;$/;"	t	typeref:struct:txt_strut_s
txt_table_class	src/TEXTSCREEN/txt_table.c	/^txt_widget_class_t txt_table_class =$/;"	v
txt_table_s	src/TEXTSCREEN/txt_table.h	/^struct txt_table_s$/;"	s
txt_table_t	src/TEXTSCREEN/txt_table.h	/^typedef struct txt_table_s txt_table_t;$/;"	t	typeref:struct:txt_table_s
txt_vert_align_t	src/TEXTSCREEN/txt_widget.h	/^} txt_vert_align_t;$/;"	t	typeref:enum:__anon329
txt_widget_class_s	src/TEXTSCREEN/txt_widget.h	/^struct txt_widget_class_s$/;"	s
txt_widget_class_t	src/TEXTSCREEN/txt_widget.h	/^typedef struct txt_widget_class_s txt_widget_class_t;$/;"	t	typeref:struct:txt_widget_class_s
txt_widget_s	src/TEXTSCREEN/txt_widget.h	/^struct txt_widget_s$/;"	s
txt_widget_t	src/TEXTSCREEN/txt_widget.h	/^typedef struct txt_widget_s txt_widget_t;$/;"	t	typeref:struct:txt_widget_s
txt_window_action_class	src/TEXTSCREEN/txt_window_action.c	/^txt_widget_class_t txt_window_action_class =$/;"	v
txt_window_action_s	src/TEXTSCREEN/txt_window_action.h	/^struct txt_window_action_s$/;"	s
txt_window_action_t	src/TEXTSCREEN/txt_window_action.h	/^typedef struct txt_window_action_s txt_window_action_t;$/;"	t	typeref:struct:txt_window_action_s
txt_window_s	src/TEXTSCREEN/txt_window.h	/^struct txt_window_s$/;"	s
txt_window_t	src/TEXTSCREEN/txt_window.h	/^typedef struct txt_window_s txt_window_t;$/;"	t	typeref:struct:txt_window_s
type	src/MUSIC/midifile.h	/^    unsigned int type;$/;"	m	struct:__anon188
type	src/PCRELIB/pcre_internal.h	/^  pcre_uint16 type;$/;"	m	struct:__anon212
type	src/PCRELIB/pcregrep.c	/^  int type;$/;"	m	struct:option_item	file:
type	src/TEXTSCREEN/txt_spinctrl.h	/^    txt_spincontrol_type_t type;$/;"	m	struct:txt_spincontrol_s
type	src/cmp.h	/^  int8_t type;$/;"	m	struct:cmp_ext_s
type	src/cmp.h	/^  uint8_t type;$/;"	m	struct:cmp_object_s
type	src/d_event.h	/^  evtype_t     type;$/;"	m	struct:__anon14
type	src/d_net.h	/^  netmisctype_t type;$/;"	m	struct:__anon26
type	src/doomdata.h	/^  short type;$/;"	m	struct:__anon42
type	src/e6y.h	/^  int type;$/;"	m	struct:camera_s
type	src/f_finale.c	/^  mobjtype_t   type;$/;"	m	struct:__anon70	file:
type	src/gl_intern.h	/^  unsigned int type;$/;"	m	struct:SkyBoxParams_s
type	src/m_misc.h	/^  } type; \/\/ CPhipps - type of entry$/;"	m	struct:default_s	typeref:enum:default_s::__anon171
type	src/n_peer.c	/^  unsigned char type;$/;"	m	struct:tocentry_s	file:
type	src/p_mobj.h	/^    mobjtype_t          type;$/;"	m	struct:mobj_s
type	src/p_spec.h	/^  ceiling_e type;$/;"	m	struct:__anon268
type	src/p_spec.h	/^  elevator_e type;$/;"	m	struct:__anon270
type	src/p_spec.h	/^  floor_e type;$/;"	m	struct:__anon269
type	src/p_spec.h	/^  plattype_e type;$/;"	m	struct:__anon266
type	src/p_spec.h	/^  vldoor_e type;$/;"	m	struct:__anon267
type	src/p_spec.h	/^  } type;              \/\/ Type of scroll effect$/;"	m	struct:__anon271	typeref:enum:__anon271::__anon272
type	src/p_spec.h	/^  } type;$/;"	m	struct:__anon274	typeref:enum:__anon274::__anon275
type	src/protocol.h	/^  byte type;           \/* Type of packet *\/$/;"	m	struct:__anon228
type	src/r_fps.c	/^  interpolation_type_e type;$/;"	m	struct:__anon301	file:
type	src/wi_stuff.c	/^  animenum_t  type;$/;"	m	struct:__anon348	file:
u	src/d_ipxgate.c	/^  } u;$/;"	m	struct:__anon18	typeref:union:__anon18::altu	file:
u	src/gl_intern.h	/^  GLfloat u;$/;"	m	struct:__anon98
u	src/gl_intern.h	/^  float u, v;$/;"	m	struct:vbo_vertex_s
u	src/gl_intern.h	/^  float u, v;$/;"	m	struct:vbo_xy_uv_rgba_s
u	src/gl_intern.h	/^  float u, v;$/;"	m	struct:vbo_xyz_uv_s
u1	src/gl_hires.c	/^  } u1;$/;"	m	struct:_DDRAW_H_DDPIXELFORMAT	typeref:union:_DDRAW_H_DDPIXELFORMAT::__anon74	file:
u1	src/gl_hires.c	/^  } u1;$/;"	m	struct:_DDRAW_H_DDSCAPS2	typeref:union:_DDRAW_H_DDSCAPS2::__anon73	file:
u1	src/gl_hires.c	/^  } u1;$/;"	m	struct:_DDRAW_H_DDSURFACEDESC2	typeref:union:_DDRAW_H_DDSURFACEDESC2::__anon80	file:
u16	src/cmp.h	/^  uint16_t  u16;$/;"	m	union:cmp_object_data_u
u2	src/gl_hires.c	/^  } u2;$/;"	m	struct:_DDRAW_H_DDPIXELFORMAT	typeref:union:_DDRAW_H_DDPIXELFORMAT::__anon75	file:
u2	src/gl_hires.c	/^  } u2;$/;"	m	struct:_DDRAW_H_DDSURFACEDESC2	typeref:union:_DDRAW_H_DDSURFACEDESC2::__anon82	file:
u3	src/gl_hires.c	/^  } u3;$/;"	m	struct:_DDRAW_H_DDPIXELFORMAT	typeref:union:_DDRAW_H_DDPIXELFORMAT::__anon76	file:
u3	src/gl_hires.c	/^  } u3;$/;"	m	struct:_DDRAW_H_DDSURFACEDESC2	typeref:union:_DDRAW_H_DDSURFACEDESC2::__anon83	file:
u32	src/cmp.h	/^  uint32_t  u32;$/;"	m	union:cmp_object_data_u
u4	src/gl_hires.c	/^  } u4;$/;"	m	struct:_DDRAW_H_DDPIXELFORMAT	typeref:union:_DDRAW_H_DDPIXELFORMAT::__anon78	file:
u4	src/gl_hires.c	/^  } u4;$/;"	m	struct:_DDRAW_H_DDSURFACEDESC2	typeref:union:_DDRAW_H_DDSURFACEDESC2::__anon84	file:
u5	src/gl_hires.c	/^  } u5;$/;"	m	struct:_DDRAW_H_DDPIXELFORMAT	typeref:union:_DDRAW_H_DDPIXELFORMAT::__anon79	file:
u5	src/gl_hires.c	/^  } u5;$/;"	m	struct:_DDRAW_H_DDSURFACEDESC2	typeref:union:_DDRAW_H_DDSURFACEDESC2::__anon81	file:
u64	src/cmp.h	/^  uint64_t  u64;$/;"	m	union:cmp_object_data_u
u8	src/cmp.h	/^  uint8_t   u8;$/;"	m	union:cmp_object_data_u
ucp_Arabic	src/PCRELIB/ucp.h	/^  ucp_Arabic,$/;"	e	enum:__anon208
ucp_Armenian	src/PCRELIB/ucp.h	/^  ucp_Armenian,$/;"	e	enum:__anon208
ucp_Bengali	src/PCRELIB/ucp.h	/^  ucp_Bengali,$/;"	e	enum:__anon208
ucp_Bopomofo	src/PCRELIB/ucp.h	/^  ucp_Bopomofo,$/;"	e	enum:__anon208
ucp_Braille	src/PCRELIB/ucp.h	/^  ucp_Braille,$/;"	e	enum:__anon208
ucp_Buginese	src/PCRELIB/ucp.h	/^  ucp_Buginese,$/;"	e	enum:__anon208
ucp_Buhid	src/PCRELIB/ucp.h	/^  ucp_Buhid,$/;"	e	enum:__anon208
ucp_C	src/PCRELIB/ucp.h	/^  ucp_C,     \/* Other *\/$/;"	e	enum:__anon206
ucp_Canadian_Aboriginal	src/PCRELIB/ucp.h	/^  ucp_Canadian_Aboriginal,$/;"	e	enum:__anon208
ucp_Cc	src/PCRELIB/ucp.h	/^  ucp_Cc,    \/* Control *\/$/;"	e	enum:__anon207
ucp_Cf	src/PCRELIB/ucp.h	/^  ucp_Cf,    \/* Format *\/$/;"	e	enum:__anon207
ucp_Cherokee	src/PCRELIB/ucp.h	/^  ucp_Cherokee,$/;"	e	enum:__anon208
ucp_Cn	src/PCRELIB/ucp.h	/^  ucp_Cn,    \/* Unassigned *\/$/;"	e	enum:__anon207
ucp_Co	src/PCRELIB/ucp.h	/^  ucp_Co,    \/* Private use *\/$/;"	e	enum:__anon207
ucp_Common	src/PCRELIB/ucp.h	/^  ucp_Common,$/;"	e	enum:__anon208
ucp_Coptic	src/PCRELIB/ucp.h	/^  ucp_Coptic,$/;"	e	enum:__anon208
ucp_Cs	src/PCRELIB/ucp.h	/^  ucp_Cs,    \/* Surrogate *\/$/;"	e	enum:__anon207
ucp_Cypriot	src/PCRELIB/ucp.h	/^  ucp_Cypriot,$/;"	e	enum:__anon208
ucp_Cyrillic	src/PCRELIB/ucp.h	/^  ucp_Cyrillic,$/;"	e	enum:__anon208
ucp_Deseret	src/PCRELIB/ucp.h	/^  ucp_Deseret,$/;"	e	enum:__anon208
ucp_Devanagari	src/PCRELIB/ucp.h	/^  ucp_Devanagari,$/;"	e	enum:__anon208
ucp_Ethiopic	src/PCRELIB/ucp.h	/^  ucp_Ethiopic,$/;"	e	enum:__anon208
ucp_Georgian	src/PCRELIB/ucp.h	/^  ucp_Georgian,$/;"	e	enum:__anon208
ucp_Glagolitic	src/PCRELIB/ucp.h	/^  ucp_Glagolitic,$/;"	e	enum:__anon208
ucp_Gothic	src/PCRELIB/ucp.h	/^  ucp_Gothic,$/;"	e	enum:__anon208
ucp_Greek	src/PCRELIB/ucp.h	/^  ucp_Greek,$/;"	e	enum:__anon208
ucp_Gujarati	src/PCRELIB/ucp.h	/^  ucp_Gujarati,$/;"	e	enum:__anon208
ucp_Gurmukhi	src/PCRELIB/ucp.h	/^  ucp_Gurmukhi,$/;"	e	enum:__anon208
ucp_Han	src/PCRELIB/ucp.h	/^  ucp_Han,$/;"	e	enum:__anon208
ucp_Hangul	src/PCRELIB/ucp.h	/^  ucp_Hangul,$/;"	e	enum:__anon208
ucp_Hanunoo	src/PCRELIB/ucp.h	/^  ucp_Hanunoo,$/;"	e	enum:__anon208
ucp_Hebrew	src/PCRELIB/ucp.h	/^  ucp_Hebrew,$/;"	e	enum:__anon208
ucp_Hiragana	src/PCRELIB/ucp.h	/^  ucp_Hiragana,$/;"	e	enum:__anon208
ucp_Inherited	src/PCRELIB/ucp.h	/^  ucp_Inherited,$/;"	e	enum:__anon208
ucp_Kannada	src/PCRELIB/ucp.h	/^  ucp_Kannada,$/;"	e	enum:__anon208
ucp_Katakana	src/PCRELIB/ucp.h	/^  ucp_Katakana,$/;"	e	enum:__anon208
ucp_Kharoshthi	src/PCRELIB/ucp.h	/^  ucp_Kharoshthi,$/;"	e	enum:__anon208
ucp_Khmer	src/PCRELIB/ucp.h	/^  ucp_Khmer,$/;"	e	enum:__anon208
ucp_L	src/PCRELIB/ucp.h	/^  ucp_L,     \/* Letter *\/$/;"	e	enum:__anon206
ucp_Lao	src/PCRELIB/ucp.h	/^  ucp_Lao,$/;"	e	enum:__anon208
ucp_Latin	src/PCRELIB/ucp.h	/^  ucp_Latin,$/;"	e	enum:__anon208
ucp_Limbu	src/PCRELIB/ucp.h	/^  ucp_Limbu,$/;"	e	enum:__anon208
ucp_Linear_B	src/PCRELIB/ucp.h	/^  ucp_Linear_B,$/;"	e	enum:__anon208
ucp_Ll	src/PCRELIB/ucp.h	/^  ucp_Ll,    \/* Lower case letter *\/$/;"	e	enum:__anon207
ucp_Lm	src/PCRELIB/ucp.h	/^  ucp_Lm,    \/* Modifier letter *\/$/;"	e	enum:__anon207
ucp_Lo	src/PCRELIB/ucp.h	/^  ucp_Lo,    \/* Other letter *\/$/;"	e	enum:__anon207
ucp_Lt	src/PCRELIB/ucp.h	/^  ucp_Lt,    \/* Title case letter *\/$/;"	e	enum:__anon207
ucp_Lu	src/PCRELIB/ucp.h	/^  ucp_Lu,    \/* Upper case letter *\/$/;"	e	enum:__anon207
ucp_M	src/PCRELIB/ucp.h	/^  ucp_M,     \/* Mark *\/$/;"	e	enum:__anon206
ucp_Malayalam	src/PCRELIB/ucp.h	/^  ucp_Malayalam,$/;"	e	enum:__anon208
ucp_Mc	src/PCRELIB/ucp.h	/^  ucp_Mc,    \/* Spacing mark *\/$/;"	e	enum:__anon207
ucp_Me	src/PCRELIB/ucp.h	/^  ucp_Me,    \/* Enclosing mark *\/$/;"	e	enum:__anon207
ucp_Mn	src/PCRELIB/ucp.h	/^  ucp_Mn,    \/* Non-spacing mark *\/$/;"	e	enum:__anon207
ucp_Mongolian	src/PCRELIB/ucp.h	/^  ucp_Mongolian,$/;"	e	enum:__anon208
ucp_Myanmar	src/PCRELIB/ucp.h	/^  ucp_Myanmar,$/;"	e	enum:__anon208
ucp_N	src/PCRELIB/ucp.h	/^  ucp_N,     \/* Number *\/$/;"	e	enum:__anon206
ucp_Nd	src/PCRELIB/ucp.h	/^  ucp_Nd,    \/* Decimal number *\/$/;"	e	enum:__anon207
ucp_New_Tai_Lue	src/PCRELIB/ucp.h	/^  ucp_New_Tai_Lue,$/;"	e	enum:__anon208
ucp_Nl	src/PCRELIB/ucp.h	/^  ucp_Nl,    \/* Letter number *\/$/;"	e	enum:__anon207
ucp_No	src/PCRELIB/ucp.h	/^  ucp_No,    \/* Other number *\/$/;"	e	enum:__anon207
ucp_Ogham	src/PCRELIB/ucp.h	/^  ucp_Ogham,$/;"	e	enum:__anon208
ucp_Old_Italic	src/PCRELIB/ucp.h	/^  ucp_Old_Italic,$/;"	e	enum:__anon208
ucp_Old_Persian	src/PCRELIB/ucp.h	/^  ucp_Old_Persian,$/;"	e	enum:__anon208
ucp_Oriya	src/PCRELIB/ucp.h	/^  ucp_Oriya,$/;"	e	enum:__anon208
ucp_Osmanya	src/PCRELIB/ucp.h	/^  ucp_Osmanya,$/;"	e	enum:__anon208
ucp_P	src/PCRELIB/ucp.h	/^  ucp_P,     \/* Punctuation *\/$/;"	e	enum:__anon206
ucp_Pc	src/PCRELIB/ucp.h	/^  ucp_Pc,    \/* Connector punctuation *\/$/;"	e	enum:__anon207
ucp_Pd	src/PCRELIB/ucp.h	/^  ucp_Pd,    \/* Dash punctuation *\/$/;"	e	enum:__anon207
ucp_Pe	src/PCRELIB/ucp.h	/^  ucp_Pe,    \/* Close punctuation *\/$/;"	e	enum:__anon207
ucp_Pf	src/PCRELIB/ucp.h	/^  ucp_Pf,    \/* Final punctuation *\/$/;"	e	enum:__anon207
ucp_Pi	src/PCRELIB/ucp.h	/^  ucp_Pi,    \/* Initial punctuation *\/$/;"	e	enum:__anon207
ucp_Po	src/PCRELIB/ucp.h	/^  ucp_Po,    \/* Other punctuation *\/$/;"	e	enum:__anon207
ucp_Ps	src/PCRELIB/ucp.h	/^  ucp_Ps,    \/* Open punctuation *\/$/;"	e	enum:__anon207
ucp_Runic	src/PCRELIB/ucp.h	/^  ucp_Runic,$/;"	e	enum:__anon208
ucp_S	src/PCRELIB/ucp.h	/^  ucp_S,     \/* Symbol *\/$/;"	e	enum:__anon206
ucp_Sc	src/PCRELIB/ucp.h	/^  ucp_Sc,    \/* Currency symbol *\/$/;"	e	enum:__anon207
ucp_Shavian	src/PCRELIB/ucp.h	/^  ucp_Shavian,$/;"	e	enum:__anon208
ucp_Sinhala	src/PCRELIB/ucp.h	/^  ucp_Sinhala,$/;"	e	enum:__anon208
ucp_Sk	src/PCRELIB/ucp.h	/^  ucp_Sk,    \/* Modifier symbol *\/$/;"	e	enum:__anon207
ucp_Sm	src/PCRELIB/ucp.h	/^  ucp_Sm,    \/* Mathematical symbol *\/$/;"	e	enum:__anon207
ucp_So	src/PCRELIB/ucp.h	/^  ucp_So,    \/* Other symbol *\/$/;"	e	enum:__anon207
ucp_Syloti_Nagri	src/PCRELIB/ucp.h	/^  ucp_Syloti_Nagri,$/;"	e	enum:__anon208
ucp_Syriac	src/PCRELIB/ucp.h	/^  ucp_Syriac,$/;"	e	enum:__anon208
ucp_Tagalog	src/PCRELIB/ucp.h	/^  ucp_Tagalog,$/;"	e	enum:__anon208
ucp_Tagbanwa	src/PCRELIB/ucp.h	/^  ucp_Tagbanwa,$/;"	e	enum:__anon208
ucp_Tai_Le	src/PCRELIB/ucp.h	/^  ucp_Tai_Le,$/;"	e	enum:__anon208
ucp_Tamil	src/PCRELIB/ucp.h	/^  ucp_Tamil,$/;"	e	enum:__anon208
ucp_Telugu	src/PCRELIB/ucp.h	/^  ucp_Telugu,$/;"	e	enum:__anon208
ucp_Thaana	src/PCRELIB/ucp.h	/^  ucp_Thaana,$/;"	e	enum:__anon208
ucp_Thai	src/PCRELIB/ucp.h	/^  ucp_Thai,$/;"	e	enum:__anon208
ucp_Tibetan	src/PCRELIB/ucp.h	/^  ucp_Tibetan,$/;"	e	enum:__anon208
ucp_Tifinagh	src/PCRELIB/ucp.h	/^  ucp_Tifinagh,$/;"	e	enum:__anon208
ucp_Ugaritic	src/PCRELIB/ucp.h	/^  ucp_Ugaritic,$/;"	e	enum:__anon208
ucp_Yi	src/PCRELIB/ucp.h	/^  ucp_Yi$/;"	e	enum:__anon208
ucp_Z	src/PCRELIB/ucp.h	/^  ucp_Z      \/* Separator *\/$/;"	e	enum:__anon206
ucp_Zl	src/PCRELIB/ucp.h	/^  ucp_Zl,    \/* Line separator *\/$/;"	e	enum:__anon207
ucp_Zp	src/PCRELIB/ucp.h	/^  ucp_Zp,    \/* Paragraph separator *\/$/;"	e	enum:__anon207
ucp_Zs	src/PCRELIB/ucp.h	/^  ucp_Zs     \/* Space separator *\/$/;"	e	enum:__anon207
ucp_gentype	src/PCRELIB/pcre_ucp_searchfuncs.c	/^static int ucp_gentype[] = {$/;"	v	file:
ucp_table	src/PCRELIB/ucptable.c	/^static cnode ucp_table[] = {$/;"	v	file:
ucp_type_table	src/PCRELIB/pcre_internal.h	/^} ucp_type_table;$/;"	t	typeref:struct:__anon212
udp_packet	src/SDL/i_network.c	/^UDP_PACKET *udp_packet;$/;"	v
udp_receive	src/d_ipxgate.c	/^void udp_receive(int s) {$/;"	f
udp_socket	src/SDL/i_network.c	/^UDP_SOCKET udp_socket;$/;"	v
udp_socket	src/d_ipxgate.c	/^int udp_socket(const char* ip) {$/;"	f
udps	src/d_ipxgate.c	/^int ipxs, udps;$/;"	v
uint_64_t	src/doomtype.h	/^typedef uint64_t uint_64_t;$/;"	t
uint_64_t	src/doomtype.h	/^typedef unsigned __int64 uint_64_t;$/;"	t
uint_64_t	src/doomtype.h	/^typedef unsigned long long uint_64_t;$/;"	t
ul	src/gl_intern.h	/^  float ul,ur,vt,vb;$/;"	m	struct:__anon91
ul	src/gl_intern.h	/^  float ul,ur;$/;"	m	struct:__anon102
ultdoom_compatibility	src/doomtype.h	/^  ultdoom_compatibility,   \/* Ultimate Doom and Doom95 *\/$/;"	e	enum:__anon57
ungreedy	src/PCRELIB/pcrecpp.h	/^  bool ungreedy() const {$/;"	f	class:pcrecpp::RE_Options
unknown	src/doomdef.h	/^  unknown$/;"	e	enum:__anon45
unpack_commands	src/n_pack.c	/^bool unpack_commands(pbuf_t *pbuf, netpeer_t *np) {$/;"	f
unregistersong	src/MUSIC/musicplayer.h	/^  void (*unregistersong)(const void *handle);$/;"	m	struct:__anon177
unreliable	src/n_peer.h	/^  netchan_t unreliable;$/;"	m	struct:netcom_s
untouched	src/p_map.c	/^static int untouched(line_t *ld)$/;"	f	file:
unused	src/MUSIC/oplplayer.c	/^    byte unused;$/;"	m	struct:__anon195	file:
unused_block	src/z_bmalloc.c	/^  unused_block = 0,$/;"	e	enum:__anon359	file:
uoffs	src/gl_intern.h	/^  float uoffs,voffs; \/\/ the texture coordinates$/;"	m	struct:__anon93
up	src/p_spec.h	/^  up,$/;"	e	enum:__anon251
update_sound	src/SDL/i_sound.c	/^static void update_sound(void *unused, Uint8 *stream, int len) {$/;"	f	file:
update_sound_params	src/SDL/i_sound.c	/^static void update_sound_params(int handle, int volume, int separation, int pitch) {$/;"	f	file:
upmove	src/g_game.c	/^int             upmove;$/;"	v
upstate	src/d_items.h	/^  int         upstate;$/;"	m	struct:__anon19
ur	src/gl_intern.h	/^  float ul,ur,vt,vb;$/;"	m	struct:__anon91
ur	src/gl_intern.h	/^  float ul,ur;$/;"	m	struct:__anon102
usage	src/PCRELIB/pcregrep.c	/^usage(int rc)$/;"	f	file:
uschar	src/PCRELIB/pcre_internal.h	/^typedef unsigned char uschar;$/;"	t
use_boom_cm	src/r_main.c	/^dboolean use_boom_cm;$/;"	v
use_demoex_info	src/r_demo.c	/^dboolean use_demoex_info = false;$/;"	v
use_doublebuffer	src/SDL/i_video.c	/^int use_doublebuffer = 0;$/;"	v
use_doublebuffer	src/SDL/i_video.c	/^int use_doublebuffer = 1; \/\/ Included not to break m_misc, but not relevant to SDL$/;"	v
use_experimental_music	src/SDL/i_sound.c	/^int use_experimental_music = -1;$/;"	v
use_fog	src/gl_main.c	/^dboolean use_fog=false;$/;"	v
use_fullscreen	src/SDL/i_video.c	/^int use_fullscreen;$/;"	v
use_gl_surface	src/SDL/i_video.c	/^int use_gl_surface;$/;"	v
use_hwgamma	src/gl_light.c	/^  int use_hwgamma;$/;"	m	struct:__anon106	file:
use_smp	src/i_smp.c	/^int use_smp;$/;"	v
use_smp_default	src/i_smp.c	/^int use_smp_default;$/;"	v
use_texture	src/gl_sky.c	/^  int use_texture;$/;"	m	struct:__anon111	file:
use_utf8	src/PCRELIB/pcretest.c	/^static int use_utf8;$/;"	v	file:
used	src/z_bmalloc.c	/^  byte               used[0];$/;"	m	struct:bmalpool_s	file:
used_block	src/z_bmalloc.c	/^  used_block = 1$/;"	e	enum:__anon359	file:
usedown	src/d_player.h	/^  int                 usedown;$/;"	m	struct:player_s
usefulness	src/sounds.h	/^  int usefulness;$/;"	m	struct:sfxinfo_struct
usegamma	src/v_video.c	/^int usegamma;$/;"	v
useglgamma	src/gl_gamma.c	/^int useglgamma;$/;"	v
usejoystick	src/SDL/i_joy.c	/^int usejoystick;$/;"	v
usemouse	src/m_misc.c	/^int usemouse;$/;"	v
user	src/i_capture.c	/^  void *user;$/;"	m	struct:__anon128	file:
user	src/r_things.c	/^  drawseg_t *user;$/;"	m	struct:drawseg_xrange_item_s	file:
user	src/z_zone.c	/^  void **user;$/;"	m	struct:memblock	file:
user_data	src/TEXTSCREEN/txt_widget.c	/^    void *user_data;$/;"	m	struct:__anon333	file:
user_data	src/TEXTSCREEN/txt_widget.h	/^                       TxtWidgetSignalFunc func, void *user_data);$/;"	v
user_data	src/TEXTSCREEN/txt_widget.h	/^typedef void (*TxtWidgetSignalFunc)(TXT_UNCAST_ARG(widget), void *user_data);$/;"	t
usergame	src/g_game.c	/^dboolean        usergame;      \/\/ ok to save \/ end game$/;"	v
usething	src/p_map.c	/^mobj_t *usething;$/;"	v
utf8	src/PCRELIB/pcre_internal.h	/^  BOOL   utf8;                  \/* UTF8 flag *\/$/;"	m	struct:match_data
utf8	src/PCRELIB/pcrecpp.h	/^  bool utf8() const {$/;"	f	class:pcrecpp::RE_Options
utf82ord	src/PCRELIB/pcretest.c	/^utf82ord(unsigned char *utf8bytes, int *vptr)$/;"	f	file:
v	src/gl_intern.h	/^  GLfloat v;$/;"	m	struct:__anon98
v	src/gl_intern.h	/^  GLfloat v[4][3];$/;"	m	struct:gl_strip_coords_s
v	src/gl_intern.h	/^  float u, v;$/;"	m	struct:vbo_vertex_s
v	src/gl_intern.h	/^  float u, v;$/;"	m	struct:vbo_xy_uv_rgba_s
v	src/gl_intern.h	/^  float u, v;$/;"	m	struct:vbo_xyz_uv_s
v	src/gl_map.c	/^  vbo_xy_uv_rgba_t v[4];$/;"	m	struct:map_nice_thing_s	file:
v1	src/doomdata.h	/^  int v1;$/;"	m	struct:__anon37
v1	src/doomdata.h	/^  unsigned int v1, v2;$/;"	m	struct:__anon38
v1	src/doomdata.h	/^  unsigned short v1;$/;"	m	struct:__anon31
v1	src/doomdata.h	/^  unsigned short v1;$/;"	m	struct:__anon36
v1	src/p_setup.c	/^  unsigned short  v1;    \/\/ start vertex    (16 bit)$/;"	m	struct:__anon231	file:
v1	src/r_defs.h	/^  vertex_t *v1, *v2;     \/\/ Vertices, from v1 to v2.$/;"	m	struct:line_s
v1	src/r_defs.h	/^  vertex_t *v1, *v2;$/;"	m	struct:__anon287
v2	src/doomdata.h	/^  int v2;$/;"	m	struct:__anon37
v2	src/doomdata.h	/^  unsigned int v1, v2;$/;"	m	struct:__anon38
v2	src/doomdata.h	/^  unsigned short v2;$/;"	m	struct:__anon31
v2	src/doomdata.h	/^  unsigned short v2;$/;"	m	struct:__anon36
v2	src/p_setup.c	/^  unsigned short  v2;    \/\/ end vertex      (16 bit)$/;"	m	struct:__anon231	file:
v2	src/r_defs.h	/^  vertex_t *v1, *v2;     \/\/ Vertices, from v1 to v2.$/;"	m	struct:line_s
v2	src/r_defs.h	/^  vertex_t *v1, *v2;$/;"	m	struct:__anon287
va_copy	src/lprintf.c	342;"	d	file:
va_copy	src/lprintf.c	344;"	d	file:
val	src/hu_lib.h	/^  int   val;$/;"	m	struct:__anon121
val	src/st_lib.h	/^  dboolean*    val;$/;"	m	struct:__anon323
validcount	src/gl_missingtexture.c	/^  int validcount;   \/\/ finding of the best sector in the group only once in tic$/;"	m	struct:__anon108	file:
validcount	src/gl_vertex.c	/^  byte validcount;$/;"	m	struct:vertexsplit_info_s	file:
validcount	src/p_mobj.h	/^    int                 validcount;$/;"	m	struct:mobj_s
validcount	src/r_defs.h	/^  int validcount;        \/\/ if == validcount, already checked$/;"	m	struct:__anon283
validcount	src/r_defs.h	/^  int validcount;        \/\/ if == validcount, already checked$/;"	m	struct:line_s
validcount	src/r_main.c	/^int validcount = 1;         \/\/ increment every time a check is made$/;"	v
value	src/MUSIC/opl.c	/^    unsigned int value;       \/\/ Last value that was set.$/;"	m	struct:__anon183	file:
value	src/PCRELIB/pcre_internal.h	/^  pcre_uint16 value;$/;"	m	struct:__anon212
value	src/TEXTSCREEN/txt_inputbox.h	/^    void *value;$/;"	m	struct:txt_inputbox_s
value	src/TEXTSCREEN/txt_radiobutton.h	/^    int value;$/;"	m	struct:txt_radiobutton_s
value	src/TEXTSCREEN/txt_spinctrl.h	/^    union { float f; int i; } min, max, *value, step; $/;"	m	struct:txt_spincontrol_s	typeref:union:txt_spincontrol_s::__anon335
value	src/d_deh.c	/^  uint_64_t value;$/;"	m	struct:deh_mobjflags_s	file:
value	src/d_net.h	/^  byte value[sizeof(ticcmd_t)*BACKUPTICS - sizeof(netmisctype_t) - sizeof(size_t)];$/;"	m	struct:__anon26
value	src/hu_tracers.h	/^  char value[16];$/;"	m	struct:__anon127
value	src/m_avg.h	/^  int value;$/;"	m	struct:avg_s
value_label	src/TEXTSCREEN/examples/guitest.c	/^txt_label_t *value_label;$/;"	v
values	src/TEXTSCREEN/txt_dropdown.h	/^    char **values;$/;"	m	struct:txt_dropdown_list_s
var	src/m_menu.h	/^    const void          *var;   \/* generic variable *\/$/;"	m	union:setup_menu_s::__anon167
var	src/m_menu.h	/^  } var;$/;"	m	struct:setup_menu_s	typeref:union:setup_menu_s::__anon167
variable	src/TEXTSCREEN/txt_checkbox.h	/^    int *variable;$/;"	m	struct:txt_checkbox_s
variable	src/TEXTSCREEN/txt_dropdown.h	/^    int *variable;$/;"	m	struct:txt_dropdown_list_s
variable	src/TEXTSCREEN/txt_radiobutton.h	/^    int *variable;$/;"	m	struct:txt_radiobutton_s
variable_friction	src/d_net.h	/^  byte variable_friction;$/;"	m	struct:__anon24
variable_friction	src/doomstat.c	/^int  variable_friction = 1;      \/\/ ice & mud               \/\/ phares 3\/10\/98$/;"	v
vb	src/gl_intern.h	/^  float ul,ur,vt,vb;$/;"	m	struct:__anon91
vb	src/gl_intern.h	/^  float vt,vb;$/;"	m	struct:__anon102
vbo_vertex_s	src/gl_intern.h	/^typedef struct vbo_vertex_s$/;"	s
vbo_vertex_t	src/gl_intern.h	/^} PACKEDATTR vbo_vertex_t;$/;"	t	typeref:struct:vbo_vertex_s
vbo_xy_uv_rgba_s	src/gl_intern.h	/^typedef struct vbo_xy_uv_rgba_s$/;"	s
vbo_xy_uv_rgba_t	src/gl_intern.h	/^} PACKEDATTR vbo_xy_uv_rgba_t;$/;"	t	typeref:struct:vbo_xy_uv_rgba_s
vbo_xyz_uv_s	src/gl_intern.h	/^typedef struct vbo_xyz_uv_s$/;"	s
vbo_xyz_uv_t	src/gl_intern.h	/^} PACKEDATTR vbo_xyz_uv_t;$/;"	t	typeref:struct:vbo_xyz_uv_s
vcallback	src/MUSIC/vorbisplayer.c	/^ov_callbacks vcallback =$/;"	v
vdx	src/p_spec.h	/^  fixed_t vdx, vdy;    \/\/ Accumulated velocity if accelerative$/;"	m	struct:__anon271
vdy	src/p_spec.h	/^  fixed_t vdx, vdy;    \/\/ Accumulated velocity if accelerative$/;"	m	struct:__anon271
ver_printf	src/g_save.c	/^  const char* ver_printf;$/;"	m	struct:__anon120	file:
verbose	src/d_server.c	/^int verbose;$/;"	v
version	src/PCRELIB/pcre.h	/^  int          version;           \/* Identifies version of block *\/$/;"	m	struct:pcre_callout_block
version	src/cmp.c	/^static const uint32_t version = 3;$/;"	v	file:
version	src/g_save.c	/^  int version;$/;"	m	struct:__anon120	file:
version_date	src/version.c	/^const char version_date[] = __DATE__ " " __TIME__;$/;"	v
version_headers	src/g_save.c	/^} version_headers[] = {$/;"	v	typeref:struct:__anon120	file:
vert_align	src/TEXTSCREEN/txt_window.h	/^    txt_vert_align_t vert_align;$/;"	m	struct:txt_window_s
vertex_t	src/r_defs.h	/^} vertex_t;$/;"	t	typeref:struct:__anon281
vertexcount	src/gl_intern.h	/^  int vertexcount; \/\/ number of vertexes in this loop$/;"	m	struct:__anon94
vertexcount	src/gl_sky.c	/^  int vertexcount;$/;"	m	struct:__anon111	file:
vertexes	src/p_setup.c	/^vertex_t *vertexes;$/;"	v
vertexindex	src/gl_intern.h	/^  int vertexindex; \/\/ index into vertex list$/;"	m	struct:__anon94
vertexindex	src/gl_sky.c	/^  int vertexindex;$/;"	m	struct:__anon111	file:
vertexsplit_info_s	src/gl_vertex.c	/^typedef struct vertexsplit_info_s$/;"	s	file:
vertexsplit_info_t	src/gl_vertex.c	/^} vertexsplit_info_t;$/;"	t	typeref:struct:vertexsplit_info_s	file:
veryfirsttime	src/st_stuff.c	/^static int veryfirsttime = 1;$/;"	v	file:
vf	src/MUSIC/vorbisplayer.c	/^OggVorbis_File vf;$/;"	v
vibStrength	src/MUSIC/dbopl.h	/^  Bit8u vibStrength;$/;"	m	struct:_Operator
vibrato	src/MUSIC/dbopl.h	/^  Bit32u vibrato;       \/\/Scaled up vibrato strength$/;"	m	struct:_Operator
vibratoIndex	src/MUSIC/dbopl.h	/^  Bit8u vibratoIndex;$/;"	m	struct:_Chip
vibratoShift	src/MUSIC/dbopl.h	/^  Bit8u vibratoShift;$/;"	m	struct:_Chip
vibratoSign	src/MUSIC/dbopl.h	/^  Bit8s vibratoSign;$/;"	m	struct:_Chip
vibratoStrength	src/MUSIC/dbopl.h	/^  Bit8u vibratoStrength;$/;"	m	struct:_Chip
victims	src/wi_stuff.c	/^static const char victims[] = {"WIVCTMS"};$/;"	v	file:
vid_8ingl	src/SDL/i_video.c	/^vid_8ingl_t vid_8ingl;$/;"	v
vid_8ingl_s	src/i_video.h	/^typedef struct vid_8ingl_s$/;"	s
vid_8ingl_t	src/i_video.h	/^} vid_8ingl_t;$/;"	t	typeref:struct:vid_8ingl_s
vid_fname	src/i_capture.c	/^static const char *vid_fname;$/;"	v	file:
video	src/v_video.c	/^cb_video_t video;$/;"	v
video	src/v_video.h	/^  cb_video_t *video;$/;"	m	struct:stretch_param_s
video_full	src/v_video.c	/^cb_video_t video_full;$/;"	v
video_mode_t	src/v_video.h	/^} video_mode_t;$/;"	t	typeref:enum:__anon343
video_stretch	src/v_video.c	/^cb_video_t video_stretch;$/;"	v
videomodes	src/m_menu.c	/^static const char *videomodes[] = {"32bit", "OpenGL", NULL};$/;"	v	file:
videopipe	src/i_capture.c	/^static pipeinfo_t videopipe;$/;"	v	file:
viewPitch	src/e6y.c	/^float viewPitch;$/;"	v
viewangle	src/r_defs.h	/^  angle_t viewangle;   \/\/ e6y: precalculated angle for clipping$/;"	m	struct:__anon281
viewangle	src/r_main.c	/^angle_t  viewangle;$/;"	v
viewangleoffset	src/r_main.c	/^int viewangleoffset;$/;"	v
viewangletox	src/r_main.c	/^int viewangletox[FINEANGLES\/2];$/;"	v
viewcos	src/r_main.c	/^fixed_t  viewcos, viewsin;$/;"	v
viewfocratio	src/r_main.c	/^float viewfocratio;$/;"	v
viewheight	src/d_player.h	/^  fixed_t             viewheight;$/;"	m	struct:player_s
viewheight	src/r_draw.c	/^int  viewheight;$/;"	v
viewheightfrac	src/r_main.c	/^fixed_t  viewheightfrac; \/\/e6y: for correct cliping of things$/;"	v
viewimage	src/r_draw.c	/^byte *viewimage;$/;"	v
viewpitch	src/e6y.c	/^angle_t viewpitch;$/;"	v
viewplayer	src/r_main.c	/^player_t *viewplayer;$/;"	v
viewport	src/r_main.c	/^int viewport[4];$/;"	v
viewsin	src/r_main.c	/^fixed_t  viewcos, viewsin;$/;"	v
viewwidth	src/r_draw.c	/^int  viewwidth;$/;"	v
viewwindowx	src/r_draw.c	/^int  viewwindowx;$/;"	v
viewwindowy	src/r_draw.c	/^int  viewwindowy;$/;"	v
viewx	src/r_main.c	/^fixed_t  viewx, viewy, viewz;$/;"	v
viewy	src/r_main.c	/^fixed_t  viewx, viewy, viewz;$/;"	v
viewz	src/d_player.h	/^  fixed_t             viewz;$/;"	m	struct:player_s
viewz	src/r_main.c	/^fixed_t  viewx, viewy, viewz;$/;"	v
vileobj	src/p_enemy.c	/^mobj_t* vileobj;$/;"	v
viletryx	src/p_enemy.c	/^fixed_t viletryx;$/;"	v
viletryy	src/p_enemy.c	/^fixed_t viletryy;$/;"	v
violence	src/m_menu.c	/^  violence,$/;"	e	enum:__anon153	file:
visible	src/TEXTSCREEN/txt_widget.h	/^    int visible;$/;"	m	struct:txt_widget_s
visible_subsectors_count_prev	src/gl_main.c	/^static int visible_subsectors_count_prev = -1;$/;"	v	file:
visited	src/r_defs.h	/^  dboolean visited; \/\/ killough 4\/4\/98, 4\/7\/98: used in search algorithms$/;"	m	struct:msecnode_s
visplane	src/r_defs.h	/^typedef struct visplane$/;"	s
visplane_hash	src/r_plane.c	48;"	d	file:
visplane_t	src/r_defs.h	/^} visplane_t;$/;"	t	typeref:struct:visplane
visplanes	src/r_plane.c	/^static visplane_t *visplanes[MAXVISPLANES];   \/\/ killough$/;"	v	file:
vissprite_ptrs	src/r_things.c	/^static vissprite_t *vissprites, **vissprite_ptrs;  \/\/ killough$/;"	v	file:
vissprite_s	src/r_defs.h	/^typedef struct vissprite_s$/;"	s
vissprite_t	src/r_defs.h	/^} vissprite_t;$/;"	t	typeref:struct:vissprite_s
vissprites	src/r_things.c	/^static vissprite_t *vissprites, **vissprite_ptrs;  \/\/ killough$/;"	v	file:
vldoor_e	src/p_spec.h	/^} vldoor_e;$/;"	t	typeref:enum:__anon253
vldoor_t	src/p_spec.h	/^} vldoor_t;$/;"	t	typeref:struct:__anon267
voffs	src/gl_intern.h	/^  float uoffs,voffs; \/\/ the texture coordinates$/;"	m	struct:__anon93
voice_alloced_list	src/MUSIC/oplplayer.c	/^static opl_voice_t *voice_alloced_list;$/;"	v	file:
voice_free_list	src/MUSIC/oplplayer.c	/^static opl_voice_t *voice_free_list;$/;"	v	file:
voice_operators	src/MUSIC/oplplayer.c	/^static const int voice_operators[2][OPL_NUM_VOICES] = {$/;"	v	file:
voices	src/MUSIC/oplplayer.c	/^    genmidi_voice_t voices[2];$/;"	m	struct:__anon196	file:
voices	src/MUSIC/oplplayer.c	/^static opl_voice_t voices[OPL_NUM_VOICES];$/;"	v	file:
volHandler	src/MUSIC/dbopl.h	/^  VolumeHandler volHandler;$/;"	m	struct:_Operator
volume	src/MUSIC/dbopl.h	/^  Bit32s volume;        \/\/The currently active volume$/;"	m	struct:_Operator
volume	src/MUSIC/oplplayer.c	/^    int volume;$/;"	m	struct:__anon197	file:
volume	src/sounds.h	/^  int volume;$/;"	m	struct:sfxinfo_struct
volume_mapping_table	src/MUSIC/oplplayer.c	/^static const unsigned int volume_mapping_table[] = {$/;"	v	file:
vorb_data	src/MUSIC/vorbisplayer.c	/^static const char *vorb_data;$/;"	v	file:
vorb_init	src/MUSIC/vorbisplayer.c	/^static int vorb_init (int samplerate)$/;"	f	file:
vorb_len	src/MUSIC/vorbisplayer.c	/^static size_t vorb_len;$/;"	v	file:
vorb_loop_from	src/MUSIC/vorbisplayer.c	/^static unsigned vorb_loop_from;$/;"	v	file:
vorb_loop_to	src/MUSIC/vorbisplayer.c	/^static unsigned vorb_loop_to;$/;"	v	file:
vorb_looping	src/MUSIC/vorbisplayer.c	/^static int vorb_looping = 0;$/;"	v	file:
vorb_name	src/MUSIC/vorbisplayer.c	/^static const char *vorb_name (void)$/;"	f	file:
vorb_pause	src/MUSIC/vorbisplayer.c	/^static void vorb_pause (void)$/;"	f	file:
vorb_paused	src/MUSIC/vorbisplayer.c	/^static int vorb_paused = 0;$/;"	v	file:
vorb_play	src/MUSIC/vorbisplayer.c	/^static void vorb_play (const void *handle, int looping)$/;"	f	file:
vorb_player	src/MUSIC/vorbisplayer.c	/^const music_player_t vorb_player =$/;"	v
vorb_playing	src/MUSIC/vorbisplayer.c	/^static int vorb_playing = 0;$/;"	v	file:
vorb_pos	src/MUSIC/vorbisplayer.c	/^static size_t vorb_pos;$/;"	v	file:
vorb_registersong	src/MUSIC/vorbisplayer.c	/^static const void *vorb_registersong (const void *data, unsigned len)$/;"	f	file:
vorb_render	src/MUSIC/vorbisplayer.c	/^static void vorb_render (void *dest, unsigned nsamp)$/;"	f	file:
vorb_render_ex	src/MUSIC/vorbisplayer.c	/^static void vorb_render_ex (void *dest, unsigned nsamp)$/;"	f	file:
vorb_resume	src/MUSIC/vorbisplayer.c	/^static void vorb_resume (void)$/;"	f	file:
vorb_samplerate_in	src/MUSIC/vorbisplayer.c	/^static int vorb_samplerate_in = 0;$/;"	v	file:
vorb_samplerate_target	src/MUSIC/vorbisplayer.c	/^static int vorb_samplerate_target = 0;$/;"	v	file:
vorb_setvolume	src/MUSIC/vorbisplayer.c	/^static void vorb_setvolume (int v)$/;"	f	file:
vorb_shutdown	src/MUSIC/vorbisplayer.c	/^static void vorb_shutdown (void)$/;"	f	file:
vorb_stop	src/MUSIC/vorbisplayer.c	/^static void vorb_stop (void)$/;"	f	file:
vorb_total_pos	src/MUSIC/vorbisplayer.c	/^static unsigned vorb_total_pos;$/;"	v	file:
vorb_unregistersong	src/MUSIC/vorbisplayer.c	/^static void vorb_unregistersong (const void *handle)$/;"	f	file:
vorb_volume	src/MUSIC/vorbisplayer.c	/^static int vorb_volume = 0; \/\/ 0-15$/;"	v	file:
vread	src/MUSIC/vorbisplayer.c	/^static size_t vread (void *dst, size_t s, size_t n, void *src)$/;"	f	file:
vseek	src/MUSIC/vorbisplayer.c	/^static int vseek (void *src, ogg_int64_t offset, int whence)$/;"	f	file:
vt	src/gl_intern.h	/^  float ul,ur,vt,vb;$/;"	m	struct:__anon91
vt	src/gl_intern.h	/^  float vt,vb;$/;"	m	struct:__anon102
vtell	src/MUSIC/vorbisplayer.c	/^static long vtell (void *src)$/;"	f	file:
w	src/TEXTSCREEN/txt_label.h	/^    unsigned int w, h;$/;"	m	struct:txt_label_s
w	src/TEXTSCREEN/txt_scrollpane.h	/^    int w, h;$/;"	m	struct:txt_scrollpane_s
w	src/TEXTSCREEN/txt_sdl.c	/^    unsigned int w;$/;"	m	struct:__anon337	file:
w	src/TEXTSCREEN/txt_widget.h	/^    unsigned int w, h;$/;"	m	struct:txt_widget_s
w	src/am_map.h	/^ fixed_t w, h;$/;"	m	struct:__anon3
w	src/hu_lib.h	/^  int   w;$/;"	m	struct:__anon121
w	src/hu_lib.h	/^  int x,y,w,h;                         \/\/ window position and size$/;"	m	struct:__anon123
w	src/hu_stuff.h	/^  int w, h, flags;$/;"	m	struct:crosshair_s
wBltMSTypes	src/gl_hires.c	/^      unsigned short wBltMSTypes;  \/\/ Multisample methods supported via blt for this D3DFORMAT$/;"	m	struct:_DDRAW_H_DDPIXELFORMAT::__anon76::__anon77	file:
wFlipMSTypes	src/gl_hires.c	/^      unsigned short wFlipMSTypes; \/\/ Multisample methods supported via flip for this D3DFORMAT$/;"	m	struct:_DDRAW_H_DDPIXELFORMAT::__anon76::__anon77	file:
w_ammo	src/hu_stuff.c	/^static hu_textline_t  w_ammo;   \/\/jff 2\/16\/98 new ammo widget for hud$/;"	v	file:
w_ammo	src/st_stuff.c	/^static st_number_t   w_ammo[4];$/;"	v	file:
w_ammo_big	src/hu_stuff.c	/^static hu_textline_t  w_ammo_big;$/;"	v	file:
w_ammo_icon	src/hu_stuff.c	/^static hu_textline_t  w_ammo_icon;$/;"	v	file:
w_armor	src/hu_stuff.c	/^static hu_textline_t  w_armor;  \/\/jff 2\/16\/98 new armor widget for hud$/;"	v	file:
w_armor	src/st_stuff.c	/^static st_percent_t  w_armor;$/;"	v	file:
w_armor_big	src/hu_stuff.c	/^static hu_textline_t  w_armor_big;$/;"	v	file:
w_armor_icon_big	src/hu_stuff.c	/^static hu_textline_t  w_armor_icon_big;$/;"	v	file:
w_armor_icon_custom	src/hu_stuff.c	/^static hu_textline_t  w_armor_icon_custom;$/;"	v	file:
w_armor_icon_small	src/hu_stuff.c	/^static hu_textline_t  w_armor_icon_small;$/;"	v	file:
w_armor_percent	src/hu_stuff.c	/^static hu_textline_t  w_armor_percent;$/;"	v	file:
w_arms	src/st_stuff.c	/^static st_multicon_t w_arms[6];$/;"	v	file:
w_armsbg	src/st_stuff.c	/^static st_binicon_t  w_armsbg;$/;"	v	file:
w_centermsg	src/hu_stuff.c	/^static message_widget_t *w_centermsg;$/;"	v	file:
w_chat	src/hu_stuff.c	/^static chat_widget_t *w_chat;$/;"	v	file:
w_coordx	src/hu_stuff.c	/^static hu_textline_t  w_coordx; \/\/jff 2\/16\/98 new coord widget for automap$/;"	v	file:
w_coordy	src/hu_stuff.c	/^static hu_textline_t  w_coordy; \/\/jff 3\/3\/98 split coord widgets automap$/;"	v	file:
w_coordz	src/hu_stuff.c	/^static hu_textline_t  w_coordz; \/\/jff 3\/3\/98 split coord widgets automap$/;"	v	file:
w_faces	src/st_stuff.c	/^static st_multicon_t w_faces;$/;"	v	file:
w_frags	src/st_stuff.c	/^static st_number_t w_frags;$/;"	v	file:
w_gkeys	src/hu_stuff.c	/^static hu_textline_t  w_gkeys;  \/\/jff 3\/7\/98 graphic keys widget for hud$/;"	v	file:
w_health	src/hu_stuff.c	/^static hu_textline_t  w_health; \/\/jff 2\/16\/98 new health widget for hud$/;"	v	file:
w_health	src/st_stuff.c	/^static st_percent_t w_health;$/;"	v	file:
w_health_big	src/hu_stuff.c	/^static hu_textline_t  w_health_big;$/;"	v	file:
w_hudadd	src/e6y.c	/^hu_textline_t  w_hudadd;$/;"	v
w_keyboxes	src/st_stuff.c	/^static st_multicon_t w_keyboxes[3];$/;"	v	file:
w_keys	src/hu_stuff.c	/^static hu_textline_t  w_keys;   \/\/jff 2\/16\/98 new keys widget for hud$/;"	v	file:
w_keys_icon	src/hu_stuff.c	/^static hu_textline_t  w_keys_icon;$/;"	v	file:
w_map_items	src/hu_stuff.c	/^static hu_textline_t  w_map_items;     \/\/e6y items widgets automap$/;"	v	file:
w_map_monsters	src/hu_stuff.c	/^static hu_textline_t  w_map_monsters;  \/\/e6y monsters widget for automap$/;"	v	file:
w_map_secrets	src/hu_stuff.c	/^static hu_textline_t  w_map_secrets;   \/\/e6y secrets widgets automap$/;"	v	file:
w_map_time	src/hu_stuff.c	/^static hu_textline_t  w_map_time;      \/\/e6y level time widgets automap$/;"	v	file:
w_map_totaltime	src/hu_stuff.c	/^static hu_textline_t  w_map_totaltime; \/\/e6y total time widgets automap$/;"	v	file:
w_maxammo	src/st_stuff.c	/^static st_number_t   w_maxammo[4];$/;"	v	file:
w_medict_icon_big	src/hu_stuff.c	/^static hu_textline_t  w_medict_icon_big;$/;"	v	file:
w_medict_icon_custom	src/hu_stuff.c	/^static hu_textline_t  w_medict_icon_custom;$/;"	v	file:
w_medict_icon_small	src/hu_stuff.c	/^static hu_textline_t  w_medict_icon_small;$/;"	v	file:
w_medict_percent	src/hu_stuff.c	/^static hu_textline_t  w_medict_percent;$/;"	v	file:
w_messages	src/hu_stuff.c	/^static message_widget_t *w_messages;$/;"	v	file:
w_monsec	src/hu_stuff.c	/^static hu_textline_t  w_monsec; \/\/jff 2\/16\/98 new kill\/secret widget for hud$/;"	v	file:
w_precache	src/e6y.c	/^hu_textline_t  w_precache;$/;"	v
w_ready	src/st_stuff.c	/^static st_number_t w_ready;$/;"	v	file:
w_title	src/hu_stuff.c	/^static hu_textline_t  w_title;$/;"	v	file:
w_traces	src/hu_tracers.c	/^hu_textline_t w_traces[NUMTRACES];$/;"	v
w_weapon	src/hu_stuff.c	/^static hu_textline_t  w_weapon; \/\/jff 2\/16\/98 new weapon widget for hud$/;"	v	file:
wad_file_names	src/d_main.c	/^const char *wad_file_names[MAXLOADFILES], *deh_file_names[MAXLOADFILES];$/;"	v
wad_source_t	src/w_wad.h	/^} wad_source_t;$/;"	t	typeref:enum:__anon355
waddata_t	src/r_demo.h	/^} waddata_t;$/;"	t	typeref:struct:__anon294
wadfile	src/w_wad.h	/^  int wadfile;$/;"	m	struct:__anon358
wadfile_info_t	src/w_wad.h	/^} wadfile_info_t;$/;"	t	typeref:struct:__anon356
wadfiles	src/r_demo.h	/^  wadfile_info_t *wadfiles;$/;"	m	struct:__anon294
wadinfo_t	src/w_wad.h	/^} wadinfo_t;$/;"	t	typeref:struct:__anon353
wadnames	src/protocol.h	/^  byte wadnames[1]; \/\/ Actually longer$/;"	m	struct:setup_packet_s
wadtbl_t	src/r_demo.h	/^} wadtbl_t;$/;"	t	typeref:struct:__anon293
wait	src/p_spec.h	/^  int wait;$/;"	m	struct:__anon266
waiting	src/p_spec.h	/^  waiting,$/;"	e	enum:__anon251
walkcamera	src/e6y.c	/^camera_t walkcamera;$/;"	v
wall	src/gl_intern.h	/^    GLWall *wall;$/;"	m	union:GLDrawItem_s::__anon104
wall	src/gl_intern.h	/^  GLWall wall;$/;"	m	struct:SkyBoxParams_s
walllights	src/r_segs.c	/^const lighttable_t    **walllights;$/;"	v
walllightsnext	src/r_segs.c	/^const lighttable_t    **walllightsnext;$/;"	v
wanted_player_number	src/d_client.c	/^int              wanted_player_number;$/;"	v
warn	src/g_overflow.h	/^  int warn;$/;"	m	struct:overrun_param_s
warn_about_changes	src/m_menu.h	117;"	d
warning_about_changes	src/m_menu.c	/^int warning_about_changes, print_warning_about_changes;$/;"	v
warning_fn	src/SDL/i_sshot.c	/^static void warning_fn(png_structp p, png_const_charp s)$/;"	f	file:
wasWiped	src/e6y.c	/^dboolean wasWiped = false;$/;"	v
waveAdd	src/MUSIC/dbopl.h	/^  Bit32u waveAdd;       \/\/The base frequency without vibrato$/;"	m	struct:_Operator
waveBase	src/MUSIC/dbopl.h	/^  Bit16s* waveBase;$/;"	m	struct:_Operator
waveCurrent	src/MUSIC/dbopl.h	/^  Bit32u waveCurrent;     \/\/waveAdd + vibratao$/;"	m	struct:_Operator
waveFormMask	src/MUSIC/dbopl.h	/^  Bit8u waveFormMask;$/;"	m	struct:_Chip
waveHandler	src/MUSIC/dbopl.h	/^  WaveHandler waveHandler;  \/\/Routine that generate a wave$/;"	m	struct:_Operator
waveIndex	src/MUSIC/dbopl.h	/^  Bit32u waveIndex;     \/\/WAVE_BITS shifted counter of the frequency index$/;"	m	struct:_Operator
waveMask	src/MUSIC/dbopl.h	/^  Bit32u waveMask;$/;"	m	struct:_Operator
waveStart	src/MUSIC/dbopl.h	/^  Bit32u waveStart;$/;"	m	struct:_Operator
waveform	src/MUSIC/oplplayer.c	/^    byte waveform;$/;"	m	struct:__anon194	file:
wbplayerstruct_t	src/d_player.h	/^} wbplayerstruct_t;$/;"	t	typeref:struct:__anon60
wbs	src/wi_stuff.c	/^static wbstartstruct_t* wbs;$/;"	v	file:
wbstartstruct_t	src/d_player.h	/^} wbstartstruct_t;$/;"	t	typeref:struct:__anon61
wchar	src/d_event.h	/^  uint16_t     wchar;    \/\/ CG 07\/15\/14: SDL relays Unicode input as UTF-16$/;"	m	struct:__anon14
weap_bfg	src/m_menu.c	/^  weap_bfg,$/;"	e	enum:__anon159	file:
weap_bobbing	src/m_menu.c	/^  weap_bobbing,$/;"	e	enum:__anon159	file:
weap_pref1	src/m_menu.c	/^  weap_pref1,$/;"	e	enum:__anon159	file:
weap_pref2	src/m_menu.c	/^  weap_pref2,$/;"	e	enum:__anon159	file:
weap_pref3	src/m_menu.c	/^  weap_pref3,$/;"	e	enum:__anon159	file:
weap_pref4	src/m_menu.c	/^  weap_pref4,$/;"	e	enum:__anon159	file:
weap_pref5	src/m_menu.c	/^  weap_pref5,$/;"	e	enum:__anon159	file:
weap_pref6	src/m_menu.c	/^  weap_pref6,$/;"	e	enum:__anon159	file:
weap_pref7	src/m_menu.c	/^  weap_pref7,$/;"	e	enum:__anon159	file:
weap_pref8	src/m_menu.c	/^  weap_pref8,$/;"	e	enum:__anon159	file:
weap_pref9	src/m_menu.c	/^  weap_pref9,$/;"	e	enum:__anon159	file:
weap_recoil	src/m_menu.c	/^  weap_recoil,$/;"	e	enum:__anon159	file:
weap_settings	src/m_menu.c	/^setup_menu_t* weap_settings[] =$/;"	v
weap_settings1	src/m_menu.c	/^setup_menu_t weap_settings1[] =  \/\/ Weapons Settings screen$/;"	v
weap_settings1	src/m_menu.c	/^setup_menu_t weap_settings1[];$/;"	v
weap_stub1	src/m_menu.c	/^  weap_stub1,$/;"	e	enum:__anon159	file:
weap_stub2	src/m_menu.c	/^  weap_stub2,$/;"	e	enum:__anon159	file:
weap_toggle	src/m_menu.c	/^  weap_toggle,$/;"	e	enum:__anon159	file:
weap_toggle2	src/m_menu.c	/^  weap_toggle2,$/;"	e	enum:__anon159	file:
weapon	src/g_game.c	/^  weapontype_t weapon;$/;"	m	struct:__anon71	file:
weapon_num	src/g_game.c	/^  weapontype_t weapon_num;$/;"	m	struct:__anon71	file:
weapon_order_table	src/g_game.c	/^} weapon_order_table[] = {$/;"	v	typeref:struct:__anon71	file:
weapon_preferences	src/p_pspr.c	/^int weapon_preferences[2][NUMWEAPONS+1] = {$/;"	v
weapon_recoil	src/d_net.h	/^  byte weapon_recoil;$/;"	m	struct:__anon24
weapon_recoil	src/doomstat.c	/^int  weapon_recoil;              \/\/ weapon recoil                   \/\/ phares$/;"	v
weaponinfo	src/d_items.c	/^weaponinfo_t weaponinfo[NUMWEAPONS + 2] = {$/;"	v
weaponinfo_t	src/d_items.h	/^} weaponinfo_t;$/;"	t	typeref:struct:__anon19
weaponowned	src/d_player.h	/^  dboolean            weaponowned[NUMWEAPONS];$/;"	m	struct:player_s
weapontype_t	src/doomdef.h	/^} weapontype_t;$/;"	t	typeref:enum:__anon49
when	src/m_cheat.h	/^  } const when;$/;"	m	struct:cheatseq_s
where	src/p_spec.h	/^  bwhere_e where;$/;"	m	struct:__anon261
whichSkull	src/m_menu.c	/^short whichSkull;       \/\/ which skull to draw (he blinks)$/;"	v
wide_centerx	src/r_main.c	/^int wide_centerx;$/;"	v
wide_offset2x	src/r_main.c	/^int wide_offset2x;$/;"	v
wide_offset2y	src/r_main.c	/^int wide_offset2y;$/;"	v
wide_offsetx	src/r_main.c	/^int wide_offsetx;$/;"	v
wide_offsety	src/r_main.c	/^int wide_offsety;$/;"	v
widget	src/TEXTSCREEN/txt_button.h	/^    txt_widget_t widget;$/;"	m	struct:txt_button_s
widget	src/TEXTSCREEN/txt_checkbox.h	/^    txt_widget_t widget;$/;"	m	struct:txt_checkbox_s
widget	src/TEXTSCREEN/txt_dropdown.h	/^    txt_widget_t widget;$/;"	m	struct:txt_dropdown_list_s
widget	src/TEXTSCREEN/txt_inputbox.h	/^    txt_widget_t widget;$/;"	m	struct:txt_inputbox_s
widget	src/TEXTSCREEN/txt_label.h	/^    txt_widget_t widget;$/;"	m	struct:txt_label_s
widget	src/TEXTSCREEN/txt_radiobutton.h	/^    txt_widget_t widget;$/;"	m	struct:txt_radiobutton_s
widget	src/TEXTSCREEN/txt_scrollpane.h	/^    txt_widget_t widget;$/;"	m	struct:txt_scrollpane_s
widget	src/TEXTSCREEN/txt_separator.h	/^    txt_widget_t widget;$/;"	m	struct:txt_separator_s
widget	src/TEXTSCREEN/txt_spinctrl.h	/^    txt_widget_t widget;$/;"	m	struct:txt_spincontrol_s
widget	src/TEXTSCREEN/txt_strut.h	/^    txt_widget_t widget;$/;"	m	struct:txt_strut_s
widget	src/TEXTSCREEN/txt_table.h	/^    txt_widget_t widget;$/;"	m	struct:txt_table_s
widget	src/TEXTSCREEN/txt_window_action.h	/^    txt_widget_t widget;$/;"	m	struct:txt_window_action_s
widget_class	src/TEXTSCREEN/txt_widget.h	/^    txt_widget_class_t *widget_class;$/;"	m	struct:txt_widget_s
widget_class	src/TEXTSCREEN/txt_widget.h	/^void TXT_InitWidget(TXT_UNCAST_ARG(widget), txt_widget_class_t *widget_class);$/;"	v
widgets	src/TEXTSCREEN/txt_table.h	/^    txt_widget_t **widgets;$/;"	m	struct:txt_table_s
width	src/TEXTSCREEN/txt_strut.h	/^    int width;$/;"	m	struct:txt_strut_s
width	src/gl_hires.c	/^  GLsizei  width;$/;"	m	struct:__anon85	file:
width	src/gl_intern.h	/^  float width, height;$/;"	m	struct:detail_s
width	src/gl_intern.h	/^  int width,height;$/;"	m	struct:__anon89
width	src/gl_struct.h	/^  int width;$/;"	m	struct:shadow_params_s
width	src/hu_input.c	/^  int width;$/;"	m	struct:input_widget_s	file:
width	src/hu_msg.c	/^  int width;$/;"	m	struct:message_widget_s	file:
width	src/i_video.h	/^  int width, height, size;$/;"	m	struct:vid_8ingl_s
width	src/r_data.c	/^  short      width;$/;"	m	struct:__anon278	file:
width	src/r_data.h	/^  short width, height;$/;"	m	struct:__anon280
width	src/r_defs.h	/^  int width,height;$/;"	m	struct:__anon289
width	src/r_patch.c	/^  short width, height;  \/\/ bounding box size$/;"	m	struct:__anon305	file:
width	src/r_patch.h	/^  int width;$/;"	m	struct:__anon311
width	src/st_lib.h	/^  int width;$/;"	m	struct:__anon320
width	src/v_video.h	/^   int width, height;$/;"	m	struct:__anon340
width	src/v_video.h	/^  int width;           \/\/ the width of the surface$/;"	m	struct:__anon342
widthmask	src/r_data.h	/^  unsigned  widthmask;$/;"	m	struct:__anon280
widthmask	src/r_patch.h	/^  unsigned  widthmask;$/;"	m	struct:__anon311
widths	src/am_map.h	/^ int widths[16];$/;"	m	struct:__anon3
wiminus	src/wi_stuff.c	/^static const char wiminus[] = {"WIMINUS"};$/;"	v	file:
window	src/TEXTSCREEN/txt_dropdown.c	/^    txt_window_t *window;$/;"	m	struct:__anon328	file:
window_focused	src/SDL/i_video.c	/^dboolean window_focused;$/;"	v
window_h	src/TEXTSCREEN/txt_window.h	/^    unsigned int window_w, window_h;$/;"	m	struct:txt_window_s
window_w	src/TEXTSCREEN/txt_window.h	/^    unsigned int window_w, window_h;$/;"	m	struct:txt_window_s
window_x	src/TEXTSCREEN/txt_window.h	/^    int window_x, window_y;$/;"	m	struct:txt_window_s
window_y	src/TEXTSCREEN/txt_window.h	/^    int window_x, window_y;$/;"	m	struct:txt_window_s
wipe_EndScreen	src/f_wipe.c	/^int wipe_EndScreen(void)$/;"	f
wipe_ScreenWipe	src/f_wipe.c	/^int wipe_ScreenWipe(int ticks) {$/;"	f
wipe_StartScreen	src/f_wipe.c	/^int wipe_StartScreen(void)$/;"	f
wipe_doMelt	src/f_wipe.c	/^static int wipe_doMelt(int ticks)$/;"	f	file:
wipe_exitMelt	src/f_wipe.c	/^static int wipe_exitMelt(int ticks)$/;"	f	file:
wipe_initMelt	src/f_wipe.c	/^static int wipe_initMelt(int ticks) {$/;"	f	file:
wipe_scr	src/f_wipe.c	/^static screeninfo_t wipe_scr;$/;"	v	file:
wipe_scr_end	src/f_wipe.c	/^static screeninfo_t wipe_scr_end;$/;"	v	file:
wipe_scr_end_tex	src/gl_wipe.c	/^static GLuint wipe_scr_end_tex = 0;$/;"	v	file:
wipe_scr_start	src/f_wipe.c	/^static screeninfo_t wipe_scr_start;$/;"	v	file:
wipe_scr_start_tex	src/gl_wipe.c	/^static GLuint wipe_scr_start_tex = 0;$/;"	v	file:
wipegamestate	src/d_main.c	/^gamestate_t    wipegamestate = GS_DEMOSCREEN;$/;"	v
wminfo	src/g_game.c	/^wbstartstruct_t wminfo;               \/\/ parms for world map \/ intermission$/;"	v
worldbottom	src/r_segs.c	/^static int      worldbottom;$/;"	v	file:
worldhigh	src/r_segs.c	/^static int      worldhigh;$/;"	v	file:
worldlow	src/r_segs.c	/^static int      worldlow;$/;"	v	file:
worldtop	src/r_segs.c	/^static int      worldtop;$/;"	v	file:
wp_bfg	src/doomdef.h	/^  wp_bfg,$/;"	e	enum:__anon49
wp_chaingun	src/doomdef.h	/^  wp_chaingun,$/;"	e	enum:__anon49
wp_chainsaw	src/doomdef.h	/^  wp_chainsaw,$/;"	e	enum:__anon49
wp_fist	src/doomdef.h	/^  wp_fist,$/;"	e	enum:__anon49
wp_missile	src/doomdef.h	/^  wp_missile,$/;"	e	enum:__anon49
wp_nochange	src/doomdef.h	/^  wp_nochange              \/\/ No pending weapon change.$/;"	e	enum:__anon49
wp_pistol	src/doomdef.h	/^  wp_pistol,$/;"	e	enum:__anon49
wp_plasma	src/doomdef.h	/^  wp_plasma,$/;"	e	enum:__anon49
wp_shotgun	src/doomdef.h	/^  wp_shotgun,$/;"	e	enum:__anon49
wp_supershotgun	src/doomdef.h	/^  wp_supershotgun,$/;"	e	enum:__anon49
wrap_free	src/m_delta.c	/^static void wrap_free(void *priv, void *ptr) {$/;"	f	file:
wrap_malloc	src/m_delta.c	/^static void* wrap_malloc(void *priv, unsigned int size) {$/;"	f	file:
wrap_realloc	src/m_delta.c	/^static void* wrap_realloc(void *priv, void *ptr, unsigned int size) {$/;"	f	file:
write	src/cmp.h	/^  cmp_writer  write;$/;"	m	struct:cmp_ctx_s
write_byte	src/cmp.c	/^static bool write_byte(cmp_ctx_t *ctx, uint8_t x) {$/;"	f	file:
write_fixed_value	src/cmp.c	/^static bool write_fixed_value(cmp_ctx_t *ctx, uint8_t value) {$/;"	f	file:
write_to_buffer	src/m_delta.c	/^static int write_to_buffer(void *priv, mmbuffer_t *mb, int nbuf) {$/;"	f	file:
write_type_marker	src/cmp.c	/^static bool write_type_marker(cmp_ctx_t *ctx, uint8_t marker) {$/;"	f	file:
writeevent	src/MUSIC/portmidiplayer.c	/^static void writeevent (unsigned long when, int eve, int channel, int v1, int v2)$/;"	f	file:
writesysex	src/MUSIC/flplayer.c	/^static void writesysex (unsigned char *data, int len)$/;"	f	file:
writesysex	src/MUSIC/portmidiplayer.c	/^static void writesysex (unsigned long when, int etype, unsigned char *data, int len)$/;"	f	file:
wsop_e	src/p_pspr.h	/^} wsop_e;$/;"	t	typeref:enum:__anon227
wu_fineshift	src/v_video.c	1012;"	d	file:
wu_fixedshift	src/v_video.c	1017;"	d	file:
wu_weightbits	src/v_video.c	1014;"	d	file:
x	src/TEXTSCREEN/txt_button.c	/^static void TXT_ButtonMousePress(TXT_UNCAST_ARG(button), int x, int y, int b)$/;"	v	file:
x	src/TEXTSCREEN/txt_checkbox.c	/^static void TXT_CheckBoxMousePress(TXT_UNCAST_ARG(checkbox), int x, int y, int b)$/;"	v	file:
x	src/TEXTSCREEN/txt_dropdown.c	/^                                       int x, int y, int b)$/;"	v	file:
x	src/TEXTSCREEN/txt_inputbox.c	/^                                   int x, int y, int b)$/;"	v	file:
x	src/TEXTSCREEN/txt_radiobutton.c	/^                                      int x, int y, int b)$/;"	v	file:
x	src/TEXTSCREEN/txt_scrollpane.c	/^                                     int x, int y, int b)$/;"	v	file:
x	src/TEXTSCREEN/txt_scrollpane.h	/^    int x, y;$/;"	m	struct:txt_scrollpane_s
x	src/TEXTSCREEN/txt_spinctrl.c	/^                                   int x, int y, int b)$/;"	v	file:
x	src/TEXTSCREEN/txt_table.c	/^static void TXT_TableMousePress(TXT_UNCAST_ARG(table), int x, int y, int b)$/;"	v	file:
x	src/TEXTSCREEN/txt_widget.c	/^void TXT_WidgetMousePress(TXT_UNCAST_ARG(widget), int x, int y, int b)$/;"	v
x	src/TEXTSCREEN/txt_widget.h	/^    int x, y;$/;"	m	struct:txt_widget_s
x	src/TEXTSCREEN/txt_widget.h	/^typedef void (*TxtMousePressFunc)(TXT_UNCAST_ARG(widget), int x, int y, int b);$/;"	t
x	src/TEXTSCREEN/txt_widget.h	/^void TXT_WidgetMousePress(TXT_UNCAST_ARG(widget), int x, int y, int b);$/;"	v
x	src/TEXTSCREEN/txt_window.h	/^    int x, y;$/;"	m	struct:txt_window_s
x	src/TEXTSCREEN/txt_window_action.c	/^                                       int x, int y, int b)$/;"	v	file:
x	src/am_map.h	/^  float x, y;$/;"	m	struct:map_point_s
x	src/am_map.h	/^ fixed_t x, y;$/;"	m	struct:__anon3
x	src/am_map.h	/^ fixed_t x,y;$/;"	m	struct:__anon2
x	src/doomdata.h	/^  short x,y;$/;"	m	struct:__anon29
x	src/doomdata.h	/^  short x;  \/\/ Partition line from (x,y) to x+dx,y+dy)$/;"	m	struct:__anon39
x	src/doomdata.h	/^  short x;  \/\/ Partition line from (x,y) to x+dx,y+dy)$/;"	m	struct:__anon40
x	src/doomdata.h	/^  short x;  \/\/ Partition line from (x,y) to x+dx,y+dy)$/;"	m	struct:__anon41
x	src/doomdata.h	/^  short x;$/;"	m	struct:__anon42
x	src/e6y.h	/^  long x;$/;"	m	struct:camera_s
x	src/gl_intern.h	/^  GLfloat x;$/;"	m	struct:__anon97
x	src/gl_intern.h	/^  float x, y, z;$/;"	m	struct:__anon100
x	src/gl_intern.h	/^  float x, y, z;$/;"	m	struct:vbo_vertex_s
x	src/gl_intern.h	/^  float x, y, z;$/;"	m	struct:vbo_xyz_uv_s
x	src/gl_intern.h	/^  float x, y;$/;"	m	struct:vbo_xy_uv_rgba_s
x	src/gl_intern.h	/^  float x,y,z;$/;"	m	struct:__anon102
x	src/hu_input.c	/^  int x;$/;"	m	struct:input_widget_s	file:
x	src/hu_lib.h	/^  int   x;$/;"	m	struct:__anon121
x	src/hu_lib.h	/^  int x,y,w,h;                         \/\/ window position and size$/;"	m	struct:__anon123
x	src/hu_msg.c	/^  int x;$/;"	m	struct:message_widget_s	file:
x	src/hu_stuff.c	/^  int x;$/;"	m	struct:hud_cfg_item_s	file:
x	src/hu_stuff.c	/^  int x;$/;"	m	struct:hud_widget_s	file:
x	src/m_menu.h	/^  short           x;$/;"	m	struct:menu_s
x	src/p_maputl.h	/^  fixed_t     x;$/;"	m	struct:__anon221
x	src/p_mobj.h	/^    fixed_t             x;$/;"	m	struct:mobj_s
x	src/p_setup.c	/^  fixed_t x,y;$/;"	m	struct:__anon232	file:
x	src/p_spec.h	/^  int x;               \/\/ X of point source if point pusher$/;"	m	struct:__anon274
x	src/r_defs.h	/^  fixed_t             x;$/;"	m	struct:__anon282
x	src/r_defs.h	/^  fixed_t  x,  y, dx, dy;        \/\/ Partition line.$/;"	m	struct:__anon288
x	src/r_defs.h	/^  fixed_t x, y;$/;"	m	struct:__anon281
x	src/r_draw.h	/^  int                 x;$/;"	m	struct:draw_column_vars_s
x	src/st_lib.h	/^  int     x;$/;"	m	struct:__anon322
x	src/st_lib.h	/^  int     x;$/;"	m	struct:__anon323
x	src/st_lib.h	/^  int   x;$/;"	m	struct:__anon320
x	src/v_video.h	/^  int x, y;$/;"	m	struct:__anon344
x	src/wi_stuff.c	/^  int   x;       \/\/ x\/y coordinate pair structure$/;"	m	struct:__anon347	file:
x1	src/TEXTSCREEN/txt_gui.c	/^    int x1, x2;$/;"	m	struct:txt_cliparea_s	file:
x1	src/gl_intern.h	/^  float x1, x2, x3;$/;"	m	struct:__anon101
x1	src/gl_intern.h	/^  float x1,x2;$/;"	m	struct:__anon90
x1	src/gl_intern.h	/^  float x1,y1;$/;"	m	struct:__anon102
x1	src/r_defs.h	/^  fixed_t x1, y1;$/;"	m	struct:ssline_s
x1	src/r_defs.h	/^  short x1, x2;$/;"	m	struct:drawseg_s
x1	src/r_defs.h	/^  short x1, x2;$/;"	m	struct:vissprite_s
x1	src/r_draw.h	/^  int                 x1;$/;"	m	struct:__anon298
x1	src/r_things.c	/^  short x1, x2;$/;"	m	struct:drawseg_xrange_item_s	file:
x1lookup	src/v_video.h	/^   short x1lookup[321];$/;"	m	struct:__anon340
x2	src/TEXTSCREEN/txt_gui.c	/^    int x1, x2;$/;"	m	struct:txt_cliparea_s	file:
x2	src/gl_intern.h	/^  float x1, x2, x3;$/;"	m	struct:__anon101
x2	src/gl_intern.h	/^  float x1,x2;$/;"	m	struct:__anon90
x2	src/gl_intern.h	/^  float x2,y2;$/;"	m	struct:__anon102
x2	src/r_defs.h	/^  fixed_t x2, y2;$/;"	m	struct:ssline_s
x2	src/r_defs.h	/^  short x1, x2;$/;"	m	struct:drawseg_s
x2	src/r_defs.h	/^  short x1, x2;$/;"	m	struct:vissprite_s
x2	src/r_draw.h	/^  int                 x2;$/;"	m	struct:__anon298
x2	src/r_things.c	/^  short x1, x2;$/;"	m	struct:drawseg_xrange_item_s	file:
x2lookup	src/v_video.h	/^   short x2lookup[321];$/;"	m	struct:__anon340
x3	src/gl_intern.h	/^  float x1, x2, x3;$/;"	m	struct:__anon101
xCamera	src/gl_detail.c	/^float xCamera,yCamera,zCamera;$/;"	v
x_funcs	src/x_main.c	/^static GHashTable *x_funcs = NULL;$/;"	v	file:
x_funcs_equal	src/x_main.c	/^static gboolean x_funcs_equal(gconstpointer a, gconstpointer b) {$/;"	f	file:
x_mag	src/p_spec.h	/^  int x_mag;           \/\/ X Strength$/;"	m	struct:__anon274
x_offset	src/gl_intern.h	/^  float x_offset, y_offset;$/;"	m	struct:SkyBoxParams_s
x_scale	src/gl_intern.h	/^  float x_scale, y_scale;$/;"	m	struct:SkyBoxParams_s
xdeathstate	src/info.h	/^  int xdeathstate;  \/* What state begins the horrible death sequence$/;"	m	struct:__anon138
xdiff_initialized	src/m_delta.c	/^static dboolean xdiff_initialized = false;$/;"	v	file:
xfrac	src/r_draw.h	/^  fixed_t             xfrac;$/;"	m	struct:__anon298
xiscale	src/r_defs.h	/^  fixed_t xiscale;             \/\/ negative if flipped$/;"	m	struct:vissprite_s
xoffs	src/r_defs.h	/^  fixed_t xoffs, yoffs;         \/\/ killough 2\/28\/98: Support scrolling flats$/;"	m	struct:visplane
xoffs	src/r_plane.c	/^static fixed_t xoffs,yoffs;    \/\/ killough 2\/28\/98: flat offsets$/;"	v	file:
xspeed	src/p_enemy.c	/^static fixed_t xspeed[8] = {FRACUNIT,47000,0,-47000,-FRACUNIT,-47000,0,47000};$/;"	v	file:
xstep	src/r_draw.h	/^  fixed_t             xstep;$/;"	m	struct:__anon298
xstep	src/v_video.h	/^   fixed_t     xstep, ystep;$/;"	m	struct:__anon340
xtoviewangle	src/r_main.c	/^angle_t *xtoviewangle;   \/\/ killough 2\/8\/98$/;"	v
xtratics	src/d_client.c	/^static int xtratics = 0;$/;"	v	file:
xy	src/gl_intern.h	/^  int xy;$/;"	m	struct:__anon102
y	src/TEXTSCREEN/txt_button.c	/^static void TXT_ButtonMousePress(TXT_UNCAST_ARG(button), int x, int y, int b)$/;"	v	file:
y	src/TEXTSCREEN/txt_checkbox.c	/^static void TXT_CheckBoxMousePress(TXT_UNCAST_ARG(checkbox), int x, int y, int b)$/;"	v	file:
y	src/TEXTSCREEN/txt_dropdown.c	/^                                       int x, int y, int b)$/;"	v	file:
y	src/TEXTSCREEN/txt_inputbox.c	/^                                   int x, int y, int b)$/;"	v	file:
y	src/TEXTSCREEN/txt_radiobutton.c	/^                                      int x, int y, int b)$/;"	v	file:
y	src/TEXTSCREEN/txt_scrollpane.c	/^                                     int x, int y, int b)$/;"	v	file:
y	src/TEXTSCREEN/txt_scrollpane.h	/^    int x, y;$/;"	m	struct:txt_scrollpane_s
y	src/TEXTSCREEN/txt_spinctrl.c	/^                                   int x, int y, int b)$/;"	v	file:
y	src/TEXTSCREEN/txt_table.c	/^static void TXT_TableMousePress(TXT_UNCAST_ARG(table), int x, int y, int b)$/;"	v	file:
y	src/TEXTSCREEN/txt_widget.c	/^void TXT_WidgetMousePress(TXT_UNCAST_ARG(widget), int x, int y, int b)$/;"	v
y	src/TEXTSCREEN/txt_widget.h	/^    int x, y;$/;"	m	struct:txt_widget_s
y	src/TEXTSCREEN/txt_widget.h	/^typedef void (*TxtMousePressFunc)(TXT_UNCAST_ARG(widget), int x, int y, int b);$/;"	t
y	src/TEXTSCREEN/txt_widget.h	/^void TXT_WidgetMousePress(TXT_UNCAST_ARG(widget), int x, int y, int b);$/;"	v
y	src/TEXTSCREEN/txt_window.h	/^    int x, y;$/;"	m	struct:txt_window_s
y	src/TEXTSCREEN/txt_window_action.c	/^                                       int x, int y, int b)$/;"	v	file:
y	src/am_map.h	/^  float x, y;$/;"	m	struct:map_point_s
y	src/am_map.h	/^ fixed_t x, y;$/;"	m	struct:__anon3
y	src/am_map.h	/^ fixed_t x,y;$/;"	m	struct:__anon2
y	src/doomdata.h	/^  short x,y;$/;"	m	struct:__anon29
y	src/doomdata.h	/^  short y;$/;"	m	struct:__anon39
y	src/doomdata.h	/^  short y;$/;"	m	struct:__anon40
y	src/doomdata.h	/^  short y;$/;"	m	struct:__anon41
y	src/doomdata.h	/^  short y;$/;"	m	struct:__anon42
y	src/e6y.h	/^  long y;$/;"	m	struct:camera_s
y	src/gl_intern.h	/^  GLfloat y;$/;"	m	struct:__anon97
y	src/gl_intern.h	/^  float x, y, z;$/;"	m	struct:__anon100
y	src/gl_intern.h	/^  float x, y, z;$/;"	m	struct:vbo_vertex_s
y	src/gl_intern.h	/^  float x, y, z;$/;"	m	struct:vbo_xyz_uv_s
y	src/gl_intern.h	/^  float x, y;$/;"	m	struct:vbo_xy_uv_rgba_s
y	src/gl_intern.h	/^  float x,y,z;$/;"	m	struct:__anon102
y	src/gl_intern.h	/^  float y;$/;"	m	struct:__anon101
y	src/hu_input.c	/^  int y;$/;"	m	struct:input_widget_s	file:
y	src/hu_lib.h	/^  int   y;$/;"	m	struct:__anon121
y	src/hu_lib.h	/^  int x,y,w,h;                         \/\/ window position and size$/;"	m	struct:__anon123
y	src/hu_msg.c	/^  int y;$/;"	m	struct:message_widget_s	file:
y	src/hu_stuff.c	/^  int y;$/;"	m	struct:hud_cfg_item_s	file:
y	src/hu_stuff.c	/^  int y;$/;"	m	struct:hud_widget_s	file:
y	src/m_menu.h	/^  short           y;            \/\/ x,y of menu$/;"	m	struct:menu_s
y	src/p_maputl.h	/^  fixed_t     y;$/;"	m	struct:__anon221
y	src/p_mobj.h	/^    fixed_t             y;$/;"	m	struct:mobj_s
y	src/p_setup.c	/^  fixed_t x,y;$/;"	m	struct:__anon232	file:
y	src/p_spec.h	/^  int y;               \/\/ Y of point source if point pusher$/;"	m	struct:__anon274
y	src/r_defs.h	/^  fixed_t             y;$/;"	m	struct:__anon282
y	src/r_defs.h	/^  fixed_t  x,  y, dx, dy;        \/\/ Partition line.$/;"	m	struct:__anon288
y	src/r_defs.h	/^  fixed_t x, y;$/;"	m	struct:__anon281
y	src/r_draw.h	/^  int                 y;$/;"	m	struct:__anon298
y	src/st_lib.h	/^  int     y;$/;"	m	struct:__anon322
y	src/st_lib.h	/^  int     y;$/;"	m	struct:__anon323
y	src/st_lib.h	/^  int   y;$/;"	m	struct:__anon320
y	src/v_video.h	/^  int x, y;$/;"	m	struct:__anon344
y	src/wi_stuff.c	/^  int   y;$/;"	m	struct:__anon347	file:
y1	src/TEXTSCREEN/txt_gui.c	/^    int y1, y2;$/;"	m	struct:txt_cliparea_s	file:
y1	src/gl_intern.h	/^  float x1,y1;$/;"	m	struct:__anon102
y1	src/r_defs.h	/^  fixed_t x1, y1;$/;"	m	struct:ssline_s
y1lookup	src/v_video.h	/^   short y1lookup[201];$/;"	m	struct:__anon340
y2	src/TEXTSCREEN/txt_gui.c	/^    int y1, y2;$/;"	m	struct:txt_cliparea_s	file:
y2	src/gl_intern.h	/^  float x2,y2;$/;"	m	struct:__anon102
y2	src/r_defs.h	/^  fixed_t x2, y2;$/;"	m	struct:ssline_s
y2lookup	src/v_video.h	/^   short y2lookup[201];$/;"	m	struct:__anon340
yAdd	src/gl_sky.c	/^static float yMult, yAdd;$/;"	v	file:
yCamera	src/gl_detail.c	/^float xCamera,yCamera,zCamera;$/;"	v
yMult	src/gl_sky.c	/^static float yMult, yAdd;$/;"	v	file:
y_lookup	src/f_wipe.c	/^static int *y_lookup = NULL;$/;"	v	file:
y_mag	src/p_spec.h	/^  int y_mag;           \/\/ Y Strength$/;"	m	struct:__anon274
y_offset	src/gl_intern.h	/^  float x_offset, y_offset;$/;"	m	struct:SkyBoxParams_s
y_offset_saved	src/gl_sky.c	/^float y_offset_saved;$/;"	v
y_scale	src/gl_intern.h	/^  float x_scale, y_scale;$/;"	m	struct:SkyBoxParams_s
yah	src/wi_stuff.c	/^static const char* yah[3] = { "WIURH0", "WIURH1", 0 };$/;"	v	file:
yaw	src/gl_main.c	/^float yaw      = 0.0f;$/;"	v
ybottom	src/gl_intern.h	/^  float ytop,ybottom;$/;"	m	struct:__anon91
yflip	src/gl_sky.c	/^static dboolean yflip;$/;"	v	file:
yfrac	src/r_draw.h	/^  fixed_t             yfrac;$/;"	m	struct:__anon298
yh	src/r_draw.h	/^  int                 yh;$/;"	m	struct:draw_column_vars_s
yl	src/r_draw.h	/^  int                 yl;$/;"	m	struct:draw_column_vars_s
yoffs	src/r_defs.h	/^  fixed_t xoffs, yoffs;         \/\/ killough 2\/28\/98: Support scrolling flats$/;"	m	struct:visplane
yoffs	src/r_plane.c	/^static fixed_t xoffs,yoffs;    \/\/ killough 2\/28\/98: flat offsets$/;"	v	file:
yourplayer	src/protocol.h	/^  byte players, yourplayer, skill, episode, level, deathmatch, complevel, ticdup, extratic;$/;"	m	struct:setup_packet_s
yslope	src/r_plane.c	/^fixed_t *yslope = NULL;$/;"	v
yspeed	src/p_enemy.c	/^static fixed_t yspeed[8] = {0,47000,FRACUNIT,47000,0,-47000,-FRACUNIT,-47000};$/;"	v	file:
ystep	src/r_draw.h	/^  fixed_t             ystep;$/;"	m	struct:__anon298
ystep	src/v_video.h	/^   fixed_t     xstep, ystep;$/;"	m	struct:__anon340
ytop	src/gl_intern.h	/^  float ytop,ybottom;$/;"	m	struct:__anon91
z	src/e6y.h	/^  long z;$/;"	m	struct:camera_s
z	src/gl_intern.h	/^  GLfloat z;$/;"	m	struct:__anon97
z	src/gl_intern.h	/^  float x, y, z;$/;"	m	struct:__anon100
z	src/gl_intern.h	/^  float x, y, z;$/;"	m	struct:vbo_vertex_s
z	src/gl_intern.h	/^  float x, y, z;$/;"	m	struct:vbo_xyz_uv_s
z	src/gl_intern.h	/^  float x,y,z;$/;"	m	struct:__anon102
z	src/gl_intern.h	/^  float z; \/\/ the z position of the flat (height)$/;"	m	struct:__anon93
z	src/p_mobj.h	/^    fixed_t             z;$/;"	m	struct:mobj_s
z	src/r_defs.h	/^  fixed_t             z;$/;"	m	struct:__anon282
z	src/r_draw.h	/^  fixed_t             z; \/\/ the current column z coord$/;"	m	struct:draw_column_vars_s
z	src/r_draw.h	/^  fixed_t             z; \/\/ the current span z coord$/;"	m	struct:__anon298
z1	src/gl_intern.h	/^  float z1, z2, z3;$/;"	m	struct:__anon101
z1	src/gl_intern.h	/^  float z1,z2;$/;"	m	struct:__anon90
z2	src/gl_intern.h	/^  float z1, z2, z3;$/;"	m	struct:__anon101
z2	src/gl_intern.h	/^  float z1,z2;$/;"	m	struct:__anon90
z3	src/gl_intern.h	/^  float z1, z2, z3;$/;"	m	struct:__anon101
zCamera	src/gl_detail.c	/^float xCamera,yCamera,zCamera;$/;"	v
zerotag_manual	src/e6y.c	/^dboolean zerotag_manual;$/;"	v
zlight	src/r_main.c	/^const lighttable_t *(*zlight)[MAXLIGHTZ];$/;"	v
~RE	src/PCRELIB/pcrecpp.cc	/^RE::~RE() {$/;"	f	class:pcrecpp::RE
~Scanner	src/PCRELIB/pcre_scanner.cc	/^Scanner::~Scanner() {$/;"	f	class:pcrecpp::Scanner
